//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DVTBuildVersion, DVTFilePath, DVTPlatform, DVTSDKVariant, DVTSearchPath, NSArray, NSDictionary, NSNumber, NSSet, NSString;

@interface DVTSDK : NSObject
{
    DVTPlatform *_platform;
    NSString *_canonicalName;
    NSSet *_aliases;
    NSString *_displayName;
    NSString *_operatingSystemVersion;
    DVTFilePath *_sdkPath;
    NSString *_alternateSDKName;
    NSArray *_supportedBuildToolComponents;
    NSArray *_librarySearchPaths;
    NSArray *_libraryFilenameExtensions;
    _Bool _supportsDeveloperFrameworks;
    NSDictionary *_infoDictionary;
    NSString *_propertyConditionName;
    NSArray *_propertyConditionFallbackNames;
    NSString *_minimalDisplayName;
    NSDictionary *_defaultProperties;
    NSNumber *_isInternal;
    NSNumber *_isBaseSDK;
    DVTSearchPath *_commandLineToolSearchPath;
    NSArray *_headerSearchPaths;
    NSArray *_frameworkSearchPaths;
    NSDictionary *_versionMap;
    NSDictionary *_iOSToMacOSVersionMap;
    NSDictionary *_macOSToiOSVersionMap;
    DVTBuildVersion *_productBuildVersion;
    NSDictionary *_versionInfo;
    NSString *_canonicalNameForBuildSettings;
    NSArray *_toolchains;
    NSArray *_toolchainNames;
    NSDictionary *_debuggerOptions;
    NSDictionary *_variants;
    DVTSDKVariant *_defaultVariant;
    NSArray *_cohortPlatformNames;
}

+ (id)sdksInDirectory:(id)arg1 forPlatform:(id)arg2;
+ (id)sdkInDirectory:(id)arg1 forPlatform:(id)arg2;
+ (id)sdkForPath:(id)arg1 forceCreate:(_Bool)arg2;
+ (id)sdkForPath:(id)arg1;
+ (id)sdkForUnsetSDKROOTOrNil;
+ (id)sdkForUnsetSDKROOT;
+ (id)sdkForNameOrPath:(id)arg1 withBasePath:(id)arg2 forceCreate:(_Bool)arg3;
+ (id)_absolutePathForSDKPathString:(id)arg1;
+ (id)sdksForFamily:(id)arg1;
+ (id)sdkForCanonicalName:(id)arg1;
+ (void)_setSDK:(id)arg1 forCanonicalName:(id)arg2;
+ (id)_sdkForResolvedAbsolutePath:(id)arg1;
+ (void)_setSDK:(id)arg1 forResolvedAbsolutePath:(id)arg2;
+ (id)knownSDKs;
+ (void)initialize;
- (void).cxx_destruct;
@property(retain) NSSet *aliases; // @synthesize aliases=_aliases;
@property(readonly) NSArray *cohortPlatformNames; // @synthesize cohortPlatformNames=_cohortPlatformNames;
@property(readonly) DVTSDKVariant *defaultVariant; // @synthesize defaultVariant=_defaultVariant;
@property(readonly) NSDictionary *variants; // @synthesize variants=_variants;
@property(readonly, copy) NSDictionary *debuggerOptions; // @synthesize debuggerOptions=_debuggerOptions;
@property(readonly, copy) NSArray *toolchainNames; // @synthesize toolchainNames=_toolchainNames;
@property(readonly) NSDictionary *macOSToiOSVersionMap; // @synthesize macOSToiOSVersionMap=_macOSToiOSVersionMap;
@property(readonly) NSDictionary *iOSToMacOSVersionMap; // @synthesize iOSToMacOSVersionMap=_iOSToMacOSVersionMap;
@property(readonly) NSDictionary *versionMap; // @synthesize versionMap=_versionMap;
@property(readonly, copy) NSArray *propertyConditionFallbackNames; // @synthesize propertyConditionFallbackNames=_propertyConditionFallbackNames;
@property(readonly, copy) NSDictionary *defaultProperties; // @synthesize defaultProperties=_defaultProperties;
@property(readonly, copy) NSArray *toolchains; // @synthesize toolchains=_toolchains;
@property(readonly) _Bool supportsDeveloperFrameworks; // @synthesize supportsDeveloperFrameworks=_supportsDeveloperFrameworks;
@property(readonly, copy) NSArray *libraryFilenameExtensions; // @synthesize libraryFilenameExtensions=_libraryFilenameExtensions;
@property(readonly, copy) NSArray *librarySearchPaths; // @synthesize librarySearchPaths=_librarySearchPaths;
@property(readonly, copy) NSString *alternateSDKName; // @synthesize alternateSDKName=_alternateSDKName;
@property(readonly, copy) NSArray *supportedBuildToolComponents; // @synthesize supportedBuildToolComponents=_supportedBuildToolComponents;
@property(readonly, copy) NSString *propertyConditionName; // @synthesize propertyConditionName=_propertyConditionName;
@property(readonly, copy) NSString *minimalDisplayName; // @synthesize minimalDisplayName=_minimalDisplayName;
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, copy) NSString *canonicalName; // @synthesize canonicalName=_canonicalName;
@property(readonly, copy) DVTFilePath *sdkPath; // @synthesize sdkPath=_sdkPath;
@property(readonly, copy) NSDictionary *infoDictionary; // @synthesize infoDictionary=_infoDictionary;
@property(readonly, copy) NSString *operatingSystemVersion; // @synthesize operatingSystemVersion=_operatingSystemVersion;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)additionalLibrarySearchPaths;
- (id)additionalFrameworkSearchPaths;
- (id)additionalHeaderSearchPaths;
- (id)commandLineToolSearchPath;
@property(readonly, copy) NSString *canonicalNameForBuildSettings; // @synthesize canonicalNameForBuildSettings=_canonicalNameForBuildSettings;
@property(readonly) DVTBuildVersion *productBuildVersion;
@property(readonly) NSDictionary *versionInfo; // @synthesize versionInfo=_versionInfo;
@property(readonly) _Bool versionInfoIsRequired;
- (id)_canonicalNameForLookupIncludingCohortInfix:(_Bool)arg1;
@property(readonly) NSString *canonicalNameForLookup;
@property(readonly) _Bool isLatestCanonicalSDKForPlatform;
@property(readonly, getter=isBaseSDK) _Bool baseSDK;
@property(readonly, getter=isInternal) _Bool internal;
@property(retain) DVTPlatform *platform;
- (_Bool)isEmbedded;
- (id)initWithFilePath:(id)arg1;
- (id)initWithFilePath:(id)arg1 infoDictionary:(id)arg2;

@end

