//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <DVTFoundation/NSCopying-Protocol.h>

@class DVTFilePath, DVTMacroDefinitionTable, DVTSearchPath, DVTVersion, NSArray, NSDate, NSNumber, NSString, NSURL;

@interface DVTToolchain : NSObject <NSCopying>
{
    NSNumber *_embeddedDebuggerSetting;
    DVTFilePath *_lldbPath;
    DVTFilePath *_llvmProfdataPath;
    DVTFilePath *_swiftDemanglePath;
    DVTVersion *_swiftVersion;
    NSString *_swiftCompilerVersionString;
    unsigned long long _hash;
    NSNumber *_requiresSwiftDevelopmentRuntime;
    NSString *_identifier;
    DVTFilePath *_path;
    DVTVersion *_version;
    NSArray *_aliases;
    NSString *_displayName;
    NSString *_displayDescription;
    DVTMacroDefinitionTable *_defaultMacros;
    DVTMacroDefinitionTable *_overrideMacros;
    DVTMacroDefinitionTable *_additionalDefaultMacrosIfTopToolchain;
    DVTSearchPath *_executableBinarySearchPath;
    DVTSearchPath *_librarySearchPath;
    DVTSearchPath *_headerSearchPath;
    NSURL *_reportProblemURL;
    NSString *_shortDisplayName;
    NSDate *_createdDate;
    NSNumber *_compatibilityVersion;
    NSString *_compatibilityVersionDisplayString;
}

+ (id)defaultToolchain;
- (void).cxx_destruct;
@property(readonly) NSString *compatibilityVersionDisplayString; // @synthesize compatibilityVersionDisplayString=_compatibilityVersionDisplayString;
@property(readonly) NSNumber *compatibilityVersion; // @synthesize compatibilityVersion=_compatibilityVersion;
@property(readonly) NSDate *createdDate; // @synthesize createdDate=_createdDate;
@property(readonly) NSString *shortDisplayName; // @synthesize shortDisplayName=_shortDisplayName;
@property(readonly) NSURL *reportProblemURL; // @synthesize reportProblemURL=_reportProblemURL;
@property(readonly) DVTSearchPath *headerSearchPath; // @synthesize headerSearchPath=_headerSearchPath;
@property(readonly) DVTSearchPath *librarySearchPath; // @synthesize librarySearchPath=_librarySearchPath;
@property(readonly) DVTSearchPath *executableBinarySearchPath; // @synthesize executableBinarySearchPath=_executableBinarySearchPath;
@property(readonly) DVTMacroDefinitionTable *additionalDefaultMacrosIfTopToolchain; // @synthesize additionalDefaultMacrosIfTopToolchain=_additionalDefaultMacrosIfTopToolchain;
@property(readonly) DVTMacroDefinitionTable *overrideMacros; // @synthesize overrideMacros=_overrideMacros;
@property(readonly) DVTMacroDefinitionTable *defaultMacros; // @synthesize defaultMacros=_defaultMacros;
@property(readonly) NSString *displayDescription; // @synthesize displayDescription=_displayDescription;
@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) NSArray *aliases; // @synthesize aliases=_aliases;
@property(readonly) DVTVersion *version; // @synthesize version=_version;
@property(readonly) DVTFilePath *path; // @synthesize path=_path;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) _Bool isSwiftOpenSourceToolchain;
@property(readonly) _Bool requiresSwiftDevelopmentRuntime;
@property(readonly) NSString *swiftCompilerVersionString;
@property(readonly) DVTVersion *swiftVersion;
- (id)swiftDemanglePath;
- (id)llvmProfdataPath;
- (id)lldbPath;
- (_Bool)isDefaultToolchain;
- (_Bool)requiresEmbeddedDebuggerForSwift;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)infoDictionaryWithError:(id *)arg1;
- (id)init;
- (id)initWithPath:(id)arg1 error:(id *)arg2;

@end

