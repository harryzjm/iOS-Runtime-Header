//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class HMBLocalZone, HMDCameraClipUploader, HMDCameraProfile, HMDCameraRecordingSessionSignificantEventManager, HMDCameraRecordingSessionTimelineManager, HMDCameraRecordingSessionVariantFragmentManager, HMDCameraSignificantEventServer, HMDDataStreamFragment, HMFActivity, HMIVideoAnalyzerFragmentResult, HMIVideoFragment, NSData, NSDictionary, NSNumber, NSObject, NSString, NSUUID;
@protocol HMDCameraRecordingSessionDelegate, HMDCameraRecordingSessionFactory, HMDCameraRecordingSessionVideoAnalyzer, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface HMDCameraRecordingSession : HMFObject
{
    _Bool _noMoreFragmentsAvailable;
    _Bool _active;
    NSDictionary *_homePresenceByPairingIdentity;
    unsigned long long _currentFragmentNumber;
    NSUUID *_identifier;
    double _configuredFragmentDuration;
    HMDCameraRecordingSessionTimelineManager *_timelineManager;
    id <HMDCameraRecordingSessionDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMDCameraProfile *_camera;
    NSString *_logIdentifier;
    HMBLocalZone *_localZone;
    id <HMDCameraRecordingSessionFactory> _factory;
    id <HMDCameraRecordingSessionVideoAnalyzer> _videoAnalyzer;
    HMFActivity *_sessionActivity;
    HMDCameraSignificantEventServer *_significantEventServer;
    HMDCameraRecordingSessionSignificantEventManager *_significantEventManager;
    HMDCameraRecordingSessionVariantFragmentManager *_timelapseFragmentManager;
    unsigned long long _pendingFragmentsCount;
    HMDCameraClipUploader *_clipUploader;
    HMDCameraClipUploader *_timelapseClipUploader;
    HMDDataStreamFragment *_cameraVideoInitFragment;
    HMIVideoFragment *_introFragment;
    HMIVideoAnalyzerFragmentResult *_introAnalyzerResult;
    NSData *_analysisVideoInitData;
    NSData *_analysisTimelapseVideoInitData;
    NSNumber *_remainingRecordingExtensionDuration;
    NSString *_sessionDirectoryPath;
    CDStruct_1b6d18a9 _clipStartTime;
    CDStruct_1b6d18a9 _timelapseClipStartTime;
}

+ (id)logCategory;
- (void).cxx_destruct;
@property(copy) NSString *sessionDirectoryPath; // @synthesize sessionDirectoryPath=_sessionDirectoryPath;
@property(copy) NSNumber *remainingRecordingExtensionDuration; // @synthesize remainingRecordingExtensionDuration=_remainingRecordingExtensionDuration;
@property(retain) NSData *analysisTimelapseVideoInitData; // @synthesize analysisTimelapseVideoInitData=_analysisTimelapseVideoInitData;
@property(retain) NSData *analysisVideoInitData; // @synthesize analysisVideoInitData=_analysisVideoInitData;
@property(retain) HMIVideoAnalyzerFragmentResult *introAnalyzerResult; // @synthesize introAnalyzerResult=_introAnalyzerResult;
@property(retain) HMIVideoFragment *introFragment; // @synthesize introFragment=_introFragment;
@property(retain) HMDDataStreamFragment *cameraVideoInitFragment; // @synthesize cameraVideoInitFragment=_cameraVideoInitFragment;
@property(retain) HMDCameraClipUploader *timelapseClipUploader; // @synthesize timelapseClipUploader=_timelapseClipUploader;
@property(retain) HMDCameraClipUploader *clipUploader; // @synthesize clipUploader=_clipUploader;
@property CDStruct_1b6d18a9 timelapseClipStartTime; // @synthesize timelapseClipStartTime=_timelapseClipStartTime;
@property CDStruct_1b6d18a9 clipStartTime; // @synthesize clipStartTime=_clipStartTime;
@property unsigned long long pendingFragmentsCount; // @synthesize pendingFragmentsCount=_pendingFragmentsCount;
@property(getter=isActive) _Bool active; // @synthesize active=_active;
@property _Bool noMoreFragmentsAvailable; // @synthesize noMoreFragmentsAvailable=_noMoreFragmentsAvailable;
@property(readonly) HMDCameraRecordingSessionVariantFragmentManager *timelapseFragmentManager; // @synthesize timelapseFragmentManager=_timelapseFragmentManager;
@property(readonly) HMDCameraRecordingSessionSignificantEventManager *significantEventManager; // @synthesize significantEventManager=_significantEventManager;
@property(readonly) HMDCameraSignificantEventServer *significantEventServer; // @synthesize significantEventServer=_significantEventServer;
@property(readonly) HMFActivity *sessionActivity; // @synthesize sessionActivity=_sessionActivity;
@property(readonly) id <HMDCameraRecordingSessionVideoAnalyzer> videoAnalyzer; // @synthesize videoAnalyzer=_videoAnalyzer;
@property(readonly) id <HMDCameraRecordingSessionFactory> factory; // @synthesize factory=_factory;
@property(readonly) HMBLocalZone *localZone; // @synthesize localZone=_localZone;
@property(readonly, copy) NSString *logIdentifier; // @synthesize logIdentifier=_logIdentifier;
@property(readonly) HMDCameraProfile *camera; // @synthesize camera=_camera;
@property(readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property __weak id <HMDCameraRecordingSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) HMDCameraRecordingSessionTimelineManager *timelineManager; // @synthesize timelineManager=_timelineManager;
@property(readonly) double configuredFragmentDuration; // @synthesize configuredFragmentDuration=_configuredFragmentDuration;
@property(readonly, copy) NSUUID *identifier; // @synthesize identifier=_identifier;
- (id)attributeDescriptions;
- (void)variantFragmentManager:(id)arg1 didSelectVariantFragment:(id)arg2 overlapsFullFragment:(_Bool)arg3;
- (void)uploaderDidFailUpload:(id)arg1;
- (void)_finishCurrentTimelapseClipUploader;
- (void)_finishCurrentClipUploader;
- (_Bool)_isValidNonFirstSessionFragment:(id)arg1;
- (_Bool)_isValidFirstSessionFragment:(id)arg1;
- (void)_writeEvent:(id)arg1;
- (_Bool)_shouldWriteSessionLogToDisk;
- (void)_writeFragment:(id)arg1;
- (_Bool)_createSessionDirectory;
- (_Bool)_shouldEndSessionAfterFragment:(id)arg1;
- (_Bool)_shouldRecordFragmentWithAnalyzerResult:(id)arg1 sequenceNumber:(unsigned long long)arg2 recordingEventTriggers:(unsigned long long)arg3 fragmentAnalyzedEvent:(id)arg4;
- (void)_endSessionWithError:(id)arg1;
- (void)_handleDidFailAnalysisWithError:(id)arg1;
- (void)_submitNotificationSuccessMetricWithRecordingEventTriggers:(unsigned long long)arg1 fragmentNumber:(unsigned long long)arg2;
- (void)_notifyForSignificantEvent:(id)arg1 recordingEventTriggers:(unsigned long long)arg2 fragmentNumber:(unsigned long long)arg3;
- (void)_notifyForAnalyzerResult:(id)arg1 fragment:(id)arg2 timeOffsetWithinClip:(double)arg3 recordingEventTriggers:(unsigned long long)arg4;
- (void)_uploadTimelapseFragment:(id)arg1;
- (void)_uploadFragment:(id)arg1 withDuration:(double)arg2 clipFinalizedBecauseMaxDurationExceeded:(_Bool)arg3;
- (void)_handleFragmentResult:(id)arg1;
- (void)analyzer:(id)arg1 didCreateTimelapseFragment:(id)arg2;
- (void)analyzer:(id)arg1 didFailWithError:(id)arg2;
- (void)analyzer:(id)arg1 didAnalyzeFrameWithResult:(id)arg2;
- (void)analyzer:(id)arg1 didAnalyzeFragmentWithResult:(id)arg2;
@property(readonly, copy) NSDictionary *homePresenceByPairingIdentity; // @synthesize homePresenceByPairingIdentity=_homePresenceByPairingIdentity;
- (void)handleNoMoreFragmentsAvailable;
- (void)handleMotionActive:(_Bool)arg1;
- (void)handleFragment:(id)arg1;
- (void)configure;
- (_Bool)activityZonesIncludedForSignificantEventDetection;
- (id)activityZones;
@property unsigned long long currentFragmentNumber; // @synthesize currentFragmentNumber=_currentFragmentNumber;
@property(readonly) unsigned long long recordingEventTriggers;
- (void)dealloc;
- (id)initWithWorkQueue:(id)arg1 camera:(id)arg2 hapAccessory:(id)arg3 home:(id)arg4 localZone:(id)arg5 configuredFragmentDuration:(double)arg6 timelineManager:(id)arg7 significantEventServer:(id)arg8 homePresenceByPairingIdentity:(id)arg9 factory:(id)arg10;
- (id)initWithWorkQueue:(id)arg1 camera:(id)arg2 hapAccessory:(id)arg3 home:(id)arg4 localZone:(id)arg5 configuredFragmentDuration:(double)arg6 timelineManager:(id)arg7 significantEventServer:(id)arg8 homePresenceByPairingIdentity:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

