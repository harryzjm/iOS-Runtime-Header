//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class HMDCallObserver, HMDCameraResidentMessageHandler, HMDCameraStreamManagerSession, HMDCameraStreamSnapshotHandler, HMDCameraSupportedConfigurationCache, HMDDynamicActivityAttributionPublisher, HMDHAPAccessory, HMDService, HMFMessageDispatcher, HMFNetMonitor, NSObject, NSString, NSUUID;
@protocol HMDCameraStreamControlMessageHandlerDataSource, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface HMDCameraStreamControlMessageHandler : HMFObject
{
    HMDCameraStreamManagerSession *_streamSession;
    HMDService *_streamManagementService;
    HMDCallObserver *_callObserver;
    HMDCameraResidentMessageHandler *_residentMessageHandler;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMDHAPAccessory *_accessory;
    NSUUID *_uniqueIdentifier;
    NSUUID *_profileUniqueIdentifier;
    HMDCameraSupportedConfigurationCache *_supportedConfigCache;
    HMDCameraStreamSnapshotHandler *_streamSnapshotHandler;
    HMFNetMonitor *_networkMonitor;
    HMFMessageDispatcher *_messageDispatcher;
    HMDDynamicActivityAttributionPublisher *_dynamicActivityAttributionPublisher;
    id <HMDCameraStreamControlMessageHandlerDataSource> _dataSource;
}

+ (id)logCategory;
- (void).cxx_destruct;
@property(readonly) id <HMDCameraStreamControlMessageHandlerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(readonly) HMDDynamicActivityAttributionPublisher *dynamicActivityAttributionPublisher; // @synthesize dynamicActivityAttributionPublisher=_dynamicActivityAttributionPublisher;
@property(retain) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(readonly) HMFNetMonitor *networkMonitor; // @synthesize networkMonitor=_networkMonitor;
@property(readonly) HMDCameraStreamSnapshotHandler *streamSnapshotHandler; // @synthesize streamSnapshotHandler=_streamSnapshotHandler;
@property(readonly) HMDCameraSupportedConfigurationCache *supportedConfigCache; // @synthesize supportedConfigCache=_supportedConfigCache;
@property(readonly) NSUUID *profileUniqueIdentifier; // @synthesize profileUniqueIdentifier=_profileUniqueIdentifier;
@property(readonly) NSUUID *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(readonly) __weak HMDHAPAccessory *accessory; // @synthesize accessory=_accessory;
@property(readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly) HMDCameraResidentMessageHandler *residentMessageHandler; // @synthesize residentMessageHandler=_residentMessageHandler;
@property(readonly) HMDCallObserver *callObserver; // @synthesize callObserver=_callObserver;
@property(readonly) HMDService *streamManagementService; // @synthesize streamManagementService=_streamManagementService;
- (void)handleActivePhoneCallDidEstablishNotification:(id)arg1;
- (void)handleConnectionDeactivatedNotification:(id)arg1;
- (void)handleProcessStateChange:(id)arg1;
- (void)handleAccessoryUnconfigured:(id)arg1;
- (void)handleCameraSettingsDidChangeNotification:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)_resetStreamSession:(id)arg1;
- (void)_sendStreamStoppedRemoteNotificationWithError:(id)arg1;
- (void)_sendStreamStoppedMessageWithError:(id)arg1;
- (void)streamControlManager:(id)arg1 didStopStreamWithSessionID:(id)arg2 error:(id)arg3;
- (void)streamControlManagerDidReconfigureStream:(id)arg1;
- (void)streamControlManagerDidReceiveFirstFrame:(id)arg1;
- (void)streamControlManagerDidStartStream:(id)arg1;
- (void)streamControlManagerDidSetUpRemoteConnection:(id)arg1;
- (void)streamControlManager:(id)arg1 didNegotiateStreamWithSelectedParameters:(id)arg2;
- (void)timerDidFire:(id)arg1;
- (id)logIdentifier;
- (void)_respondToLocalNegotiateStreamMessage:(id)arg1;
- (void)_attributeMicrophoneUsageToApplicationBundleIdentifier:(id)arg1;
- (_Bool)_shouldStopStreamSessionForProcessInfo:(id)arg1;
@property(readonly, getter=isStreamingSessionInProgress) _Bool streamingSessionInProgress;
@property(readonly, copy) NSString *streamSessionID;
- (void)_handleSetAudioState:(id)arg1;
- (void)setAudioVolume:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)_handleSetAudioVolume:(id)arg1;
- (void)_handleStopMessage:(id)arg1;
- (void)_handleReconfigureMessage:(id)arg1;
- (void)_handleStartMessage:(id)arg1;
- (void)_handleRemoteSetupMessage:(id)arg1;
- (void)_handleNegotiateMessage:(id)arg1;
- (_Bool)_shouldHandleNegotiateMessage:(id)arg1 accessoryReachable:(_Bool)arg2;
- (void)handleMessage:(id)arg1;
- (void)_stopStreamWithError:(id)arg1;
- (_Bool)_isRemoteSetupMessage:(id)arg1;
- (_Bool)_isSetAudioVolumeMessage:(id)arg1;
- (_Bool)_isSetAudioStreamSettingMessage:(id)arg1;
- (_Bool)_isStopMessage:(id)arg1;
- (_Bool)_isReconfigureMessage:(id)arg1;
- (_Bool)_isStartMessage:(id)arg1;
- (_Bool)_isNegotiateMessage:(id)arg1;
- (void)updateStreamClientUsingMessage:(id)arg1;
@property(retain) HMDCameraStreamManagerSession *streamSession; // @synthesize streamSession=_streamSession;
- (void)configureWithMessageDispatcher:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithWorkQueue:(id)arg1 streamSnapshotHandler:(id)arg2 accessory:(id)arg3 streamManagementService:(id)arg4 profileUniqueIdentifier:(id)arg5 networkMonitor:(id)arg6;
- (id)initWithWorkQueue:(id)arg1 streamSnapshotHandler:(id)arg2 accessory:(id)arg3 streamManagementService:(id)arg4 profileUniqueIdentifier:(id)arg5 networkMonitor:(id)arg6 residentMessageHandler:(id)arg7 callObserver:(id)arg8 dataSource:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

