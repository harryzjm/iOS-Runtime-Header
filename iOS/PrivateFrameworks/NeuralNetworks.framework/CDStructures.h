//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Named Structures

struct IRValue;

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned int :63;
                    unsigned int :1;
                } _field1;
                struct __short {
                    char _field1[23];
                    unsigned char _field2[0];
                    unsigned int :7;
                    unsigned int :1;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct unique_ptr<const MIL::IRValue, std::default_delete<const MIL::IRValue>> {
    struct __compressed_pair<const MIL::IRValue *, std::default_delete<const MIL::IRValue>> {
        struct IRValue *_field1;
    } _field1;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    CDStruct_14f26992 _field1;
    CDStruct_14f26992 _field2;
} CDStruct_4c83c94d;

// Template types
typedef struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned int :63;
                    unsigned int :1;
                } _field1;
                struct __short {
                    char _field1[23];
                    unsigned char _field2[0];
                    unsigned int :7;
                    unsigned int :1;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_b963e3c0;

typedef struct unique_ptr<const MIL::IRValue, std::default_delete<const MIL::IRValue>> {
    struct __compressed_pair<const MIL::IRValue *, std::default_delete<const MIL::IRValue>> {
        struct IRValue *_field1;
    } _field1;
} unique_ptr_0dc3f9f9;

