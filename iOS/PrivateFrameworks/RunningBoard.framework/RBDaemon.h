//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <RunningBoard/RBAssertionManagerDelegate-Protocol.h>
#import <RunningBoard/RBBundlePropertiesManagerDelegate-Protocol.h>
#import <RunningBoard/RBDaemonContextProviding-Protocol.h>
#import <RunningBoard/RBPowerAssertionManagerDelegate-Protocol.h>
#import <RunningBoard/RBProcessManagerDelegate-Protocol.h>

@class NSString, RBAssertionDescriptorValidator, RBAssertionManager, RBAssertionOriginatorPidStore, RBBundlePropertiesManager, RBConnectionListener, RBDomainAttributeManager, RBEntitlementManager, RBJetsamBandProvider, RBPowerAssertionManager, RBProcess, RBProcessManager, RBProcessMonitor, RBProcessReconnectManager, RBStateCaptureManager, RBThrottleBestEffortNetworkingManager;
@protocol RBAssertionManaging, RBEntitlementManaging, RBProcessManaging, RBProcessMonitoring, RBStateCaptureManaging;

@interface RBDaemon : NSObject <RBAssertionManagerDelegate, RBProcessManagerDelegate, RBBundlePropertiesManagerDelegate, RBPowerAssertionManagerDelegate, RBDaemonContextProviding>
{
    RBAssertionDescriptorValidator *_assertionDescriptorValidator;
    RBAssertionManager *_assertionManager;
    RBAssertionOriginatorPidStore *_assertionOriginatorPidStore;
    RBDomainAttributeManager *_domainAttributeManager;
    RBBundlePropertiesManager *_bundlePropertiesManager;
    RBEntitlementManager *_entitlementManager;
    RBConnectionListener *_listener;
    RBJetsamBandProvider *_jetsamBandProvider;
    RBPowerAssertionManager *_powerAssertionManager;
    RBProcessManager *_processManager;
    RBProcessMonitor *_processMonitor;
    RBProcessReconnectManager *_reconnectManager;
    RBStateCaptureManager *_stateCaptureManager;
    RBThrottleBestEffortNetworkingManager *_throttleBestEffortNetworkingManager;
}

+ (void)run;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <RBStateCaptureManaging> stateCaptureManager; // @synthesize stateCaptureManager=_stateCaptureManager;
@property(readonly, nonatomic) id <RBProcessMonitoring> processMonitor; // @synthesize processMonitor=_processMonitor;
@property(readonly, nonatomic) id <RBProcessManaging> processManager; // @synthesize processManager=_processManager;
@property(readonly, nonatomic) id <RBEntitlementManaging> entitlementManager; // @synthesize entitlementManager=_entitlementManager;
@property(readonly, nonatomic) id <RBAssertionManaging> assertionManager; // @synthesize assertionManager=_assertionManager;
@property(readonly, nonatomic) RBProcess *process;
- (void)bundlePropertiesManager:(id)arg1 didChangePropertiesForProcessIdentities:(id)arg2;
- (void)processManager:(id)arg1 didRemoveProcess:(id)arg2;
- (void)processManager:(id)arg1 didAddProcess:(id)arg2;
- (void)processManager:(id)arg1 didReconnectProcesses:(id)arg2;
- (void)powerAssertionManagerDidPreventIdleSleep:(id)arg1;
- (void)powerAssertionManagerDidAllowIdleSleep:(id)arg1;
- (void)assertionManager:(id)arg1 didRejectAcquisitionFromOriginatorWithExcessiveAssertions:(id)arg2;
- (void)assertionManager:(id)arg1 didEndTrackingInFightUpdatesForProcessIdentity:(id)arg2;
- (void)assertionManager:(id)arg1 didBeginTrackingInFightUpdatesForProcessIdentity:(id)arg2;
- (void)assertionManager:(id)arg1 didEndTrackingStateForProcessIdentity:(id)arg2;
- (void)assertionManager:(id)arg1 didBeginTrackingStateForProcessIdentity:(id)arg2;
- (void)assertionManager:(id)arg1 didInvalidateAssertions:(id)arg2;
- (void)assertionManager:(id)arg1 willInvalidateAssertion:(id)arg2;
- (void)assertionManager:(id)arg1 willExpireAssertionsSoonForProcess:(id)arg2 expirationTime:(double)arg3;
- (void)assertionManager:(id)arg1 didRemoveProcess:(id)arg2 withState:(id)arg3;
- (void)assertionManager:(id)arg1 didResolveSystemState:(id)arg2;
- (void)assertionManager:(id)arg1 didUpdateProcessStates:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)assertionManager:(id)arg1 didAddProcess:(id)arg2 withState:(id)arg3;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (id)init;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

