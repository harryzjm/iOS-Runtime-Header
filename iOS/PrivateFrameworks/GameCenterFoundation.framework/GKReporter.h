//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface GKReporter : NSObject
{
    double _authenticateResponseTimestamp;
    double _inviteeUILaunchTimestamp;
    double _connectingDevicesTimestamp;
    double _programaticInviteTimestamp;
    double _appLaunchTimestamp;
    double _totalInviteReceivedTimestamp;
    double _messageInviteProcessingTimestamp;
}

+ (id)reporter;
@property(nonatomic) double messageInviteProcessingTimestamp; // @synthesize messageInviteProcessingTimestamp=_messageInviteProcessingTimestamp;
@property(nonatomic) double totalInviteReceivedTimestamp; // @synthesize totalInviteReceivedTimestamp=_totalInviteReceivedTimestamp;
@property(nonatomic) double appLaunchTimestamp; // @synthesize appLaunchTimestamp=_appLaunchTimestamp;
@property(nonatomic) double programaticInviteTimestamp; // @synthesize programaticInviteTimestamp=_programaticInviteTimestamp;
@property(nonatomic) double connectingDevicesTimestamp; // @synthesize connectingDevicesTimestamp=_connectingDevicesTimestamp;
@property(nonatomic) double inviteeUILaunchTimestamp; // @synthesize inviteeUILaunchTimestamp=_inviteeUILaunchTimestamp;
@property(nonatomic) double authenticateResponseTimestamp; // @synthesize authenticateResponseTimestamp=_authenticateResponseTimestamp;
- (void)reportDurationForEventType:(id)arg1 withStartTimestamp:(double)arg2;
- (void)reportTotalInviteReceivedDuration;
- (void)reportAppLaunchDuration;
- (void)recordAppLaunchAndTotalTimestamp;
- (void)reportProgramaticInviteDuration;
- (void)recordProgramaticInviteTimestamp;
- (void)reportConnectingDevicesDuration;
- (void)recordConnectingDevicesTimestamp;
- (void)reportMessageInviteProcessingDuration;
- (void)recordMessageInviteProcessingTimestamp;
- (void)reportInviteeUILaunchDuration;
- (void)recordInviteeUILaunchTimestamp;
- (void)reportAuthenticateResponseDuration;
- (void)recordAuthenticateResponseTimestamp;
- (void)reportTournamentAnalyticsWithDomain:(id)arg1 type:(id)arg2 tournamentType:(id)arg3 replayCount:(id)arg4 friendCount:(id)arg5 tournamentID:(id)arg6 bundleID:(id)arg7 inviteeCount:(id)arg8;
- (_Bool)isTimeSpanValid:(double)arg1;
- (void)reportEvent:(id)arg1 type:(id)arg2 scoreRank:(id)arg3;
- (void)reportEvent:(id)arg1 type:(id)arg2 count:(id)arg3;
- (void)reportEvent:(id)arg1 type:(id)arg2 friendsPlayedThisGame:(id)arg3;
- (void)reportEvent:(id)arg1 type:(id)arg2 payload:(id)arg3;
- (void)reportEvent:(id)arg1 type:(id)arg2 bundleID:(id)arg3;
- (void)reportEvent:(id)arg1 type:(id)arg2 startTime:(id)arg3;
- (void)reportEvent:(id)arg1 type:(id)arg2;
- (void)reportEvent:(id)arg1 payload:(id)arg2;

@end

