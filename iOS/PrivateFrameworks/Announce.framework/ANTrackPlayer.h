//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ANAudioSessionManager, ANTimer, AVAudioSession, AVQueuePlayer, NSMutableArray, NSString, NSURL, NSUUID;
@protocol ANTrackPlayerDelegate, OS_dispatch_group, OS_dispatch_queue, OS_os_log;

@interface ANTrackPlayer : NSObject
{
    _Bool _readyToPlay;
    _Bool _playbackPending;
    id <ANTrackPlayerDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    unsigned long long _playbackState;
    AVQueuePlayer *_queuePlayer;
    NSObject<OS_dispatch_group> *_playerStartGroup;
    double _silenceBetweenEachTrack;
    NSURL *_audioFileAtStart;
    double _trimStartTone;
    NSURL *_audioFileTransition;
    double _trimTransitionTone;
    double _previousSkipGoesToPreviousTrackDelta;
    AVAudioSession *_audioSession;
    NSMutableArray *_playerItems;
    NSUUID *_endpointUUID;
    NSObject<OS_os_log> *_log;
    NSObject<OS_dispatch_queue> *_workQueue;
    double _interruptionStart;
    unsigned long long _options;
    ANAudioSessionManager *_audioSessionManager;
    ANTimer *_interruptionTimer;
    ANTimer *_playerTimer;
    CDUnknownBlockType _handler;
}

- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(nonatomic) _Bool playbackPending; // @synthesize playbackPending=_playbackPending;
@property(retain, nonatomic) ANTimer *playerTimer; // @synthesize playerTimer=_playerTimer;
@property(retain, nonatomic) ANTimer *interruptionTimer; // @synthesize interruptionTimer=_interruptionTimer;
@property(nonatomic) _Bool readyToPlay; // @synthesize readyToPlay=_readyToPlay;
@property(readonly, nonatomic) ANAudioSessionManager *audioSessionManager; // @synthesize audioSessionManager=_audioSessionManager;
@property(readonly, nonatomic) unsigned long long options; // @synthesize options=_options;
@property double interruptionStart; // @synthesize interruptionStart=_interruptionStart;
@property(readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, nonatomic) NSObject<OS_os_log> *log; // @synthesize log=_log;
@property(readonly, nonatomic) NSUUID *endpointUUID; // @synthesize endpointUUID=_endpointUUID;
@property(readonly, nonatomic) NSMutableArray *playerItems; // @synthesize playerItems=_playerItems;
@property(readonly, nonatomic) AVAudioSession *audioSession; // @synthesize audioSession=_audioSession;
@property double previousSkipGoesToPreviousTrackDelta; // @synthesize previousSkipGoesToPreviousTrackDelta=_previousSkipGoesToPreviousTrackDelta;
@property double trimTransitionTone; // @synthesize trimTransitionTone=_trimTransitionTone;
@property(retain, nonatomic) NSURL *audioFileTransition; // @synthesize audioFileTransition=_audioFileTransition;
@property double trimStartTone; // @synthesize trimStartTone=_trimStartTone;
@property(retain, nonatomic) NSURL *audioFileAtStart; // @synthesize audioFileAtStart=_audioFileAtStart;
@property double silenceBetweenEachTrack; // @synthesize silenceBetweenEachTrack=_silenceBetweenEachTrack;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *playerStartGroup; // @synthesize playerStartGroup=_playerStartGroup;
@property(retain, nonatomic) AVQueuePlayer *queuePlayer; // @synthesize queuePlayer=_queuePlayer;
@property(nonatomic) unsigned long long playbackState; // @synthesize playbackState=_playbackState;
@property __weak NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property __weak id <ANTrackPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)playerItemPlayedToEndHandler:(id)arg1;
- (void)playerRateChangedHandler:(id)arg1;
- (void)audioSessionInterruptionHandler:(id)arg1;
- (void)_handleInterruptionEndedAndShouldResume:(_Bool)arg1;
- (void)audioSessionMediaServicesResetHandler:(id)arg1;
- (void)audioSessionMediaServicesLostHandler:(id)arg1;
- (void)_resumePlaybackAfterInterruptionAtTimeInterval:(double)arg1;
- (void)handleInterruptionDelay:(double)arg1;
- (void)previousInternalSync;
- (void)nextInternalSync;
- (void)stopInternalSync;
- (void)playInternalWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_stopPlaybackAndFailWithItem:(id)arg1 error:(id)arg2;
- (id)_stringForPlayerItemStatus:(long long)arg1;
- (id)_stringForPlayerStatus:(long long)arg1;
- (id)_stringForTimeControlStatus:(long long)arg1;
- (void)_removeItemObserverForPlayer:(id)arg1;
- (void)_removeObserverForPlayer:(id)arg1;
- (void)_addObserverForPlayer:(id)arg1;
- (id)_playerInfoForAVPlayerItem:(id)arg1;
- (void)_callDelegateWithBlock:(CDUnknownBlockType)arg1;
- (void)_configureAudioSession;
- (void)_deregisterForNotificationsWithAudioSession:(id)arg1;
- (void)_registerForNotificationsWithAudioSession:(id)arg1;
@property(readonly, nonatomic) int numberActiveTracks;
- (void)previousWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)nextWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)end;
- (void)_stopAndUpdatePlaybackState:(unsigned long long)arg1;
- (void)stop;
@property(readonly, nonatomic) NSString *whatIsPlaying;
- (void)_playWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)playWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)prepareToPlay;
- (_Bool)_insertAudioBetween;
- (_Bool)_addURL:(id)arg1 announcementID:(id)arg2 trackType:(long long)arg3;
- (_Bool)_add:(id)arg1 announcementID:(id)arg2 trackType:(long long)arg3;
- (_Bool)add:(id)arg1 announcementID:(id)arg2;
- (void)dealloc;
- (id)initWithOptions:(unsigned long long)arg1 endpointUUID:(id)arg2;
- (id)initWithOptions:(unsigned long long)arg1;

@end

