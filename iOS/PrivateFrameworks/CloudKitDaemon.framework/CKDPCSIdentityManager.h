//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKDAccount, NSMutableDictionary, NSString;

__attribute__((visibility("hidden")))
@interface CKDPCSIdentityManager : NSObject
{
    _Bool _isSiloed;
    _Bool _forceEnableReadOnlyManatee;
    NSString *_serviceName;
    CKDAccount *_account;
    NSString *_cachedAccountDSID;
    NSMutableDictionary *_PCSIdentityWrappersByServiceName;
    struct _PCSIdentityData *_debugIdentity;
}

+ (struct _PCSIdentitySetData *)_getTestAccountIdentitySetForService:(id)arg1 forBackingFakeAccount:(id)arg2 withError:(id *)arg3;
+ (id)sharedFakeIdentitySetsByServiceByUsername;
+ (struct _PCSIdentitySetData *)_copyStingrayIdentitiesForService:(id)arg1 forBackingFakeAccount:(id)arg2 withError:(id *)arg3;
@property(nonatomic) struct _PCSIdentityData *debugIdentity; // @synthesize debugIdentity=_debugIdentity;
@property(retain) NSMutableDictionary *PCSIdentityWrappersByServiceName; // @synthesize PCSIdentityWrappersByServiceName=_PCSIdentityWrappersByServiceName;
@property(retain) NSString *cachedAccountDSID; // @synthesize cachedAccountDSID=_cachedAccountDSID;
@property(readonly, nonatomic) _Bool forceEnableReadOnlyManatee; // @synthesize forceEnableReadOnlyManatee=_forceEnableReadOnlyManatee;
@property(readonly, nonatomic) _Bool isSiloed; // @synthesize isSiloed=_isSiloed;
@property(retain) CKDAccount *account; // @synthesize account=_account;
@property(readonly, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
- (void).cxx_destruct;
- (id)PCSServiceStringFromCKServiceType:(unsigned long long)arg1;
- (id)internalServicesToCombineWithLiverpoolKey;
- (_Bool)_hasCurrentKeyForService:(id)arg1 inIdentitySet:(struct _PCSIdentitySetData *)arg2 withError:(id *)arg3;
- (_Bool)identitySet:(struct _PCSIdentitySetData *)arg1 containsPublicKey:(id)arg2 error:(id *)arg3;
- (struct _PCSIdentityData *)createCombinedIdentityWithOutOfNetworkPrivateKey:(id)arg1 publicSharingIdentity:(id)arg2;
- (struct _PCSIdentityData *)createSharingIdentityFromData:(id)arg1 error:(id *)arg2;
- (id)dataFromSharingIdentity:(struct _PCSIdentityData *)arg1 error:(id *)arg2;
- (struct _PCSIdentityData *)createRandomSharingIdentityWithError:(id *)arg1;
- (struct _PCSPublicIdentityData *)createPublicSharingIdentityFromPublicKey:(id)arg1 error:(id *)arg2;
- (struct _PCSIdentityData *)debugSharingIdentity;
- (struct _PCSIdentitySetData *)_copyTestAccountIdentitySetForService:(id)arg1 forBackingFakeAccount:(id)arg2 withError:(id *)arg3;
- (struct _PCSIdentitySetData *)_createSpecialInMemorySetCombiningLiverpoolWithServiceNamed:(id)arg1 dsid:(id)arg2 error:(id *)arg3;
- (id)_addIdentitiesFromServiceNamed:(id)arg1 dsid:(id)arg2 toMutableSet:(struct _PCSIdentitySetData *)arg3;
- (id)_copyPublicKeyDataForIdentitySet:(struct _PCSIdentitySetData *)arg1 withService:(unsigned long long)arg2 withError:(id *)arg3;
- (id)_copyPublicKeyDataForAllIdentitiesInSet:(struct _PCSIdentitySetData *)arg1 withService:(unsigned long long)arg2;
- (id)copyAllPublicKeysForService:(unsigned long long)arg1 withError:(id *)arg2;
- (id)copyPublicKeyForService:(unsigned long long)arg1 withError:(id *)arg2;
- (id)copyDiversifiedPublicKeyForService:(unsigned long long)arg1 userIDEntropy:(id)arg2 withError:(id *)arg3;
- (struct _PCSPublicIdentityData *)copyDiversifiedIdentityForService:(unsigned long long)arg1 userIDEntropy:(id)arg2 withError:(id *)arg3;
- (id)liverpoolPublicKey;
- (struct _PCSIdentitySetData *)createFullKeychainIdentitySetWithError:(id *)arg1;
- (struct _PCSIdentitySetData *)copyIdentitySetWithType:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (struct _PCSIdentitySetData *)_createIdentitySetForService:(id)arg1 dsid:(id)arg2 error:(id *)arg3;
- (struct _PCSIdentitySetData *)_copyIdentityForService:(id)arg1 useCache:(_Bool)arg2 validateCurrentKey:(_Bool)arg3 error:(id *)arg4;
- (id)_cacheIdentitySet:(struct _PCSIdentitySetData *)arg1 forService:(id)arg2;
- (void)identitiesChanged;
- (void)updateAccount:(id)arg1;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 serviceName:(id)arg2 isSiloed:(_Bool)arg3 forceEnableReadOnlyManatee:(_Bool)arg4;

@end

