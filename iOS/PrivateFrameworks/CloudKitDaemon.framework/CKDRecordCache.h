//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKDContainer, CKSQLite, NSDate, NSNumber;

@interface CKDRecordCache : NSObject
{
    CKSQLite *_db;
    CKDContainer *_container;
    long long _scope;
    NSNumber *_explicitCacheSizeLimit;
    NSDate *_lastExpiryAttempt;
}

+ (id)_expiryDateFormatter;
- (void).cxx_destruct;
@property(retain, nonatomic) NSDate *lastExpiryAttempt; // @synthesize lastExpiryAttempt=_lastExpiryAttempt;
@property(retain, nonatomic) NSNumber *explicitCacheSizeLimit; // @synthesize explicitCacheSizeLimit=_explicitCacheSizeLimit;
@property(nonatomic) long long scope; // @synthesize scope=_scope;
@property(nonatomic) __weak CKDContainer *container; // @synthesize container=_container;
@property(retain, nonatomic) CKSQLite *db; // @synthesize db=_db;
- (void)scheduleRecordExpirationWithExpiryDate:(id)arg1;
- (unsigned long long)recordCacheSizeLimit;
- (void)_attemptRecordExpiryIfNeeded;
- (unsigned long long)_lockedSizeOfAllRecordsInDb;
- (void)clearAssetAuthTokensForRecord:(id)arg1;
- (void)clearAssetAuthTokensForRecordWithID:(id)arg1;
- (void)clearAllRecordsForZoneWithID:(id)arg1;
- (void)clearAllRecords;
- (void)clearAllRecordsInScope;
- (void)deleteRecordWithID:(id)arg1;
- (id)etagForRecordID:(id)arg1 requiredKeys:(id)arg2;
- (void)addRecord:(id)arg1 knownUserKeys:(id)arg2;
- (unsigned long long)numberOfRecordsWithID:(id)arg1;
- (id)recordsWithIDs:(id)arg1 requiredKeys:(id)arg2;
- (id)recordWithID:(id)arg1 requiredKeys:(id)arg2;
- (id)_trimRecord:(id)arg1 toRequiredKeys:(id)arg2;
- (id)_recordWithID:(id)arg1 requiredKeys:(id)arg2;
- (_Bool)_cachedRecordHasValidAssets:(id)arg1 forRequiredKeys:(id)arg2;
- (_Bool)_cachedRecordKnownUserKeyData:(id)arg1 satisfiesRequiredKeys:(id)arg2;
- (id)_dsid;
- (void)replaceDatabase:(id)arg1;
- (void)releaseDatabase;
- (id)initWithDatabase:(id)arg1 container:(id)arg2 scope:(long long)arg3;

@end

