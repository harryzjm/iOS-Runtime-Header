//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudKitDaemon/CKDContainerScopedUserIDProvider-Protocol.h>
#import <CloudKitDaemon/CKXPCContainerScopedDaemonAPI-Protocol.h>

@class CKAccountOverrideInfo, CKContainerID, CKContainerOptions, CKDAccount, CKDAnonymousSharingManager, CKDAppContainerAccountTuple, CKDAppContainerTuple, CKDApplicationID, CKDDirectoryContext, CKDFlowControlManager, CKDKeyValueDiskCache, CKDLogicalDeviceContext, CKDLogicalDeviceScopedClientProxy, CKDMMCS, CKDPCSCache, CKDPCSFetchAggregator, CKDPCSManager, CKDProcessScopedClientProxy, CKDPublicIdentityLookupService, CKDServerConfiguration, CKDZoneGatekeeper, CKEntitlements, NSArray, NSMutableDictionary, NSMutableSet, NSOperationQueue, NSString, NSURL;
@protocol NSObject, OS_dispatch_queue;

@interface CKDContainer : NSObject <CKXPCContainerScopedDaemonAPI, CKDContainerScopedUserIDProvider>
{
    _Bool _isForClouddInternalUse;
    _Bool _isClientMainBundleAppleExecutable;
    _Bool _hasDataContainer;
    unsigned int _clientSDKVersion;
    CKDAccount *_account;
    CKDProcessScopedClientProxy *_processScopedClientProxy;
    CKDLogicalDeviceScopedClientProxy *_logicalDeviceScopedClientProxy;
    long long _cachedEnvironment;
    long long _adopterProcessType;
    NSString *_applicationVersion;
    CKDDirectoryContext *_directoryContext;
    CKDAppContainerTuple *_appContainerTuple;
    CKEntitlements *_entitlements;
    CKContainerOptions *_options;
    CKDMMCS *_MMCS;
    CKDPCSCache *_pcsCache;
    CKDZoneGatekeeper *_gatekeeper;
    CKDServerConfiguration *_serverConfig;
    NSURL *_publicCloudDBURL;
    NSURL *_publicShareServiceURL;
    NSURL *_publicDeviceServiceURL;
    NSURL *_publicCodeServiceURL;
    NSURL *_publicMetricsServiceURL;
    NSString *_containerScopedUserID;
    NSString *_orgAdminUserID;
    NSOperationQueue *_operationQueue;
    NSOperationQueue *_cleanupOperationQueue;
    NSMutableDictionary *_fakeErrorsByClassName;
    NSMutableDictionary *_fakeResponseOperationLifetimeByClassName;
    NSMutableDictionary *_fakeResponseOperationResultByClassNameByItemID;
    CKDPCSFetchAggregator *_fetchAggregator;
    NSURL *_applicationIcon;
    NSString *_applicationDisplayName;
    NSString *_resolvedAPSEnvironmentString;
    NSString *_containingBundleID;
    CKDKeyValueDiskCache *_publicIdentitiesDiskCache;
    CKDPublicIdentityLookupService *_foregroundPublicIdentityLookupService;
    CKDPublicIdentityLookupService *_backgroundPublicIdentityLookupService;
    NSObject<OS_dispatch_queue> *_cancellationQueue;
    NSObject<OS_dispatch_queue> *_statusQueue;
    NSOperationQueue *_uncancellableOperationQueue;
    NSOperationQueue *_backgroundOperationThrottleQueue;
    NSOperationQueue *_cloudKitSupportOperationThrottleQueue;
    NSMutableSet *_pendingOperationIDs;
    long long _hasTCCAuthorizationTernary;
    long long _hasValidatedEntitlementsTernary;
    CKDLogicalDeviceContext *_deviceContext;
    NSString *_hardwareID;
    NSOperationQueue *_tccAuthOpQueue;
    NSObject<OS_dispatch_queue> *_tccAuthQueue;
    id <NSObject> _TCCDatabaseChangedNotificationObserver;
    NSMutableDictionary *_operationStatisticsByClassName;
    CKDFlowControlManager *_flowControlManager;
    CKDPCSManager *_pcsManager;
    CKDAnonymousSharingManager *_anonymousSharingManager;
    NSArray *_cachedSandboxExtensions;
}

+ (id)operationStatusReport:(id)arg1;
+ (id)sharedClientThrottlingOperationQueue;
+ (id)accountStatusWorkloop;
+ (void)initialize;
+ (id)applicationDataContainerDirectoryForBundleID:(id)arg1 outApplicationBinaryBundleURL:(id *)arg2 outAdopterProcessType:(long long *)arg3;
+ (id)containerWithAppContainerAccountTuple:(id)arg1 deviceContext:(id)arg2 sharedContainerTable:(id)arg3;
+ (id)containerWithAppContainerTuple:(id)arg1 processScopedClientProxy:(id)arg2 logicalDeviceScopedClientProxy:(id)arg3 containerEntitlements:(id)arg4 containerOptions:(id)arg5 sharedContainerTable:(id)arg6;
+ (id)sharedDetachedContainers;
+ (id)sharedInternalUseContainers;
- (void).cxx_destruct;
@property(nonatomic) _Bool hasDataContainer; // @synthesize hasDataContainer=_hasDataContainer;
@property(retain, nonatomic) NSArray *cachedSandboxExtensions; // @synthesize cachedSandboxExtensions=_cachedSandboxExtensions;
@property(retain, nonatomic) CKDAnonymousSharingManager *anonymousSharingManager; // @synthesize anonymousSharingManager=_anonymousSharingManager;
@property(retain, nonatomic) CKDPCSManager *pcsManager; // @synthesize pcsManager=_pcsManager;
@property(retain, nonatomic) CKDFlowControlManager *flowControlManager; // @synthesize flowControlManager=_flowControlManager;
@property(retain, nonatomic) NSMutableDictionary *operationStatisticsByClassName; // @synthesize operationStatisticsByClassName=_operationStatisticsByClassName;
@property(retain, nonatomic) id <NSObject> TCCDatabaseChangedNotificationObserver; // @synthesize TCCDatabaseChangedNotificationObserver=_TCCDatabaseChangedNotificationObserver;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *tccAuthQueue; // @synthesize tccAuthQueue=_tccAuthQueue;
@property(retain, nonatomic) NSOperationQueue *tccAuthOpQueue; // @synthesize tccAuthOpQueue=_tccAuthOpQueue;
@property(retain, nonatomic) NSString *hardwareID; // @synthesize hardwareID=_hardwareID;
@property(retain, nonatomic) CKDLogicalDeviceContext *deviceContext; // @synthesize deviceContext=_deviceContext;
@property(nonatomic) long long hasValidatedEntitlementsTernary; // @synthesize hasValidatedEntitlementsTernary=_hasValidatedEntitlementsTernary;
@property(nonatomic) long long hasTCCAuthorizationTernary; // @synthesize hasTCCAuthorizationTernary=_hasTCCAuthorizationTernary;
@property(retain, nonatomic) NSMutableSet *pendingOperationIDs; // @synthesize pendingOperationIDs=_pendingOperationIDs;
@property(retain, nonatomic) NSOperationQueue *cloudKitSupportOperationThrottleQueue; // @synthesize cloudKitSupportOperationThrottleQueue=_cloudKitSupportOperationThrottleQueue;
@property(retain, nonatomic) NSOperationQueue *backgroundOperationThrottleQueue; // @synthesize backgroundOperationThrottleQueue=_backgroundOperationThrottleQueue;
@property(retain, nonatomic) NSOperationQueue *uncancellableOperationQueue; // @synthesize uncancellableOperationQueue=_uncancellableOperationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *statusQueue; // @synthesize statusQueue=_statusQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *cancellationQueue; // @synthesize cancellationQueue=_cancellationQueue;
@property(retain, nonatomic) CKDPublicIdentityLookupService *backgroundPublicIdentityLookupService; // @synthesize backgroundPublicIdentityLookupService=_backgroundPublicIdentityLookupService;
@property(retain, nonatomic) CKDPublicIdentityLookupService *foregroundPublicIdentityLookupService; // @synthesize foregroundPublicIdentityLookupService=_foregroundPublicIdentityLookupService;
@property(retain, nonatomic) CKDKeyValueDiskCache *publicIdentitiesDiskCache; // @synthesize publicIdentitiesDiskCache=_publicIdentitiesDiskCache;
@property(retain, nonatomic) NSString *containingBundleID; // @synthesize containingBundleID=_containingBundleID;
@property(retain, nonatomic) NSString *resolvedAPSEnvironmentString; // @synthesize resolvedAPSEnvironmentString=_resolvedAPSEnvironmentString;
@property(retain, nonatomic) NSString *applicationDisplayName; // @synthesize applicationDisplayName=_applicationDisplayName;
@property(retain, nonatomic) NSURL *applicationIcon; // @synthesize applicationIcon=_applicationIcon;
@property(retain, nonatomic) CKDPCSFetchAggregator *fetchAggregator; // @synthesize fetchAggregator=_fetchAggregator;
@property(retain, nonatomic) NSMutableDictionary *fakeResponseOperationResultByClassNameByItemID; // @synthesize fakeResponseOperationResultByClassNameByItemID=_fakeResponseOperationResultByClassNameByItemID;
@property(retain, nonatomic) NSMutableDictionary *fakeResponseOperationLifetimeByClassName; // @synthesize fakeResponseOperationLifetimeByClassName=_fakeResponseOperationLifetimeByClassName;
@property(retain, nonatomic) NSMutableDictionary *fakeErrorsByClassName; // @synthesize fakeErrorsByClassName=_fakeErrorsByClassName;
@property(retain, nonatomic) NSOperationQueue *cleanupOperationQueue; // @synthesize cleanupOperationQueue=_cleanupOperationQueue;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(copy) NSString *orgAdminUserID; // @synthesize orgAdminUserID=_orgAdminUserID;
@property(copy) NSString *containerScopedUserID; // @synthesize containerScopedUserID=_containerScopedUserID;
@property(copy) NSURL *publicMetricsServiceURL; // @synthesize publicMetricsServiceURL=_publicMetricsServiceURL;
@property(copy) NSURL *publicCodeServiceURL; // @synthesize publicCodeServiceURL=_publicCodeServiceURL;
@property(copy) NSURL *publicDeviceServiceURL; // @synthesize publicDeviceServiceURL=_publicDeviceServiceURL;
@property(copy) NSURL *publicShareServiceURL; // @synthesize publicShareServiceURL=_publicShareServiceURL;
@property(copy) NSURL *publicCloudDBURL; // @synthesize publicCloudDBURL=_publicCloudDBURL;
@property(retain, nonatomic) CKDServerConfiguration *serverConfig; // @synthesize serverConfig=_serverConfig;
@property(retain, nonatomic) CKDZoneGatekeeper *gatekeeper; // @synthesize gatekeeper=_gatekeeper;
@property(readonly, nonatomic) CKDPCSCache *pcsCache; // @synthesize pcsCache=_pcsCache;
@property(retain, nonatomic) CKDMMCS *MMCS; // @synthesize MMCS=_MMCS;
@property(nonatomic) _Bool isClientMainBundleAppleExecutable; // @synthesize isClientMainBundleAppleExecutable=_isClientMainBundleAppleExecutable;
@property(nonatomic) unsigned int clientSDKVersion; // @synthesize clientSDKVersion=_clientSDKVersion;
@property(retain, nonatomic) CKContainerOptions *options; // @synthesize options=_options;
@property(retain, nonatomic) CKEntitlements *entitlements; // @synthesize entitlements=_entitlements;
@property(retain, nonatomic) CKDAppContainerTuple *appContainerTuple; // @synthesize appContainerTuple=_appContainerTuple;
@property(retain, nonatomic) CKDDirectoryContext *directoryContext; // @synthesize directoryContext=_directoryContext;
@property(readonly, nonatomic) NSString *applicationVersion; // @synthesize applicationVersion=_applicationVersion;
@property(readonly, nonatomic) long long adopterProcessType; // @synthesize adopterProcessType=_adopterProcessType;
@property long long cachedEnvironment; // @synthesize cachedEnvironment=_cachedEnvironment;
@property(readonly, nonatomic) __weak CKDLogicalDeviceScopedClientProxy *logicalDeviceScopedClientProxy; // @synthesize logicalDeviceScopedClientProxy=_logicalDeviceScopedClientProxy;
@property(readonly, nonatomic) __weak CKDProcessScopedClientProxy *processScopedClientProxy; // @synthesize processScopedClientProxy=_processScopedClientProxy;
@property(nonatomic) _Bool isForClouddInternalUse; // @synthesize isForClouddInternalUse=_isForClouddInternalUse;
- (void)clearRecordCache;
- (void)showAssetCache;
- (void)clearAssetCache;
- (unsigned long long)countAssetCacheItemsWithDatabaseScope:(long long)arg1;
- (unsigned long long)countAssetCacheItems;
- (void)submitClientEventMetric:(id)arg1 completeWhenQueued:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dumpDaemonStatusReportToFileHandle:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_dumpStatusReportArrayToOsTrace:(id)arg1;
- (void)performCodeFunctionInvokeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performCodeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)_performCodeFunctionInvokeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 block:(CDUnknownBlockType)arg3;
- (_Bool)canOpenFileAtURL:(id)arg1;
- (void)handleSignificantIssueBehavior:(unsigned long long)arg1 reason:(id)arg2;
- (id)CKStatusReportArray;
- (id)CKStatusReportArrayIncludingSharedOperations:(_Bool)arg1;
- (void)addThrottle:(id)arg1;
- (void)resetThrottles;
- (id)sandboxExtensions;
- (void)linkWithClientContainer:(id)arg1;
- (void)cancelOperationWithIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)cancelAllOperations;
- (void)displayInfoOnAccountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)performFetchWebAuthTokenOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performFetchShareMetadataOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performAcceptSharesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performMarkNotificationsReadOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performFetchNotificationChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performModifyBadgeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performFetchSubscriptionsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performModifySubscriptionsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performQueryOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performFetchRecordChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performFetchRecordZoneChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performFetchRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)_reallyPerformFetchRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)_performFetchCurrentUserRecordOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performModifyRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performFetchDatabaseChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performFetchRecordZonesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performModifyRecordZonesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performFetchShareParticipantsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performDiscoverAllUserIdentitiesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)performDiscoverUserIdentitiesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)fetchAllLongLivedOperationIDsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchLongLivedOperationsWithIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)readBytesOfInMemoryAssetContentWithUUID:(id)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3 error:(id *)arg4;
- (id)getFileMetadataWithFileHandle:(id)arg1 openInfo:(id)arg2 error:(id *)arg3;
- (id)openFileWithOpenInfo:(id)arg1 error:(id *)arg2;
- (void)_handleCompletionForOperation:(id)arg1 initialMessageReplyBlock:(CDUnknownBlockType)arg2;
- (void)_handleCompletionForOperation:(id)arg1 initialMessageReplyBlock:(CDUnknownBlockType)arg2 customCompletionBlock:(CDUnknownBlockType)arg3;
- (void)requestApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_setApplicationPermission:(unsigned long long)arg1 enabled:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_globalStatusForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)statusForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)importantUserIDsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)reloadAccountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)accountInfoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (long long)_accountStatus;
- (long long)_applicationPermissionStatusFromUserPrivacySetting:(long long)arg1;
- (void)addOperation:(id)arg1 clientProvidedCallbackProxy:(id)arg2;
- (void)enqueueOperation:(id)arg1 clientProvidedCallbackProxy:(id)arg2 initialMessageReplyBlock:(CDUnknownBlockType)arg3;
- (id)callbackProxyForOperation:(id)arg1 clientProvidedCallbackProxy:(id)arg2;
- (id)containerForOperationInfo:(id)arg1;
@property(readonly, nonatomic) _Bool hasValidatedEntitlements;
@property(readonly, nonatomic) _Bool hasTCCAuthorization;
- (void)_lockedSetHasTCCAuthorizationTernary:(long long)arg1;
- (_Bool)_lockedHasTCCAuthorization;
- (void)tearDown;
- (void)setContainerAvailable:(_Bool)arg1;
- (void)_setupOperationQueues;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)_isContainerAuthorizedForOperation:(id)arg1 error:(id *)arg2;
- (id)possiblyWrappedAuthTokenErrorGivenError:(id)arg1;
- (_Bool)_isAdopterAppleInternal;
@property(readonly, nonatomic) NSString *encryptionServiceName;
@property(readonly, nonatomic) NSString *applicationBundleIdentifierForPush;
@property(readonly, nonatomic) NSString *applicationBundleIDForCacheDirectory;
@property(readonly, nonatomic) NSString *applicationBundleIdentifierForNetworkAttribution;
@property(readonly, nonatomic) NSString *applicationBundleIdentifierForContainerAccess;
@property(readonly, nonatomic) CKAccountOverrideInfo *accountOverrideInfo;
@property(readonly, nonatomic) CKDAppContainerAccountTuple *appContainerAccountTuple;
@property(readonly, nonatomic) NSString *associatedApplicationBundleID;
@property(readonly, nonatomic) NSString *applicationBundleID;
@property(readonly) CKDApplicationID *applicationID;
@property(readonly, nonatomic) NSString *personaID;
@property(readonly, nonatomic) CKContainerID *containerID;
- (_Bool)shouldUsePCSEncryption;
@property(readonly, nonatomic) NSString *apsEnvironmentString;
@property(readonly, nonatomic) NSString *processName;
@property(readonly, nonatomic) NSString *regionCode;
@property(readonly, nonatomic) NSString *languageCode;
@property(readonly, nonatomic) NSString *deviceName;
- (void)fetchPrivateURLForServerType:(long long)arg1 operation:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) NSString *deviceID;
- (void)fetchServerEnvironmentForOperation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)fetchImportantUserIDsForOperation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)fetchPublicURLForServerType:(long long)arg1 operation:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_fetchContainerServerInfoForOperation:(id)arg1 requireUserIDs:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)fetchConfigurationForOperation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)baseURLForServerType:(long long)arg1 partitionType:(long long)arg2;
- (id)_urlBySettingCustomBaseURL:(id)arg1 onURL:(id)arg2;
@property(readonly, copy) NSString *description;
- (id)CKPropertiesDescription;
- (double)publicIdentitiesExpirationTimeout;
- (void)performRequest:(id)arg1;
- (void)tearDownAssetTransfers;
- (_Bool)setupAssetTransfersWithError:(id *)arg1;
- (_Bool)setupMMCSWrapperWithError:(id *)arg1;
- (void)_determineHardwareInfo;
- (void)_loadApplicationContainerPathAndType;
@property(readonly, nonatomic) _Bool allowsExpensiveNetworkAccess;
@property(readonly, nonatomic) _Bool allowsCellularAccess;
@property(readonly, nonatomic) _Bool preferAnonymousRequests;
@property(readonly, nonatomic) _Bool canAuthWithCloudKit;
- (_Bool)hasAccountAccessAndTCCAuth;
@property(readonly, nonatomic) _Bool canAccessAccount;
- (_Bool)_cloudKitEnabledForCurrentClient;
- (void)_writeAdopterMetadataToCache;
- (void)_reloadAccount:(_Bool)arg1;
@property(retain, nonatomic) CKDAccount *account; // @synthesize account=_account;
- (void)dealloc;
- (void)dropMMCS;
- (void)_clearCaches;
- (id)_initWithAppContainerTuple:(id)arg1 processScopedClientProxy:(id)arg2 logicalDeviceScopedClientProxy:(id)arg3 containerEntitlements:(id)arg4 containerOptions:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

