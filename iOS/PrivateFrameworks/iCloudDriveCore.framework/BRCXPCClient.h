//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class BRCAccountSessionFPFS, BRCClientPrivilegesDescriptor, BRMangledID, NSCountedSet, NSMutableDictionary, NSOperationQueue, NSSet, NSString, NSXPCConnection, brc_task_tracker;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface BRCXPCClient : NSObject
{
    brc_task_tracker *_tracker;
    NSObject<OS_dispatch_queue> *_queue;
    BRCAccountSessionFPFS *__session;
    unsigned int _invalidated:1;
    BRCClientPrivilegesDescriptor *_clientPriviledgesDescriptor;
    NSObject<OS_dispatch_queue> *_foregroundBackgroundHandlingQueue;
    NSCountedSet *_appLibraries;
    NSOperationQueue *_operationQueue;
    int _clientPid;
    CDStruct_4c969caf auditToken;
    _Bool _dieOnInvalidate;
    unsigned int _isForeground:1;
    NSMutableDictionary *_personaMonitorCounts;
    _Bool _isUsingUbiquity;
    NSXPCConnection *_connection;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool isUsingUbiquity; // @synthesize isUsingUbiquity=_isUsingUbiquity;
@property(retain, nonatomic) BRCAccountSessionFPFS *session; // @synthesize session=__session;
@property(readonly, nonatomic) _Bool dieOnInvalidate; // @synthesize dieOnInvalidate=_dieOnInvalidate;
@property(readonly, nonatomic) __weak NSXPCConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) BRCClientPrivilegesDescriptor *clientPriviledgesDescriptor; // @synthesize clientPriviledgesDescriptor=_clientPriviledgesDescriptor;
- (void)_startSharingOperationAfterAcceptation:(id)arg1 client:(id)arg2 item:(id)arg3;
- (void)setupNonSandboxedAccessForUbiquityContainers:(id)arg1 forBundleID:(id)arg2;
- (void)_setupAppLibraryAndZoneWithID:(id)arg1 recreateDocumentsIfNeeded:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;
- (id)_setupAppLibrary:(id)arg1 error:(id *)arg2;
- (id)issueContainerExtensionForURL:(id)arg1 error:(id *)arg2;
- (_Bool)canAccessPhysicalURL:(id)arg1;
- (void)_finishedXPCClientOfSession:(id)arg1;
- (void)_becameXPCCLientOfSession:(id)arg1;
- (void)performBlockWithAnySession:(CDUnknownBlockType)arg1;
- (_Bool)canAccessPath:(const char *)arg1 accessKind:(long long)arg2;
- (id)_auditedURLFromPath:(id)arg1;
- (void)_auditURL:(id)arg1;
@property(readonly, nonatomic) _Bool isSandboxed;
@property(readonly, nonatomic) NSString *bundleID;
@property(readonly, nonatomic) _Bool hasPrivateSharingInterfaceEntitlement;
- (_Bool)_isAutomationEntitled;
- (_Bool)_isAppLibraryProxyEntitled;
@property(readonly, nonatomic) NSSet *entitledAppLibraryIDs;
@property(readonly, nonatomic) BRMangledID *defaultMangledID;
- (_Bool)_entitlementBooleanValueForKey:(id)arg1;
- (id)_entitlementValueForKey:(id)arg1 ofClass:(Class)arg2;
- (_Bool)_hasPrivateIPCEntitlementForSelector:(SEL)arg1 error:(id *)arg2;
- (_Bool)_isAppLibraryProxyWithError:(id *)arg1;
- (_Bool)_canCreateAppLibraryWithID:(id)arg1 error:(id *)arg2;
- (_Bool)_hasAccessToAppLibraryID:(id)arg1 error:(id *)arg2;
- (BOOL)cloudEnabledStatus;
- (void)notificationPipe:(id)arg1 didObserveAppLibrary:(id)arg2;
- (void)notificationPipe:(id)arg1 willObserveAppLibrary:(id)arg2;
- (void)_stopMonitoringProcess;
- (void)removeAppLibrary:(id)arg1;
- (void)addAppLibrary:(id)arg1;
- (void)_startMonitoringProcessIfNeeded;
- (void)process:(int)arg1 didBecomeForeground:(_Bool)arg2;
- (void)_process:(int)arg1 didBecomeForeground:(_Bool)arg2;
@property(readonly, nonatomic) NSString *identifier;
- (void)addOperation:(id)arg1;
- (void)dumpToContext:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)wait;
- (void)invalidate;
- (id)initWithConnection:(id)arg1;
- (void)setPrivilegesDescriptor:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

