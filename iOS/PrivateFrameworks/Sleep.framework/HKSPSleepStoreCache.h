//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class HKSPSleepEventRecord, HKSPSleepSchedule, HKSPSleepSettings;

__attribute__((visibility("hidden")))
@interface HKSPSleepStoreCache : NSObject
{
    _Bool _sleepScheduleNeedsUpdate;
    _Bool _sleepSettingsNeedsUpdate;
    _Bool _sleepEventRecordNeedsUpdate;
    _Bool _sleepScheduleStateNeedsUpdate;
    _Bool _sleepModeNeedsUpdate;
    struct os_unfair_lock_s _cacheLock;
    HKSPSleepSchedule *_sleepSchedule;
    HKSPSleepSettings *_sleepSettings;
    HKSPSleepEventRecord *_sleepEventRecord;
    unsigned long long _sleepScheduleState;
    long long _sleepMode;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool sleepModeNeedsUpdate; // @synthesize sleepModeNeedsUpdate=_sleepModeNeedsUpdate;
@property(readonly, nonatomic) long long sleepMode; // @synthesize sleepMode=_sleepMode;
@property(readonly, nonatomic) _Bool sleepScheduleStateNeedsUpdate; // @synthesize sleepScheduleStateNeedsUpdate=_sleepScheduleStateNeedsUpdate;
@property(readonly, nonatomic) unsigned long long sleepScheduleState; // @synthesize sleepScheduleState=_sleepScheduleState;
@property(readonly, nonatomic) _Bool sleepEventRecordNeedsUpdate; // @synthesize sleepEventRecordNeedsUpdate=_sleepEventRecordNeedsUpdate;
@property(readonly, copy, nonatomic) HKSPSleepEventRecord *sleepEventRecord; // @synthesize sleepEventRecord=_sleepEventRecord;
@property(readonly, nonatomic) _Bool sleepSettingsNeedsUpdate; // @synthesize sleepSettingsNeedsUpdate=_sleepSettingsNeedsUpdate;
@property(readonly, copy, nonatomic) HKSPSleepSettings *sleepSettings; // @synthesize sleepSettings=_sleepSettings;
@property(readonly, nonatomic) _Bool sleepScheduleNeedsUpdate; // @synthesize sleepScheduleNeedsUpdate=_sleepScheduleNeedsUpdate;
@property(readonly, copy, nonatomic) HKSPSleepSchedule *sleepSchedule; // @synthesize sleepSchedule=_sleepSchedule;
@property(readonly, nonatomic) struct os_unfair_lock_s cacheLock; // @synthesize cacheLock=_cacheLock;
- (void)purgeCache;
- (void)_locked_purgeCachedSleepScheduleState;
- (void)purgeCachedSleepScheduleState;
- (void)updateCachedSleepScheduleState:(unsigned long long)arg1;
- (id)cachedSleepScheduleStateWithMissHandler:(CDUnknownBlockType)arg1;
- (void)_locked_purgeCachedSleepMode;
- (void)purgeCachedSleepMode;
- (void)updateCachedSleepMode:(long long)arg1;
- (id)cachedSleepModeWithMissHandler:(CDUnknownBlockType)arg1;
- (void)_locked_purgeCachedSleepEventRecord;
- (void)purgeCachedSleepEventRecord;
- (void)updateCachedSleepEventRecord:(id)arg1;
- (id)cachedSleepEventRecordWithMissHandler:(CDUnknownBlockType)arg1;
- (id)cachedSleepEventRecord;
- (void)_locked_purgeCachedSleepSettings;
- (void)purgeCachedSleepSettings;
- (void)updateCachedSleepSettings:(id)arg1;
- (id)cachedSleepSettingsWithMissHandler:(CDUnknownBlockType)arg1;
- (id)cachedSleepSettings;
- (void)_locked_purgeCachedSleepSchedule;
- (void)purgeCachedSleepSchedule;
- (void)updateCachedSleepSchedule:(id)arg1;
- (id)cachedSleepScheduleWithMissHandler:(CDUnknownBlockType)arg1;
- (id)cachedSleepSchedule;
- (void)_withLock:(CDUnknownBlockType)arg1;
- (id)init;

@end

