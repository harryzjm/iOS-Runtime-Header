//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CHRecognizer, NSCharacterSet, NSDictionary, NSLocale;

@interface CHLexiconCorrectionStep
{
    _Bool _shouldAutocapitalize;
    int _autoCapitalizationMode;
    CHRecognizer *_recognizer;
    NSLocale *_locale;
    const struct _LXLexicon *_staticLexicon;
    const struct _LXLexicon *_customLexicon;
    const struct _LXLexicon *_phraseLexicon;
    const struct _LXLexicon *_customPhraseLexicon;
    NSDictionary *_textReplacements;
    NSCharacterSet *_consumableStrokesCharSet;
    NSCharacterSet *_fullWidthPunctuationThatExpectsUppercaseAfter;
}

@property(retain, nonatomic) NSCharacterSet *fullWidthPunctuationThatExpectsUppercaseAfter; // @synthesize fullWidthPunctuationThatExpectsUppercaseAfter=_fullWidthPunctuationThatExpectsUppercaseAfter;
@property(retain, nonatomic) NSCharacterSet *consumableStrokesCharSet; // @synthesize consumableStrokesCharSet=_consumableStrokesCharSet;
@property(retain, nonatomic) NSDictionary *textReplacements; // @synthesize textReplacements=_textReplacements;
@property(readonly, nonatomic) int autoCapitalizationMode; // @synthesize autoCapitalizationMode=_autoCapitalizationMode;
@property(nonatomic) const struct _LXLexicon *customPhraseLexicon; // @synthesize customPhraseLexicon=_customPhraseLexicon;
@property(nonatomic) const struct _LXLexicon *phraseLexicon; // @synthesize phraseLexicon=_phraseLexicon;
@property(nonatomic) const struct _LXLexicon *customLexicon; // @synthesize customLexicon=_customLexicon;
@property(nonatomic) const struct _LXLexicon *staticLexicon; // @synthesize staticLexicon=_staticLexicon;
@property(nonatomic) NSLocale *locale; // @synthesize locale=_locale;
@property(nonatomic) CHRecognizer *recognizer; // @synthesize recognizer=_recognizer;
@property(nonatomic) _Bool shouldAutocapitalize; // @synthesize shouldAutocapitalize=_shouldAutocapitalize;
- (id)process:(id)arg1;
- (id)applyLexiconCorrectionOnToken:(id)arg1 hasEmptyContext:(_Bool)arg2 history:(id)arg3 historyEndsAlphabetic:(_Bool)arg4 historyEndsWithLineBreak:(_Bool)arg5 prevToken:(id)arg6 shouldCapitalizeGivenHistory:(_Bool)arg7 tokenIndex:(long long)arg8 textReplacements:(id)arg9 shouldEntrySkipCorrection:(_Bool)arg10 contextBeforeToken:(id)arg11;
- (id)capitalizeToken:(id)arg1;
- (id)capitalizeString:(id)arg1;
- (_Bool)tokenIsExemptFromCorrection:(id)arg1 inPath:(id)arg2 withTokensInRow:(id)arg3;
- (id)applyLexiconCorrections:(id)arg1 shouldCapitalizeWord:(_Bool)arg2 shouldSkipEntryCorrection:(_Bool)arg3 outBestTokenIndex:(long long *)arg4 bestLexiconTokenScore:(double *)arg5 textReplacements:(id)arg6 contextBeforeToken:(id)arg7;
- (id)getSpellCorrectedToken:(id)arg1 contextBeforeToken:(id)arg2;
- (void)dealloc;
- (id)initWithAutoCapitalizationMode:(int)arg1 locale:(id)arg2 staticLexicon:(struct _LXLexicon *)arg3 customLexicon:(struct _LXLexicon *)arg4 phraseLexicon:(struct _LXLexicon *)arg5 customPhraseLexicon:(struct _LXLexicon *)arg6 recognizer:(id)arg7 textReplacements:(id)arg8;

@end

