//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDictionary, NSLocale;

@interface CHRecognizerConfiguration : NSObject
{
    unsigned long long _language;
    unsigned long long _script;
    NSDictionary *_decoderWeightsOverride;
    _Bool _enableCachingIfAvailable;
    _Bool _enableGen2ModelIfAvailable;
    _Bool _enableGen2CharacterLMIfAvailable;
    int _mode;
    int _contentType;
    int _autoCapitalizationMode;
    int _autoCorrectionMode;
    NSLocale *_locale;
}

+ (_Bool)shouldRefinePrefixQueryMatchesForLocale:(id)arg1;
+ (_Bool)shouldInsertSpaceBetweenPreviousChar:(id)arg1 andNextChar:(id)arg2 inLocale:(id)arg3;
+ (_Bool)shouldRemoveSpaceBetweenPreviousChar:(id)arg1 andNextChar:(id)arg2 inLocale:(id)arg3;
+ (long long)drawingStrokeLimitForLocale:(id)arg1;
+ (id)modelNameEPFIGS;
+ (id)modelNameJapanese;
+ (id)modelNameChinese;
+ (_Bool)shouldAdjustGroupingHeuristicsForVeryComplexCharacters:(id)arg1;
+ (_Bool)shouldAdjustGroupingForLocale:(id)arg1;
+ (id)spellCheckingLocaleForRecognitionLocale:(id)arg1 string:(id)arg2;
+ (_Bool)shouldPerformStrictCandidateFiltering:(id)arg1;
+ (_Bool)shouldSwapTopTwoResults:(id)arg1 locales:(id)arg2;
+ (_Bool)shouldUseFullWidthSpaceBasedOnContextForLocale:(id)arg1;
+ (_Bool)shouldApplyLatinSpacingForLocale:(id)arg1;
+ (struct CGSize)defaultMinimumDrawingSize;
+ (void *)loadLanguageModelFromOptions:(id)arg1 fallbackLocale:(id)arg2;
+ (id)recognitionEngineCachingKeyForRecognitionLocale:(id)arg1;
+ (id)effectiveTextInputRecognitionLocales:(id)arg1 allowFallbackSecondaryLocale:(_Bool)arg2;
+ (id)forcedGen2ModelLocaleForLocale:(id)arg1;
+ (_Bool)isLocaleSupported:(id)arg1 withMode:(int)arg2;
+ (_Bool)isLanguageSupported:(unsigned long long)arg1 withMode:(int)arg2;
+ (unsigned long long)supportedScriptForLocale:(id)arg1;
+ (unsigned long long)supportedLanguageForLocale:(id)arg1;
+ (void)_decodeLocale:(id)arg1 supportedLanguage:(unsigned long long *)arg2 supportedScript:(unsigned long long *)arg3;
+ (id)defaultLocaleForRecognitionType:(int)arg1 withMode:(int)arg2;
+ (int)validateRecognitionMode:(int)arg1;
+ (id)_stringForRecognitionScript:(unsigned long long)arg1;
+ (id)_stringForRecognitionLanguage:(unsigned long long)arg1;
+ (id)stringForAutoCorrectionMode:(int)arg1;
+ (id)stringForAutoCapitalizationMode:(int)arg1;
+ (id)stringForRecognitionContentType:(int)arg1;
+ (id)stringForRecognitionMode:(int)arg1;
@property(readonly, nonatomic) _Bool enableGen2CharacterLMIfAvailable; // @synthesize enableGen2CharacterLMIfAvailable=_enableGen2CharacterLMIfAvailable;
@property(readonly, nonatomic) _Bool enableGen2ModelIfAvailable; // @synthesize enableGen2ModelIfAvailable=_enableGen2ModelIfAvailable;
@property(readonly, nonatomic) _Bool enableCachingIfAvailable; // @synthesize enableCachingIfAvailable=_enableCachingIfAvailable;
@property(readonly, nonatomic) int autoCorrectionMode; // @synthesize autoCorrectionMode=_autoCorrectionMode;
@property(readonly, nonatomic) int autoCapitalizationMode; // @synthesize autoCapitalizationMode=_autoCapitalizationMode;
@property(readonly, nonatomic) int contentType; // @synthesize contentType=_contentType;
@property(readonly, copy, nonatomic) NSLocale *locale; // @synthesize locale=_locale;
@property(readonly, nonatomic) int mode; // @synthesize mode=_mode;
- (id)languageResourceBundleWithStaticLexicon:(struct _LXLexicon *)arg1 customLexicon:(struct _LXLexicon *)arg2 wordLanguageModel:(void *)arg3;
- (CDUnknownBlockType)decodingCommitActionBlock;
- (long long)engineCandidateCount;
- (long long)maxRecognitionResultDefaultCount;
- (struct CHNeuralNetwork *)newFreeFormEngine;
- (id)newCTCTextDecoderWithStaticLexicon:(struct _LXLexicon *)arg1 customLexicon:(struct _LXLexicon *)arg2 wordLanguageModel:(void *)arg3;
- (id)newOVSCleanupPostProcessorWithRecognizer:(id)arg1;
- (id)newPostProcessorWithStaticLexicon:(struct _LXLexicon *)arg1 customLexicon:(struct _LXLexicon *)arg2 phraseLexicon:(struct _LXLexicon *)arg3 customPhraseLexicon:(struct _LXLexicon *)arg4 characterLM:(id)arg5 recognizer:(id)arg6 textReplacements:(id)arg7 postProcessingFST:(id)arg8 languageModel:(void *)arg9 mecabra:(struct __Mecabra *)arg10;
- (id)newCTCRecognitionModel;
- (unsigned long long)effectiveEngineLanguage;
- (id)newCutpointModel;
- (id)newStrokeTransitionModel;
- (struct CHNeuralNetwork *)newRecognitionEngine;
- (struct VariantMap *)newTransliterationVariantMap;
- (void *)newRadicalClusterFST;
- (void *)newGrammarFST;
- (id)newPostProcessingFST;
- (id)newPatternFST;
- (struct _CFBurstTrie *)newOVSTrie;
- (void *)newCharacterLanguageModelAndMap:(void *)arg1 force:(_Bool)arg2;
- (id)newSpellChecker;
- (void *)newLanguageModelForRecognizer:(id)arg1 async:(_Bool)arg2 synchronizationQueue:(id)arg3;
- (void *)newLanguageModel;
- (void *)newCJKStaticLexicon;
- (const struct _LXLexicon *)newPhraseLexicon:(id *)arg1;
- (const struct _LXLexicon *)newStaticLexicon:(id *)arg1;
- (id)linguisticResourcesFallbackLocale;
- (long long)precedingSpaceDefaultBehavior;
- (_Bool)shouldForwardMecabraOTAAssetsUpdate;
- (int)mecabraInputMethodType;
- (unsigned int)requiredInappropriateFilteringFlags;
- (_Bool)shouldConvertKanaInPostProcessing;
- (_Bool)shouldRemoveSpacesFromHashtagsAndMentions;
- (_Bool)shouldMergeNoPrecedingWhiteSpaceColumns;
- (_Bool)shouldIdentifyChangeableColumns;
- (_Bool)shouldApplySemanticTokenization;
- (_Bool)shouldAddAlternativeWidthCandidates;
- (_Bool)shouldTransliterateHalfWidthPunctuations;
- (_Bool)shouldTreatAllSmallStrokesAsPunctuation;
- (_Bool)shouldDetectRomanPunctuation;
- (_Bool)shouldDetectChinesePunctuation;
- (_Bool)shouldRefineCandidates;
- (_Bool)shouldKeepDuplicateTokenIDs;
- (_Bool)shouldKeepOutOfPatternCandidates;
- (_Bool)shouldMarkMultiWordOVS;
- (_Bool)shouldPromoteCJKCommonCharacters;
- (_Bool)shouldTransformCharacterProbabilitiesIntoLogScores;
- (_Bool)shouldReplaceInvalidTokenIDs;
- (_Bool)shouldUseTokenPrecedingSpaces;
- (_Bool)shouldPreserveLegacyTranscriptionPaths;
- (_Bool)shouldUseCaching;
- (_Bool)shouldReorderSCTCConfusion;
- (_Bool)shouldTransliterateSentences;
- (_Bool)shouldTransliterateAndSynthetizeCandidates;
- (_Bool)shouldApplyCharacterLMRescoring;
- (_Bool)shouldApplyLMSorting;
- (_Bool)shouldApplyLMRescoring;
- (_Bool)shouldAutoCorrect;
- (_Bool)shouldRemoveSpacesFromStrongURLs;
- (_Bool)shouldAutoCapitalize;
- (_Bool)shouldTransliterateFrenchLigatures;
- (_Bool)shouldTransliterateConfusableCharacters;
- (_Bool)shouldFilterLowProbabilityTranscriptionPaths;
- (_Bool)shouldRelaxFinalCandidatesThresholding;
- (_Bool)shouldApplyCandidatesThresholding;
- (_Bool)shouldPenalizeLetterInsertion;
- (_Bool)shouldComputeStrokePenalties;
- (_Bool)shouldFallbackOnSingleCharacterExpansion;
- (_Bool)shouldPerformMultiWordsExpansion;
- (_Bool)shouldExpandNonSpaceSeparators;
- (_Bool)shouldPerformIntegratedLexiconExpansion;
- (_Bool)shouldPerformGlobalBestSearchWithSmallLattice;
- (_Bool)shouldPerformGlobalBestSearch;
- (_Bool)shouldPenalizePrefixes;
- (double)decodingWordLMLowerBoundLogProbability;
- (double)characterLMLowerBoundLogProbability;
- (double)decodingLexiconLowerBoundLogProbability;
- (double)decodingLexiconWeight;
- (double)decodingWordLMWeight;
- (double)decodingCharacterLMWeight;
- (_Bool)shouldRunNextGenCharacterLM;
- (_Bool)shouldRunNextGenRecognizer;
- (_Bool)shouldExpandCodePoints;
- (_Bool)shouldApplyDiacriticSensitivity;
- (_Bool)shouldApplyLexicalPenalty;
- (_Bool)shouldExpandLexiconInNetwork;
- (_Bool)shouldComposeLexiconWithNetwork;
- (_Bool)shouldLoadCJKLexicons;
@property(readonly, nonatomic) int contentTypeForNoSpaceRecognition;
- (_Bool)shouldPerformNoSpaceRecognition;
- (_Bool)shouldPerformRegularSpaceRecognition;
- (_Bool)shouldRefineChineseCharacterCandidates;
- (_Bool)shouldApplyChinesePostProcessing;
- (_Bool)shouldApplyRomanPostProcessing;
- (unsigned long long)supportedSegmentationStrategy;
- (_Bool)shouldEnforceGrammarOnTransliterations;
- (_Bool)shouldGenerateDigitLetterAlternatives;
- (_Bool)hasSamePostProcessingAsConfiguration:(id)arg1;
- (_Bool)hasSameResourcesAsConfiguration:(id)arg1;
- (id)configurationKey;
- (_Bool)isEqualToRecognizerConfiguration:(id)arg1;
- (_Bool)isTextMode;
- (id)description;
- (void)dealloc;
- (id)initWithMode:(int)arg1 locale:(id)arg2 contentType:(int)arg3 autoCapitalizationMode:(int)arg4 autoCorrectionMode:(int)arg5 enableCachingIfAvailable:(_Bool)arg6 enableGen2ModelIfAvailable:(_Bool)arg7 enableGen2CharacterLMIfAvailable:(_Bool)arg8;

@end

