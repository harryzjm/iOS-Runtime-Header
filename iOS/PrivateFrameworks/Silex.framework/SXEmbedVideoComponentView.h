//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Silex/SXViewportChangeListener-Protocol.h>
#import <Silex/WKNavigationDelegate-Protocol.h>
#import <Silex/WKNavigationDelegatePrivate-Protocol.h>
#import <Silex/WKUIDelegate-Protocol.h>
#import <Silex/_WKFullscreenDelegate-Protocol.h>

@class NSString, SWCrashRetryThrottler, UIActivityIndicatorView, WKWebView, WKWebsiteDataStore;
@protocol SXComponentActionHandler, SXProxyAuthenticationHandler, SXSceneStateMonitor;

@interface SXEmbedVideoComponentView <WKNavigationDelegate, WKNavigationDelegatePrivate, WKUIDelegate, SXViewportChangeListener, _WKFullscreenDelegate>
{
    _Bool _webViewIsLoaded;
    _Bool _isPresentingFullscreen;
    id <SXComponentActionHandler> _actionHandler;
    WKWebView *_webView;
    SWCrashRetryThrottler *_webCrashRetryThrottler;
    WKWebsiteDataStore *_dataStore;
    UIActivityIndicatorView *_activityIndicator;
    id <SXProxyAuthenticationHandler> _proxyAuthenticationHandler;
    id <SXSceneStateMonitor> _sceneStateMonitor;
}

+ (id)sharedConfiguration;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <SXSceneStateMonitor> sceneStateMonitor; // @synthesize sceneStateMonitor=_sceneStateMonitor;
@property(readonly, nonatomic) id <SXProxyAuthenticationHandler> proxyAuthenticationHandler; // @synthesize proxyAuthenticationHandler=_proxyAuthenticationHandler;
@property(readonly, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
@property(readonly, nonatomic) WKWebsiteDataStore *dataStore; // @synthesize dataStore=_dataStore;
@property(nonatomic) _Bool isPresentingFullscreen; // @synthesize isPresentingFullscreen=_isPresentingFullscreen;
@property(nonatomic) _Bool webViewIsLoaded; // @synthesize webViewIsLoaded=_webViewIsLoaded;
@property(retain, nonatomic) SWCrashRetryThrottler *webCrashRetryThrottler; // @synthesize webCrashRetryThrottler=_webCrashRetryThrottler;
@property(retain, nonatomic) WKWebView *webView; // @synthesize webView=_webView;
@property(readonly, nonatomic) id <SXComponentActionHandler> actionHandler; // @synthesize actionHandler=_actionHandler;
- (void)webViewExitedFullscreen:(id)arg1;
- (void)webViewEnteredFullscreen:(id)arg1;
- (_Bool)allowHierarchyRemoval;
- (unsigned long long)analyticsVideoType;
- (unsigned long long)analyticsMediaType;
- (void)_webViewDidExitElementFullscreen:(id)arg1;
- (void)_webViewDidEnterElementFullscreen:(id)arg1;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (_Bool)shouldAllowRequestToURL:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)_webViewWebProcessDidCrash:(id)arg1;
- (void)_webViewDidExitFullscreen:(id)arg1;
- (void)_webViewDidEnterFullscreen:(id)arg1;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)handleError:(id)arg1;
- (struct CGRect)visibleFrame;
- (struct CGRect)transitionContentFrame;
- (void)updateWebViewToWidth:(double)arg1;
- (void)initializeWebViewWithURL:(id)arg1;
- (void)viewport:(id)arg1 appearStateChangedFromState:(unsigned long long)arg2;
- (void)discardContents;
- (void)renderContents;
- (void)layoutSubviews;
- (void)presentComponentWithChanges:(CDStruct_12a35e6e)arg1;
- (id)initWithDOMObjectProvider:(id)arg1 viewport:(id)arg2 presentationDelegate:(id)arg3 componentStyleRendererFactory:(id)arg4 analyticsReporting:(id)arg5 appStateMonitor:(id)arg6 sceneStateMonitor:(id)arg7 actionHandler:(id)arg8 websiteDataStore:(id)arg9 proxyAuthenticationHandler:(id)arg10;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

