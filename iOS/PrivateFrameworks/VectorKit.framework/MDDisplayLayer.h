//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <VectorKit/GGLLayerDelegate-Protocol.h>
#import <VectorKit/MDRenderTarget-Protocol.h>

@class CALayer, NSString, VKSharedResources;
@protocol GGLLayer, GGLRenderQueueSource;

__attribute__((visibility("hidden")))
@interface MDDisplayLayer : NSObject <GGLLayerDelegate, MDRenderTarget>
{
    CALayer<GGLLayer> *_layer;
    id <GGLRenderQueueSource> _renderSource;
    shared_ptr_e963992e _taskContext;
    void *_activeRenderQueue;
    struct _retain_ptr<VKSharedResources *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> {
        CDUnknownFunctionPointerType *_vptr$_retain_ptr;
        VKSharedResources *_obj;
        struct _retain_objc _retain;
        struct _release_objc _release;
    } _sharedResources;
    struct deque<std::function<void ()>, std::allocator<std::function<void ()>>> _completionHandlers;
    struct RenderTargetFormat _sRGBFormat;
    void *_device;
    void *_renderer;
    struct mutex _debugConsoleManagerCreationLock;
    struct unique_ptr<md::DebugConsoleManager, std::default_delete<md::DebugConsoleManager>> _debugConsoleManager;
    struct unique_ptr<ggl::RenderTarget, std::default_delete<ggl::RenderTarget>> _sRGBRenderTarget;
    struct unique_ptr<ggl::RenderBuffer, std::default_delete<ggl::RenderBuffer>> _depthStencil;
    struct shared_ptr<ggl::RenderBuffer> _sRGBMsaaTexture;
    struct shared_ptr<ggl::Texture2DAbstract> _sRGBTexture;
    struct shared_ptr<ggl::RenderBuffer> _sRGBColorTextures[3];
    struct unique_ptr<ggl::RenderTarget, std::default_delete<ggl::RenderTarget>> _blitRenderTarget;
    struct RenderTargetFormat _blitFormat;
    struct RenderTargetFormat _linearFormat;
    struct unique_ptr<ggl::RenderTarget, std::default_delete<ggl::RenderTarget>> _linearRenderTarget;
    struct shared_ptr<ggl::RenderBuffer> _linearTexture;
    struct shared_ptr<ggl::RenderBuffer> _linearColorTextures[3];
    _Bool _useMultisampling;
    _Bool _supportsFramebufferFetch;
    _Bool _requiresMultisampling;
    struct CGContext *_snapshotContext;
    _Bool _readPixels;
    _Bool _shouldRasterize;
    struct CGRect _bounds;
    double _contentsScale;
    unsigned long long _signpostId;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool shouldRasterize; // @synthesize shouldRasterize=_shouldRasterize;
@property(readonly, nonatomic) _Bool supportsFramebufferFetch; // @synthesize supportsFramebufferFetch=_supportsFramebufferFetch;
@property(readonly, nonatomic) _Bool multiSample; // @synthesize multiSample=_useMultisampling;
@property(nonatomic) id <GGLRenderQueueSource> renderSource; // @synthesize renderSource=_renderSource;
@property(readonly, nonatomic) CALayer *layer; // @synthesize layer=_layer;
- (struct __IOSurface *)flipImage;
- (void *)debugConsoleForId:(int)arg1;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toLayer:(id)arg2;
@property(readonly, nonatomic) float averageFPS;
- (void)renderWithTimestamp:(double)arg1 completion:(function_ffe40f9b)arg2;
- (_Bool)hasRenderTarget;
- (void)destroyRenderTarget;
- (void)createRenderTarget;
@property(readonly, nonatomic) const struct RenderTargetFormat *blitFormat;
@property(readonly, nonatomic) void *blitRenderTarget;
@property(readonly, nonatomic) void *linearRenderTarget;
@property(readonly, nonatomic) const struct RenderTargetFormat *linearFormat;
@property(readonly, nonatomic) void *finalRenderTarget;
@property(readonly, nonatomic) struct CGSize sizeInPixels;
@property(readonly, nonatomic) const struct RenderTargetFormat *format;
@property(nonatomic) struct CGRect bounds;
@property(nonatomic) double contentScale;
@property(nonatomic) struct CGSize size;
- (void)didEnterBackground;
- (void)didReceiveMemoryWarning;
- (shared_ptr_fa6aa836)bitmapData;
- (void)_didReadPixels:(void *)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)setBackgroundColor:(struct CGColor *)arg1;
- (void)setContentsGravity:(id)arg1;
- (void)setOpaque:(_Bool)arg1;
- (void)setNeedsDisplayOnBoundsChange:(_Bool)arg1;
- (void)expandedPerformanceHUD:(id)arg1;
- (void)disablePerformanceHUD:(id)arg1;
- (void)enablePerformanceHUD:(id)arg1;
@property(readonly, nonatomic) void *renderer;
- (void)didPresent;
- (void)willPresent;
- (void)didUpdateFrameTexture;
- (void)willUpdateFrameTexture;
- (void)drawToTexture:(void *)arg1 withRenderQueue:(void *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)drawToTexture:(void *)arg1 withRenderQueue:(void *)arg2;
- (void *)_renderQueueForTimestamp:(double)arg1 prepareHandler:(CDUnknownBlockType)arg2;
- (void *)renderQueueForTimestamp:(double)arg1;
- (_Bool)isDelayedRenderQueueConsumptionSupported;
- (void)prepareTargetsForPlatormsWithoutFramebufferFetch:(const void *)arg1;
- (void)prepareTargetsForPlatormsWithFramebufferFetch:(const void *)arg1;
- (void)prepareTexture:(const void *)arg1;
- (void)dealloc;
- (id)initWithContentScale:(double)arg1 useMultisampling:(_Bool)arg2 extraColorFormats:(const void *)arg3 shouldRasterize:(_Bool)arg4 taskContext:(const void *)arg5 device:(void *)arg6 sharedResources:(id)arg7 signpostId:(unsigned long long)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

