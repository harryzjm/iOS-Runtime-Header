//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class GEOMapRegion, NSString, VKAttachedNavGestureCameraBehavior, VKDaVinciGestureCameraController, VKDetachedNavGestureCameraBehavior, VKGestureCameraBehavior, VKNavContext, VKSceneConfiguration, VKScreenCanvas, VKTimedAnimation;
@protocol VKInteractiveMap;

__attribute__((visibility("hidden")))
@interface VKNavCameraController
{
    unsigned char _cameraType;
    unsigned char _headingType;
    Unit_5669e52e _puckCourse;
    Coordinate3D_332c2c3b _puckCoordinate;
    Unit_5669e52e _headingDelta;
    Unit_5669e52e _headingMinDelta;
    CameraFrame_b765d6d7 _lastCalculatedCameraFrame;
    CameraFrame_b765d6d7 _cameraFrame;
    _Bool _needsUpdate;
    struct Spring<double, 1, gdc::SpringType::Linear> _pitchSpring;
    struct Spring<double, 1, gdc::SpringType::Angular> _headingSpring;
    struct Spring<double, 1, gdc::SpringType::Linear> _distanceFromTargetSpring;
    struct Spring<double, 2, gdc::SpringType::Linear> _screenPositionSpring;
    Unit_e1574806 _cameraDistanceFromTarget;
    Unit_5669e52e _cameraPitch;
    double _previousUpdateTime;
    double _ignoreStyleChangeStartTime;
    double _lastSARUpdateTime;
    double _maxZoomScale;
    double _minZoomScale;
    VKGestureCameraBehavior *_gestureBehavior;
    VKAttachedNavGestureCameraBehavior *_attachedGestureBehavior;
    VKDetachedNavGestureCameraBehavior *_detachedGestureBehavior;
    VKDaVinciGestureCameraController *_davinciGestureCameraController;
    _Bool _isDetached;
    _Bool _isIgnoringStyleChange;
    _Bool _panning;
    _Bool _rotating;
    _Bool _pitching;
    _Bool _zooming;
    VKTimedAnimation *_transitionAnimation;
    VKTimedAnimation *_snapPitchAnimation;
    VKTimedAnimation *_snapHeadingAnimation;
    CameraFrame_b765d6d7 _transitionFrame;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _currentStyleName;
    struct vector<geo::Coordinate3D<geo::Radians, double>, std::allocator<geo::Coordinate3D<geo::Radians, double>>> _coordinatesToFrame;
    unsigned char _styleManeuversToFrame;
    unsigned char _maneuversToFrame;
    unsigned char _styleLegsToFrame;
    unsigned char _segmentsToFrame;
    double _minCameraHeight;
    double _maxCameraHeight;
    Unit_5669e52e _minCameraPitch;
    Unit_5669e52e _maxCameraPitch;
    struct VKEdgeInsets _previousMapEdgeInsets;
    struct VKEdgeInsets _framingEdgeInset;
    struct VKEdgeInsets _framingEdgeInsetProportional;
    struct VKEdgeInsets _clientFramingInsets;
    Matrix_8746f91e _puckMovementBoundsMin;
    Matrix_8746f91e _puckMovementBoundsMax;
    Matrix_8746f91e _puckScreenPosition;
    double _minHeightDeltaChangeHorizontal;
    double _maxHeightDeltaChangeHorizontal;
    double _minHeightDeltaChangeVertical;
    double _maxHeightDeltaChangeVertical;
    double _halfPuckSize;
    Box_3d7e3c2c _viewableScreenRect;
    Box_3d7e3c2c _framingScreenRect;
    _Bool _enablePan;
    _Bool _enableZoom;
    _Bool _enablePitch;
    _Bool _enableRotate;
    float _panReturnDelayTime;
    unsigned char _alternateFramingSource;
    unsigned char _secondaryAlternateFramingSource;
    double _maxFramingDistance;
    double _framingDistanceAfterManeuver;
    VKNavContext *_navContext;
    CDStruct_2c43369c _locationCoordinate;
    struct PolylineCoordinate _routeCoordinate;
    _Bool _frameAllGroupedManeuvers;
    unsigned char _maxManeuversToFrame;
    _Bool _ignorePointsBehind;
    Coordinate3D_332c2c3b _routeFocusCoordinate;
    unsigned long long _lastTargetStyleIdentifier;
    unsigned long long _previousSearchItemCount;
    double _desiredZoomScale;
    float _animationTime;
    _Bool _isTracking;
    shared_ptr_e963992e _taskContext;
    double _depthNear;
    _Bool _leftHanded;
    _Bool _sentZoomNotification;
    _Bool _enableDynamicFrameRate;
    Coordinate3D_332c2c3b _cornerCoordinates[4];
    struct WindowedSampler<60UL> _pixelSamples;
    struct Sampler _requesteDisplayRateSampler;
    long long _requestedDisplayRate;
    _Bool _isElevatedRoute;
    void *_cameraManager;
    long long _defaultMaxDisplayRate;
    struct vector<NavCameraPixelFrameRate, std::allocator<NavCameraPixelFrameRate>> _pixelChangeFrameRate;
    Matrix_6e1d3589 _lastProjectedPosition;
    double _farClipPlaneFactor;
    struct shared_ptr<gss::StylesheetQuery<gss::ScenePropertyID>> _sceneQuery;
    VKScreenCanvas<VKInteractiveMap> *_screenCanvas;
    VKSceneConfiguration *_sceneConfiguration;
    long long _baseDisplayRate;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) long long baseDisplayRate; // @synthesize baseDisplayRate=_baseDisplayRate;
@property(nonatomic) struct VKEdgeInsets clientFramingInsets; // @synthesize clientFramingInsets=_clientFramingInsets;
@property(nonatomic) __weak VKSceneConfiguration *sceneConfiguration; // @synthesize sceneConfiguration=_sceneConfiguration;
@property(nonatomic) __weak VKScreenCanvas<VKInteractiveMap> *screenCanvas; // @synthesize screenCanvas=_screenCanvas;
- (float)maxPitchForNormalizedZoomLevel:(float)arg1;
- (float)idealPitchForNormalizedZoomLevel:(float)arg1;
- (float)minPitchForNormalizedZoomLevel:(float)arg1;
- (float)minimumNormalizedZoomLevel;
- (float)maximumNormalizedZoomLevel;
- (long long)tileSize;
- (void)_updateCameraLimits;
- (void)pitchTo:(double)arg1 animated:(_Bool)arg2;
- (void)rotateTo:(double)arg1 animated:(_Bool)arg2;
- (_Bool)snapMapIfNecessary:(_Bool)arg1;
- (_Bool)usesVKCamera;
- (float)_currentRoadSignOffset;
- (void)_setNavCameraAnimationComplete:(_Bool)arg1;
- (void)_setNavCameraIsDetached:(_Bool)arg1;
- (unsigned char)cameraHeadingType;
- (void)canvasDidLayout;
- (void)setCamera:(shared_ptr_46708168)arg1;
- (void)setVkCamera:(id)arg1;
- (void)stopAnimations;
- (void)setCameraFrame:(CameraFrame_b765d6d7)arg1;
- (CameraFrame_b765d6d7)cameraFrame;
- (void)_snapHeading;
- (void)_snapPitch;
- (void)setEdgeInsets:(struct VKEdgeInsets)arg1;
- (void)setEdgeInsetsAnimating:(_Bool)arg1;
- (Unit_5669e52e)maxCameraPitch;
- (Unit_5669e52e)minCameraPitch;
- (double)maxZoomHeight;
- (double)minZoomHeight;
- (double)maxZoomScale;
- (double)minZoomScale;
- (void)updateState;
@property(nonatomic) double zoomScale;
- (void)_updateZoomScaleLimts;
- (void)_setNeedsUpdate;
- (void)navContextCameraHeadingOverrideDidChange:(id)arg1;
- (void)navContextStateDidChange:(id)arg1;
- (void)_updateForAnimatedEdgeInsets;
- (void)updateSpringsForFramingCamera;
- (void)_updateRouteSinuosity;
- (void)_addAdditionalRoutePointsToFrameToList:(void *)arg1;
- (Coordinate3D_332c2c3b)_coordinateForGeoLocation:(CDStruct_071ac149)arg1;
- (void)updatePointsToFrame;
- (_Bool)_addStepToFraming:(unsigned long long)arg1 forRoute:(id)arg2;
- (void)updateManeuversToFrame;
- (Coordinate3D_332c2c3b)routeCoordinateAtDistance:(double)arg1;
- (Coordinate3D_332c2c3b)routeLocationAtDistance:(double)arg1 fromManeuver:(unsigned long long)arg2;
- (double)distanceToManeuver:(unsigned long long)arg1;
- (void)updateSpringsForTrackingCamera;
- (Box_3d7e3c2c)calculateViewableScreenRect;
- (Box_3d7e3c2c)calculateViewableScreenRectForEdgeInsets:(struct VKEdgeInsets)arg1;
- (Unit_5669e52e)calculateHeading;
- (void)stop;
- (_Bool)isRotateEnabled;
- (_Bool)isPitchEnabled;
- (void)stopSnappingAnimations;
- (_Bool)_canZoomOut;
- (_Bool)canZoomOutForTileSize:(long long)arg1;
- (_Bool)_canZoomIn;
- (_Bool)canZoomInForTileSize:(long long)arg1;
- (double)topDownMinimumZoomLevel;
- (double)currentZoomLevel;
- (double)maximumZoomLevel;
- (double)minimumZoomLevel;
- (double)_normalizedZoomLevelForDisplayZoomLevel:(double)arg1;
- (_Bool)canEnter3DMode;
- (void)setNavContext:(id)arg1;
- (void)returnToPuck;
- (void)returnToTrackingWithDelay:(double)arg1 resetZoom:(_Bool)arg2;
- (void)animateCameraWithDuration:(float)arg1 fromFrame:(const void *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (CameraFrame_b765d6d7)restingCameraFrame;
- (CameraFrame_b765d6d7)currentCameraFrame;
@property(nonatomic) double pitch;
@property(nonatomic) double heading;
@property(readonly, nonatomic) double altitude;
@property(nonatomic) double distanceFromCenterCoordinate;
@property(nonatomic) CDStruct_c3b9c2ee centerCoordinate;
- (void)_updateStyles;
- (void)_updateSceneStyles:(_Bool)arg1;
- (void)_updateSceneQuery;
- (void)stylesheetDidReload;
- (void)stylesheetDidChange;
- (_Bool)_springsNeedUpdate;
- (void)_updateSprings:(double)arg1;
- (Matrix_2bdd42a3)puckScreenPoint;
- (void)_updateDebugOverlay;
- (void)_updateDebugText;
- (shared_ptr_60abd8cc)_getActiveSceneManager;
- (id)_debugText:(_Bool)arg1 showNavCameraDebugConsoleAttributes:(_Bool)arg2;
- (id)detailedDescription;
- (_Bool)_hasRunningAnimation;
- (double)_calculateMaxPixelChangeAndUpdateCorners;
- (void)updateWithTimestamp:(double)arg1 withContext:(void *)arg2;
- (long long)displayRate;
- (long long)defaultDisplayRate;
- (void)_updateClipPlanes;
- (void)resetSpringsToResting;
- (void)updateCameraState;
- (_Bool)wantsTimerTick;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(const void *)arg2;
- (void)puckAnimatorDidStop:(id)arg1;
- (void)projectCoordinate:(CDStruct_c3b9c2ee)arg1 toPoint:(struct CGPoint *)arg2;
- (void)updateLocation:(const void *)arg1 andCourse:(const void *)arg2;
- (struct optional<double>)puckAnimator:(id)arg1 getElevationWithCoordinate:(const void *)arg2;
- (void)puckAnimator:(id)arg1 updatedPosition:(const void *)arg2 course:(const void *)arg3;
- (void)puckAnimator:(id)arg1 runAnimation:(id)arg2;
- (_Bool)isGesturing;
- (_Bool)tapAtPoint:(struct CGPoint)arg1;
- (void)transferGestureState:(id)arg1;
- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 degrees:(double)arg2;
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;
- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)updateRotationWithFocusPoint:(struct CGPoint)arg1 newValue:(double)arg2;
- (void)startRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopPanningAtPoint:(struct CGPoint)arg1;
- (void)updatePanWithTranslation:(struct CGPoint)arg1;
- (void)startPanningAtPoint:(struct CGPoint)arg1 panAtStartPoint:(_Bool)arg2;
- (void)_updateObserverCouldZoomIn:(_Bool)arg1 couldZoomOut:(_Bool)arg2;
- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopIgnoreStyleChange;
- (void)startIgnoreStyleChangeTimer;
- (void)zoom:(double)arg1 withFocusPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_setDetached:(_Bool)arg1;
- (id)_detachedGestureController;
- (void)startWithPounce:(_Bool)arg1 startLocation:(CDStruct_c3b9c2ee)arg2 startCourse:(double)arg3 pounceCompletionHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithTaskContext:(shared_ptr_e963992e)arg1 device:(void *)arg2 mapDataAccess:(void *)arg3 animationRunner:(struct AnimationRunner *)arg4 runLoopController:(struct RunLoopController *)arg5 cameraDelegate:(id)arg6;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) struct AnimationRunner *animationRunner;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isFullyPitched;
@property(readonly, nonatomic) _Bool isPitched;
@property(readonly, nonatomic) _Bool isRotated;
@property(readonly, nonatomic) void *mapDataAccess;
@property(readonly, nonatomic) GEOMapRegion *mapRegion;
@property(readonly, nonatomic) GEOMapRegion *mapRegionIgnoringEdgeInsets;
@property(readonly, nonatomic) double maxPitch;
@property(readonly, nonatomic) double minPitch;
@property(readonly, nonatomic) struct RunLoopController *runLoopController;
@property(readonly) Class superclass;

@end

