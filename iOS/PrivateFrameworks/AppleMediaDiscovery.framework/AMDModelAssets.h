//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AMDModelAssetsMetadata, NSData, NSDictionary;

@interface AMDModelAssets : NSObject
{
    _Bool _useBinaryInputMap;
    _Bool _useBinaryOutputMap;
    _Bool _minimalMapPresent;
    NSDictionary *_dictionaries;
    NSDictionary *_bitmasks;
    AMDModelAssetsMetadata *_assetsMetadata;
    NSData *_contentToLogicalMap;
    NSData *_logicalToContentMap;
}

+ (void)saveMap:(id)arg1 toDir:(id)arg2 inFile:(id)arg3 keyIsInt64:(_Bool)arg4 error:(id *)arg5;
+ (id)loadMapFromDir:(id)arg1 andFile:(id)arg2 error:(id *)arg3;
- (void).cxx_destruct;
@property(nonatomic) _Bool minimalMapPresent; // @synthesize minimalMapPresent=_minimalMapPresent;
@property(nonatomic) _Bool useBinaryOutputMap; // @synthesize useBinaryOutputMap=_useBinaryOutputMap;
@property(nonatomic) _Bool useBinaryInputMap; // @synthesize useBinaryInputMap=_useBinaryInputMap;
@property(retain, nonatomic) NSData *logicalToContentMap; // @synthesize logicalToContentMap=_logicalToContentMap;
@property(retain, nonatomic) NSData *contentToLogicalMap; // @synthesize contentToLogicalMap=_contentToLogicalMap;
@property(retain, nonatomic) AMDModelAssetsMetadata *assetsMetadata; // @synthesize assetsMetadata=_assetsMetadata;
@property(retain, nonatomic) NSDictionary *bitmasks; // @synthesize bitmasks=_bitmasks;
@property(retain, nonatomic) NSDictionary *dictionaries; // @synthesize dictionaries=_dictionaries;
- (id)getBitmaskByName:(id)arg1 usingFeatureProvider:(id)arg2;
- (id)getDictionaryByName:(id)arg1;
- (_Bool)isValid;
- (id)initAssetsfromDir:(id)arg1 error:(id *)arg2;
- (id)initFromDir:(id)arg1 andMetadata:(id)arg2 useBinaryInputMap:(_Bool)arg3 useBinaryOutputMap:(_Bool)arg4 withModelId:(id)arg5 isInference:(_Bool)arg6 error:(id *)arg7;
- (void)saveLToCMap:(id)arg1 toDir:(id)arg2 error:(id *)arg3;
- (void)saveCToLMap:(id)arg1 toDir:(id)arg2 error:(id *)arg3;
- (void)loadLToCMapFromDir:(id)arg1 error:(id *)arg2;
- (void)loadCToLMapFromDir:(id)arg1 error:(id *)arg2;
- (id)getLogicalToContentMap;
- (id)getContentToLogicalMap;

@end

