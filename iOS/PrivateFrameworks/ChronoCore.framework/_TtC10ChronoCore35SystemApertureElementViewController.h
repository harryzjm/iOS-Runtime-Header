//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIViewController.h>

@class MISSING_TYPE, NSString, UIView;
@protocol SBUISystemApertureAccessoryView, SBUISystemApertureElement;

__attribute__((visibility("hidden")))
@interface _TtC10ChronoCore35SystemApertureElementViewController : UIViewController
{
    MISSING_TYPE *viewModel;
    MISSING_TYPE *hostingController;
    MISSING_TYPE *accessoryLeadingView;
    MISSING_TYPE *accessoryTrailingView;
    MISSING_TYPE *accessoryMinimalView;
    MISSING_TYPE *_cancellables;
    MISSING_TYPE *activeLayoutMode;
    MISSING_TYPE *contentRole;
    MISSING_TYPE *preferredLayoutMode;
    MISSING_TYPE *maximumLayoutMode;
    MISSING_TYPE *preferredHeightForBottomSafeArea;
    MISSING_TYPE *associatedScenePersistenceIdentifier;
    MISSING_TYPE *associatedAppBundleIdentifier;
    MISSING_TYPE *leadingView;
    MISSING_TYPE *trailingView;
    MISSING_TYPE *minimalView;
    MISSING_TYPE *$__lazy_storage_$_button;
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (id)initWithCoder:(id)arg1;
@property(nonatomic, readonly) UIViewController<SBUISystemApertureElement> *systemApertureElementViewController;
@property(nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *minimalView; // @synthesize minimalView;
@property(nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *trailingView; // @synthesize trailingView;
@property(nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *leadingView; // @synthesize leadingView;
@property(nonatomic, copy) NSString *associatedAppBundleIdentifier;
@property(nonatomic, copy) NSString *associatedScenePersistenceIdentifier;
@property(nonatomic) double preferredHeightForBottomSafeArea; // @synthesize preferredHeightForBottomSafeArea;
@property(nonatomic) long long maximumLayoutMode; // @synthesize maximumLayoutMode;
@property(nonatomic) long long preferredLayoutMode; // @synthesize preferredLayoutMode;
@property(nonatomic) long long contentRole; // @synthesize contentRole;
@property(nonatomic) long long activeLayoutMode; // @synthesize activeLayoutMode;

@end

