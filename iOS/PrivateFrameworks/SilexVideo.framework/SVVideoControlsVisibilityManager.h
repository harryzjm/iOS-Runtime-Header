//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SilexVideo/SVVideoControlsVisibilityManager-Protocol.h>
#import <SilexVideo/SVVideoTransitionObserver-Protocol.h>
#import <SilexVideo/SVVideoViewControllerAppearanceObserver-Protocol.h>
#import <SilexVideo/SVVideoViewControllerControlsVisibilityDelegate-Protocol.h>

@class NSMutableSet, NSString, SVTimeBasedAction, SVTimeline;
@protocol SVVideoControlsTimingProviding, SVVideoLoadingStateObserverFactory, SVVideoLoadingStateObserving, SVVideoPlaybackStateObserverFactory, SVVideoPlaybackStateObserving, SVVideoQueueProviding, SVVideoViewControllerProviding;

@interface SVVideoControlsVisibilityManager : NSObject <SVVideoTransitionObserver, SVVideoControlsVisibilityManager, SVVideoViewControllerControlsVisibilityDelegate, SVVideoViewControllerAppearanceObserver>
{
    _Bool _autoHidingEnabled;
    _Bool _shouldIgnoreControlItemHideability;
    SVTimeline *_timeline;
    id <SVVideoQueueProviding> _queueProvider;
    id <SVVideoControlsTimingProviding> _timingProvider;
    id <SVVideoLoadingStateObserverFactory> _loadingStateObserverFactory;
    id <SVVideoPlaybackStateObserverFactory> _playbackStateObserverFactory;
    id <SVVideoViewControllerProviding> _videoViewControllerProvider;
    id <SVVideoLoadingStateObserving> _loadingStateObserver;
    id <SVVideoPlaybackStateObserving> _playbackStateObserver;
    NSMutableSet *_items;
    SVTimeBasedAction *_autoAppearanceAction;
}

@property(nonatomic) _Bool shouldIgnoreControlItemHideability; // @synthesize shouldIgnoreControlItemHideability=_shouldIgnoreControlItemHideability;
@property(nonatomic) _Bool autoHidingEnabled; // @synthesize autoHidingEnabled=_autoHidingEnabled;
@property(retain, nonatomic) SVTimeBasedAction *autoAppearanceAction; // @synthesize autoAppearanceAction=_autoAppearanceAction;
@property(readonly, nonatomic) NSMutableSet *items; // @synthesize items=_items;
@property(retain, nonatomic) id <SVVideoPlaybackStateObserving> playbackStateObserver; // @synthesize playbackStateObserver=_playbackStateObserver;
@property(retain, nonatomic) id <SVVideoLoadingStateObserving> loadingStateObserver; // @synthesize loadingStateObserver=_loadingStateObserver;
@property(readonly, nonatomic) id <SVVideoViewControllerProviding> videoViewControllerProvider; // @synthesize videoViewControllerProvider=_videoViewControllerProvider;
@property(readonly, nonatomic) id <SVVideoPlaybackStateObserverFactory> playbackStateObserverFactory; // @synthesize playbackStateObserverFactory=_playbackStateObserverFactory;
@property(readonly, nonatomic) id <SVVideoLoadingStateObserverFactory> loadingStateObserverFactory; // @synthesize loadingStateObserverFactory=_loadingStateObserverFactory;
@property(readonly, nonatomic) id <SVVideoControlsTimingProviding> timingProvider; // @synthesize timingProvider=_timingProvider;
@property(readonly, nonatomic) id <SVVideoQueueProviding> queueProvider; // @synthesize queueProvider=_queueProvider;
@property(readonly, nonatomic) SVTimeline *timeline; // @synthesize timeline=_timeline;
- (void).cxx_destruct;
- (void)videoViewControllerWillDisappear:(id)arg1;
- (void)videoViewControllerDidAppear:(id)arg1;
- (void)videoViewControllerWillAppear:(id)arg1;
- (void)videoViewController:(id)arg1 willTransitionToVisibilityOfPlaybackControls:(_Bool)arg2 withAnimationCoordinator:(id)arg3;
- (id)itemsPassingTest:(CDUnknownBlockType)arg1;
- (void)scheduleAutoAppearanceWithTimeInterval:(double)arg1;
- (void)updateAutoHidingState;
- (void)willTransitionToVideo:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)removeItem:(id)arg1;
- (void)addItem:(id)arg1;
- (id)initWithTimeline:(id)arg1 queueProvider:(id)arg2 timingProvider:(id)arg3 loadingStateObserverFactory:(id)arg4 playbackStateObserverFactory:(id)arg5 videoViewControllerProvider:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

