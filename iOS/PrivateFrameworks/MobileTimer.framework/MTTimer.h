//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MobileTimer/MTDictionarySerializable-Protocol.h>
#import <MobileTimer/MTScheduleable-Protocol.h>
#import <MobileTimer/MTSerializable-Protocol.h>
#import <MobileTimer/MTTimerIntentSupport-Protocol.h>
#import <MobileTimer/NAEquatable-Protocol.h>
#import <MobileTimer/NSCopying-Protocol.h>
#import <MobileTimer/NSMutableCopying-Protocol.h>
#import <MobileTimer/NSSecureCoding-Protocol.h>

@class MTSound, NSDate, NSDictionary, NSString, NSURL, NSUUID;
@protocol MTTimerTime;

@interface MTTimer : NSObject <MTScheduleable, MTDictionarySerializable, MTTimerIntentSupport, MTSerializable, NAEquatable, NSCopying, NSMutableCopying, NSSecureCoding>
{
    NSUUID *_timerID;
    unsigned long long _state;
    double _duration;
    NSDate *_firedDate;
    NSDate *_lastModifiedDate;
    NSDate *_dismissedDate;
    NSString *_title;
    MTSound *_sound;
    id <MTTimerTime> _fireTime;
    NSDictionary *_siriContext;
    CDUnknownBlockType _currentDateProvider;
}

+ (id)_timerTimeForState:(unsigned long long)arg1 remainingTime:(double)arg2 currentDateProvider:(CDUnknownBlockType)arg3;
+ (_Bool)supportsSecureCoding;
+ (_Bool)stateChangeIsAllowableFromState:(unsigned long long)arg1 toState:(unsigned long long)arg2;
+ (id)descriptionForState:(unsigned long long)arg1;
+ (id)currentTimerFromTimers:(id)arg1;
- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType currentDateProvider; // @synthesize currentDateProvider=_currentDateProvider;
@property(copy, nonatomic) NSDictionary *siriContext; // @synthesize siriContext=_siriContext;
@property(copy, nonatomic) id <MTTimerTime> fireTime; // @synthesize fireTime=_fireTime;
@property(copy, nonatomic) MTSound *sound; // @synthesize sound=_sound;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSDate *dismissedDate; // @synthesize dismissedDate=_dismissedDate;
@property(copy, nonatomic) NSDate *lastModifiedDate; // @synthesize lastModifiedDate=_lastModifiedDate;
@property(copy, nonatomic) NSDate *firedDate; // @synthesize firedDate=_firedDate;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(readonly, nonatomic) NSUUID *timerID; // @synthesize timerID=_timerID;
- (void)serializeWithSerializer:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initFromDeserializer:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_copyStateOntoTimer:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)_isEqualToTimer:(id)arg1 checkLastModified:(_Bool)arg2;
- (_Bool)isEqualToTimer:(id)arg1;
- (_Bool)isEqualIgnoringLastModifiedDate:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)_setDuration:(double)arg1;
@property(readonly, nonatomic) NSString *timerIDString;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=isFiring) _Bool firing;
- (void)setFiring:(_Bool)arg1;
- (id)nextTriggerAfterDate:(id)arg1;
- (id)nextTrigger;
- (long long)compare:(id)arg1;
- (id)timerByUpdatingWithState:(unsigned long long)arg1;
- (id)timerByRestarting;
@property(readonly, nonatomic) _Bool hasDefaultTitle;
@property(readonly, nonatomic) NSString *displayTitle;
@property(readonly, nonatomic) NSDate *fireDate;
@property(readonly, nonatomic) double remainingTime;
@property(readonly, nonatomic) NSURL *timerURL;
- (_Bool)isCurrentTimer;
- (id)_initCommon;
- (id)initWithIdentifier:(id)arg1;
- (id)initWithState:(unsigned long long)arg1 duration:(double)arg2 currentDateProvider:(CDUnknownBlockType)arg3;
- (id)initWithState:(unsigned long long)arg1 duration:(double)arg2;
- (id)upcomingTriggersAfterDate:(id)arg1;
- (_Bool)shouldBeScheduled;
- (id)identifier;
@property(readonly, nonatomic) long long type;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

