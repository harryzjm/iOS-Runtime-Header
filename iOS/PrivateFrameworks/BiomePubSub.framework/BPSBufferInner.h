//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <BiomePubSub/BPSSubscriber-Protocol.h>

@class BPSCompletion, BPSSubscriptionStatus, NSMutableArray, NSString;
@protocol BPSSubscriber;

@interface BPSBufferInner <BPSSubscriber>
{
    struct os_unfair_lock_s _lock;
    _Bool _recursion;
    id <BPSSubscriber> _downstream;
    unsigned long long _size;
    unsigned long long _prefetch;
    unsigned long long _whenFull;
    long long _downstreamDemand;
    BPSSubscriptionStatus *_status;
    BPSCompletion *_terminal;
    NSMutableArray *_values;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableArray *values; // @synthesize values=_values;
@property(retain, nonatomic) BPSCompletion *terminal; // @synthesize terminal=_terminal;
@property(nonatomic) _Bool recursion; // @synthesize recursion=_recursion;
@property(retain, nonatomic) BPSSubscriptionStatus *status; // @synthesize status=_status;
@property(nonatomic) long long downstreamDemand; // @synthesize downstreamDemand=_downstreamDemand;
@property(nonatomic) unsigned long long whenFull; // @synthesize whenFull=_whenFull;
@property(nonatomic) unsigned long long prefetch; // @synthesize prefetch=_prefetch;
@property(nonatomic) unsigned long long size; // @synthesize size=_size;
@property(retain, nonatomic) id <BPSSubscriber> downstream; // @synthesize downstream=_downstream;
- (id)upstreamSubscriptions;
- (id)newBookmark;
- (id)_lockedPopWithDemand:(long long)arg1;
- (long long)_drain;
- (void)receiveCompletion:(id)arg1;
- (long long)receiveInput:(id)arg1;
- (void)receiveSubscription:(id)arg1;
- (void)cancel;
- (void)requestDemand:(long long)arg1;
- (id)initWithDownstream:(id)arg1 size:(unsigned long long)arg2 prefetch:(unsigned long long)arg3 whenFull:(unsigned long long)arg4;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

