//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TelephonyUtilities/NSCopying-Protocol.h>
#import <TelephonyUtilities/NSSecureCoding-Protocol.h>

@class NSSet, NSString, NSUUID, TUContactsDataProvider, TUConversationLink, TUConversationMember, TUConversationProvider, TUConversationReport, TUHandle;

@interface TUConversation : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _hasReceivedLetMeInRequest;
    _Bool _audioEnabled;
    _Bool _videoEnabled;
    _Bool _screenEnabled;
    _Bool _locallyCreated;
    _Bool _hasJoined;
    _Bool _isAnyOtherAccountDeviceActive;
    _Bool _video;
    _Bool _pendingConversation;
    _Bool _ignoreLMIRequests;
    _Bool _oneToOneModeEnabled;
    _Bool _backedByGroupSession;
    _Bool _fromStorage;
    TUContactsDataProvider *_contactsDataProvider;
    NSUUID *_UUID;
    NSUUID *_groupUUID;
    TUConversationLink *_link;
    long long _state;
    long long _letMeInRequestState;
    NSSet *_participantHandles;
    NSSet *_remoteMembers;
    NSSet *_pendingMembers;
    NSSet *_kickedMembers;
    NSSet *_rejectedMembers;
    NSSet *_lightweightMembers;
    NSSet *_otherInvitedHandles;
    NSSet *_activeRemoteParticipants;
    NSSet *_activeLightweightParticipants;
    TUConversationReport *_report;
    NSSet *_activitySessions;
    TUConversationProvider *_provider;
    long long _avcSessionToken;
    NSString *_avcSessionIdentifier;
    TUConversationMember *_localMember;
    unsigned long long _localParticipantIdentifier;
    NSUUID *_messagesGroupUUID;
    TUHandle *_initiator;
    NSString *_messagesGroupName;
    long long _maxVideoDecodesAllowed;
    NSObject *_reportingHierarchyToken;
    NSObject *_reportingHierarchySubToken;
    NSSet *_virtualParticipants;
    NSSet *_invitationPreferences;
    NSUUID *_selectiveSharingSessionUUID;
}

+ (_Bool)supportsSecureCoding;
+ (id)numberFormatter;
+ (id)emptyConversationWithGroupUUID:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSUUID *selectiveSharingSessionUUID; // @synthesize selectiveSharingSessionUUID=_selectiveSharingSessionUUID;
@property(nonatomic, getter=isFromStorage) _Bool fromStorage; // @synthesize fromStorage=_fromStorage;
@property(copy, nonatomic) NSSet *invitationPreferences; // @synthesize invitationPreferences=_invitationPreferences;
@property(copy, nonatomic) NSSet *virtualParticipants; // @synthesize virtualParticipants=_virtualParticipants;
@property(nonatomic, getter=isBackedByGroupSession) _Bool backedByGroupSession; // @synthesize backedByGroupSession=_backedByGroupSession;
@property(nonatomic, getter=isOneToOneModeEnabled) _Bool oneToOneModeEnabled; // @synthesize oneToOneModeEnabled=_oneToOneModeEnabled;
@property(retain, nonatomic) NSObject *reportingHierarchySubToken; // @synthesize reportingHierarchySubToken=_reportingHierarchySubToken;
@property(retain, nonatomic) NSObject *reportingHierarchyToken; // @synthesize reportingHierarchyToken=_reportingHierarchyToken;
@property(nonatomic) long long maxVideoDecodesAllowed; // @synthesize maxVideoDecodesAllowed=_maxVideoDecodesAllowed;
@property(copy, nonatomic) NSString *messagesGroupName; // @synthesize messagesGroupName=_messagesGroupName;
@property(retain, nonatomic) TUHandle *initiator; // @synthesize initiator=_initiator;
@property(retain, nonatomic) NSUUID *messagesGroupUUID; // @synthesize messagesGroupUUID=_messagesGroupUUID;
@property(nonatomic) _Bool ignoreLMIRequests; // @synthesize ignoreLMIRequests=_ignoreLMIRequests;
@property(nonatomic) unsigned long long localParticipantIdentifier; // @synthesize localParticipantIdentifier=_localParticipantIdentifier;
@property(retain, nonatomic) TUConversationMember *localMember; // @synthesize localMember=_localMember;
@property(nonatomic, getter=isPendingConversation) _Bool pendingConversation; // @synthesize pendingConversation=_pendingConversation;
@property(nonatomic, getter=isVideo) _Bool video; // @synthesize video=_video;
@property(nonatomic) _Bool isAnyOtherAccountDeviceActive; // @synthesize isAnyOtherAccountDeviceActive=_isAnyOtherAccountDeviceActive;
@property(nonatomic, getter=hasJoined) _Bool hasJoined; // @synthesize hasJoined=_hasJoined;
@property(copy, nonatomic) NSString *avcSessionIdentifier; // @synthesize avcSessionIdentifier=_avcSessionIdentifier;
@property(nonatomic) long long avcSessionToken; // @synthesize avcSessionToken=_avcSessionToken;
@property(readonly, nonatomic) TUConversationProvider *provider; // @synthesize provider=_provider;
@property(copy, nonatomic) NSSet *activitySessions; // @synthesize activitySessions=_activitySessions;
@property(copy, nonatomic) TUConversationReport *report; // @synthesize report=_report;
@property(copy, nonatomic) NSSet *activeLightweightParticipants; // @synthesize activeLightweightParticipants=_activeLightweightParticipants;
@property(copy, nonatomic) NSSet *activeRemoteParticipants; // @synthesize activeRemoteParticipants=_activeRemoteParticipants;
@property(copy, nonatomic) NSSet *otherInvitedHandles; // @synthesize otherInvitedHandles=_otherInvitedHandles;
@property(copy, nonatomic) NSSet *lightweightMembers; // @synthesize lightweightMembers=_lightweightMembers;
@property(copy, nonatomic) NSSet *rejectedMembers; // @synthesize rejectedMembers=_rejectedMembers;
@property(copy, nonatomic) NSSet *kickedMembers; // @synthesize kickedMembers=_kickedMembers;
@property(copy, nonatomic) NSSet *pendingMembers; // @synthesize pendingMembers=_pendingMembers;
@property(copy, nonatomic) NSSet *remoteMembers; // @synthesize remoteMembers=_remoteMembers;
@property(copy, nonatomic) NSSet *participantHandles; // @synthesize participantHandles=_participantHandles;
@property(nonatomic, getter=isLocallyCreated) _Bool locallyCreated; // @synthesize locallyCreated=_locallyCreated;
@property(nonatomic, getter=isScreenEnabled) _Bool screenEnabled; // @synthesize screenEnabled=_screenEnabled;
@property(nonatomic, getter=isVideoEnabled) _Bool videoEnabled; // @synthesize videoEnabled=_videoEnabled;
@property(nonatomic, getter=isAudioEnabled) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(nonatomic) long long letMeInRequestState; // @synthesize letMeInRequestState=_letMeInRequestState;
@property(nonatomic) _Bool hasReceivedLetMeInRequest; // @synthesize hasReceivedLetMeInRequest=_hasReceivedLetMeInRequest;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) TUConversationLink *link; // @synthesize link=_link;
@property(retain, nonatomic) NSUUID *groupUUID; // @synthesize groupUUID=_groupUUID;
@property(retain, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
- (_Bool)isEqualToConversation:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)contactNamesByHandleWithContactsDataSource:(id)arg1;
- (id)handles;
- (id)bundleIdentifier;
- (_Bool)shouldShowInvitationRingingUIForHandle:(id)arg1;
- (_Bool)shouldShowInvitationUserNotificationForHandle:(id)arg1;
- (_Bool)shouldShowInvitationOfStyles:(long long)arg1 forHandle:(id)arg2 defaultValue:(_Bool)arg3;
@property(readonly, nonatomic) TUContactsDataProvider *contactsDataProvider; // @synthesize contactsDataProvider=_contactsDataProvider;
- (_Bool)isRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;
@property(readonly, nonatomic) unsigned long long avMode;
- (id)messagesGroupPhotoData;
- (id)initiatorLocalizedName;
- (id)displayName;
- (id)initWithConversation:(id)arg1;
- (id)initWithUUID:(id)arg1 groupUUID:(id)arg2 provider:(id)arg3;
- (id)initWithUUID:(id)arg1 groupUUID:(id)arg2;

@end

