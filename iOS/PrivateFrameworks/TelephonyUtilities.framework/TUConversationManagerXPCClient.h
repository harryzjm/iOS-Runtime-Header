//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TelephonyUtilities/TUConversationManagerDataSource-Protocol.h>
#import <TelephonyUtilities/TUConversationManagerXPCClient-Protocol.h>

@class NSDictionary, NSSet, NSString, NSXPCConnection;
@protocol OS_dispatch_queue, TUConversationManagerDataSourceDelegate, TUConversationMediaControllerDataSourceDelegate;

@interface TUConversationManagerXPCClient : NSObject <TUConversationManagerXPCClient, TUConversationManagerDataSource>
{
    _Bool _autoSharePlayEnabled;
    _Bool _hasRequestedInitialState;
    _Bool _hasInitialState;
    _Bool _shouldConnectToHost;
    struct os_unfair_lock_s _accessorLock;
    int _shouldConnectToken;
    id <TUConversationManagerDataSourceDelegate> _delegate;
    id <TUConversationMediaControllerDataSourceDelegate> _mediaDelegate;
    NSXPCConnection *_xpcConnection;
    NSObject<OS_dispatch_queue> *_queue;
    NSDictionary *_conversationsByGroupUUID;
    NSSet *_activitySuggestions;
    NSDictionary *_activityAuthorizedBundleIdentifiers;
}

+ (id)conversationManagerServerXPCInterface;
+ (id)conversationManagerClientXPCInterface;
+ (id)conversationManagerAllowedClasses;
+ (void)setSynchronousServer:(id)arg1;
+ (id)synchronousServer;
+ (void)setAsynchronousServer:(id)arg1;
+ (id)asynchronousServer;
- (void).cxx_destruct;
@property(copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifiers; // @synthesize activityAuthorizedBundleIdentifiers=_activityAuthorizedBundleIdentifiers;
@property(copy, nonatomic) NSSet *activitySuggestions; // @synthesize activitySuggestions=_activitySuggestions;
@property(copy, nonatomic) NSDictionary *conversationsByGroupUUID; // @synthesize conversationsByGroupUUID=_conversationsByGroupUUID;
@property(nonatomic) _Bool shouldConnectToHost; // @synthesize shouldConnectToHost=_shouldConnectToHost;
@property(nonatomic) int shouldConnectToken; // @synthesize shouldConnectToken=_shouldConnectToken;
@property(nonatomic) _Bool hasInitialState; // @synthesize hasInitialState=_hasInitialState;
@property(nonatomic) _Bool hasRequestedInitialState; // @synthesize hasRequestedInitialState=_hasRequestedInitialState;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) struct os_unfair_lock_s accessorLock; // @synthesize accessorLock=_accessorLock;
@property(nonatomic) __weak id <TUConversationMediaControllerDataSourceDelegate> mediaDelegate; // @synthesize mediaDelegate=_mediaDelegate;
@property(nonatomic) __weak id <TUConversationManagerDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
- (oneway void)updateActivityAuthorizedBundleIdentifierState:(id)arg1;
- (oneway void)conversation:(id)arg1 appLaunchState:(unsigned long long)arg2 forActivitySession:(id)arg3;
- (oneway void)conversation:(id)arg1 buzzedMember:(id)arg2;
- (oneway void)conversation:(id)arg1 addedMembersLocally:(id)arg2;
- (oneway void)getMessagesGroupDetailsForMessagesGroupUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (oneway void)conversation:(id)arg1 remoteParticipantWithIdentifier:(unsigned long long)arg2 updatedVideoEnabled:(_Bool)arg3;
- (oneway void)conversation:(id)arg1 remoteParticipantWithIdentifier:(unsigned long long)arg2 updatedAudioEnabled:(_Bool)arg3;
- (oneway void)conversation:(id)arg1 receivedActivitySessionEvent:(id)arg2;
- (oneway void)conversation:(id)arg1 didChangeStateForActivitySession:(id)arg2;
- (oneway void)conversation:(id)arg1 participant:(id)arg2 addedNotice:(id)arg3;
- (oneway void)conversation:(id)arg1 requestedScreenShareForParticipant:(id)arg2;
- (oneway void)mediaPrioritiesChangedForConversation:(id)arg1;
- (oneway void)remoteScreenShareEndedWithReason:(id)arg1;
- (oneway void)remoteScreenShareAttributesChanged:(id)arg1 isLocallySharing:(_Bool)arg2;
- (oneway void)receivedTrackedPendingMember:(id)arg1 forConversationLink:(id)arg2;
- (oneway void)updateActivatedConversationLinks:(id)arg1;
- (oneway void)conversationUpdatedMessagesGroupPhoto:(id)arg1;
- (oneway void)updateIncomingPendingConversationsByGroupUUID:(id)arg1;
- (oneway void)updateConversationsByGroupUUID:(id)arg1;
- (oneway void)updateActivitySuggestions:(id)arg1;
- (id)synchronousServerWithErrorHandler:(CDUnknownBlockType)arg1;
- (id)asynchronousServerWithErrorHandler:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
- (void)handleServerDisconnect;
- (void)_invokeCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_requestInitialStateWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_requestInitialStateIfNecessary;
- (void)getMessagesGroupDetailsForConversationUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setSupportsMessagesGroupProviding:(_Bool)arg1;
- (void)updateConversationWithUUID:(id)arg1 participantPresentationContexts:(id)arg2;
- (void)invalidate;
- (void)removeConversationNoticeWithUUID:(id)arg1;
- (void)activateConversationNoticeWithActionURL:(id)arg1 bundleIdentifier:(id)arg2;
- (void)fetchUpcomingNoticeWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setIgnoreLetMeInRequests:(_Bool)arg1 forConversation:(id)arg2;
- (void)rejectPendingMember:(id)arg1 forConversation:(id)arg2;
- (void)approvePendingMember:(id)arg1 forConversation:(id)arg2;
- (void)setLinkName:(id)arg1 forConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)activateLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)getInactiveLinkWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)checkLinkValidity:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)renewLink:(id)arg1 expirationDate:(id)arg2 reason:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)invalidateLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)addInvitedMemberHandles:(id)arg1 toConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)generateLinkWithInvitedMemberHandles:(id)arg1 linkLifetimeScope:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)generateLinkForConversation:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)getActiveLinksWithCreatedOnly:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)refreshActiveConversations;
- (void)registerWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setVideoEnabled:(_Bool)arg1 forRemoteParticipantWithIdentifier:(unsigned long long)arg2 conversation:(id)arg3;
- (void)setAudioEnabled:(_Bool)arg1 forRemoteParticipantWithIdentifier:(unsigned long long)arg2 conversation:(id)arg3;
- (void)setDownlinkMuted:(_Bool)arg1 forRemoteParticipantsInConversation:(id)arg2;
- (void)kickMember:(id)arg1 conversation:(id)arg2;
- (void)requestScreenShareFromMember:(id)arg1 conversation:(id)arg2;
- (void)buzzMember:(id)arg1 conversation:(id)arg2;
- (void)launchApplicationForActivitySessionUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(nonatomic) _Bool autoSharePlayEnabled; // @synthesize autoSharePlayEnabled=_autoSharePlayEnabled;
- (void)setActivityAuthorization:(_Bool)arg1 forBundleIdentifier:(id)arg2;
- (void)removeActivitySuggestion:(id)arg1;
- (void)addActivitySuggestion:(id)arg1;
- (void)leaveActivitySession:(id)arg1 onConversation:(id)arg2;
- (void)createActivitySession:(id)arg1 onConversation:(id)arg2;
- (void)conversationUpdateMessagesGroupPhoto:(id)arg1;
- (void)updateMessagesGroupName:(id)arg1 onConversation:(id)arg2;
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 toConversation:(id)arg3;
@property(readonly, copy, nonatomic) NSSet *activatedConversationLinks;
@property(readonly, copy, nonatomic) NSDictionary *pseudonymsByCallUUID;
@property(readonly, copy, nonatomic) NSDictionary *incomingPendingConversationsByGroupUUID;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

