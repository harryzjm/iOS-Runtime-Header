//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <ContentKit/NSCopying-Protocol.h>
#import <ContentKit/NSSecureCoding-Protocol.h>

@class NSBundle, NSData, NSImage, NSString, NSURL, UIImage, WFImageSymbolConfiguration;

@interface WFImage : NSObject <NSCopying, NSSecureCoding>
{
    id _internalCGImage;
    id _internalImageSource;
    UIImage *_platformImage;
    _Bool _allowsAnimated;
    unsigned int _orientation;
    struct CGImage *_CGImage;
    double _scale;
    unsigned long long _renderingMode;
    NSImage *_NSImage;
    long long _representationType;
    NSURL *_URL;
    NSData *_data;
    NSString *_name;
    NSBundle *_bundle;
    NSString *_symbolName;
    WFImageSymbolConfiguration *_symbolConfiguration;
}

+ (_Bool)supportsSecureCoding;
+ (id)glyphNamed:(id)arg1 pointSize:(double)arg2 symbolSize:(unsigned long long)arg3 scaleFactor:(double)arg4 rightToLeft:(_Bool)arg5 appearanceName:(id)arg6 inCatalogs:(id)arg7;
+ (id)glyphNamed:(id)arg1 pointSize:(double)arg2 symbolSize:(unsigned long long)arg3 scaleFactor:(double)arg4 rightToLeft:(_Bool)arg5 appearanceName:(id)arg6;
+ (id)glyphNamed:(id)arg1 pointSize:(double)arg2 inCatalogs:(id)arg3;
+ (id)glyphNamed:(id)arg1 pointSize:(double)arg2 symbolSize:(unsigned long long)arg3;
+ (id)glyphNamed:(id)arg1 pointSize:(double)arg2;
+ (id)systemImageNamed:(id)arg1 configuration:(id)arg2 renderingMode:(unsigned long long)arg3;
+ (id)imageNamed:(id)arg1 inBundle:(id)arg2 scale:(double)arg3;
+ (id)imageNamed:(id)arg1 inBundle:(id)arg2;
+ (_Bool)imageSizeIndicatesScreenshot:(struct CGSize)arg1;
+ (id)applicationIconImageForCalendarDate:(id)arg1 format:(unsigned long long)arg2;
+ (id)documentIconImageForFileType:(id)arg1;
+ (id)applicationIconImageForBundleIdentifier:(id)arg1 format:(unsigned long long)arg2;
+ (id)applicationIconImageForBundleIdentifier:(id)arg1;
+ (id)imageWithPlatformImage:(id)arg1;
+ (id)imageWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(unsigned int)arg3;
+ (id)imageWithData:(id)arg1 scale:(double)arg2 allowAnimated:(_Bool)arg3;
+ (id)imageWithContentsOfURL:(id)arg1;
+ (id)imageWithCGImage:(struct CGImage *)arg1;
+ (id)imageWithDeviceScreenScaleImageData:(id)arg1;
+ (id)imageWithData:(id)arg1;
+ (id)imageWithData:(id)arg1 scale:(double)arg2;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool allowsAnimated; // @synthesize allowsAnimated=_allowsAnimated;
@property(readonly, nonatomic) WFImageSymbolConfiguration *symbolConfiguration; // @synthesize symbolConfiguration=_symbolConfiguration;
@property(readonly, copy, nonatomic) NSString *symbolName; // @synthesize symbolName=_symbolName;
@property(readonly, copy, nonatomic) NSBundle *bundle; // @synthesize bundle=_bundle;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, copy, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, nonatomic) long long representationType; // @synthesize representationType=_representationType;
@property(readonly, nonatomic) NSImage *NSImage; // @synthesize NSImage=_NSImage;
@property(readonly, nonatomic) unsigned long long renderingMode; // @synthesize renderingMode=_renderingMode;
@property(readonly, nonatomic) double scale; // @synthesize scale=_scale;
- (struct CGAffineTransform)contentsTransformForDrawingWithSize:(struct CGSize)arg1 scale:(double)arg2;
@property(readonly, nonatomic) struct CGImage *internalCGImage;
@property(readonly, nonatomic) struct CGImageSource *internalImageSource;
- (_Bool)hasValidImage;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) UIImage *UIImage;
@property(readonly, nonatomic) UIImage *platformImage;
- (id)imageWithRenderingMode:(unsigned long long)arg1;
- (id)imageWithTintColor:(id)arg1;
- (void)drawInContext:(id)arg1 inRect:(struct CGRect)arg2 blendMode:(int)arg3 alpha:(double)arg4;
@property(readonly, nonatomic) unsigned int orientation; // @synthesize orientation=_orientation;
@property(readonly, nonatomic) struct CGImage *CGImage; // @synthesize CGImage=_CGImage;
@property(readonly, nonatomic) struct CGSize sizeInPoints;
@property(readonly, nonatomic) struct CGSize sizeInPixels;
@property(readonly, nonatomic) struct CGSize CGImageSize;
- (id)initWithPlatformImage:(id)arg1;
- (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 name:(id)arg3 bundle:(id)arg4;
- (id)initWithData:(id)arg1 scale:(double)arg2 allowAnimated:(_Bool)arg3;
- (id)initWithContentsOfURL:(id)arg1;
- (id)init;
- (id)initWithSymbolName:(id)arg1 configuration:(id)arg2 renderingMode:(unsigned long long)arg3;
- (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(unsigned int)arg3 renderingMode:(unsigned long long)arg4;
- (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(unsigned int)arg3;
- (void)dealloc;
- (id)initWithRepresentationType:(long long)arg1;
- (id)resizedImageWithSizeInPoints:(struct CGSize)arg1 scale:(double)arg2;
- (id)resizedImageWithSizeInPoints:(struct CGSize)arg1;
@property(readonly, nonatomic) NSData *PNGRepresentation;
- (struct CGImage *)createNonRotatedCGImageRepresentation;
@property(readonly, nonatomic) _Bool isScreenshot;
- (id)tintedImageWithColor:(id)arg1;
- (id)applicationIconImageWithFormat:(unsigned long long)arg1;
- (void)drawInContext:(id)arg1 inRect:(struct CGRect)arg2;

@end

