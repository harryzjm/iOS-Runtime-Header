//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

#import <CameraUI/CAMAccessibilityHUDItemProvider-Protocol.h>
#import <CameraUI/CAMBarsAccessibilityHUDManagerGestureProvider-Protocol.h>
#import <CameraUI/CAMControlDrawerMenuButtonDelegate-Protocol.h>
#import <CameraUI/UIScrollViewDelegate-Protocol.h>

@class CAMControlDrawerButton, CAMDrawerApertureButton, CAMDrawerAspectRatioButton, CAMDrawerExposureButton, CAMDrawerFilterButton, CAMDrawerFlashButton, CAMDrawerHDRButton, CAMDrawerIntensityButton, CAMDrawerLivePhotoButton, CAMDrawerLowLightButton, CAMDrawerTimerButton, CAMExposureSlider, CAMLowLightSlider, CEKApertureSlider, CEKSlider, CEKWheelScrubberView, NSArray, NSMutableDictionary, NSString, UIScrollView;
@protocol CAMControlDrawerDelegate, CAMControlDrawerExpandableButton, CAMControlDrawerPresentationDelegate;

@interface CAMControlDrawer : UIView <CAMControlDrawerMenuButtonDelegate, UIScrollViewDelegate, CAMAccessibilityHUDItemProvider, CAMBarsAccessibilityHUDManagerGestureProvider>
{
    long long _layoutStyle;
    id <CAMControlDrawerDelegate> _delegate;
    id <CAMControlDrawerPresentationDelegate> _presentationDelegate;
    NSString *_contentSize;
    NSArray *_visibleControlTypes;
    long long _orientation;
    CEKWheelScrubberView *_filterScrubberView;
    CEKApertureSlider *_apertureSlider;
    CEKSlider *_intensitySlider;
    CAMLowLightSlider *_lowLightSlider;
    CAMExposureSlider *_exposureSlider;
    NSMutableDictionary *__controlMap;
    CAMControlDrawerButton<CAMControlDrawerExpandableButton> *__expandedControl;
    UIScrollView *__scrollView;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) UIScrollView *_scrollView; // @synthesize _scrollView=__scrollView;
@property(retain, nonatomic, setter=_setExpandedControl:) CAMControlDrawerButton<CAMControlDrawerExpandableButton> *_expandedControl; // @synthesize _expandedControl=__expandedControl;
@property(readonly, nonatomic) NSMutableDictionary *_controlMap; // @synthesize _controlMap=__controlMap;
@property(readonly, nonatomic) CAMExposureSlider *exposureSlider; // @synthesize exposureSlider=_exposureSlider;
@property(readonly, nonatomic) CAMLowLightSlider *lowLightSlider; // @synthesize lowLightSlider=_lowLightSlider;
@property(readonly, nonatomic) CEKSlider *intensitySlider; // @synthesize intensitySlider=_intensitySlider;
@property(readonly, nonatomic) CEKApertureSlider *apertureSlider; // @synthesize apertureSlider=_apertureSlider;
@property(readonly, nonatomic) CEKWheelScrubberView *filterScrubberView; // @synthesize filterScrubberView=_filterScrubberView;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(retain, nonatomic) NSArray *visibleControlTypes; // @synthesize visibleControlTypes=_visibleControlTypes;
@property(retain, nonatomic) NSString *contentSize; // @synthesize contentSize=_contentSize;
@property(nonatomic) __weak id <CAMControlDrawerPresentationDelegate> presentationDelegate; // @synthesize presentationDelegate=_presentationDelegate;
@property(nonatomic) __weak id <CAMControlDrawerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long layoutStyle; // @synthesize layoutStyle=_layoutStyle;
- (_Bool)shouldAccessibilityGestureBeginForHUDManager:(id)arg1;
- (void)selectedByAccessibilityHUDManager:(id)arg1;
- (id)hudItemForAccessibilityHUDManager:(id)arg1;
- (void)_iterateViewsForHUDManager:(id)arg1 withItemFoundBlock:(CDUnknownBlockType)arg2;
- (id)touchingRecognizersToCancel;
- (void)scrollViewDidScroll:(id)arg1;
- (void)menuButtonDidSelectItem:(id)arg1;
- (void)expandableButton:(id)arg1 willChangeExpanded:(_Bool)arg2;
- (void)_setExpandedControl:(id)arg1 animated:(_Bool)arg2;
- (void)_updateControlsVisibilityAnimated:(_Bool)arg1;
- (void)_updateControlsScaleAnimated:(_Bool)arg1;
- (void)_installControlIfNeededForType:(long long)arg1;
- (void)_loadControlIfNeededForType:(long long)arg1;
- (void)_ensureVisibleControls;
- (void)collapseExpandableButtonsAnimated:(_Bool)arg1;
- (_Bool)isControlExpandedForType:(long long)arg1;
- (void)expandControlForType:(long long)arg1 animated:(_Bool)arg2;
- (void)setOrientation:(long long)arg1 animated:(_Bool)arg2;
- (void)setLowLightSliderVisible:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isLowLightSliderVisible) _Bool lowLightSliderVisible;
- (void)setExposureSliderVisible:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isExposureSliderVisible) _Bool exposureSliderVisible;
- (void)setIntensitySliderVisible:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isIntensitySliderVisible) _Bool intensitySliderVisible;
- (void)setApertureSliderVisible:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isApertureSliderVisible) _Bool apertureSliderVisible;
- (void)setFilterScrubberVisible:(_Bool)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic, getter=isFilterScrubberVisible) _Bool filterScrubberVisible;
- (void)setVisibleControlTypes:(id)arg1 animated:(_Bool)arg2;
- (void)_layoutFilterScrubberView;
- (void)_layoutLowLightSlider;
- (void)_layoutExposureSlider;
- (void)_layoutIntensitySlider;
- (void)_layoutApertureSlider;
- (void)_layoutFullWidthCustomView:(id)arg1 withAlignmentRect:(struct CGRect)arg2 forAssociatedControl:(id)arg3 expanded:(_Bool)arg4;
- (void)_layoutFullWidthCustomView:(id)arg1 forAssociatedControl:(id)arg2 expanded:(_Bool)arg3;
- (void)_layoutCustomControlsAnimated:(_Bool)arg1;
- (void)_updateExpansionInsetsForExpandableButton:(id)arg1;
- (void)_layoutVisibleControlForType:(long long)arg1 visibleControlTypes:(id)arg2;
- (struct CGSize)_scrollingContentSizeForControlCount:(unsigned long long)arg1;
- (double)_controlCenterSpacingForControlCount:(unsigned long long)arg1;
- (double)_viewportLength;
- (unsigned long long)_viewportMaximumControlCount;
- (unsigned long long)_sliderFontStyle;
- (void)_loadExposureSliderIfNeeded;
- (void)_loadLowLightSliderIfNeeded;
- (void)_loadIntensitySliderIfNeeded;
- (void)_loadApertureSliderIfNeeded;
- (void)_loadFilterScrubberIfNeeded;
- (CDStruct_c3b9c2ee)_scrubberGradientEdgeInsets;
- (void)_loadCustomUIIfNeededForControlType:(long long)arg1;
- (void)_handleControlReleased:(id)arg1;
- (void)_handleControlValueChanged:(id)arg1;
@property(readonly, nonatomic) CAMDrawerLowLightButton *lowLightButton;
@property(readonly, nonatomic) CAMDrawerHDRButton *hdrButton;
@property(readonly, nonatomic) CAMDrawerExposureButton *exposureButton;
@property(readonly, nonatomic) CAMDrawerIntensityButton *intensityButton;
@property(readonly, nonatomic) CAMDrawerApertureButton *apertureButton;
@property(readonly, nonatomic) CAMDrawerFilterButton *filterButton;
@property(readonly, nonatomic) CAMDrawerTimerButton *timerButton;
@property(readonly, nonatomic) CAMDrawerAspectRatioButton *aspectRatioButton;
@property(readonly, nonatomic) CAMDrawerLivePhotoButton *livePhotoButton;
@property(readonly, nonatomic) CAMDrawerFlashButton *flashButton;
- (id)buttonForType:(long long)arg1;
- (id)_createControlForType:(long long)arg1;
- (void)layoutSubviews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInitializationWithLayoutStyle:(long long)arg1;
- (id)initWithLayoutStyle:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

