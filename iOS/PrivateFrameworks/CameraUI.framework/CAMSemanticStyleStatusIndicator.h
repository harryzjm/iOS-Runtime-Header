//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CALayer, CAMSemanticStyle, CAReplicatorLayer, CAShapeLayer, UIImageView, UIView;

@interface CAMSemanticStyleStatusIndicator
{
    CAMSemanticStyle *_semanticStyle;
    UIImageView *__stackSymbolView;
    UIView *__platterView;
    CALayer *__warmPlatterLayer;
    CALayer *__neutralPlatterLayer;
    CALayer *__coolPlatterLayer;
    CALayer *__platterMaskLayer;
    CAShapeLayer *__maskStrokeLayer;
    CALayer *__maskBackgroundLayer;
    CALayer *__maskSmallTickLayer;
    CALayer *__maskLargeTickLayer;
    CAReplicatorLayer *__maskTickReplicatorLayer;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) CAReplicatorLayer *_maskTickReplicatorLayer; // @synthesize _maskTickReplicatorLayer=__maskTickReplicatorLayer;
@property(readonly, nonatomic) CALayer *_maskLargeTickLayer; // @synthesize _maskLargeTickLayer=__maskLargeTickLayer;
@property(readonly, nonatomic) CALayer *_maskSmallTickLayer; // @synthesize _maskSmallTickLayer=__maskSmallTickLayer;
@property(readonly, nonatomic) CALayer *_maskBackgroundLayer; // @synthesize _maskBackgroundLayer=__maskBackgroundLayer;
@property(readonly, nonatomic) CAShapeLayer *_maskStrokeLayer; // @synthesize _maskStrokeLayer=__maskStrokeLayer;
@property(readonly, nonatomic) CALayer *_platterMaskLayer; // @synthesize _platterMaskLayer=__platterMaskLayer;
@property(readonly, nonatomic) CALayer *_coolPlatterLayer; // @synthesize _coolPlatterLayer=__coolPlatterLayer;
@property(readonly, nonatomic) CALayer *_neutralPlatterLayer; // @synthesize _neutralPlatterLayer=__neutralPlatterLayer;
@property(readonly, nonatomic) CALayer *_warmPlatterLayer; // @synthesize _warmPlatterLayer=__warmPlatterLayer;
@property(readonly, nonatomic) UIView *_platterView; // @synthesize _platterView=__platterView;
@property(readonly, nonatomic) UIImageView *_stackSymbolView; // @synthesize _stackSymbolView=__stackSymbolView;
@property(retain, nonatomic) CAMSemanticStyle *semanticStyle; // @synthesize semanticStyle=_semanticStyle;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (struct CGRect)_platterFrame;
- (void)_updateStrokePath;
- (void)_updatePlatterStrokeProgress;
- (void)_updateTicks;
- (void)_updateGradientAlphas;
- (void)_updateGradientImages;
- (id)_generatePlatterImageWithRenderer:(id)arg1 colors:(id)arg2 size:(struct CGSize)arg3;
- (long long)_visibleTickCount;
- (void)_updateImageOrientationAnimated:(_Bool)arg1;
- (_Bool)supportsOrientations;
- (id)imageNameForCurrentState;
- (_Bool)shouldUseOutline;
- (id)init;

@end

