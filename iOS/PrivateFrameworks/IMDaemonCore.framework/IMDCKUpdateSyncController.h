//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CKServerChangeToken, IMDRecordZoneManager, NSMutableDictionary, NSObject;
@protocol IMDCKSyncTokenStore, OS_dispatch_queue, OS_xpc_object;

@interface IMDCKUpdateSyncController
{
    _Bool _fetchedChatsDuringLastSync;
    CKServerChangeToken *_latestSyncToken;
    NSObject<OS_dispatch_queue> *_ckQueue;
    IMDRecordZoneManager *_recordZoneManager;
    id <IMDCKSyncTokenStore> _syncTokenStore;
    NSObject<OS_xpc_object> *_activity;
    NSMutableDictionary *_writeMsgIDToRowIDMap;
}

+ (id)fetchOperationFactory:(id)arg1 token:(id)arg2 batchSize:(unsigned long long)arg3 activity:(id)arg4;
+ (id)_fetchUpdatesCKConfiguration:(id)arg1;
+ (id)_zoneChangesOptionsDictionaryUsingToken:(id)arg1 zoneID:(id)arg2 resultsLimit:(unsigned long long)arg3;
+ (long long)stepAfter:(long long)arg1;
+ (id)messageUpdateV1RecordType;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *writeMsgIDToRowIDMap; // @synthesize writeMsgIDToRowIDMap=_writeMsgIDToRowIDMap;
@property(nonatomic) _Bool fetchedChatsDuringLastSync; // @synthesize fetchedChatsDuringLastSync=_fetchedChatsDuringLastSync;
@property NSObject<OS_xpc_object> *activity; // @synthesize activity=_activity;
@property(retain, nonatomic) id <IMDCKSyncTokenStore> syncTokenStore; // @synthesize syncTokenStore=_syncTokenStore;
@property(retain, nonatomic) IMDRecordZoneManager *recordZoneManager; // @synthesize recordZoneManager=_recordZoneManager;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *ckQueue; // @synthesize ckQueue=_ckQueue;
- (void)_scheduleOperation:(id)arg1;
- (id)saveT2UpdatesOperationFactory:(id)arg1 token:(id)arg2 batchSize:(unsigned long long)arg3 recordNameToRowIDMap:(id)arg4 activity:(id)arg5;
- (id)saveT1UpdatesOperationFactory:(id)arg1 token:(id)arg2 batchSize:(unsigned long long)arg3 recordNameToRowIDMap:(id)arg4 activity:(id)arg5;
- (id)_writeUpdatesCKConfiguration:(id)arg1;
- (id)_saveRecordsT2OperationWithMap:(id)arg1;
- (id)_saveRecordsT1OperationWithMap:(id)arg1;
- (id)_fetchRecordsOperation;
- (void)_onWriteT2Complete:(long long)arg1 error:(id)arg2 shouldWriteMore:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_onRecordT2Write:(id)arg1 error:(id)arg2 recordNameToItemMap:(id)arg3;
- (void)_writeT2RecordUpdatesWithType:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_onWriteT1Complete:(long long)arg1 error:(id)arg2 shouldWriteMore:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_onRecordT1Write:(id)arg1 error:(id)arg2 recordNameToRowIDMap:(id)arg3;
- (void)_writeT1RecordUpdatesWithType:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_writeUpdatesWithType:(long long)arg1 updateStep:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_writeRecordsWithType:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)_zoneCreated;
@property(retain, nonatomic) CKServerChangeToken *latestSyncToken; // @synthesize latestSyncToken=_latestSyncToken;
- (id)_changeTokenKey;
- (unsigned long long)_numberOfRecordsToFetchPerBatch;
- (void)_onReadComplete:(long long)arg1 error:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_onRecordZoneFetchComplete:(id)arg1 token:(id)arg2 tokenData:(id)arg3 moreComing:(_Bool)arg4 error:(id)arg5;
- (void)_onChangeTokenUpdated:(id)arg1 token:(id)arg2 data:(id)arg3;
- (void)_onRecordDeleted:(id)arg1 type:(id)arg2;
- (void)_onRecordRead:(id)arg1;
- (void)_readRecordsWithType:(long long)arg1 attemptCount:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)syncWithType:(long long)arg1 withActivity:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)deleteUpdateSyncToken;
- (void)clearLocalSyncState:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithSyncTokenStore:(id)arg1;

@end

