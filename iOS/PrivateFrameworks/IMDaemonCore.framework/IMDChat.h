//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <IMDaemonCore/INSpeakable-Protocol.h>

@class IMDAccount, IMDService, IMDServiceSession, IMMessageItem, NSArray, NSDictionary, NSMutableDictionary, NSRecursiveLock, NSString;

@interface IMDChat : NSObject <INSpeakable>
{
    NSRecursiveLock *_lock;
    NSString *_accountID;
    NSString *_serviceName;
    NSDictionary *_properties;
    NSString *_chatIdentifier;
    NSString *_guid;
    NSString *_groupID;
    NSString *_engramID;
    NSString *_roomName;
    NSString *_displayName;
    NSString *_lastAddressedLocalHandle;
    NSString *_lastAddressedSIMID;
    NSArray *_participants;
    IMMessageItem *_lastMessage;
    NSMutableDictionary *_chatInfo;
    long long _state;
    unsigned long long _unreadCount;
    long long _rowID;
    long long _cloudKitSyncState;
    NSString *_originalGroupID;
    NSString *_serverChangeToken;
    long long _lastReadMessageTimeStamp;
    long long _lastMessageTimeStampOnLoad;
    unsigned char _style;
    _Bool _createEngramGroupOnMessageSend;
    _Bool _pendingENGroupParticipantUpdate;
    _Bool _isArchived;
    long long _isFiltered;
    _Bool _isBlackholed;
    _Bool _hasHadSuccessfulQuery;
    _Bool _wasReportedAsJunk;
    _Bool _meCardUpdated;
    NSString *_cloudKitRecordID;
    NSString *_srCloudKitRecordID;
    NSString *_lastSeenMessageGuid;
    NSString *_srServerChangeToken;
    long long _srCloudKitSyncState;
    NSDictionary *_nicknamesForParticipants;
    unsigned long long _numMessagesSent;
}

+ (id)_recordType;
@property _Bool meCardUpdated; // @synthesize meCardUpdated=_meCardUpdated;
@property unsigned long long numMessagesSent; // @synthesize numMessagesSent=_numMessagesSent;
@property _Bool wasReportedAsJunk; // @synthesize wasReportedAsJunk=_wasReportedAsJunk;
@property(readonly, nonatomic) NSDictionary *nicknamesForParticipants; // @synthesize nicknamesForParticipants=_nicknamesForParticipants;
@property _Bool pendingENGroupParticipantUpdate; // @synthesize pendingENGroupParticipantUpdate=_pendingENGroupParticipantUpdate;
@property _Bool createEngramGroupOnMessageSend; // @synthesize createEngramGroupOnMessageSend=_createEngramGroupOnMessageSend;
@property long long srCloudKitSyncState; // @synthesize srCloudKitSyncState=_srCloudKitSyncState;
@property(copy) NSString *srServerChangeToken; // @synthesize srServerChangeToken=_srServerChangeToken;
@property(readonly, copy) NSString *lastSeenMessageGuid; // @synthesize lastSeenMessageGuid=_lastSeenMessageGuid;
@property(copy) NSString *srCloudKitRecordID; // @synthesize srCloudKitRecordID=_srCloudKitRecordID;
@property(copy) NSString *cloudKitRecordID; // @synthesize cloudKitRecordID=_cloudKitRecordID;
- (void)meCardHasUpdated;
- (void)updateNicknamesForParticipants:(id)arg1;
- (void)tearDownToneNotificationSessionIfNeeded;
- (_Bool)isBusinessChat;
- (id)cloudKitDebugDescription;
- (id)_ckUniqueID;
- (id)cloudKitChatID;
@property(readonly, nonatomic) NSString *personCentricID;
- (id)_personIdentity;
- (void)_persistMergedIDMergedChatsIfNeeded:(id)arg1;
- (id)_chatRegistry;
- (void)updateGroupPhotoUploadFailureCount:(id)arg1;
- (id)groupPhotoUploadFailureCount;
- (void)updateGroupPhotoGuid:(id)arg1;
- (id)groupPhotoGuid;
- (void)updateHasHadSuccessfulQuery:(_Bool)arg1;
- (void)updateLastSeenMessageGuidIfNeeded:(id)arg1;
- (id)lastSeenMessageGUID;
- (int)messageHandshakeState;
- (int)smsHandshakeState;
- (_Bool)receivedBlackholeError;
- (id)lastSentMessageDate;
- (int)getNumberOfTimesRespondedToThread;
- (_Bool)isSMSSpam;
- (_Bool)isiMessageSpam;
- (void)updateMessageHandshakeState:(int)arg1;
- (void)updateSMSHandshakeState:(int)arg1;
- (void)updateReceivedBlackholeError:(_Bool)arg1;
- (void)setLastSentMessageDate:(id)arg1;
- (void)updateSMSSpamExtensionNameChatProperty:(id)arg1;
- (void)updateShouldForceToSMS:(_Bool)arg1;
- (void)updateSMSCategory:(long long)arg1;
- (void)updateIsiMessageSpam:(_Bool)arg1;
- (void)updateNumberOfTimesRespondedToThread;
- (void)updateIsBlackholed:(_Bool)arg1;
- (void)updateIsFiltered:(long long)arg1;
- (void)updateDisplayName:(id)arg1 sender:(id)arg2;
- (void)updateDisplayName:(id)arg1;
- (void)updateLastAddressedSIMID:(id)arg1;
- (void)updateLastAddressedHandle:(id)arg1 forceUpdate:(_Bool)arg2;
- (void)updateLastAddressedHandle:(id)arg1;
- (void)resetCKSyncState;
- (void)updateSrCloudKitRecordID:(id)arg1;
- (void)updateCloudKitRecordID:(id)arg1;
- (void)updateOriginalGroupID:(id)arg1;
- (void)updateSRCloudKitSyncState:(long long)arg1;
- (void)updateCloudKitSyncState:(long long)arg1;
- (void)updateSRServerChangeToken:(id)arg1;
- (void)updateServerChangeToken:(id)arg1;
- (void)updateLastReadMessageTimeStampIfNeeded:(long long)arg1;
- (void)updateEngroupCreationDate:(long long)arg1;
- (void)updateEngramID:(id)arg1;
- (void)updateGroupID:(id)arg1;
@property(readonly, nonatomic) _Bool isUnnamedChat;
- (id)generateNewGroupID;
- (void)storeAndBroadcastChatChanges;
- (void)updateProperties:(id)arg1;
- (void)_updateLastMessage:(id)arg1;
@property(readonly, retain) NSDictionary *dictionaryRepresentation;
- (id)copyDictionaryRepresentation:(_Bool)arg1;
- (id)dictionaryRepresentationIncludingLastMessage;
@property(readonly, retain) NSDictionary *chatProperties;
@property(readonly, copy) NSString *description;
- (long long)compareBySequenceNumberAndDateDescending:(id)arg1;
- (_Bool)isNewerThan:(id)arg1;
- (_Bool)isOlderThan:(id)arg1;
- (id)_sortedParticipantIDHashForParticipants:(id)arg1 usesPersonCentricID:(_Bool)arg2;
- (id)_sortedParticipantIDHashForParticipants:(id)arg1;
@property(readonly, nonatomic) NSString *pinningIdentifier;
@property(readonly, nonatomic) NSString *deviceIndependentID;
@property(readonly, nonatomic) NSString *persistentID;
- (_Bool)isSMS;
- (_Bool)isGroupChat;
- (long long)engroupCreationDate;
@property(readonly, retain) IMDServiceSession *serviceSession;
@property(readonly, retain) IMDService *service;
@property(readonly, retain) IMDAccount *account;
@property(copy) NSString *accountID;
- (void)resetParticipants:(id)arg1;
- (void)removeParticipant:(id)arg1;
- (void)removeParticipants:(id)arg1;
- (void)addParticipant:(id)arg1;
- (void)addParticipants:(id)arg1;
- (void)_updateCachedParticipants;
@property long long lastMessageTimeStampOnLoad;
@property _Bool hasHadSuccessfulQuery;
@property long long isFiltered;
@property(setter=_setRowID:) long long rowID;
@property _Bool isBlackholed;
@property(readonly) _Bool isArchived;
@property(setter=_setUnreadCount:) unsigned long long unreadCount;
@property long long state;
@property unsigned char style;
@property(retain) IMMessageItem *lastMessage;
@property(retain) NSDictionary *properties;
@property(copy) NSString *lastAddressedSIMID;
@property(copy) NSString *lastAddressedLocalHandle;
@property(nonatomic) long long lastReadMessageTimeStamp;
- (void)setOriginalGroupID:(id)arg1;
@property(readonly, copy) NSString *originalGroupID;
@property long long cloudKitSyncState;
@property(copy, nonatomic) NSString *serverChangeToken;
@property(copy, setter=setEngramID:) NSString *engramID;
@property(copy, setter=setGroupID:) NSString *groupID;
@property(copy) NSString *displayName;
@property(copy) NSString *roomName;
@property(copy) NSArray *participants;
@property(copy) NSString *serviceName;
@property(copy) NSString *chatIdentifier;
@property(copy) NSString *guid;
- (void)dealloc;
- (id)initWithAccountID:(id)arg1 service:(id)arg2 guid:(id)arg3 groupID:(id)arg4 chatIdentifier:(id)arg5 participants:(id)arg6 roomName:(id)arg7 displayName:(id)arg8 lastAddressedLocalHandle:(id)arg9 lastAddressedSIMID:(id)arg10 properties:(id)arg11 state:(long long)arg12 style:(unsigned char)arg13 isFiltered:(long long)arg14 hasHadSuccessfulQuery:(_Bool)arg15 engramID:(id)arg16 serverChangeToken:(id)arg17 cloudKitSyncState:(long long)arg18 originalGroupID:(id)arg19 lastReadMessageTimeStamp:(long long)arg20 lastMessageTimeStampOnLoad:(long long)arg21 srServerChangeToken:(id)arg22 srCloudKitSyncState:(long long)arg23 cloudKitRecordID:(id)arg24 srCloudKitRecordID:(id)arg25 isBlackholed:(_Bool)arg26;
@property(readonly, nonatomic) NSArray *alternativeSpeakableMatches;
@property(readonly, nonatomic) NSString *vocabularyIdentifier;
@property(readonly, nonatomic) NSString *pronunciationHint;
@property(readonly, nonatomic) NSString *spokenPhrase;
- (unsigned long long)powerLogConversationType;
- (_Bool)applyChangesUsingCKRecord:(id)arg1 isUsingStingRay:(_Bool)arg2;
- (id)initWithCKRecord:(id)arg1 isUsingStingRay:(_Bool)arg2;
- (id)copyCKRecordRepresentationWithZoneID:(id)arg1 salt:(id)arg2 isUsingStingRay:(_Bool)arg3;
- (id)recordName;
- (id)_copyCKRecordFromExistingCKMetadataIsUsingStringRay:(_Bool)arg1 zoneID:(id)arg2 salt:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSString *identifier;
@property(readonly) Class superclass;

@end

