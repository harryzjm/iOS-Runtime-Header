//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSString;

@interface CSAsset : NSObject
{
    NSDictionary *_decodedInfo;
    NSString *_path;
    NSString *_resourcePath;
    NSString *_configVersion;
    unsigned long long _assetProvider;
}

+ (id)defaultFallBackAssetForAdBlocker;
+ (id)defaultFallBackAssetForHearst;
+ (id)defaultFallBackAssetForSmartSiriVolume;
+ (id)fallBackAssetResourcePath;
+ (id)assetForAssetType:(unsigned long long)arg1 resourcePath:(id)arg2 configVersion:(id)arg3 assetProvider:(unsigned long long)arg4;
+ (id)getConfigFileNameForAssetType:(unsigned long long)arg1;
+ (id)assetForAssetType:(unsigned long long)arg1 resourcePath:(id)arg2 configVersion:(id)arg3;
+ (id)hybridEndpointerAssetFilename;
+ (unsigned long long)getSSVDeviceType;
+ (unsigned int)SSVDefaultDistanceChannelCount;
+ (unsigned int)SSVDefaultLKFSChannelCount;
+ (unsigned int)SSVDefaultNoiseChannelCount;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long assetProvider; // @synthesize assetProvider=_assetProvider;
@property(readonly, nonatomic) NSString *configVersion; // @synthesize configVersion=_configVersion;
@property(readonly, nonatomic) NSString *resourcePath; // @synthesize resourcePath=_resourcePath;
@property(readonly, nonatomic) NSString *path; // @synthesize path=_path;
- (id)stringForCurrentAssetProviderType;
- (_Bool)isEqualAsset:(id)arg1;
- (id)description;
@property(readonly, nonatomic) NSString *hashFromResourcePath;
- (_Bool)containsCategory:(id)arg1;
- (_Bool)containsKey:(id)arg1 category:(id)arg2;
- (id)getStringForKey:(id)arg1 category:(id)arg2 default:(id)arg3;
- (_Bool)getBoolForKey:(id)arg1 category:(id)arg2 default:(_Bool)arg3;
- (id)getNumberForKey:(id)arg1 category:(id)arg2 default:(id)arg3;
- (id)_decodeJson:(id)arg1;
@property(readonly, nonatomic) NSDictionary *dictionary;
- (id)initWithResourcePath:(id)arg1 configFile:(id)arg2 configVersion:(id)arg3 assetProvderType:(unsigned long long)arg4;
@property(readonly, nonatomic) NSDictionary *SSVParameterDirectionary;
@property(readonly, nonatomic) unsigned long long SSVDistanceChannelBitset;
@property(readonly, nonatomic) unsigned long long SSVLKFSChannelBitset;
@property(readonly, nonatomic) unsigned long long SSVNoiseLevelChannelBitset;
@property(readonly, nonatomic) float SSVNoiseWeight;
@property(readonly, nonatomic) float SSVTTSVolumeUpperLimitDB;
@property(readonly, nonatomic) float SSVTTSVolumeLowerLimitDB;
@property(readonly, nonatomic) float SSVUserOffsetOutputRangeHigh;
@property(readonly, nonatomic) float SSVUserOffsetOutputRangeLow;
@property(readonly, nonatomic) float SSVUserOffsetInputRangeHigh;
@property(readonly, nonatomic) float SSVUserOffsetInputRangeLow;
@property(readonly, nonatomic) float SSVLKFSTTSMappingOutputRangeHigh;
@property(readonly, nonatomic) float SSVLKFSTTSMappingOutputRangeLow;
@property(readonly, nonatomic) float SSVLKFSTTSMappingInputRangeHigh;
@property(readonly, nonatomic) float SSVLKFSTTSMappingInputRangeLow;
@property(readonly, nonatomic) float SSVNoiseTTSMappingOutputRangeHigh;
@property(readonly, nonatomic) float SSVNoiseTTSMappingOutputRangeLow;
@property(readonly, nonatomic) float SSVNoiseTTSMappingInputRangeHigh;
@property(readonly, nonatomic) float SSVNoiseTTSMappingInputRangeLow;
@property(readonly, nonatomic) float SSVLKFSMicSensitivityOffset;
@property(readonly, nonatomic) float SSVLKFSTimeConstant;
@property(readonly, nonatomic) float SSVNoiseMicSensitivityOffsetDeviceSimple;
@property(readonly, nonatomic) float SSVNoiseMicSensitivityOffset;
@property(readonly, nonatomic) float SSVNoiseTimeConstant;
@property(readonly, nonatomic) unsigned int SSVLKFSUpperPercentile;
@property(readonly, nonatomic) unsigned int SSVLKFSLowerPercentile;
@property(readonly, nonatomic) unsigned int SSVNoiseUpperPercentile;
@property(readonly, nonatomic) unsigned int SSVNoiseLowerPercentile;
@property(readonly, nonatomic) unsigned int SSVEnergyBufferSize;
- (id)configFilepathForDictationOrigin:(unsigned long long)arg1;
- (id)_sha256:(id)arg1;
- (id)_sha1:(id)arg1;
- (id)localeMapWithName:(id)arg1;
- (id)jarvisRTModelLocaleMap;
- (id)hearstRTModelLocaleMap;
- (id)hearstRTModelWithMajorVersion:(unsigned long long)arg1 minorVersion:(unsigned long long)arg2 locale:(id)arg3;
- (id)latestHearstRTModelForLocale:(id)arg1;
- (id)RTModelWithFallbackLanguage:(id)arg1;
- (id)createRTModelWithLocale:(id)arg1;
@property(readonly, nonatomic) _Bool satImplicitTrainingEnabled;
@property(readonly, nonatomic) NSString *keywordDetectorNDAPIConfigFilePath;
@property(readonly, nonatomic) NSString *keywordDetectorQuasarConfigFilePath;
@property(readonly, nonatomic) NSString *voiceProfilePruningCookie;
@property(readonly, nonatomic) unsigned long long maxAllowedEnrollmentUtterances;
@property(readonly, nonatomic) unsigned long long pruningNumRetentionUtterance;
@property(readonly, nonatomic) float pruningThresholdPSR;
@property(readonly, nonatomic) float pruningThresholdSAT;
@property(readonly, nonatomic) float pruningExplicitUttThresholdPSR;
@property(readonly, nonatomic) float pruningExplicitUttThresholdSAT;
@property(readonly, nonatomic) float satVTImplicitThreshold;
@property(readonly, nonatomic) float satImplicitProfileDeltaThreshold;
@property(readonly, nonatomic) float satImplicitProfileThreshold;
@property(readonly, nonatomic) float psrCombinationWeight;
@property(readonly, nonatomic) long long multiUserDeltaScoreThreshold;
@property(readonly, nonatomic) long long multiUserConfidentScoreThreshold;
@property(readonly, nonatomic) long long multiUserHighScoreThreshold;
@property(readonly, nonatomic) long long multiUserLowScoreThreshold;
@property(readonly, nonatomic) float satScoreThreshold;
@property(readonly, nonatomic) _Bool containsSpeakerRecognitionCategory;
@property(readonly, nonatomic) NSString *spgConfigFile;
@property(readonly, nonatomic) NSString *startOfSpeechDetectorConfigFile;
@property(readonly, nonatomic) NSString *languageDetectorConfigFile;
@property(readonly, nonatomic) NSArray *languageDetectorSupportedLocale;

@end

