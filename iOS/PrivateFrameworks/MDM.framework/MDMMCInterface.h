//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface MDMMCInterface : NSObject
{
}

+ (int)_mcCloudConfigSourceForCCSource:(int)arg1;
+ (int)_mcProfileStoragePurposeForMDMPurpose:(int)arg1;
+ (int)_mcFilterFlagsForMDMFlags:(int)arg1;
+ (void)enrollProvisionallyWithNonce:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)storeCloudConfigurationDetails:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)retrieveCloudConfigurationFromURL:(id)arg1 username:(id)arg2 password:(id)arg3 anchorCertificates:(id)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)retrieveCloudConfigurationDetailsCompletion:(CDUnknownBlockType)arg1;
+ (id)cloudConfigurationDetails;
+ (void)installProfileDataStoredForPurpose:(int)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)profileDataStoredForPurpose:(int)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)storeProfileData:(id)arg1 configurationSource:(int)arg2 purpose:(int)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)ipcuRemoveProfileWithIdentifier:(id)arg1;
+ (id)ipcuProfileList;
+ (_Bool)removeProvisioningProfileWithUUID:(id)arg1 managingProfileIdentifier:(id)arg2 outError:(id *)arg3;
+ (_Bool)installProvisioningProfileData:(id)arg1 managingProfileIdentifier:(id)arg2 outError:(id *)arg3;
+ (_Bool)isProvisioningProfileWithUUID:(id)arg1 managedByProfileWithIdentifier:(id)arg2;
+ (id)provisioningProfileUUIDsWithManagedOnly:(_Bool)arg1;
+ (id)profileListWithFilterFlags:(int)arg1;
+ (_Bool)isProfileWithIdentifier:(id)arg1 managedByProfileWithIdentifier:(id)arg2;
+ (id)profileIdentifiersWithFilterFlags:(int)arg1;
+ (id)mdmProfileIdentifier;
+ (id)profileIdentifierForProfileData:(id)arg1 allowEmptyPayload:(_Bool)arg2 outIsSupervisionProfile:(_Bool *)arg3 outProfileSigner:(struct __SecCertificate **)arg4 outMayInstallCloudProfile:(_Bool *)arg5 outError:(id *)arg6;
+ (_Bool)isEnterpriseBookBackupAllowed;
+ (_Bool)isDiagnosticsSubmissionRestricted;
+ (_Bool)isAutomaticDateAndTimeForced;
+ (id)filterMDMRestrictions:(id)arg1 acceptingKeysFromDictionary:(id)arg2;
+ (id)mdmQueryableRestrictions;
+ (void)storeCertificateData:(id)arg1 forHostIdentifier:(id)arg2;
+ (_Bool)clearPasscodeWithEscrowKeybagData:(id)arg1 secret:(id)arg2 outError:(id *)arg3;
+ (void)flush;
+ (void)profiledCheckIn;
+ (id)managedAppIDs;
+ (_Bool)isAwaitingDeviceConfigured;
+ (_Bool)isLimitedAppsMode;
+ (_Bool)isPasscodeSet;

@end

