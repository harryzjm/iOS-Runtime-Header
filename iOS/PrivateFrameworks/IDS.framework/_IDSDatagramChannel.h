//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSDataChannelLinkContext, IDSDataChannelsDirectConnections, NSData, NSMutableArray, NSMutableDictionary;
@protocol OS_dispatch_queue, OS_nw_connection, OS_nw_context, OS_nw_path_evaluator;

@interface _IDSDatagramChannel : NSObject
{
    _Bool _verboseFunctionalLogging;
    int _socketDescriptor;
    CDUnknownBlockType _eventHandler;
    CDUnknownBlockType _readHandler;
    CDUnknownBlockType _readHandlerWithOptions;
    CDUnknownBlockType _writeHandler;
    _Bool _connected;
    struct os_unfair_lock_s _writeLock;
    struct os_unfair_lock_s _readLock;
    _Bool _isInvalidated;
    long long _operationMode;
    long long _preferredDataPathType;
    NSObject<OS_nw_connection> *_connection;
    NSObject<OS_nw_context> *_context;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _hasMetadata;
    _Bool _sentFirstReadLinkInfo;
    _Bool _receivedPreConnectionData;
    _Bool _waitForPreConnectionDataForConnected;
    _Bool _startCalled;
    _Bool _startAutomatically;
    int _osChannelFD;
    NSObject<OS_nw_path_evaluator> *_pathEvaluator;
    IDSDataChannelLinkContext *_cellularLink;
    NSMutableDictionary *_linkContexts;
    BOOL _defaultLinkID;
    NSData *_preConnectionData;
    NSMutableArray *_sendingMetadata;
    _Bool _needsMediaEncryptionInfo;
    unsigned long long _outgoingBytes;
    unsigned long long _incomingBytes;
    unsigned long long _outgoingPackets;
    unsigned long long _incomingPackets;
    double _lastOutgoingStatReport;
    double _lastIncomingStatReport;
    NSMutableDictionary *_MKIArrivalTime;
    NSMutableDictionary *_firstPacketArrivalTimeForMKI;
    NSMutableDictionary *_probingDict;
    IDSDataChannelsDirectConnections *_directConnectionsByLinkID[256];
    IDSDataChannelLinkContext *_linkContextsByLinkID[256];
    NSMutableDictionary *_linkIDToParticipantMap;
    NSMutableDictionary *_localRemoteRelayLinkIDToVirtualLinkIDMap;
}

- (void).cxx_destruct;
- (id)init;

@end

