//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVPlayerPlaybackCoordinator, ICLiveLink, ICSharedListeningQueue, MPCModelGenericAVItemUserIdentityPropertySet, MPCPlaybackRequestEnvironment, MPPropertySet, MPRequestResponseController, NSMutableArray, NSMutableSet, NSString;
@protocol MPCQueueControllerBehaviorHost, MPCQueueControllerBehaviorMusicDelegate, MPCQueueControllerBehaviorMusicSharePlayDelegate, MPCQueueControllerExternalSyncBehaviorHost;

__attribute__((visibility("hidden")))
@interface _MPCQueueControllerBehaviorMusicSharePlay : NSObject
{
    AVPlayerPlaybackCoordinator *_playbackCoordinator;
    CDUnknownBlockType _loadingCompletionHandler;
    unsigned short _activeItemFlags;
    MPCPlaybackRequestEnvironment *_playbackRequestEnvironment;
    _Bool _liveLinkStopped;
    _Bool _queueRanDry;
    _Bool _hasUserMutations;
    NSString *_sessionID;
    id <MPCQueueControllerBehaviorHost> _host;
    id <MPCQueueControllerExternalSyncBehaviorHost> _externalSyncHost;
    id <MPCQueueControllerBehaviorMusicDelegate> _musicBehaviorDelegate;
    long long _repeatType;
    long long _shuffleType;
    id <MPCQueueControllerBehaviorMusicSharePlayDelegate> _musicSharePlayBehaviorDelegate;
    MPPropertySet *_requestedPropertySetForEvents;
    ICLiveLink *_liveLink;
    ICSharedListeningQueue *_queue;
    MPRequestResponseController *_requestController;
    MPCModelGenericAVItemUserIdentityPropertySet *_identityPropertySet;
    NSMutableArray *_pendingActions;
    NSMutableSet *_knownContainerIDs;
}

+ (_Bool)canLoadQueue:(id)arg1 reason:(id *)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableSet *knownContainerIDs; // @synthesize knownContainerIDs=_knownContainerIDs;
@property(retain, nonatomic) NSMutableArray *pendingActions; // @synthesize pendingActions=_pendingActions;
@property(retain, nonatomic) MPCModelGenericAVItemUserIdentityPropertySet *identityPropertySet; // @synthesize identityPropertySet=_identityPropertySet;
@property(retain, nonatomic) MPRequestResponseController *requestController; // @synthesize requestController=_requestController;
@property(retain, nonatomic, setter=_setQueue:) ICSharedListeningQueue *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) ICLiveLink *liveLink; // @synthesize liveLink=_liveLink;
@property(readonly, nonatomic) _Bool hasUserMutations; // @synthesize hasUserMutations=_hasUserMutations;
@property(copy, nonatomic) MPPropertySet *requestedPropertySetForEvents; // @synthesize requestedPropertySetForEvents=_requestedPropertySetForEvents;
@property(nonatomic) __weak id <MPCQueueControllerBehaviorMusicSharePlayDelegate> musicSharePlayBehaviorDelegate; // @synthesize musicSharePlayBehaviorDelegate=_musicSharePlayBehaviorDelegate;
@property(readonly, nonatomic) long long shuffleType; // @synthesize shuffleType=_shuffleType;
@property(readonly, nonatomic) long long repeatType; // @synthesize repeatType=_repeatType;
@property(nonatomic) __weak id <MPCQueueControllerBehaviorMusicDelegate> musicBehaviorDelegate; // @synthesize musicBehaviorDelegate=_musicBehaviorDelegate;
@property(readonly, nonatomic) __weak id <MPCQueueControllerExternalSyncBehaviorHost> externalSyncHost; // @synthesize externalSyncHost=_externalSyncHost;
@property(readonly, nonatomic) __weak id <MPCQueueControllerBehaviorHost> host; // @synthesize host=_host;
@property(readonly, copy, nonatomic) NSString *sessionID; // @synthesize sessionID=_sessionID;
- (_Bool)_useItemPlaceholderForContentItemID:(id)arg1;
- (_Bool)_useItemPlaceholderForItemID:(id)arg1;
- (id)_sectionObjectForSharedListeningContainerID:(id)arg1;
- (id)_sectionedCollectionForQueue:(id)arg1;
- (id)_queueAsStateDictionary;
- (void)_purgePendingActionsWithLabel:(id)arg1;
- (id)_mpcSharedListeningEventForICLiveLinkEvent:(id)arg1;
- (id)_itemObjectForSharedListeningItemID:(id)arg1;
- (void)_initializeWithQueue:(id)arg1;
- (void)_enqueuePendingActionWithLabel:(id)arg1 itemIdentifier:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)_emitEventsForPlaybackBehaviorChange;
- (void)_emitEventsForParticipants:(id)arg1 localUserIdentifier:(id)arg2;
- (void)_emitEventsForAddedSharedListeningContainer:(id)arg1;
- (void)_dequeuePendingActions;
- (id)_componentsForSharedListeningItemID:(id)arg1;
- (id)_componentsForContentItemID:(id)arg1;
- (void)liveLink:(id)arg1 didReceiveEvent:(id)arg2;
- (void)liveLink:(id)arg1 didReceiveDirectCurrentItemChanged:(id)arg2 fromParticipant:(id)arg3;
- (void)liveLink:(id)arg1 didUpdateQueue:(id)arg2;
- (void)liveLink:(id)arg1 didUpdateParticipants:(id)arg2;
- (void)liveLink:(id)arg1 didEncounterError:(id)arg2 willRetry:(_Bool)arg3;
- (void)didStopLiveLink:(id)arg1;
- (id)playbackCoordinator:(id)arg1 identifierForPlayerItem:(id)arg2;
- (void)controller:(id)arg1 defersResponseReplacement:(CDUnknownBlockType)arg2;
- (_Bool)controller:(id)arg1 shouldRetryFailedRequestWithError:(id)arg2;
- (long long)displayItemCount;
- (void)clearAllItemsAfterContentItemID:(id)arg1;
- (void)removeContentItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)canRemoveContentItemID:(id)arg1 reason:(id *)arg2;
- (void)moveContentItemID:(id)arg1 afterContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)moveContentItemID:(id)arg1 beforeContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)performInsertCommand:(id)arg1 targetContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)isSupportedInsertionPosition:(long long)arg1 fromContentItemID:(id)arg2 reason:(id *)arg3;
@property(nonatomic) _Bool allowsQueueModifications;
- (void)canReuseQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) long long queueExplicitContentState;
- (void)updatePlaybackCoordinator:(id)arg1;
- (void)endSynchronizedPlayback;
- (id)contentItemIDWithoutRepeatIteration:(id)arg1;
- (void)findFirstContentItemIDForItemIntersectingIdentifierSet:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getSharedQueueTracklistWithStartingContentItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)isAutoPlayContentItemID:(id)arg1;
- (void)setAutoPlayEnabled:(_Bool)arg1 targetContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)canUserEnableAutoPlayWithReason:(id *)arg1;
@property(readonly, nonatomic) _Bool autoPlayEnabled;
- (void)reshuffleWithTargetContentItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setShuffleType:(long long)arg1 targetContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)canUserChangeShuffleModeWithReason:(id *)arg1;
- (void)setRepeatType:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)canUserChangeRepeatTypeWithReason:(id *)arg1;
- (void)didJumpToTargetContentItemID:(id)arg1;
- (void)disconnectFromExternalSyncHost:(id)arg1;
- (void)connectToExternalSyncHost:(id)arg1;
- (void)didReachEndOfQueueWithReason:(id)arg1;
- (id)_itemForContentItemID:(id)arg1;
- (void)currentItemDidChangeFromContentItemID:(id)arg1 toContentItemID:(id)arg2;
- (id)_stateDictionaryIncludingQueue:(_Bool)arg1;
- (id)contentItemIDEnumeratorStartingAfterContentItemID:(id)arg1 mode:(long long)arg2 options:(unsigned long long)arg3;
- (_Bool)canNextItemFromContentItemID:(id)arg1 reason:(id *)arg2;
- (_Bool)canPreviousItemFromContentItemID:(id)arg1 reason:(id *)arg2;
- (_Bool)canJumpToContentItemID:(id)arg1 reason:(id *)arg2;
- (_Bool)itemExistsForContentItemID:(id)arg1;
- (id)componentsForContentItemID:(id)arg1;
- (void)activeItemFlagsDidChange:(unsigned short)arg1;
- (id)performLoadCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)disconnectFromHost:(id)arg1;
- (void)connectToHost:(id)arg1;
- (id)initWithSessionID:(id)arg1;
- (void)getExpectedCurrentItemModelObjectWithCompletion:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

