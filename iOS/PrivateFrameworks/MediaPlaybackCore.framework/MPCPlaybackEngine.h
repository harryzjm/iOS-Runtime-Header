//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MediaPlaybackCore/MPCExplicitContentAuthorizationDelegate-Protocol.h>

@class MPCAudioSpectrumAnalyzer, MPCPlaybackIntent, MPCPlayerPath, MPProtocolProxy, NSString, UIView, _MPCAVController, _MPCLeaseManager, _MPCMediaRemotePublisher, _MPCPlaybackEngineSessionManager, _MPCReportingController;
@protocol MPCPlaybackEngineDelegate, MPCPlaybackEngineEventObserving;

@interface MPCPlaybackEngine : NSObject <MPCExplicitContentAuthorizationDelegate>
{
    MPCAudioSpectrumAnalyzer *_audioAnalyzer;
    _Bool _pictureInPictureSupported;
    _Bool _videoSupported;
    _Bool _stateRestorationSupported;
    _Bool _scheduledPlaybackStatePreservation;
    _Bool _systemMusicApplication;
    _Bool _audioAnalyzerEnabled;
    NSString *_playerID;
    id <MPCPlaybackEngineDelegate> _delegate;
    MPCPlaybackIntent *_fallbackPlaybackIntent;
    MPProtocolProxy<MPCPlaybackEngineEventObserving> *_eventObserver;
    _MPCAVController *_implementation;
    _MPCMediaRemotePublisher *_mediaRemotePublisher;
    _MPCReportingController *_reportingController;
    _MPCPlaybackEngineSessionManager *_sessionManager;
    _MPCLeaseManager *_leaseManager;
    unsigned long long _options;
    NSString *_audioSessionCategory;
    unsigned long long _audioSessionOptions;
}

+ (_Bool)requiresMainThread;
+ (void)preheatPlayback;
@property(readonly, nonatomic) MPCAudioSpectrumAnalyzer *audioAnalyzer; // @synthesize audioAnalyzer=_audioAnalyzer;
@property(nonatomic, getter=isAudioAnalyzerEnabled) _Bool audioAnalyzerEnabled; // @synthesize audioAnalyzerEnabled=_audioAnalyzerEnabled;
@property(nonatomic) unsigned long long audioSessionOptions; // @synthesize audioSessionOptions=_audioSessionOptions;
@property(copy, nonatomic) NSString *audioSessionCategory; // @synthesize audioSessionCategory=_audioSessionCategory;
@property(nonatomic, getter=isSystemMusicApplication) _Bool systemMusicApplication; // @synthesize systemMusicApplication=_systemMusicApplication;
@property(readonly, nonatomic) unsigned long long options; // @synthesize options=_options;
@property(readonly, nonatomic) _MPCLeaseManager *leaseManager; // @synthesize leaseManager=_leaseManager;
@property(readonly, nonatomic) _MPCPlaybackEngineSessionManager *sessionManager; // @synthesize sessionManager=_sessionManager;
@property(readonly, nonatomic) _MPCReportingController *reportingController; // @synthesize reportingController=_reportingController;
@property(readonly, nonatomic) _MPCMediaRemotePublisher *mediaRemotePublisher; // @synthesize mediaRemotePublisher=_mediaRemotePublisher;
@property(readonly, nonatomic) _MPCAVController *implementation; // @synthesize implementation=_implementation;
@property(readonly, nonatomic) MPProtocolProxy<MPCPlaybackEngineEventObserving> *eventObserver; // @synthesize eventObserver=_eventObserver;
@property(nonatomic, getter=hasScheduledPlaybackStatePreservation) _Bool scheduledPlaybackStatePreservation; // @synthesize scheduledPlaybackStatePreservation=_scheduledPlaybackStatePreservation;
@property(nonatomic, getter=isStateRestorationSupported) _Bool stateRestorationSupported; // @synthesize stateRestorationSupported=_stateRestorationSupported;
@property(retain, nonatomic) MPCPlaybackIntent *fallbackPlaybackIntent; // @synthesize fallbackPlaybackIntent=_fallbackPlaybackIntent;
@property(nonatomic, getter=isVideoSupported) _Bool videoSupported; // @synthesize videoSupported=_videoSupported;
@property(nonatomic, getter=isPictureInPictureSupported) _Bool pictureInPictureSupported; // @synthesize pictureInPictureSupported=_pictureInPictureSupported;
@property(nonatomic) __weak id <MPCPlaybackEngineDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSString *playerID; // @synthesize playerID=_playerID;
- (void).cxx_destruct;
- (void)requestAuthorizationForExplicitItem:(id)arg1 reason:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_shouldIgnorePlaybackSessionError:(id)arg1;
- (void)_initializePlaybackStack;
- (void)schedulePlaybackStatePreservation;
@property(readonly, nonatomic) UIView *videoView;
- (void)_itemInsertedNotification:(id)arg1;
- (void)_itemAssetLoadedNotification:(id)arg1;
@property(readonly, nonatomic) MPCPlayerPath *playerPath;
- (void)reportUserSeekFromTime:(double)arg1 toTime:(double)arg2;
- (void)removeEngineObserver:(id)arg1;
- (void)addEngineObserver:(id)arg1;
- (void)removeSupportedSpecializedQueueIdentifier:(id)arg1;
- (void)addSupportedSpecializedQueueIdentifier:(id)arg1 localizedName:(id)arg2 queueType:(long long)arg3 queueParameters:(id)arg4;
- (void)restoreStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)becomeActive;
- (void)start;
- (id)initWithPlayerID:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithPlayerID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

