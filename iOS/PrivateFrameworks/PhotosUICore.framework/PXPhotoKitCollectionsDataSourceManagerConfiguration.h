//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSPredicate, PHCollectionList, PHFetchOptions, PHFetchResult;

@interface PXPhotoKitCollectionsDataSourceManagerConfiguration : NSObject
{
    _Bool _isRootSharedAlbum;
    _Bool _isRootFolder;
    _Bool _shouldHideEmptyCollections;
    _Bool _shouldHideSmartAlbums;
    _Bool _canShowVirtualCollections;
    _Bool _isPickingSession;
    _Bool _canShowPeopleAlbum;
    _Bool _canShowScenesAlbum;
    _Bool _canShowMemoriesAlbum;
    PHCollectionList *_collectionList;
    PHFetchResult *_collectionsFetchResult;
    NSPredicate *_assetFilteringPredicate;
    long long _filteringAssetTypes;
}

@property(nonatomic) long long filteringAssetTypes; // @synthesize filteringAssetTypes=_filteringAssetTypes;
@property(retain) NSPredicate *assetFilteringPredicate; // @synthesize assetFilteringPredicate=_assetFilteringPredicate;
@property _Bool canShowMemoriesAlbum; // @synthesize canShowMemoriesAlbum=_canShowMemoriesAlbum;
@property _Bool canShowScenesAlbum; // @synthesize canShowScenesAlbum=_canShowScenesAlbum;
@property _Bool canShowPeopleAlbum; // @synthesize canShowPeopleAlbum=_canShowPeopleAlbum;
@property(readonly) _Bool isPickingSession; // @synthesize isPickingSession=_isPickingSession;
@property _Bool canShowVirtualCollections; // @synthesize canShowVirtualCollections=_canShowVirtualCollections;
@property _Bool shouldHideSmartAlbums; // @synthesize shouldHideSmartAlbums=_shouldHideSmartAlbums;
@property _Bool shouldHideEmptyCollections; // @synthesize shouldHideEmptyCollections=_shouldHideEmptyCollections;
@property _Bool isRootFolder; // @synthesize isRootFolder=_isRootFolder;
@property _Bool isRootSharedAlbum; // @synthesize isRootSharedAlbum=_isRootSharedAlbum;
@property(retain) PHFetchResult *collectionsFetchResult; // @synthesize collectionsFetchResult=_collectionsFetchResult;
@property(retain) PHCollectionList *collectionList; // @synthesize collectionList=_collectionList;
- (void).cxx_destruct;
- (id)dataSourceManagerConfigurationWithCollectionsFetchResult:(id)arg1;
- (id)dataSourceManagerConfigurationWithCollectionList:(id)arg1;
@property(readonly) PHFetchOptions *customFetchOptions;
- (id)initWithCollectionList:(id)arg1 collectionsFetchResult:(id)arg2 isPickingSession:(_Bool)arg3;
- (id)initWithCollectionList:(id)arg1 collectionsFetchResult:(id)arg2;
- (id)init;

@end

