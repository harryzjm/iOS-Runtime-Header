//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMapTable, NSMutableArray;
@protocol OS_dispatch_queue, OS_os_log;

@interface PXObservable : NSObject
{
    long long _nestedChanges;
    NSMutableArray *_pendingChangeBlocks;
    long long _numAppliedPendingChanges;
    unsigned long long _currentChange;
    _Bool _isEnumeratingObservers;
    NSObject<OS_dispatch_queue> *_observersQueue;
    _Bool _observersQueue_shouldCopyChangeObserversOnWrite;
    NSMapTable *_observersQueue_changeObserversWithContexts;
    _Bool _hasObservers;
    NSObject<OS_os_log> *_log;
    unsigned long long _logContext;
}

- (void).cxx_destruct;
@property(nonatomic) unsigned long long logContext; // @synthesize logContext=_logContext;
@property(retain, nonatomic) NSObject<OS_os_log> *log; // @synthesize log=_log;
@property(readonly, nonatomic) _Bool hasObservers; // @synthesize hasObservers=_hasObservers;
- (void)_observersQueue_copyChangeObserversForWriteIfNeeded;
- (void)_applyPendingChanges;
- (void)_publishChanges;
- (void)_didChange;
- (void)_willChange;
- (void)_setHasObservers:(_Bool)arg1;
- (void)enumerateObserversUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool isPerformingChanges;
@property(readonly, nonatomic) unsigned long long currentChanges;
- (void)signalChange:(unsigned long long)arg1;
- (void)hasObserversDidChange;
- (void)didEndChangeHandling;
- (void)didPublishChanges;
- (void)didPerformChanges;
- (void)willPerformChanges;
- (id)mutableChangeObject;
- (void)unregisterChangeObserver:(id)arg1 context:(void *)arg2;
- (void)registerChangeObserver:(id)arg1 context:(void *)arg2;
- (void)performChanges:(CDUnknownBlockType)arg1;
- (void)copyLogConfigurationFrom:(id)arg1;
- (id)init;
- (id)_pxStoryPPT_observeChangesUsingChangeHandler:(CDUnknownBlockType)arg1;
- (id)pxStory_enumerateStatesByWatchingChanges:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)pxStory_enumerateStatesWithTimeout:(double)arg1 watchingChanges:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;

@end

