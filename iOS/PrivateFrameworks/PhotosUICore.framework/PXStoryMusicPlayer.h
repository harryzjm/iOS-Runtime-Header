//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PhotosUICore/PXAudioPlayerAVAudioSessionDelegate-Protocol.h>
#import <PhotosUICore/PXChangeObserver-Protocol.h>
#import <PhotosUICore/PXMutableStoryMusicPlayer-Protocol.h>
#import <PhotosUICore/PXSettingsKeyObserver-Protocol.h>
#import <PhotosUICore/PXStoryDiagnosticHUDContentProvider-Protocol.h>
#import <PhotosUICore/PXStoryPacingCueSource-Protocol.h>
#import <PhotosUICore/PXStoryQueueParticipant-Protocol.h>

@class NSDate, NSObject, NSString, NSTimer, PXAudioPlayer, PXNumberAnimator, PXStoryModel, PXUpdater;
@protocol OS_dispatch_queue, PXAudioAsset, PXAudioCueProvider, PXAudioCueSource, PXStorySongResource;

@interface PXStoryMusicPlayer <PXStoryQueueParticipant, PXChangeObserver, PXStoryDiagnosticHUDContentProvider, PXMutableStoryMusicPlayer, PXSettingsKeyObserver, PXAudioPlayerAVAudioSessionDelegate, PXStoryPacingCueSource>
{
    _Bool _isActive;
    _Bool _shouldDuckForCurrentTouch;
    _Bool _isDucked;
    float _duckedVolume;
    NSObject<OS_dispatch_queue> *_storyQueue;
    PXStoryModel *_model;
    long long _readinessStatus;
    long long _actionAtEnd;
    PXAudioPlayer *_player;
    PXUpdater *_updater;
    id <PXAudioCueProvider> _cueProvider;
    long long _cueRequestID;
    PXNumberAnimator *_duckingVolumeAnimator;
    PXNumberAnimator *_focusVolumeAnimator;
    PXNumberAnimator *_fadeOutVolumeAnimator;
    id <PXAudioAsset> _currentAudioAsset;
    id <PXAudioCueSource> _cueSource;
    long long _desiredPlayState;
    long long _cuesVersion;
    NSString *_pauseReason;
    NSString *_duckingReason;
    NSDate *_touchingBeganDate;
    long long _bufferingEvents;
    long long _currentSongResourceRequestID;
    NSTimer *_playbackTimer;
    id <PXStorySongResource> _currentSongResource;
    long long _audioDesiredPlayState;
    CDStruct_1b6d18a9 _targetDuration;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) long long audioDesiredPlayState; // @synthesize audioDesiredPlayState=_audioDesiredPlayState;
@property(readonly, nonatomic) id <PXStorySongResource> currentSongResource; // @synthesize currentSongResource=_currentSongResource;
@property(nonatomic) float duckedVolume; // @synthesize duckedVolume=_duckedVolume;
@property(nonatomic) _Bool isDucked; // @synthesize isDucked=_isDucked;
@property(retain, nonatomic) NSTimer *playbackTimer; // @synthesize playbackTimer=_playbackTimer;
@property(nonatomic) long long currentSongResourceRequestID; // @synthesize currentSongResourceRequestID=_currentSongResourceRequestID;
@property(nonatomic) long long bufferingEvents; // @synthesize bufferingEvents=_bufferingEvents;
@property(nonatomic) _Bool shouldDuckForCurrentTouch; // @synthesize shouldDuckForCurrentTouch=_shouldDuckForCurrentTouch;
@property(retain, nonatomic) NSDate *touchingBeganDate; // @synthesize touchingBeganDate=_touchingBeganDate;
@property(copy, nonatomic) NSString *duckingReason; // @synthesize duckingReason=_duckingReason;
@property(copy, nonatomic) NSString *pauseReason; // @synthesize pauseReason=_pauseReason;
@property(nonatomic) long long cuesVersion; // @synthesize cuesVersion=_cuesVersion;
@property(nonatomic) CDStruct_1b6d18a9 targetDuration; // @synthesize targetDuration=_targetDuration;
@property(nonatomic) long long desiredPlayState; // @synthesize desiredPlayState=_desiredPlayState;
@property(retain, nonatomic) id <PXAudioCueSource> cueSource; // @synthesize cueSource=_cueSource;
@property(retain, nonatomic) id <PXAudioAsset> currentAudioAsset; // @synthesize currentAudioAsset=_currentAudioAsset;
@property(readonly, nonatomic) PXNumberAnimator *fadeOutVolumeAnimator; // @synthesize fadeOutVolumeAnimator=_fadeOutVolumeAnimator;
@property(readonly, nonatomic) PXNumberAnimator *focusVolumeAnimator; // @synthesize focusVolumeAnimator=_focusVolumeAnimator;
@property(readonly, nonatomic) PXNumberAnimator *duckingVolumeAnimator; // @synthesize duckingVolumeAnimator=_duckingVolumeAnimator;
@property(nonatomic) long long cueRequestID; // @synthesize cueRequestID=_cueRequestID;
@property(readonly, nonatomic) id <PXAudioCueProvider> cueProvider; // @synthesize cueProvider=_cueProvider;
@property(readonly, nonatomic) PXUpdater *updater; // @synthesize updater=_updater;
@property(readonly, nonatomic) PXAudioPlayer *player; // @synthesize player=_player;
@property(nonatomic) long long actionAtEnd; // @synthesize actionAtEnd=_actionAtEnd;
@property(nonatomic) long long readinessStatus; // @synthesize readinessStatus=_readinessStatus;
@property(readonly, nonatomic) _Bool isActive; // @synthesize isActive=_isActive;
@property(readonly, nonatomic) PXStoryModel *model; // @synthesize model=_model;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *storyQueue; // @synthesize storyQueue=_storyQueue;
- (void)_handlePlaybackTimerFired:(id)arg1;
- (void)setAudioDesiredPlayState:(long long)arg1;
- (void)_handlePlaybackFailureIfNeeded;
- (void)_handleDuckingDelayPassedForTouchingBeganDate:(id)arg1;
- (void)_replayIfNeeded;
- (void)_handlePlayerChangedIsAtEnd;
- (CDStruct_1b6d18a9)playbackStartTimeForIncomingSong:(id)arg1;
- (id)AVAudioSessionForPlayer:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (id)diagnosticErrorsByComponentForHUDType:(long long)arg1;
- (id)diagnosticTextForHUDType:(long long)arg1 displaySize:(struct CGSize)arg2;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;
- (void)didPerformChanges;
- (void)performChanges:(CDUnknownBlockType)arg1;
- (id)diagnosticCueStringForSize:(struct CGSize)arg1 withIndicatorTime:(CDStruct_1b6d18a9)arg2 rangeIndicatorTimeRange:(CDStruct_e83c9415)arg3;
@property(readonly, nonatomic) CDStruct_1b6d18a9 currentTime;
@property(readonly, nonatomic) id <PXAudioCueSource> audioCueSource;
- (void)_updateError;
- (void)_invalidateError;
- (void)_updateFocusVolumeAnimator;
- (void)_invalidateFocusVolumeAnimator;
- (void)_updateDuckingVolumeAnimator;
- (void)_invalidateDuckingVolumeAnimator;
- (void)_updateFadeOutVolumeAnimator;
- (void)_invalidateFadeOutVolumeAnimator;
- (void)_updateDucked;
- (void)_invalidateDucked;
- (void)_updateTouchingBeganDate;
- (void)_invalidateTouchingBeganDate;
- (void)_updatePlayerVolume;
- (void)_invalidatePlayerVolume;
- (void)_updateModelProperties;
- (void)_invalidateModelProprties;
- (void)_updateReadinessStatus;
- (void)_invalidateReadinessStatus;
- (void)_updatePlaybackTimer;
- (void)_invalidatePlaybackTimer;
- (void)_updatePlayerDesiredPlayState;
- (void)_invalidatePlayerDesiredPlayState;
- (void)_updateDesiredPlayState;
- (void)_invalidateDesiredPlayState;
- (void)_updatePlayerCurrentAsset;
- (void)_invalidatePlayerCurrentAsset;
- (void)_handleAudioCues:(id)arg1 asset:(id)arg2 error:(id)arg3 requestID:(long long)arg4;
- (void)_updateCueSource;
- (void)_invalidateCueSource;
- (void)_updateCurrentAudioAsset;
- (void)_invalidateCurrentAudioAsset;
- (void)_handleTargetDurationFlexAsset:(id)arg1 requestID:(long long)arg2;
- (void)_updateCurrentSongResource;
- (void)_invalidateCurrentSongResource;
- (void)_updateTargetDuration;
- (void)_invalidateTargetDuration;
@property(readonly, copy) NSString *description;
- (void)replay;
- (id)diagnosticTextForHUDType:(long long)arg1;
- (void)setCurrentSongResource:(id)arg1 requestID:(long long)arg2;
- (void)setIsActive:(_Bool)arg1;
- (id)initWithModel:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

