//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PassKitCore/NSCopying-Protocol.h>
#import <PassKitCore/NSSecureCoding-Protocol.h>

@class NSString, NSUUID;

@interface PKAppletSubcredentialSharingInvitation : NSObject <NSSecureCoding, NSCopying>
{
    _Bool _forWatch;
    NSString *_identifier;
    NSString *_originatorIDSHandle;
    NSString *_partnerIdentifier;
    NSString *_pairedReaderIdentifier;
    NSString *_recipientName;
    NSUUID *_sharingSessionIdentifier;
    unsigned long long _entitlement;
    NSString *_issuer;
    NSString *_deviceModel;
    unsigned long long _supportedRadioTechnologies;
}

+ (_Bool)supportsSecureCoding;
+ (id)invitationFromSharedCredential:(id)arg1 withCredential:(id)arg2 pass:(id)arg3;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long supportedRadioTechnologies; // @synthesize supportedRadioTechnologies=_supportedRadioTechnologies;
@property(nonatomic, getter=isForWatch) _Bool forWatch; // @synthesize forWatch=_forWatch;
@property(copy, nonatomic) NSString *deviceModel; // @synthesize deviceModel=_deviceModel;
@property(copy, nonatomic) NSString *issuer; // @synthesize issuer=_issuer;
@property(nonatomic) unsigned long long entitlement; // @synthesize entitlement=_entitlement;
@property(retain, nonatomic) NSUUID *sharingSessionIdentifier; // @synthesize sharingSessionIdentifier=_sharingSessionIdentifier;
@property(copy, nonatomic) NSString *recipientName; // @synthesize recipientName=_recipientName;
@property(copy, nonatomic) NSString *pairedReaderIdentifier; // @synthesize pairedReaderIdentifier=_pairedReaderIdentifier;
@property(copy, nonatomic) NSString *partnerIdentifier; // @synthesize partnerIdentifier=_partnerIdentifier;
@property(copy, nonatomic) NSString *originatorIDSHandle; // @synthesize originatorIDSHandle=_originatorIDSHandle;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToInvitation:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)canBeSent;
- (_Bool)isSameInvitationAsInvitation:(id)arg1;
- (id)invitationRequestRepresentation;
- (id)sharingConfigurationRepresentation;
- (id)dataRepresentation;
- (id)initWithIdentifier:(id)arg1 sharingSessionIdentifier:(id)arg2 originatorIDSHandle:(id)arg3 invitationData:(id)arg4;
- (id)initWithPartnerIdentifier:(id)arg1 pairedReaderIdentifier:(id)arg2 recipientName:(id)arg3 entitlement:(unsigned long long)arg4 supportedRadioTechnologies:(unsigned long long)arg5;

@end

