//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

#import <PlatterKit/PLContentSizeCategoryAdjusting-Protocol.h>

@class NSLayoutConstraint, NSString, PLPillContentItem;

@interface PLPillContentWrapperView : UIView <PLContentSizeCategoryAdjusting>
{
    UIView *_contentView;
    NSLayoutConstraint *_topConstraint;
    NSLayoutConstraint *_bottomConstraint;
    _Bool _adjustsFontForContentSizeCategory;
    _Bool _topConstraintBreakable;
    NSString *_preferredContentSizeCategory;
    PLPillContentItem *_contentItem;
    long long _appearState;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) long long appearState; // @synthesize appearState=_appearState;
@property(retain, nonatomic) PLPillContentItem *contentItem; // @synthesize contentItem=_contentItem;
@property(nonatomic, getter=isTopConstraintBreakable) _Bool topConstraintBreakable; // @synthesize topConstraintBreakable=_topConstraintBreakable;
@property(copy, nonatomic) NSString *preferredContentSizeCategory; // @synthesize preferredContentSizeCategory=_preferredContentSizeCategory;
@property(nonatomic) _Bool adjustsFontForContentSizeCategory; // @synthesize adjustsFontForContentSizeCategory=_adjustsFontForContentSizeCategory;
- (id)_contentLabel;
- (void)_setContentView:(id)arg1 transitionCoordinator:(id)arg2;
- (void)_makeBottomConstraintBreakable;
- (void)_makeTopConstraintBreakable;
- (void)_updateConstraintsPriority;
- (_Bool)adjustForContentSizeCategoryChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)updateWithContentItem:(id)arg1;
- (void)endAppearanceTransition:(_Bool)arg1;
- (void)beginAppearanceTransition:(_Bool)arg1;
- (void)setContentItem:(id)arg1 transitionCoordinator:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

