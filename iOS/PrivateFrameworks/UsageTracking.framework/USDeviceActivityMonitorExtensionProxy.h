//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <UsageTracking/USDeviceActivityMonitorExtension-Protocol.h>

@class NSArray;
@protocol OS_dispatch_queue_global;

@interface USDeviceActivityMonitorExtensionProxy : NSObject <USDeviceActivityMonitorExtension>
{
    unsigned long long _timeoutInSeconds;
    unsigned long long _timeoutLeewayInSeconds;
    NSArray *_extensions;
    NSObject<OS_dispatch_queue_global> *_timeoutQueue;
}

- (void).cxx_destruct;
@property(readonly) NSObject<OS_dispatch_queue_global> *timeoutQueue; // @synthesize timeoutQueue=_timeoutQueue;
@property(readonly) NSArray *extensions; // @synthesize extensions=_extensions;
@property unsigned long long timeoutLeewayInSeconds; // @synthesize timeoutLeewayInSeconds=_timeoutLeewayInSeconds;
@property unsigned long long timeoutInSeconds; // @synthesize timeoutInSeconds=_timeoutInSeconds;
- (void)_cancelTimer:(id)arg1;
- (id)_scheduleTimerWithIntervalInSeconds:(unsigned long long)arg1 leewayInSeconds:(unsigned long long)arg2 handler:(CDUnknownBlockType)arg3;
- (id)_scheduleTimerWithIntervalInSeconds:(unsigned long long)arg1 leewayInSeconds:(unsigned long long)arg2 extensionPID:(int)arg3 handler:(CDUnknownBlockType)arg4;
- (void)_requestExtensionVendorProxyForExtension:(id)arg1 proxyHandler:(CDUnknownBlockType)arg2;
- (void)eventWillReachThresholdWarning:(id)arg1 activity:(id)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (void)intervalWillEndWarningForActivity:(id)arg1 replyHandler:(CDUnknownBlockType)arg2;
- (void)intervalWillStartWarningForActivity:(id)arg1 replyHandler:(CDUnknownBlockType)arg2;
- (void)eventDidReachThreshold:(id)arg1 activity:(id)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (void)intervalDidEndForActivity:(id)arg1 replyHandler:(CDUnknownBlockType)arg2;
- (void)intervalDidStartForActivity:(id)arg1 replyHandler:(CDUnknownBlockType)arg2;
- (id)initWithExtensionsMatchingAttributes:(id)arg1 error:(id *)arg2;
- (id)initWithClientIdentifier:(id)arg1 error:(id *)arg2;
- (id)initWithBundleIdentifier:(id)arg1 error:(id *)arg2;

@end

