//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class LAContext, NSMutableDictionary, PKExpressPassController, PKPass;
@protocol NPKExpressModeSettingsCoordinatorDelegate, OS_dispatch_queue;

@interface NPKExpressModeSettingsCoordinator : NSObject
{
    _Bool _expressStateUpdatePending;
    int _notifyToken;
    PKExpressPassController *_expressPassController;
    id <NPKExpressModeSettingsCoordinatorDelegate> _delegate;
    PKPass *_currentPass;
    unsigned long long _currentOperation;
    LAContext *_currentContext;
    CDUnknownBlockType _completionHandler;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_previousPassStates;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *previousPassStates; // @synthesize previousPassStates=_previousPassStates;
@property(nonatomic) _Bool expressStateUpdatePending; // @synthesize expressStateUpdatePending=_expressStateUpdatePending;
@property(nonatomic) int notifyToken; // @synthesize notifyToken=_notifyToken;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) LAContext *currentContext; // @synthesize currentContext=_currentContext;
@property(nonatomic) unsigned long long currentOperation; // @synthesize currentOperation=_currentOperation;
@property(retain, nonatomic) PKPass *currentPass; // @synthesize currentPass=_currentPass;
@property(nonatomic) __weak id <NPKExpressModeSettingsCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) PKExpressPassController *expressPassController; // @synthesize expressPassController=_expressPassController;
- (unsigned long long)_expressModeStateForPassWithUniqueID:(id)arg1 fromControllerState:(id)arg2;
- (unsigned long long)_expressModeStateForPassWithUniqueID:(id)arg1;
- (void)_handleExpressStateChange;
- (void)_invokeCompletionHandlerWithSuccess:(_Bool)arg1;
- (void)_handleUserCancelled;
- (void)_handleFailedEnableExpress;
- (void)_handleFailedPassUpgrade;
- (void)_handleFailedUserAuthentication;
- (void)_handleSuccessForPass:(id)arg1;
- (void)_enableExpressModeForPass:(id)arg1 withCredential:(id)arg2;
- (void)_upgradeExpressModeForPass:(id)arg1 withCredential:(id)arg2;
- (void)_handleSuccessfulUserAuthenticationWithCredential:(id)arg1 forPass:(id)arg2;
- (void)_requestUserAuthenticationForPass:(id)arg1;
- (void)_checkForConflictsInEnablingExpressForPass:(id)arg1;
- (void)disableExpressModeForPass:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)enableExpressModeForPass:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (unsigned long long)expressModeStateForPass:(id)arg1;
- (_Bool)isExpressModeSupportedForPass:(id)arg1;
- (id)initWithExpressPassController:(id)arg1 queue:(id)arg2;

@end

