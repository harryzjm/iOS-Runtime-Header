//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NanoPassKit/PKContactlessInterfaceSessionDelegate-Protocol.h>

@class NSData, NSDictionary, NSMutableArray, NSString, PKContactlessInterfaceSession, PKFieldDetector, PKPass, PKPaymentSessionHandle;
@protocol NPKQuickPaymentSessionDelegate, OS_dispatch_queue;

@interface NPKQuickPaymentSession : NSObject <PKContactlessInterfaceSessionDelegate>
{
    NSData *_credential;
    _Atomic unsigned int _atomicIsSwitchingSessionTypeCount;
    _Bool _deferAuthorization;
    _Bool _requireFirstInQueue;
    _Bool _inServiceMode;
    _Bool _endSessionWhenAuthorizationIsConsumed;
    _Bool _confirmed;
    _Bool _performedFirstActivation;
    _Bool _deactivating;
    _Bool _deactivated;
    PKPass *_currentPass;
    NSDictionary *_vasPasses;
    id <NPKQuickPaymentSessionDelegate> _delegate;
    unsigned long long _sessionType;
    NSObject<OS_dispatch_queue> *_paymentSessionQueue;
    NSObject<OS_dispatch_queue> *_internalQueue;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    PKPaymentSessionHandle *_contactlessSessionHandle;
    PKContactlessInterfaceSession *_contactlessSession;
    unsigned long long _contactlessValidity;
    unsigned long long _authorizationValidity;
    NSMutableArray *_deactivationCompletionBlocks;
    PKFieldDetector *_fieldDetector;
}

+ (void)_handleNewContactlessSession:(id)arg1;
+ (_Bool)hasOutstandingSessions;
+ (id)_outstandingSessionHashTable;
+ (id)sessionWithQueue:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) PKFieldDetector *fieldDetector; // @synthesize fieldDetector=_fieldDetector;
@property(retain, nonatomic) NSMutableArray *deactivationCompletionBlocks; // @synthesize deactivationCompletionBlocks=_deactivationCompletionBlocks;
@property(nonatomic, getter=isDeactivated) _Bool deactivated; // @synthesize deactivated=_deactivated;
@property(nonatomic, getter=isDeactivating) _Bool deactivating; // @synthesize deactivating=_deactivating;
@property(nonatomic, getter=hasPerformedFirstActivation) _Bool performedFirstActivation; // @synthesize performedFirstActivation=_performedFirstActivation;
@property(nonatomic, getter=isConfirmed) _Bool confirmed; // @synthesize confirmed=_confirmed;
@property(nonatomic) unsigned long long authorizationValidity; // @synthesize authorizationValidity=_authorizationValidity;
@property(nonatomic) unsigned long long contactlessValidity; // @synthesize contactlessValidity=_contactlessValidity;
@property(retain, nonatomic) PKContactlessInterfaceSession *contactlessSession; // @synthesize contactlessSession=_contactlessSession;
@property(retain, nonatomic) PKPaymentSessionHandle *contactlessSessionHandle; // @synthesize contactlessSessionHandle=_contactlessSessionHandle;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *internalQueue; // @synthesize internalQueue=_internalQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *paymentSessionQueue; // @synthesize paymentSessionQueue=_paymentSessionQueue;
@property(nonatomic) _Bool endSessionWhenAuthorizationIsConsumed; // @synthesize endSessionWhenAuthorizationIsConsumed=_endSessionWhenAuthorizationIsConsumed;
@property(nonatomic) _Bool inServiceMode; // @synthesize inServiceMode=_inServiceMode;
@property(nonatomic) _Bool requireFirstInQueue; // @synthesize requireFirstInQueue=_requireFirstInQueue;
@property(readonly, nonatomic) unsigned long long sessionType; // @synthesize sessionType=_sessionType;
@property(nonatomic) __weak id <NPKQuickPaymentSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_internalQueue_invokeDeactivationCompletionBlocks;
- (void)_callbackQueue_invokeDidCompleteForReason:(unsigned long long)arg1 withTransactionContext:(id)arg2;
- (void)_loyaltyEngineConfigurationChanged:(id)arg1;
- (void)_handleConventionalTransactionWithContext:(id)arg1;
- (void)_handleTransitTransactionWithContext:(id)arg1;
- (void)contactlessInterfaceSessionHasPendingServerRequest:(id)arg1;
- (void)contactlessInterfaceSessionDidFailDeferredAuthorization:(id)arg1;
- (void)contactlessInterfaceSessionDidSelectValueAddedService:(id)arg1;
- (void)contactlessInterfaceSessionDidSelectPayment:(id)arg1;
- (void)contactlessInterfaceSession:(id)arg1 didEndPersistentCardEmulationWithContext:(id)arg2;
- (void)contactlessInterfaceSessionDidTerminate:(id)arg1;
- (void)contactlessInterfaceSessionDidTerminate:(id)arg1 withErrorCode:(unsigned long long)arg2;
- (void)contactlessInterfaceSessionDidReceiveUntrustedTerminal:(id)arg1;
- (void)contactlessInterfaceSession:(id)arg1 didFinishTransactionWithContext:(id)arg2;
- (void)contactlessInterfaceSessionDidReceiveActivityTimeout:(id)arg1;
- (void)contactlessInterfaceSessionDidStartTransaction:(id)arg1;
- (void)contactlessInterfaceSessionDidFail:(id)arg1 forPaymentApplication:(id)arg2 paymentPass:(id)arg3 valueAddedServicePasses:(id)arg4;
- (void)contactlessInterfaceSessionDidTimeout:(id)arg1 forPaymentApplication:(id)arg2 paymentPass:(id)arg3 valueAddedServicePasses:(id)arg4;
- (void)contactlessInterfaceSessionDidFailTransaction:(id)arg1 forPaymentApplication:(id)arg2 paymentPass:(id)arg3;
- (void)contactlessInterfaceSessionDidExitField:(id)arg1;
- (void)contactlessInterfaceSessionDidEnterField:(id)arg1 withProperties:(id)arg2;
- (void)_checkContactlessValidity:(unsigned long long)arg1 authorizationValidity:(unsigned long long)arg2 performWork:(CDUnknownBlockType)arg3;
- (void)_checkContactlessValidity:(unsigned long long)arg1 performWork:(CDUnknownBlockType)arg2;
- (void)_internalQueue_getContactlessAndAuthorizationValidityAndPerformWork:(CDUnknownBlockType)arg1;
- (void)_updateAuthorizationValidity;
- (void)_internalQueue_updateContactlessValidityAndPerformWork:(CDUnknownBlockType)arg1;
- (void)_internalQueue_updateSessionWithCurrentPassAndLoyaltyState;
- (_Bool)_sessionQueue_authorizeWithDeferredAuthorization:(_Bool)arg1 useCredential:(_Bool)arg2;
- (_Bool)_sessionQueue_enablePersistentCardEmulation;
- (_Bool)_sessionQueue_startContactlessSessionWithSuccessfulCompletionOnInternalQueue:(CDUnknownBlockType)arg1;
- (void)_sessionQueue_invokeAppropriateCallbackForActivationWithSuccess:(_Bool)arg1 invokeOnSuccess:(_Bool)arg2 contactlessValidity:(unsigned long long)arg3 forPass:(id)arg4;
- (_Bool)_sessionQueue_updateContactlessSessionForPass:(id)arg1 paymentApplication:(id)arg2 vasPasses:(id)arg3 sessionConfirmed:(_Bool)arg4 deferAuthorization:(_Bool)arg5;
- (void)_internalQueue_updateContactlessSessionForPass:(id)arg1 vasPasses:(id)arg2 deferAuthorization:(_Bool)arg3;
- (void)_internalQueue_deactivateSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)deactivateSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)_updateSessionWithCredentialAndActivate;
@property(readonly, nonatomic) _Bool sessionStarted;
@property(nonatomic) _Bool deferAuthorization; // @synthesize deferAuthorization=_deferAuthorization;
@property(retain, nonatomic) NSDictionary *vasPasses; // @synthesize vasPasses=_vasPasses;
- (void)confirmSessionExpectingCredential:(_Bool)arg1;
- (void)setCredential:(id)arg1;
@property(retain, nonatomic) PKPass *currentPass; // @synthesize currentPass=_currentPass;
- (void)_internalQueue_setCurrentPass:(id)arg1;
- (void)executeRKEActionForPass:(id)arg1 function:(id)arg2 action:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)authorize18013RequestWithDataToRelease:(id)arg1 credential:(id)arg2;
- (_Bool)startSessionWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool isSwitchingSessionType;
- (_Bool)startSession;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

