//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "PUTileViewController.h"

@class NSString, NSUndoManager, PLRoundProgressView, PUAssetSharedViewModel, PUOperationStatus, PXOperationStatus, UIButton, UILabel, UIView;

__attribute__((visibility("hidden")))
@interface PURenderIndicatorTileViewController : PUTileViewController
{
    _Bool _needsUpdateStatus;
    _Bool _needsUpdateSizeClass;
    _Bool _needsUpdateStatusViews;
    _Bool _isProgressViewVisible;
    _Bool _willShowProgressAfterDelay;
    PUAssetSharedViewModel *_assetSharedViewModel;
    NSUndoManager *_undoManager;
    PUOperationStatus *_status;
    PXOperationStatus *_editActionStatus;
    long long _sizeClass;
    UIView *_roundedBackgroundView;
    UILabel *_renderingLabel;
    PLRoundProgressView *_progressView;
    UIButton *_errorButton;
    double _renderLabelTextWidth;
    struct CGSize _progressIndicatorSize;
}

+ (_Bool)wantsRenderViewForTypeOfProcessingNeeded:(unsigned short)arg1;
+ (id)_loadErrorIconForSizeClass:(long long)arg1;
+ (struct CGSize)renderIndicatorTileSizeForSizeClass:(long long)arg1;
+ (struct CGSize)progressIndicatorTileSizeForSizeClass:(long long)arg1;
- (void).cxx_destruct;
@property(nonatomic) _Bool willShowProgressAfterDelay; // @synthesize willShowProgressAfterDelay=_willShowProgressAfterDelay;
@property(nonatomic) double renderLabelTextWidth; // @synthesize renderLabelTextWidth=_renderLabelTextWidth;
@property(retain, nonatomic) UIButton *errorButton; // @synthesize errorButton=_errorButton;
@property(nonatomic) _Bool isProgressViewVisible; // @synthesize isProgressViewVisible=_isProgressViewVisible;
@property(retain, nonatomic) PLRoundProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UILabel *renderingLabel; // @synthesize renderingLabel=_renderingLabel;
@property(retain, nonatomic) UIView *roundedBackgroundView; // @synthesize roundedBackgroundView=_roundedBackgroundView;
@property(nonatomic) struct CGSize progressIndicatorSize; // @synthesize progressIndicatorSize=_progressIndicatorSize;
@property(nonatomic) long long sizeClass; // @synthesize sizeClass=_sizeClass;
@property(retain, nonatomic) PXOperationStatus *editActionStatus; // @synthesize editActionStatus=_editActionStatus;
@property(copy, nonatomic) PUOperationStatus *status; // @synthesize status=_status;
@property(nonatomic) _Bool needsUpdateStatusViews; // @synthesize needsUpdateStatusViews=_needsUpdateStatusViews;
@property(nonatomic) _Bool needsUpdateSizeClass; // @synthesize needsUpdateSizeClass=_needsUpdateSizeClass;
@property(nonatomic) _Bool needsUpdateStatus; // @synthesize needsUpdateStatus=_needsUpdateStatus;
@property(retain, nonatomic) NSUndoManager *undoManager; // @synthesize undoManager=_undoManager;
@property(retain, nonatomic) PUAssetSharedViewModel *assetSharedViewModel; // @synthesize assetSharedViewModel=_assetSharedViewModel;
- (void)loadingStatusManager:(id)arg1 didUpdateLoadingStatus:(id)arg2 forItem:(id)arg3;
- (void)_handleAssetSharedViewModel:(id)arg1 didChange:(id)arg2;
- (void)viewModel:(id)arg1 didChange:(id)arg2;
- (void)_updateSubviewOrdering;
- (void)_updateStatusViewsIfNeeded;
- (void)_invalidateStatusViews;
- (void)_updateSizeClassIfNeeded;
- (void)_invalidateSizeClass;
- (void)_updateStatusIfNeeded;
- (void)_invalidateStatus;
- (void)_setNeedsUpdate;
- (_Bool)_needsUpdate;
- (void)_updateIfNeeded;
- (void)setProgressViewVisible:(_Bool)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setProgressViewVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setProgressViewVisible:(_Bool)arg1;
- (void)_updateViewFramesForCollapseState:(_Bool)arg1;
- (struct CGRect)_expandedBackgroundViewFrame;
- (void)applyLayoutInfo:(id)arg1;
- (void)becomeReusable;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

