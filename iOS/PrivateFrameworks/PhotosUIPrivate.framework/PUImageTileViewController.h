//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "PUTileViewController.h"

@class CALayer, NSData, NSDate, NSString, NSURL, PUAssetViewModel, PUBrowsingViewModel, PUImageRequester, PUMediaProvider, PXImageLayerModulator, PXImageModulationManager, PXNumberAnimator, UIColor, UIImage, UIImageView, UIView;
@protocol PLTileableLayer, PUDisplayAsset, PUImageRequesterResult, PUImageTileViewControllerPresentingDelegate, PXVKImageAnalysisInteraction;

__attribute__((visibility("hidden")))
@interface PUImageTileViewController : PUTileViewController
{
    struct {
        _Bool respondsToPresentingViewController;
        _Bool respondsToShouldShowVisualIntelligenceOverlay;
        _Bool respondsToShouldEnableSubjectLiftingForVisualIntelligenceOverlay;
        _Bool respondsToPPTShouldSignalDeferredProcessingDoneAndFinalImageDisplayed;
    } _presentingDelegateFlags;
    _Bool _animatesImageAppearance;
    _Bool _preserveImageDuringReload;
    _Bool _shouldUseFullSizeImageData;
    _Bool _visualImageInteractionEnabled;
    _Bool __needsUpdateImage;
    _Bool __needsUpdateImageLayerModulator;
    _Bool __needsUpdateImageLayerModulatorInput;
    _Bool __needsUpdateFullSizeImageMetadata;
    _Bool __needsUpdateFullSizeTiledLayer;
    _Bool _needsUpdateTargetSize;
    _Bool _needsUpdateVisualIntelligenceOverlayContentsRect;
    _Bool __isDisplayingFullQualityImage;
    _Bool _shouldUsePenultimateVersionForNextImageUpdate;
    _Bool _canUseFullSizeTiledLayer;
    _Bool _requiresFullQualityImage;
    _Bool _shouldAnimateToFullQualityResult;
    _Bool _shouldRetainNonFinalImageUntilZoom;
    float _gainMapValue;
    PUBrowsingViewModel *_browsingViewModel;
    PUAssetViewModel *_assetViewModel;
    id <PUDisplayAsset> _asset;
    PUMediaProvider *_mediaProvider;
    PXImageModulationManager *_imageModulationManager;
    UIColor *_placeholderColor;
    id <PUImageTileViewControllerPresentingDelegate> _presentingDelegate;
    UIImageView *__imageView;
    UIView *_tiledLayerHostingView;
    PXNumberAnimator *_tiledLayerAlphaAnimator;
    NSData *__fullSizeImageData;
    NSURL *__fullSizeImageURL;
    long long __fullSizeImageOrientation;
    CALayer<PLTileableLayer> *__fullSizeTiledLayer;
    long long __assetLoadingStage;
    NSDate *__assetLoadingStartDate;
    id <PUImageRequesterResult> _displayedImageRequestResult;
    PUImageRequester *__imageRequester;
    PXImageLayerModulator *_imageLayerModulator;
    id <PXVKImageAnalysisInteraction> _imageInteraction;
    struct CGImage *_gainMapImage;
    struct CGSize __targetSize;
    struct CGSize __fullSizeImageUntransformedSize;
    struct CGSize __fullSizeImageSize;
}

+ (id)_supportedZoomImageFormats;
- (void).cxx_destruct;
@property(readonly, nonatomic) float gainMapValue; // @synthesize gainMapValue=_gainMapValue;
@property(readonly, nonatomic) struct CGImage *gainMapImage; // @synthesize gainMapImage=_gainMapImage;
@property(retain, nonatomic) id <PXVKImageAnalysisInteraction> imageInteraction; // @synthesize imageInteraction=_imageInteraction;
@property(retain, nonatomic) PXImageLayerModulator *imageLayerModulator; // @synthesize imageLayerModulator=_imageLayerModulator;
@property(retain, nonatomic, setter=_setImageRequester:) PUImageRequester *_imageRequester; // @synthesize _imageRequester=__imageRequester;
@property(nonatomic) _Bool shouldRetainNonFinalImageUntilZoom; // @synthesize shouldRetainNonFinalImageUntilZoom=_shouldRetainNonFinalImageUntilZoom;
@property(nonatomic) _Bool shouldAnimateToFullQualityResult; // @synthesize shouldAnimateToFullQualityResult=_shouldAnimateToFullQualityResult;
@property(retain, nonatomic) id <PUImageRequesterResult> displayedImageRequestResult; // @synthesize displayedImageRequestResult=_displayedImageRequestResult;
@property(nonatomic) _Bool requiresFullQualityImage; // @synthesize requiresFullQualityImage=_requiresFullQualityImage;
@property(nonatomic) _Bool canUseFullSizeTiledLayer; // @synthesize canUseFullSizeTiledLayer=_canUseFullSizeTiledLayer;
@property(nonatomic, setter=_setShouldUsePenultimateVersionForNextImageUpdate:) _Bool shouldUsePenultimateVersionForNextImageUpdate; // @synthesize shouldUsePenultimateVersionForNextImageUpdate=_shouldUsePenultimateVersionForNextImageUpdate;
@property(retain, nonatomic, setter=_setAssetLoadingStartDate:) NSDate *_assetLoadingStartDate; // @synthesize _assetLoadingStartDate=__assetLoadingStartDate;
@property(nonatomic, setter=_setAssetLoadingStage:) long long _assetLoadingStage; // @synthesize _assetLoadingStage=__assetLoadingStage;
@property(nonatomic, setter=_setDisplayingFullQualityImage:) _Bool _isDisplayingFullQualityImage; // @synthesize _isDisplayingFullQualityImage=__isDisplayingFullQualityImage;
@property(retain, nonatomic, setter=_setFullSizeTiledLayer:) CALayer<PLTileableLayer> *_fullSizeTiledLayer; // @synthesize _fullSizeTiledLayer=__fullSizeTiledLayer;
@property(nonatomic, setter=_setFullSizeImageSize:) struct CGSize _fullSizeImageSize; // @synthesize _fullSizeImageSize=__fullSizeImageSize;
@property(nonatomic, setter=_setFullSizeImageUntransformedSize:) struct CGSize _fullSizeImageUntransformedSize; // @synthesize _fullSizeImageUntransformedSize=__fullSizeImageUntransformedSize;
@property(nonatomic, setter=_setFullSizeImageOrientation:) long long _fullSizeImageOrientation; // @synthesize _fullSizeImageOrientation=__fullSizeImageOrientation;
@property(retain, nonatomic, setter=_setFullSizeImageURL:) NSURL *_fullSizeImageURL; // @synthesize _fullSizeImageURL=__fullSizeImageURL;
@property(retain, nonatomic, setter=_setFullSizeImageData:) NSData *_fullSizeImageData; // @synthesize _fullSizeImageData=__fullSizeImageData;
@property(retain, nonatomic) PXNumberAnimator *tiledLayerAlphaAnimator; // @synthesize tiledLayerAlphaAnimator=_tiledLayerAlphaAnimator;
@property(retain, nonatomic) UIView *tiledLayerHostingView; // @synthesize tiledLayerHostingView=_tiledLayerHostingView;
@property(readonly, nonatomic) UIImageView *_imageView; // @synthesize _imageView=__imageView;
@property(nonatomic) _Bool needsUpdateVisualIntelligenceOverlayContentsRect; // @synthesize needsUpdateVisualIntelligenceOverlayContentsRect=_needsUpdateVisualIntelligenceOverlayContentsRect;
@property(nonatomic) _Bool needsUpdateTargetSize; // @synthesize needsUpdateTargetSize=_needsUpdateTargetSize;
@property(nonatomic, setter=_setTargetSize:) struct CGSize _targetSize; // @synthesize _targetSize=__targetSize;
@property(nonatomic, setter=_setNeedsUpdateFullSizeTiledLayer:) _Bool _needsUpdateFullSizeTiledLayer; // @synthesize _needsUpdateFullSizeTiledLayer=__needsUpdateFullSizeTiledLayer;
@property(nonatomic, setter=_setNeedsUpdateFullSizeImageMetadata:) _Bool _needsUpdateFullSizeImageMetadata; // @synthesize _needsUpdateFullSizeImageMetadata=__needsUpdateFullSizeImageMetadata;
@property(nonatomic, setter=_setNeedsUpdateImageLayerModulatorInput:) _Bool _needsUpdateImageLayerModulatorInput; // @synthesize _needsUpdateImageLayerModulatorInput=__needsUpdateImageLayerModulatorInput;
@property(nonatomic, setter=_setNeedsUpdateImageLayerModulator:) _Bool _needsUpdateImageLayerModulator; // @synthesize _needsUpdateImageLayerModulator=__needsUpdateImageLayerModulator;
@property(nonatomic, setter=_setNeedsUpdateImage:) _Bool _needsUpdateImage; // @synthesize _needsUpdateImage=__needsUpdateImage;
@property(nonatomic) __weak id <PUImageTileViewControllerPresentingDelegate> presentingDelegate; // @synthesize presentingDelegate=_presentingDelegate;
@property(nonatomic) _Bool visualImageInteractionEnabled; // @synthesize visualImageInteractionEnabled=_visualImageInteractionEnabled;
@property(copy, nonatomic) UIColor *placeholderColor; // @synthesize placeholderColor=_placeholderColor;
@property(nonatomic) _Bool shouldUseFullSizeImageData; // @synthesize shouldUseFullSizeImageData=_shouldUseFullSizeImageData;
@property(nonatomic) _Bool preserveImageDuringReload; // @synthesize preserveImageDuringReload=_preserveImageDuringReload;
@property(nonatomic) _Bool animatesImageAppearance; // @synthesize animatesImageAppearance=_animatesImageAppearance;
@property(retain, nonatomic) PXImageModulationManager *imageModulationManager; // @synthesize imageModulationManager=_imageModulationManager;
@property(retain, nonatomic) PUMediaProvider *mediaProvider; // @synthesize mediaProvider=_mediaProvider;
@property(retain, nonatomic) id <PUDisplayAsset> asset; // @synthesize asset=_asset;
@property(retain, nonatomic) PUAssetViewModel *assetViewModel; // @synthesize assetViewModel=_assetViewModel;
@property(retain, nonatomic) PUBrowsingViewModel *browsingViewModel; // @synthesize browsingViewModel=_browsingViewModel;
- (void)_updateVKAnalysisAndDisplayMode;
- (void)_setVisualIntelligenceAnalyzingImageIfNeeded;
- (id)_addVKImageInteractionToImageView;
- (void)_removeVKImageInteractionFromImageView;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;
- (void)imageAnalysisInteractionDidDismissVisualSearchController:(id)arg1;
- (void)imageAnalysisInteraction:(id)arg1 didTapVisualSearchIndicatorWithNormalizedBoundingBox:(struct CGRect)arg2;
- (id)presentingViewControllerForImageAnalysisInteraction:(id)arg1;
- (void)_updateVisualIntelligenceUnitContentsRect;
- (void)_updateVisualIntelligenceOverlayContentsRectIfNeeded;
- (void)_invalidateVisualIntelligenceOverlayContentsRect;
- (_Bool)_allowsVKRemoveBackground;
- (void)_handleBrowsingViewModel:(id)arg1 didChange:(id)arg2;
- (void)_handleAssetViewModel:(id)arg1 didChange:(id)arg2;
- (void)viewModel:(id)arg1 didChange:(id)arg2;
- (void)_updateImageViewBackgroundColor;
- (void)_cancelAllImageRequests;
- (id)generateAssetTransitionInfo;
- (void)_updateReadyForDisplay;
- (void)_updateFullSizeTiledLayerIfNeeded;
- (void)_invalidateFullSizeTiledLayer;
- (void)_updateFullSizeImageMetadataIfNeeded;
- (void)_invalidateFullSizeImageMetadata;
- (void)_updateAssetLoadingStage;
- (void)updateMutableImageLayerModulator:(id)arg1;
- (void)updateModulatorInputs;
- (void)_updateImageLayerModulatorInputIfNeeded;
- (void)_invalidateImageLayerModulatorInput;
- (void)updateModulator;
- (void)_updateImageLayerModulatorIfNeeded;
- (void)_invalidateImageLayerModulator;
- (void)displayImageRequestResult:(id)arg1;
- (_Bool)shouldAnimateAppearanceOfResult:(id)arg1 overExistingResult:(id)arg2;
- (_Bool)shouldAdoptResult:(id)arg1 overExistingResult:(id)arg2;
- (void)imageRequesterDidUpdateFullSizeImageData:(id)arg1;
- (void)imageRequester:(id)arg1 didProduceResult:(id)arg2;
- (void)_updateImageIfNeeded;
- (void)_invalidateImage;
- (struct CGSize)targetSizeForProposedTargetSize:(struct CGSize)arg1;
- (double)_screenScale;
- (void)_updateTargetSizeIfNeeded;
- (void)_invalidateTargetSize;
- (void)_invalidate;
- (void)_updateIfNeeded;
- (_Bool)_needsUpdate;
- (void)isViewControllerTransitioningDidChange;
- (void)assetDidChange;
- (_Bool)shouldAvoidInPlaceSnapshottedFadeOut;
- (void)assetViewModelDidChange;
- (void)_handleShouldReloadAssetMediaNotification:(id)arg1;
- (void)setPreloadedImage:(id)arg1;
- (void)setGainMapValue:(float)arg1;
- (void)setGainMapImage:(struct CGImage *)arg1;
@property(readonly, nonatomic) _Bool gainMapImageIsAvailable;
@property(readonly, nonatomic) UIImage *image;
- (_Bool)_isDeferredProcessingFinished;
- (void)_notifyDeferredProcessingDoneAndFinalImageDisplayedIfNeeded;
- (void)setEdgeAntialiasingEnabled:(_Bool)arg1;
- (void)didChangeVisibleRect;
- (_Bool)wantsVisibleRectChanges;
- (void)_updateImageRequesterFullSizeImageDataProperties;
- (void)_setAssetWithoutUpdateIfNeeded:(id)arg1;
- (void)applyLayoutInfo:(id)arg1;
- (void)becomeReusable;
- (id)loadView;
- (void)expectedPresentationSizeDidChange;
- (_Bool)vkVisualSearchExistsAtPoint:(struct CGPoint)arg1;
- (_Bool)vkViewExistsAtPoint:(struct CGPoint)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

