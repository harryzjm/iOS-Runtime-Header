//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

__attribute__((visibility("hidden")))
@interface ISPlayerSettings
{
    _Bool _easingEnabled;
    _Bool _scaleDuringPlayback;
    _Bool _loopingEnabled;
    _Bool _crossfadeEnabled;
    _Bool _audioEnabled;
    _Bool _playIsSticky;
    _Bool _longExposureVitality;
    _Bool _playDuringHint;
    _Bool _showStateOverlay;
    _Bool _prerollBeforePlaying;
    _Bool _useDedicatedQueues;
    _Bool _allowFrameBlending;
    _Bool _allowVideoPreRoll;
    float _vitalityEaseMinRate;
    double _vitalityEaseDuration;
    long long _startBehavior;
    double _forceScrubRewindFactor;
    double _forceScrubMinRateChange;
    double _forceScrubMinimumRate;
    double _forceScrubMaximumInteractiveRate;
}

+ (id)settingsControllerModule;
+ (id)sharedInstance;
@property(nonatomic) double forceScrubMaximumInteractiveRate; // @synthesize forceScrubMaximumInteractiveRate=_forceScrubMaximumInteractiveRate;
@property(nonatomic) double forceScrubMinimumRate; // @synthesize forceScrubMinimumRate=_forceScrubMinimumRate;
@property(nonatomic) double forceScrubMinRateChange; // @synthesize forceScrubMinRateChange=_forceScrubMinRateChange;
@property(nonatomic) double forceScrubRewindFactor; // @synthesize forceScrubRewindFactor=_forceScrubRewindFactor;
@property(nonatomic) _Bool allowVideoPreRoll; // @synthesize allowVideoPreRoll=_allowVideoPreRoll;
@property(nonatomic) _Bool allowFrameBlending; // @synthesize allowFrameBlending=_allowFrameBlending;
@property(nonatomic) _Bool useDedicatedQueues; // @synthesize useDedicatedQueues=_useDedicatedQueues;
@property(nonatomic) _Bool prerollBeforePlaying; // @synthesize prerollBeforePlaying=_prerollBeforePlaying;
@property(nonatomic) _Bool showStateOverlay; // @synthesize showStateOverlay=_showStateOverlay;
@property(nonatomic) _Bool playDuringHint; // @synthesize playDuringHint=_playDuringHint;
@property(nonatomic) _Bool longExposureVitality; // @synthesize longExposureVitality=_longExposureVitality;
@property(nonatomic) _Bool playIsSticky; // @synthesize playIsSticky=_playIsSticky;
@property(nonatomic) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(nonatomic) _Bool crossfadeEnabled; // @synthesize crossfadeEnabled=_crossfadeEnabled;
@property(nonatomic) _Bool loopingEnabled; // @synthesize loopingEnabled=_loopingEnabled;
@property(nonatomic) _Bool scaleDuringPlayback; // @synthesize scaleDuringPlayback=_scaleDuringPlayback;
@property(nonatomic) long long startBehavior; // @synthesize startBehavior=_startBehavior;
@property(nonatomic) float vitalityEaseMinRate; // @synthesize vitalityEaseMinRate=_vitalityEaseMinRate;
@property(nonatomic) double vitalityEaseDuration; // @synthesize vitalityEaseDuration=_vitalityEaseDuration;
@property(nonatomic) _Bool easingEnabled; // @synthesize easingEnabled=_easingEnabled;
- (void)setDefaultValues;

@end

