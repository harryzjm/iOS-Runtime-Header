//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MTKTextureLoader, PKLinedPaper, PKMetalFramebuffer, PKMetalRenderState, PKMetalResourceHandler, PKMetalShader;
@protocol MTLBuffer, MTLCommandQueueSPI, MTLDevice, MTLTexture;

@interface PKMetalRenderer : NSObject
{
    PKMetalRenderState *_currentRenderState;
    unsigned long long _currentCacheSize;
    id <MTLDevice> _device;
    id <MTLCommandQueueSPI> _commandQueue;
    PKMetalFramebuffer *_originalBackFramebuffer;
    _Bool _originalBackFramebufferIsNonPurgeable;
    PKMetalFramebuffer *_sixChannelMultiplyFramebuffer;
    _Bool _sixChannelMultiplyFramebufferIsNonPurgeable;
    _Bool _shouldClearOriginalBackFramebuffer;
    CDStruct_3ead2808 _originalBackClearColor;
    PKMetalFramebuffer *_paintFramebuffer;
    _Bool _paintFramebufferIsNonPurgeable;
    PKMetalFramebuffer *_alwaysMemorylessPaintFramebuffer;
    PKMetalFramebuffer *_paintFramebufferMask;
    PKMetalFramebuffer *_maskMSAAFramebuffer;
    PKMetalResourceHandler *_resourceHandler;
    PKMetalFramebuffer *_dummyPaintFramebuffer;
    PKMetalFramebuffer *_dummyColorFramebuffer;
    struct CGSize _drawingPixelSize;
    struct CGColor *_backgroundColor;
    struct CGSize _actualSize;
    double _fromStrokeSpaceScale;
    struct CGAffineTransform _strokeTransform;
    struct CGRect _viewScissor;
    _Bool _lastPointForEraserIsValid;
    struct _PKStrokePoint _lastPointForEraser;
    id <MTLTexture> _paperTexture;
    struct CGSize _paperTextureSize;
    unsigned long long _pixelFormat;
    unsigned long long _originalBackPixelFormat;
    unsigned long long _paintAndParticlePixelFormat;
    struct vector<PKMetalParticleStrokePoint, std::allocator<PKMetalParticleStrokePoint>> _particleStrokePointBuffer;
    struct vector<PKMetalPaintStrokePoint, std::allocator<PKMetalPaintStrokePoint>> _paintStrokePointBuffer;
    struct vector<PKMetalLiveStrokePaintStrokePoint, std::allocator<PKMetalLiveStrokePaintStrokePoint>> _liveStrokeStrokePointBuffer;
    struct shared_ptr<std::vector<(anonymous namespace)::StrokeVertex>> _sharedStrokeVertexBuffer;
    struct vector<(anonymous namespace)::AnimatingStroke, std::allocator<(anonymous namespace)::AnimatingStroke>> _animatingStrokes;
    struct CGRect _paintFramebufferDirtyRect;
    PKMetalShader *_paintShader;
    PKMetalShader *_particleShader;
    PKMetalShader *_particleShaderWithAspectRatioSupport;
    PKMetalShader *_erasePaintShader;
    id <MTLBuffer> _particleIndexBuffer;
    id <MTLBuffer> _randomNumberBuffer;
    unsigned long long _renderMaskMSAASampleCount;
    _Bool _needRestartWorkaroundForOldIntelDrivers;
    _Bool _useComputeRenderCaches;
    _Bool _sixChannelBlending;
    struct CGRect _drawableDirtyRect;
    MTKTextureLoader *_textureLoader;
    _Bool _solidColorBackboard;
    _Bool _oneRenderPassForLiveRendering;
    _Bool _fadeOutStrokesMode;
    _Bool _liveStrokeMode;
    _Bool _edgeMask;
    _Bool _invertColors;
    PKLinedPaper *_linedPaper;
    struct CGColor *_liveRenderingOverrideColor;
    double _backboardPaperMultiply;
    double _inputScale;
    double _eraserIndicatorAlpha;
    double _liveStrokeElapsedTime;
    struct CGSize _liveStrokeMaxSize;
    struct CGAffineTransform _paperTransform;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dealloc;

@end

