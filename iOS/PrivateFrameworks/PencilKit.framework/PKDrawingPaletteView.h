//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PencilKit/PKDrawingPaletteViewStateSubject-Protocol.h>
#import <PencilKit/PKPaletteAdditionalOptionsViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteColorPickerViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteContentViewInputAssistantDelegate-Protocol.h>
#import <PencilKit/PKPaletteFloatingKeyboardControllerDelegate-Protocol.h>
#import <PencilKit/PKPalettePopoverUpdating-Protocol.h>
#import <PencilKit/PKPaletteToolPickerViewDataSource-Protocol.h>
#import <PencilKit/PKPaletteToolPickerViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteToolPreviewDelegate-Protocol.h>
#import <PencilKit/PKPaletteUndoRedoViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteViewStateSubject-Protocol.h>
#import <PencilKit/PKTextInputWindowFirstResponderControllerDelegate-Protocol.h>
#import <PencilKit/UIPencilInteractionDelegate-Protocol.h>

@class MTMaterialView, NSArray, NSLayoutConstraint, NSString, NSUndoManager, PKPaletteContentView, PKPaletteFloatingKeyboardController, PKPaletteInputAssistantButtonProvider, PKPaletteTapToRadarCommand, PKPaletteToolView, PKTextInputWindowFirstResponder, PKTextInputWindowFirstResponderController, PKTool, UIPencilInteraction, UIView, UIViewController, UIWindowScene;
@protocol PKDrawingPaletteViewDelegate, PKPaletteViewAnnotationDelegate;

@interface PKDrawingPaletteView <PKDrawingPaletteViewStateSubject, PKPaletteUndoRedoViewDelegate, PKPaletteToolPickerViewDelegate, PKPaletteColorPickerViewDelegate, PKPaletteAdditionalOptionsViewDelegate, PKPaletteToolPreviewDelegate, PKPalettePopoverUpdating, PKTextInputWindowFirstResponderControllerDelegate, PKPaletteFloatingKeyboardControllerDelegate, PKPaletteContentViewInputAssistantDelegate, PKPaletteToolPickerViewDataSource, UIPencilInteractionDelegate, PKPaletteViewStateSubject>
{
    NSUndoManager *_undoManager;
    _Bool _fingerDrawsOptionEnabled;
    _Bool _showsRuler;
    _Bool _showsPlusButton;
    _Bool _pencilInteractionEnabledWhenNotVisible;
    _Bool _wantsClearBackgroundColorInCompactSize;
    _Bool _wantsUndoRedoButtonsVisibleInCompactSize;
    _Bool _wantsEllipsisButtonVisibleInCompactSize;
    _Bool _wantsBottomLineDividerVisibleInCompactSize;
    _Bool _useEqualSpacingLayoutInCompactSize;
    _Bool _wantsMulticolorSwatchShadowInCompactSize;
    _Bool _wantsUndoRedoButtonsShadowInCompactSize;
    _Bool _isEditingOpacity;
    _Bool _editingStrokeSelection;
    _Bool _editingTextSelection;
    long long _colorUserInterfaceStyle;
    NSArray *_tools;
    unsigned long long _indexOfSelectedTool;
    double _interItemToolsSpacingInCompactSize;
    double _interItemUndoRedoButtonsSpacingInCompactSize;
    MTMaterialView *_backgroundView;
    PKPaletteContentView *_contentView;
    NSLayoutConstraint *_contentViewBottomConstraint;
    NSLayoutConstraint *_compactContentViewHeightConstraint;
    UIView *_bottomLineDividerView;
    double _interItemUndoRedoButtonsSpacing;
    PKTextInputWindowFirstResponderController *_firstResponderController;
    PKPaletteFloatingKeyboardController *_floatingKeyboardController;
    PKPaletteInputAssistantButtonProvider *_inputAssistantButtonProvider;
    UIPencilInteraction *_pencilInteraction;
    long long _contextEditingMode;
    PKPaletteTapToRadarCommand *_tapToRadarCommand;
    id <PKPaletteViewAnnotationDelegate> _annotationDelegate;
    UIView *_opacityEditingView;
}

- (void).cxx_destruct;
@property(nonatomic, getter=isEditingTextSelection) _Bool editingTextSelection; // @synthesize editingTextSelection=_editingTextSelection;
@property(nonatomic, getter=isEditingStrokeSelection) _Bool editingStrokeSelection; // @synthesize editingStrokeSelection=_editingStrokeSelection;
@property(readonly, nonatomic) UIView *opacityEditingView; // @synthesize opacityEditingView=_opacityEditingView;
@property(nonatomic) __weak id <PKPaletteViewAnnotationDelegate> annotationDelegate; // @synthesize annotationDelegate=_annotationDelegate;
@property(retain, nonatomic) PKPaletteTapToRadarCommand *tapToRadarCommand; // @synthesize tapToRadarCommand=_tapToRadarCommand;
@property(nonatomic) long long contextEditingMode; // @synthesize contextEditingMode=_contextEditingMode;
@property(readonly, nonatomic) UIPencilInteraction *pencilInteraction; // @synthesize pencilInteraction=_pencilInteraction;
@property(retain, nonatomic) PKPaletteInputAssistantButtonProvider *inputAssistantButtonProvider; // @synthesize inputAssistantButtonProvider=_inputAssistantButtonProvider;
@property(retain, nonatomic) PKPaletteFloatingKeyboardController *floatingKeyboardController; // @synthesize floatingKeyboardController=_floatingKeyboardController;
@property(retain, nonatomic) PKTextInputWindowFirstResponderController *firstResponderController; // @synthesize firstResponderController=_firstResponderController;
@property(nonatomic) double interItemUndoRedoButtonsSpacing; // @synthesize interItemUndoRedoButtonsSpacing=_interItemUndoRedoButtonsSpacing;
@property(nonatomic) _Bool isEditingOpacity; // @synthesize isEditingOpacity=_isEditingOpacity;
@property(retain, nonatomic) UIView *bottomLineDividerView; // @synthesize bottomLineDividerView=_bottomLineDividerView;
@property(retain, nonatomic) NSLayoutConstraint *compactContentViewHeightConstraint; // @synthesize compactContentViewHeightConstraint=_compactContentViewHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *contentViewBottomConstraint; // @synthesize contentViewBottomConstraint=_contentViewBottomConstraint;
@property(retain, nonatomic) PKPaletteContentView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) MTMaterialView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(nonatomic) _Bool wantsUndoRedoButtonsShadowInCompactSize; // @synthesize wantsUndoRedoButtonsShadowInCompactSize=_wantsUndoRedoButtonsShadowInCompactSize;
@property(nonatomic) _Bool wantsMulticolorSwatchShadowInCompactSize; // @synthesize wantsMulticolorSwatchShadowInCompactSize=_wantsMulticolorSwatchShadowInCompactSize;
@property(nonatomic) _Bool useEqualSpacingLayoutInCompactSize; // @synthesize useEqualSpacingLayoutInCompactSize=_useEqualSpacingLayoutInCompactSize;
@property(nonatomic) _Bool wantsBottomLineDividerVisibleInCompactSize; // @synthesize wantsBottomLineDividerVisibleInCompactSize=_wantsBottomLineDividerVisibleInCompactSize;
@property(nonatomic) _Bool wantsEllipsisButtonVisibleInCompactSize; // @synthesize wantsEllipsisButtonVisibleInCompactSize=_wantsEllipsisButtonVisibleInCompactSize;
@property(nonatomic) _Bool wantsUndoRedoButtonsVisibleInCompactSize; // @synthesize wantsUndoRedoButtonsVisibleInCompactSize=_wantsUndoRedoButtonsVisibleInCompactSize;
@property(nonatomic) _Bool wantsClearBackgroundColorInCompactSize; // @synthesize wantsClearBackgroundColorInCompactSize=_wantsClearBackgroundColorInCompactSize;
@property(nonatomic, getter=isPencilInteractionEnabledWhenNotVisible) _Bool pencilInteractionEnabledWhenNotVisible; // @synthesize pencilInteractionEnabledWhenNotVisible=_pencilInteractionEnabledWhenNotVisible;
@property(nonatomic) double interItemUndoRedoButtonsSpacingInCompactSize; // @synthesize interItemUndoRedoButtonsSpacingInCompactSize=_interItemUndoRedoButtonsSpacingInCompactSize;
@property(nonatomic) double interItemToolsSpacingInCompactSize; // @synthesize interItemToolsSpacingInCompactSize=_interItemToolsSpacingInCompactSize;
@property(readonly, nonatomic) unsigned long long indexOfSelectedTool; // @synthesize indexOfSelectedTool=_indexOfSelectedTool;
@property(copy, nonatomic) NSArray *tools; // @synthesize tools=_tools;
@property(nonatomic) _Bool showsPlusButton; // @synthesize showsPlusButton=_showsPlusButton;
@property(nonatomic) _Bool showsRuler; // @synthesize showsRuler=_showsRuler;
@property(nonatomic, getter=isFingerDrawsOptionEnabled) _Bool fingerDrawsOptionEnabled; // @synthesize fingerDrawsOptionEnabled=_fingerDrawsOptionEnabled;
@property(nonatomic) long long colorUserInterfaceStyle; // @synthesize colorUserInterfaceStyle=_colorUserInterfaceStyle;
- (void)_toolViewStateDidChange:(id)arg1;
- (id)_paletteToolViewFromTool:(id)arg1;
- (id)toolPickerView:(id)arg1 viewForToolAtIndex:(long long)arg2;
- (long long)numberOfToolsInToolPickerView:(id)arg1;
@property(readonly, nonatomic) PKPaletteToolView *selectedToolView;
@property(readonly, nonatomic) PKTool *selectedTool;
- (_Bool)_canSelectToolAtIndex:(unsigned long long)arg1;
- (void)_selectToolAtIndex:(unsigned long long)arg1 updateUI:(_Bool)arg2 notifyDelegate:(_Bool)arg3;
- (void)selectToolAtIndex:(unsigned long long)arg1;
- (_Bool)_canReplaceToolAtIndex:(unsigned long long)arg1 withTool:(id)arg2;
- (void)_replaceToolAtIndex:(unsigned long long)arg1 withTool:(id)arg2;
- (void)_setTools:(id)arg1 resetSelectedTool:(_Bool)arg2 updateUI:(_Bool)arg3 notifyDelegate:(_Bool)arg4;
- (id)_currentFirstResponder;
- (void)_updateHandwritingAssistantItemsFromResponder:(id)arg1;
- (void)_updateHandwritingAssistantItems;
- (void)_updateKeyboardSceneDelegateInputAssistantSupressionState;
- (id)responderForFloatingKeyboardController:(id)arg1;
- (_Bool)isHandwritingToolSelected;
- (_Bool)_hasToolWithIdentifier:(id)arg1;
@property(readonly, nonatomic) _Bool hasHandwritingTool;
@property(readonly, nonatomic) UIView *contextualEditingView;
- (struct CGRect)plusButtonFrame;
- (void)dismissPalettePopoverWithCompletion:(CDUnknownBlockType)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)endOpacityEditing;
- (void)startOpacityEditing;
- (void)didEndAppearanceAnimation;
- (void)willStartAppearanceAnimation:(_Bool)arg1;
- (void)configureForDockedAtEdge:(unsigned long long)arg1;
- (void)configureForDockedAtCorner;
- (_Bool)_canHandlePencilInteraction;
- (void)_performPencilPreferredActionShowColorPalette;
- (void)_performPencilPreferredActionSwitchPrevious;
- (void)_performPencilPreferredActionSwitchEraser;
- (void)pencilInteractionDidTap:(id)arg1;
- (id)keyboardSelectionMenuForContentView:(id)arg1;
- (void)contentViewDidDismissInputAssistantView:(id)arg1;
- (void)contentViewDidSelectInputAssistantReturnKeyItem:(id)arg1;
- (void)contentViewDidSelectInputAssistantKeyboardItem:(id)arg1;
- (void)_presentOrDismissFloatingKeyboard;
- (id)keyboardSelectionMenuForAdditionalOptionsView:(id)arg1;
- (void)additionalOptionsViewDidPressTapToRadarButton:(id)arg1;
- (void)additionalOptionsViewDidPressReturnKeyButton:(id)arg1;
- (void)additionalOptionsViewDidPressKeyboardButton:(id)arg1;
- (void)additionalOptionsView:(id)arg1 didToggleAutoHideOption:(_Bool)arg2;
- (void)additionalOptionsViewDidSelectPlusButton:(id)arg1;
- (void)toolPreviewDidChangeToolColor:(id)arg1;
- (void)_centerPaletteContainerSubviewToCurrentlySelectedToolForEdge:(unsigned long long)arg1 needsContainerViewLayout:(_Bool)arg2;
- (void)_willDockPaletteToCorner:(unsigned long long)arg1;
- (void)_willDockPaletteToEdge:(unsigned long long)arg1 prepareForExpansion:(_Bool)arg2 isPaletteChangingOrientation:(_Bool)arg3;
- (void)hostView:(id)arg1 didDockPaletteToPosition:(long long)arg2;
- (void)hostView:(id)arg1 willDockPaletteToPosition:(long long)arg2 prepareForExpansion:(_Bool)arg3;
- (_Bool)colorPickerShouldDisplayColorSelection:(id)arg1;
- (void)colorPickerDidChangeSelectedColor:(id)arg1 isFromExtendedColorPicker:(_Bool)arg2;
- (double)toolPickerView:(id)arg1 widthForToolAtIndex:(long long)arg2 isCompactSize:(_Bool)arg3;
- (void)toolPickerViewDidChangeTraitCollectionSizeClass:(id)arg1;
- (void)toolPickerDidToggleRulerTool:(id)arg1;
- (void)toolPicker:(id)arg1 didSelectTool:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)floatingKeyboardController:(id)arg1 didChangeKeyboardType:(long long)arg2;
- (void)floatingKeyboardControllerWillHide:(id)arg1;
- (void)floatingKeyboardControllerWillShow:(id)arg1;
@property(readonly, nonatomic) PKTextInputWindowFirstResponder *windowFirstResponder;
- (void)windowFirstResponderController:(id)arg1 didChangeFirstResponder:(id)arg2;
@property(readonly, nonatomic) UIWindowScene *windowScene;
- (void)undoRedoViewDidTapRedo:(id)arg1;
- (void)undoRedoViewDidTapUndo:(id)arg1;
- (void)_updateToolPreviewForEdge:(unsigned long long)arg1;
- (_Bool)_isPaletteContentViewHidden;
- (void)_updateToolPreview;
- (id)_selectedToolViewInToolPicker;
- (id)_selectedColor;
- (void)_updateColorPickerSelectedColor;
- (void)setSelectedAnnotationType:(long long)arg1;
- (void)_setSelectedToolColor:(id)arg1 ignoreColorOpacity:(_Bool)arg2;
@property(readonly, nonatomic, getter=isEllipsisButtonVisible) _Bool ellipsisButtonVisible;
- (unsigned long long)paletteViewType;
- (void)_changeWasDone:(id)arg1;
- (void)_changeWasRedone:(id)arg1;
- (void)_changeWasUndone:(id)arg1;
- (void)_releaseUndoManager;
- (void)setUndoManager:(id)arg1;
- (id)undoManager;
@property(readonly, nonatomic) long long floatingKeyboardType;
@property(readonly, nonatomic) _Bool enableKeyboardButtons;
@property(readonly, nonatomic, getter=isVisible) _Bool visible;
@property(readonly, copy, nonatomic) NSArray *inputAssistantItems;
- (void)updateUndoRedo;
@property(readonly, nonatomic, getter=isAnnotationSupportEnabled) _Bool annotationSupportEnabled;
- (id)_clippingViewBackgroundColor;
- (void)layoutSubviews;
- (void)updatePopoverUI;
- (double)_paletteWidthForHorizontalOrientation;
- (double)_paletteHeightForVerticalOrientation;
- (struct CGSize)paletteSizeForEdge:(unsigned long long)arg1;
- (double)compactPaletteHeight;
- (_Bool)_isPaletteConsideredMinimized;
- (_Bool)_shouldShowFingerDrawsOption;
- (_Bool)_canShowFingerDrawsOption;
- (void)_updateUI;
- (_Bool)shouldAdjustShadowRadiusForMinimized;
- (double)shadowRadius;
- (double)shadowOpacity;
- (double)borderWidthForTraitCollection:(id)arg1;
- (id)borderColorForTraitCollection:(id)arg1;
- (void)_installPaletteContentViewInView:(id)arg1;
- (double)dampingRatioForThrowingFromPosition:(long long)arg1 toPosition:(long long)arg2 withVelocity:(struct CGPoint)arg3;
- (double)responseForThrowingFromPosition:(long long)arg1 toPosition:(long long)arg2 withVelocity:(struct CGPoint)arg3;
- (void)dealloc;
- (void)safeAreaInsetsDidChange;
- (void)didChangePaletteScaleFactor;
- (id)initWithTools:(id)arg1 wantsEllipsisButtonVisibleInCompactSize:(_Bool)arg2;
- (id)initWithTools:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, nonatomic, getter=isAutoHideEnabled) _Bool autoHideEnabled;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <PKDrawingPaletteViewDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) UIViewController *palettePopoverPresentingController;
@property(readonly, nonatomic) double paletteScaleFactor;
@property(readonly) Class superclass;

@end

