//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PencilKit/PKPaletteViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteViewInteractionDelegate-Protocol.h>

@class NSArray, NSHashTable, NSString, PKDrawingPaletteView, PKPaletteHostView, PKPaletteViewInteraction, PKTool, UIViewController;
@protocol PKPaletteViewAnnotationDelegate, PKPaletteViewDelegate, PKToolPickerPrivateDelegate;

@interface PKToolPicker : NSObject <PKPaletteViewDelegate, PKPaletteViewInteractionDelegate>
{
    _Bool __showsHandwritingTool;
    _Bool _wasVisibleBeforeResponderChanges;
    _Bool _didCalculateVisibleBeforeResponderChanges;
    _Bool _rulerActive;
    _Bool _showsDrawingPolicyControls;
    _Bool __paletteWasCompact;
    _Bool __pencilInteractionEnabledWhenNotVisible;
    _Bool __inputViewVisible;
    _Bool __wantsClearBackgroundColorInCompactSize;
    _Bool __animatingToVisible;
    PKTool *_selectedTool;
    NSString *_stateAutosaveName;
    long long _overrideUserInterfaceStyle;
    long long _colorUserInterfaceStyle;
    NSHashTable *__observers;
    NSHashTable *__firstRespondersForVisibleUI;
    PKPaletteViewInteraction *__interaction;
    NSArray *__toolIdentifiers;
    NSArray *__toolProperties;
    UIViewController *__presentationController;
    id <PKPaletteViewAnnotationDelegate> __annotationDelegate;
    id <PKPaletteViewDelegate> __additionalPaletteViewDelegate;
    id <PKToolPickerPrivateDelegate> __delegate;
}

+ (_Bool)_canShowHandwritingTool;
+ (_Bool)_textInputWantsToolPickerVisible:(id)arg1 forFirstResponder:(id)arg2;
+ (_Bool)_internalClassWantsToolPicker:(id)arg1 visibleForResponder:(id)arg2;
+ (id)sharedToolPickerForWindow:(id)arg1;
+ (_Bool)isActiveToolPickerVisibleForWindow:(id)arg1;
+ (id)activeToolPickerForWindow:(id)arg1;
+ (id)_windowForToolPicker:(id)arg1;
+ (id)_windowSceneForToolPicker:(id)arg1;
+ (id)_toolPickerForWindow:(id)arg1;
+ (void)_setPrefersPencilOnlyDrawingForiWork:(_Bool)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=_isAnimatingToVisible) _Bool _animatingToVisible; // @synthesize _animatingToVisible=__animatingToVisible;
@property(nonatomic) __weak id <PKToolPickerPrivateDelegate> _delegate; // @synthesize _delegate=__delegate;
@property(nonatomic, setter=_setWantsClearBackgroundColorInCompactSize:) _Bool _wantsClearBackgroundColorInCompactSize; // @synthesize _wantsClearBackgroundColorInCompactSize=__wantsClearBackgroundColorInCompactSize;
@property(nonatomic, setter=_setAdditionalPaletteViewDelegate:) __weak id <PKPaletteViewDelegate> _additionalPaletteViewDelegate; // @synthesize _additionalPaletteViewDelegate=__additionalPaletteViewDelegate;
@property(nonatomic, setter=_setAnnotationDelegate:) __weak id <PKPaletteViewAnnotationDelegate> _annotationDelegate; // @synthesize _annotationDelegate=__annotationDelegate;
@property(nonatomic, setter=_setPresentationController:) __weak UIViewController *_presentationController; // @synthesize _presentationController=__presentationController;
@property(nonatomic, getter=_isInputViewVisible, setter=_setInputViewVisible:) _Bool _inputViewVisible; // @synthesize _inputViewVisible=__inputViewVisible;
@property(nonatomic, getter=_isPencilInteractionEnabledWhenNotVisible) _Bool _pencilInteractionEnabledWhenNotVisible; // @synthesize _pencilInteractionEnabledWhenNotVisible=__pencilInteractionEnabledWhenNotVisible;
@property(retain, nonatomic) NSArray *_toolProperties; // @synthesize _toolProperties=__toolProperties;
@property(retain, nonatomic) NSArray *_toolIdentifiers; // @synthesize _toolIdentifiers=__toolIdentifiers;
@property(nonatomic) _Bool _paletteWasCompact; // @synthesize _paletteWasCompact=__paletteWasCompact;
@property(retain, nonatomic, setter=_setInteraction:) PKPaletteViewInteraction *_interaction; // @synthesize _interaction=__interaction;
@property(retain, nonatomic) NSHashTable *_firstRespondersForVisibleUI; // @synthesize _firstRespondersForVisibleUI=__firstRespondersForVisibleUI;
@property(retain, nonatomic) NSHashTable *_observers; // @synthesize _observers=__observers;
@property(nonatomic) _Bool showsDrawingPolicyControls; // @synthesize showsDrawingPolicyControls=_showsDrawingPolicyControls;
@property(nonatomic) long long colorUserInterfaceStyle; // @synthesize colorUserInterfaceStyle=_colorUserInterfaceStyle;
@property(nonatomic) long long overrideUserInterfaceStyle; // @synthesize overrideUserInterfaceStyle=_overrideUserInterfaceStyle;
@property(copy, nonatomic) NSString *stateAutosaveName; // @synthesize stateAutosaveName=_stateAutosaveName;
@property(nonatomic, getter=isRulerActive) _Bool rulerActive; // @synthesize rulerActive=_rulerActive;
@property(retain, nonatomic) PKTool *selectedTool; // @synthesize selectedTool=_selectedTool;
@property(nonatomic) _Bool _didCalculateVisibleBeforeResponderChanges; // @synthesize _didCalculateVisibleBeforeResponderChanges;
@property(nonatomic) _Bool _wasVisibleBeforeResponderChanges; // @synthesize _wasVisibleBeforeResponderChanges;
@property(nonatomic, setter=_setShowsHandwritingTool:) _Bool _showsHandwritingTool; // @synthesize _showsHandwritingTool=__showsHandwritingTool;
- (void)setIsEditingStrokeSelection:(_Bool)arg1;
@property(readonly, nonatomic, getter=_isHandwritingToolSelected) _Bool _handwritingToolSelected;
- (void)_tellDelegateToHideToolPicker;
- (id)_internalClassesAcceptingFirstResponder;
- (void)_updatePaletteUserInterfaceStyle:(long long)arg1;
- (void)_updatePaletteTraitCollection:(id)arg1;
@property(readonly, nonatomic) PKPaletteHostView *_paletteHostView;
@property(nonatomic, getter=_isBackgroundMaterialUpdatingPaused, setter=_setBackgroundMaterialUpdatingPaused:) _Bool _backgroundMaterialUpdatingPaused;
- (void)_hasSeenPencilPairingUIDidChange:(id)arg1;
- (void)_recognitionLocaleIdentifierDidChange:(id)arg1;
- (void)paletteViewInteractionWillEnterForeground:(id)arg1;
- (void)paletteViewInteractionDidActivate:(id)arg1;
- (void)inputResponderController:(id)arg1 inputViewSetVisibilityDidChange:(_Bool)arg2 includedReset:(_Bool)arg3;
- (_Bool)shouldHandlePencilInteractionWhenNotVisible:(id)arg1;
- (id)paletteViewColorPickerPopoverPresentationSourceView:(id)arg1;
- (struct CGRect)paletteViewColorPickerPopoverPresentationSourceRect:(id)arg1;
- (void)paletteView:(id)arg1 didChangeColor:(id)arg2;
- (void)paletteViewDidChangePosition:(id)arg1;
- (void)paletteViewDidToggleRuler:(id)arg1;
- (void)paletteViewSelectedToolInkDidChange:(id)arg1;
- (_Bool)paletteView:(id)arg1 shouldSetSelectedToolColor:(id)arg2;
- (id)paletteViewUndoManager:(id)arg1;
- (void)paletteViewFirstResponderDidUpdate:(id)arg1;
- (id)paletteViewCurrentFirstResponder:(id)arg1;
- (void)_savePaletteViewState;
- (void)_restoreToolPickerState;
@property(readonly, nonatomic) NSString *_paletteViewStateRestorationDefaultsKey;
- (void)dealloc;
- (id)init;
- (void)_enableTapInteractionForWindow:(id)arg1;
- (struct CGRect)frameObscuredInView:(id)arg1;
- (void)_updateUI;
- (id)_configuredPaletteViewInteractionForWindow:(id)arg1;
- (void)_setVisibleInWindow:(id)arg1;
- (void)_updateToolPickerVisibility;
@property(readonly, nonatomic) _Bool isVisible;
@property(readonly, nonatomic) _Bool _interactionIsValid;
- (void)calculateIsVisibleBeforeResponderChangesForCurrentRunLoopIfNecessary;
- (void)_setSelectedTool:(id)arg1 saveOptions:(_Bool)arg2 updateUI:(_Bool)arg3;
@property(readonly, nonatomic) PKDrawingPaletteView *_paletteView;
- (void)_updateVisibilityForFirstResponder:(id)arg1;
- (void)setVisible:(_Bool)arg1 forFirstResponder:(id)arg2;
- (void)_saveStateIfNecessary;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)_currentFirstResponder;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

