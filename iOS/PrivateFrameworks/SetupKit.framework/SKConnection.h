//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CBConnection, CUPairingSession, CUPairingStream, NSData, NSError, NSMutableArray, NSMutableDictionary, NSString, SKDevice;
@protocol CUReadWriteRequestable, OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface SKConnection : NSObject
{
    _Bool _activateCalled;
    unsigned long long _authThrottleDeadlineTicks;
    NSObject<OS_dispatch_source> *_authThrottleTimer;
    CDStruct_798ebea5 _frameHeader;
    id <CUReadWriteRequestable> _requestable;
    int _runState;
    _Bool _invalidateCalled;
    _Bool _invalidateDone;
    unsigned long long _mainAuthTagLength;
    CUPairingStream *_mainStream;
    CUPairingSession *_pairSetupSession;
    CUPairingSession *_pairVerifySession;
    _Bool _readRequested;
    _Bool _receivingHeader;
    NSMutableDictionary *_requests;
    NSMutableArray *_sendArray;
    _Bool _showPasswordCalled;
    NSObject<OS_dispatch_source> *_startTimer;
    _Bool _stepDone;
    NSError *_stepError;
    struct LogCategory *_ucat;
    unsigned int _xidLast;
    _Bool _clientMode;
    int _passwordType;
    unsigned int _bluetoothUseCase;
    int _state;
    CDUnknownBlockType _authCompletionHandler;
    CDUnknownBlockType _authHidePasswordHandler;
    CDUnknownBlockType _authShowPasswordHandler;
    CDUnknownBlockType _authPromptHandler;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSString *_label;
    NSString *_password;
    CBConnection *_bleConnection;
    SKDevice *_blePeerDevice;
    CDUnknownBlockType _errorHandler;
    NSData *_pskData;
    CDUnknownBlockType _invalidationHandler;
    CDUnknownBlockType _receivedEventHandler;
    CDUnknownBlockType _receivedRequestHandler;
    CDUnknownBlockType _sendDataHandler;
    CDUnknownBlockType _stateChangedHandler;
}

- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType stateChangedHandler; // @synthesize stateChangedHandler=_stateChangedHandler;
@property(nonatomic) int state; // @synthesize state=_state;
@property(copy, nonatomic) CDUnknownBlockType sendDataHandler; // @synthesize sendDataHandler=_sendDataHandler;
@property(copy, nonatomic) CDUnknownBlockType receivedRequestHandler; // @synthesize receivedRequestHandler=_receivedRequestHandler;
@property(copy, nonatomic) CDUnknownBlockType receivedEventHandler; // @synthesize receivedEventHandler=_receivedEventHandler;
@property(copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(copy, nonatomic) NSData *pskData; // @synthesize pskData=_pskData;
@property(copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(nonatomic) _Bool clientMode; // @synthesize clientMode=_clientMode;
@property(nonatomic) unsigned int bluetoothUseCase; // @synthesize bluetoothUseCase=_bluetoothUseCase;
@property(retain, nonatomic) SKDevice *blePeerDevice; // @synthesize blePeerDevice=_blePeerDevice;
@property(retain, nonatomic) CBConnection *bleConnection; // @synthesize bleConnection=_bleConnection;
@property(nonatomic) int passwordType; // @synthesize passwordType=_passwordType;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(copy, nonatomic) CDUnknownBlockType authPromptHandler; // @synthesize authPromptHandler=_authPromptHandler;
@property(copy, nonatomic) CDUnknownBlockType authShowPasswordHandler; // @synthesize authShowPasswordHandler=_authShowPasswordHandler;
@property(copy, nonatomic) CDUnknownBlockType authHidePasswordHandler; // @synthesize authHidePasswordHandler=_authHidePasswordHandler;
@property(copy, nonatomic) CDUnknownBlockType authCompletionHandler; // @synthesize authCompletionHandler=_authCompletionHandler;
- (void)_receivedResponse:(id)arg1;
- (void)_receivedRequest:(id)arg1;
- (void)_receivedEvent:(id)arg1;
- (void)_receivedObject:(id)arg1;
- (void)_receivedHeader:(const CDStruct_798ebea5 *)arg1 encryptedObjectData:(id)arg2;
- (void)_receivedHeader:(const CDStruct_798ebea5 *)arg1 body:(id)arg2;
- (void)_receiveCompletion:(id)arg1;
- (void)_receiveStart:(id)arg1;
- (void)receivedData:(id)arg1;
- (void)_timeoutForXID:(id)arg1;
- (void)_timeoutForSendEntry:(id)arg1;
- (void)_abortRequestsWithError:(id)arg1;
- (void)_processSends;
- (void)_sendHeaderData:(id)arg1 bodyData:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_sendFrameType:(unsigned char)arg1 unencryptedObject:(id)arg2;
- (void)_sendFrameType:(unsigned char)arg1 body:(id)arg2;
- (void)_sendResponse:(id)arg1 error:(id)arg2 xid:(id)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_sendRequestID:(id)arg1 request:(id)arg2 options:(id)arg3 sendEntry:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;
- (void)sendRequestID:(id)arg1 request:(id)arg2 options:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
- (void)_sendEventID:(id)arg1 data:(id)arg2 xid:(unsigned int)arg3 options:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)sendEventID:(id)arg1 data:(id)arg2 xid:(unsigned int)arg3 options:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)sendEventID:(id)arg1 event:(id)arg2 options:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_serverError:(id)arg1;
- (void)_serverPairVerifyCompleted:(id)arg1;
- (void)_serverPairVerifyContinueWithData:(id)arg1 start:(_Bool)arg2;
- (void)_serverPairSetupCompleted:(id)arg1;
- (void)_serverPairSetupContinueWithData:(id)arg1 start:(_Bool)arg2;
- (void)_serverAcceptBLE;
- (void)_serverAccept;
- (void)_serverRun;
- (void)_clientError:(id)arg1;
- (void)_clientPairVerifyCompleted:(id)arg1;
- (void)_clientPairVerifyWithData:(id)arg1;
- (void)_clientPairVerifyStart;
- (void)_clientPairSetupCompleted:(id)arg1;
- (void)_clientPairSetupPromptWithFlags:(unsigned int)arg1 passwordType:(int)arg2 throttleSeconds:(int)arg3;
- (void)_clientPairSetupContinueWithData:(id)arg1;
- (void)_clientPairSetupStart;
- (void)_clientConnectCompleted:(id)arg1;
- (void)_clientConnectStartBLE;
- (void)_clientConnectStart;
- (void)_clientRun;
- (void)_updateExternalState;
- (void)tryPassword:(id)arg1;
- (void)_run;
- (void)_pskPrepareClientMode:(_Bool)arg1;
- (void)_pairVerifyInvalidate;
- (void)_pairSetupInvalidate;
- (id)deriveKeyWithSaltPtr:(const void *)arg1 saltLen:(unsigned long long)arg2 infoPtr:(const void *)arg3 infoLen:(unsigned long long)arg4 keyLen:(unsigned long long)arg5 error:(id *)arg6;
- (void)_invalidated;
- (void)_invalidateCore:(id)arg1;
- (void)_invalidateWithError:(id)arg1;
- (void)invalidate;
- (void)_activateWithCompletion:(CDUnknownBlockType)arg1;
- (void)activateWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

