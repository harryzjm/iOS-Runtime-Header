//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSHashTable, NSMapTable, NSMutableDictionary, WBSCoreAnalyticsExtensionsStatistics, _WKRemoteObjectInterface;
@protocol WBSWebExtensionWindow, WBSWebExtensionsControllerDelegate;

@interface WBSWebExtensionsController
{
    NSHashTable *_extensionsWithWebRequestListeners;
    NSHashTable *_extensionsWithWebNavigationListeners;
    NSMutableDictionary *_extensionIdentifierToData;
    NSMapTable *_portsBySourceWebView;
    NSMutableDictionary *_ports;
    _WKRemoteObjectInterface *_bundleControllerRemoteObjectInterface;
    _WKRemoteObjectInterface *_controllerRemoteObjectInterface;
    NSMapTable *_selectorForwarders;
    struct {
        unsigned int _supportsWebRequestEvents:1;
    } _delegateFlags;
    NSMutableDictionary *_tabIDToPendingLanguageDetectionCompletionHandlersMap;
    NSMutableDictionary *_nativeRequestIdentifiersToCompletionHandlers;
    NSMapTable *_portIdentifiersPendingConnectionToDestinationWebView;
}

+ (double)pendingSiteAccessTimeoutInterval;
+ (double)temporarySiteAccessTimeInterval;
+ (id)_commandShortcutConflictsForExtension:(id)arg1 sortedWebExtensions:(id)arg2;
+ (id)_firstConflctForCommand:(id)arg1 inSortedWebExtensions:(id)arg2;
+ (id)_urlForExtensionSettings;
+ (id)_composedIdentifierForStateOfExtensionWithBundleIdentifier:(id)arg1 developerIdentifier:(id)arg2;
+ (id)extensionURLScheme;
+ (id)_extensionPointIdentifier;
- (void).cxx_destruct;
@property(readonly, nonatomic) WBSCoreAnalyticsExtensionsStatistics *extensionStatisticsReport;
- (_Bool)hasShownPerSiteAccessPermissionForExtension:(id)arg1;
- (void)didShowPerSiteAccessPermissionForExtension:(id)arg1;
- (id)_extensionURLToLoadFromPersistentStateURL:(id)arg1;
- (id)_persistentStateURLForExtensionURL:(id)arg1;
- (void)_notifyExtensionsIfNecessaryThatFocusChangedToWindowWithID:(double)arg1 isPopupWindow:(_Bool)arg2;
- (void)_cancelCheckIfNoBrowserWindowIsFocusedTimer;
- (void)didActivateWindow:(id)arg1;
- (void)didOpenWindow:(id)arg1;
- (void)_updateWindow:(id)arg1 updateInfo:(id)arg2;
- (void)updateWindow:(id)arg1 withInfo:(id)arg2 extensionIdentifier:(id)arg3 webView:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)getInformationForAllWindowsForExtensionIdentifier:(id)arg1 getInfo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)getInformationForLastFocusedWindowForExtensionIdentifier:(id)arg1 getInfo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)getInformationForWindow:(id)arg1 getInfo:(id)arg2 extensionIdentifier:(id)arg3 webView:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_getWindowStateForWindow:(id)arg1 queryOptions:(id)arg2 webExtension:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_currentWindowForWebView:(id)arg1 extension:(id)arg2;
- (void)getAllFramesInfoInTabWithID:(double)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_addFrameInfoFromFrameSubtree:(id)arg1 parent:(id)arg2 toArray:(id)arg3;
- (void)getFrameInfoInTabWithID:(double)arg1 frameWithID:(int)arg2 extensionIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_getFrameInfoInFrameSubtree:(id)arg1 parent:(id)arg2 frameID:(int)arg3;
- (id)_frameInfoFromNode:(id)arg1 parent:(id)arg2;
- (void)navigationFinishedForTab:(id)arg1 request:(id)arg2 frame:(id)arg3;
- (void)navigationCommittedForTab:(id)arg1 request:(id)arg2 frame:(id)arg3;
- (void)navigationFailedForTab:(id)arg1 request:(id)arg2 frame:(id)arg3;
- (void)navigationStartedForTab:(id)arg1 request:(id)arg2 frame:(id)arg3;
- (_Bool)_extensionHasWebNavigationPermissionRemovingListenerIfNot:(id)arg1;
- (id)_navigationDetailsForTab:(id)arg1 request:(id)arg2 frame:(id)arg3;
- (void)setIconPathDictionary:(id)arg1 iconImageDataDictionary:(id)arg2 forTab:(id)arg3 extensionIdentifier:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)enableToolbarItemForTab:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)disableToolbarItemForTab:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setToolbarItemPopupPath:(id)arg1 forTab:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)getToolbarItemPopupForTab:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setToolbarItemBadgeText:(id)arg1 forTab:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)getToolbarItemBadgeTextForTab:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setToolbarItemTitle:(id)arg1 forTab:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)getToolbarItemTitleForTab:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)didSelectTab:(id)arg1;
- (void)fireOnUpdatedEventForTab:(id)arg1 withChangedProperties:(unsigned long long)arg2;
- (void)fireOnUpdatedEventForTab:(id)arg1 toExtension:(id)arg2 withChangedProperties:(unsigned long long)arg3;
- (void)_fireOnUpdatedEventForTabsMatchingOriginPatterns:(id)arg1 toExtension:(id)arg2;
- (void)didMoveTab:(id)arg1 fromWindowWithID:(double)arg2 indexInOldWindow:(unsigned long long)arg3;
- (void)didMoveTab:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)didCloseTab:(id)arg1 windowIsClosing:(_Bool)arg2;
- (void)didOpenTab:(id)arg1;
- (void)captureVisibleTabInWindow:(id)arg1 format:(id)arg2 quality:(id)arg3 extensionIdentifier:(id)arg4 webView:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)removeCSSWithDetails:(id)arg1 fromExtensionWithID:(id)arg2 toTabWithID:(id)arg3 webView:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)insertCSSWithDetails:(id)arg1 fromExtensionWithID:(id)arg2 toTabWithID:(id)arg3 webView:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_relateOpenerTabIfExistsToTab:(id)arg1 properties:(id)arg2;
- (void)updateTab:(id)arg1 properties:(id)arg2 extensionIdentifier:(id)arg3 webView:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)languageDetectionStateDidChangeForTab:(id)arg1;
- (void)consumePendingLanguageDetectionCompletionHandlersForTab:(id)arg1 languageCode:(id)arg2;
- (void)detectLanguageForTab:(id)arg1 extensionIdentifier:(id)arg2 webView:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)setZoomForTab:(id)arg1 zoomFactor:(id)arg2 extensionIdentifier:(id)arg3 webView:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)getZoomForTab:(id)arg1 extensionIdentifier:(id)arg2 webView:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)closeTabsWithIDs:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)goBackInTab:(id)arg1 extensionIdentifier:(id)arg2 webView:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)goForwardInTab:(id)arg1 extensionIdentifier:(id)arg2 webView:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)reloadTab:(id)arg1 reloadFromOrigin:(_Bool)arg2 extensionIdentifier:(id)arg3 webView:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)executeScriptWithDetails:(id)arg1 fromExtensionWithID:(id)arg2 toTabWithID:(id)arg3 webView:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)queryTabs:(id)arg1 forExtensionWithID:(id)arg2 webView:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)duplicateTab:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)createTabWithProperties:(id)arg1 extensionIdentifier:(id)arg2 webView:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)getInformationForTab:(id)arg1 extensionIdentifier:(id)arg2 webView:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_getFramesFromFrameTree:(id)arg1 startingFrameID:(unsigned long long)arg2 shouldIncludeChildren:(_Bool)arg3 foundStartingFrame:(_Bool)arg4 toArray:(id)arg5;
- (id)_determineSourceStringForProgrammaticInjection:(id)arg1 extension:(id)arg2;
- (id)_frontmostTabInWindow:(id)arg1;
- (id)_allTabs;
- (id)_storageOfType:(long long)arg1 forExtensionWithUniqueIdentifier:(id)arg2;
- (void)getStorageSizeForAllKeysInStorageOfType:(long long)arg1 forExtensionWithUniqueIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)getStorageSizeForKeys:(id)arg1 inStorageOfType:(long long)arg2 forExtensionWithUniqueIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)deleteDatabaseForStorageOfType:(long long)arg1 forExtensionWithUniqueIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)deleteValuesForKeys:(id)arg1 fromStorageOfType:(long long)arg2 forExtensionWithUniqueIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)setKeyedData:(id)arg1 inStorageOfType:(long long)arg2 forExtensionWithUniqueIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)getValuesForAllKeysFromStorageOfType:(long long)arg1 forExtensionWithUniqueIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)getValuesForKeys:(id)arg1 fromStorageOfType:(long long)arg2 forExtensionWithUniqueIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_fireOnChangedStorageEventForExtensionWithUniqueIdentifier:(id)arg1 removedKeysAndValues:(id)arg2 forStorageOfType:(long long)arg3;
- (void)_fireOnChangedStorageEventForExtensionWithUniqueIdentifier:(id)arg1 changedKeysAndNewValues:(id)arg2 oldKeysAndValues:(id)arg3 forStorageOfType:(long long)arg4;
- (void)_notifyExtension:(id)arg1 storageWasChangedWithChanges:(id)arg2 forStorageOfType:(long long)arg3;
- (void)loadBackgroundPageForExtensionWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)reloadExtensionWithIdentifier:(id)arg1;
- (void)openOptionsPageForExtensionIdentifier:(id)arg1 requestingWebView:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_permissionsMayHaveBeenChangedExternallyForExtension:(id)arg1 previousExtensionState:(id)arg2;
- (void)removePermissions:(id)arg1 origins:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)requestPermissions:(id)arg1 origins:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_showAccessRequestAlertForExtension:(id)arg1 domains:(id)arg2 callingAPIName:(id)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (id)_filteredOriginsRemovingAllHostsPatterns:(id)arg1 containedAllHostsPattern:(_Bool *)arg2;
- (void)_webExtensionDataPermissionsWereRevokedOrRemoved:(id)arg1;
- (void)_webExtensionDataPermissionsWereGranted:(id)arg1;
- (void)_savePermissionsToStorageAndPostDidChangeNotificationSoonForWebExtension:(id)arg1 permissionsWereUpdatedDueToAnExternalChange:(_Bool)arg2;
- (void)_savePermissionsToStorageIfNecessaryAndPostDidChangeNotificationForWebExtension:(id)arg1;
- (void)_savePermissionsToStorageForWebExtension:(id)arg1;
- (void)_loadPermissionsFromStorageForWebExtension:(id)arg1;
- (void)removeTemporaryStateAfterURLChangeIfNecessaryForTab:(id)arg1 currentURL:(id)arg2 previousURL:(id)arg3;
- (void)loadPermissionsIfNecessaryForExtension:(id)arg1;
- (void)terminateConnectionFromPortWithID:(id)arg1 fromExtensionWithID:(id)arg2;
- (_Bool)webViewHasOpenPorts:(id)arg1;
- (void)_removePort:(id)arg1 webExtension:(id)arg2;
- (void)postMessage:(id)arg1 fromPortWithID:(id)arg2 fromExtensionWithID:(id)arg3;
- (void)connectFromWebView:(id)arg1 fromPortWithID:(id)arg2 fromExtensionWithID:(id)arg3 toApplicationWithID:(id)arg4;
- (void)connectFromWebView:(id)arg1 fromPortWithID:(id)arg2 fromExtensionWithID:(id)arg3 toTabWithID:(double)arg4 connectInfo:(id)arg5 rawSenderInfo:(id)arg6;
- (void)connectFromWebView:(id)arg1 fromPortWithID:(id)arg2 fromExtensionWithID:(id)arg3 toExtensionWithID:(id)arg4 connectInfo:(id)arg5 rawSenderInfo:(id)arg6;
- (void)_onConnectCompletionHandlerForExtension:(id)arg1 fromWebView:(id)arg2 fromPortWithID:(id)arg3 connectInfo:(id)arg4 sender:(id)arg5;
- (void)_setPortIdentifiersForInitiatingWebView:(id)arg1 fromPortWithID:(id)arg2;
- (id)_senderFromWebView:(id)arg1 withRawSenderInfo:(id)arg2 forExtension:(id)arg3;
- (id)_registerNewPortWithID:(id)arg1 asConnectingFrom:(id)arg2 to:(id)arg3 extensionID:(id)arg4 applicationID:(id)arg5;
- (_Bool)anyWebExtensionContentBlockerEnabled;
- (void)removeContentBlockerForExtension:(id)arg1;
- (void)getEnabledDeclarativeNetRequestRulesetsForExtensionWithIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)loadDeclarativeNetRequestErrorStringsForWebExtension:(id)arg1;
- (void)saveDeclarativeNetRequestCompilationStateToStorageForWebExtension:(id)arg1 hash:(id)arg2 errorStrings:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)loadDeclarativeNetRequestRulesetStateFromStorageForWebExtension:(id)arg1;
- (void)_saveDeclarativeNetRequestRulesetStateToStorageForWebExtension:(id)arg1 rulesetIDsToEnabledState:(id)arg2;
- (void)_toggleRulesetsForWebExtension:(id)arg1 rulesets:(id)arg2 newValue:(_Bool)arg3 rulesetIDsToEnabledState:(id)arg4;
- (id)_validateRulesetIDs:(id)arg1 webExtension:(id)arg2;
- (void)updateEnabledDeclarativeNetRequestRulesetsForExtensionWithIdentifier:(id)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)getAllCookieStoresForExtensionIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeCookieWithDetails:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setCookieWithDetails:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)getAllCookiesWithDetails:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)getCookieWithURL:(id)arg1 name:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_extensionsToIncludeInContextMenuWithContext:(id)arg1;
- (void)executeContextMenuItem:(id)arg1;
- (void)removeAllContextMenuItemsForExtensionWithIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeContextMenuItemWithIdentifier:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateContextMenuItemWithIdentifier:(id)arg1 properties:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)createContextMenuItem:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)fireOnCommandEventIfNecessaryForWebExtension:(id)arg1 commandName:(id)arg2;
- (id)commandShortcutConflictsForExtension:(id)arg1;
- (id)webExtensionKeyCommands;
- (id)_discoverabilityTitleForCommand:(id)arg1 webExtension:(id)arg2;
- (id)_enabledWebExtensionsSortedByDisplayShortName;
- (void)invalidateAlarmsForExtensionWithIdentifier:(id)arg1;
- (void)clearAlarmWithName:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)getAllAlarmsForExtensionWithIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)getAlarmWithName:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)createAlarmWithName:(id)arg1 alarmInfo:(id)arg2 extensionIdentifier:(id)arg3;
- (_Bool)showOptionsForExtension:(id)arg1 requestingWebView:(id)arg2;
@property(readonly, nonatomic) id <WBSWebExtensionWindow> lastFocusedWindow;
- (id)_windowForWindowID:(id)arg1 webView:(id)arg2 extension:(id)arg3;
- (_Bool)_canSendMessageFromWebView:(id)arg1;
- (void)_captureVisibleTab:(id)arg1 format:(id)arg2 quality:(double)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_relateParentTab:(id)arg1 toTab:(id)arg2;
- (void)_unpinTab:(id)arg1;
- (void)_pinTab:(id)arg1;
- (id)_duplicateTab:(id)arg1;
- (void)_createNewTabInWindow:(id)arg1 tabIndex:(id)arg2 url:(id)arg3 makeActive:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)_tabForWebView:(id)arg1;
- (id)_tabForTabID:(id)arg1 webView:(id)arg2 extension:(id)arg3;
- (id)_findTabInAnyWindowWithID:(double)arg1;
- (id)_allWindows;
- (void)_showPromptForExtensionDisabledBecauseItDoesNotSupportThisVersionOfSafariWithMessage:(id)arg1 extensionIdentifier:(id)arg2;
- (id)_safariShortVersion;
- (void)_clearNewTabPreferenceIfNecessaryForRemovedExtensionWithComposedIdentifier:(id)arg1;
- (void)_deleteStorageForExtensionWithComposedIdentifier:(id)arg1;
- (void)_deleteStateForExtensionWithComposedIdentifier:(id)arg1;
- (void)_prepareToFireEventToExtensionWithUniqueIdentifierIfEnabled:(id)arg1 eventType:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_enumerateMessageReceiversForEnabledExtensionsForEventType:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_updateWebExtensionDataMapForExtension:(id)arg1;
@property(readonly) unsigned long long toolbarItemIdealPointSize;
- (id)substituteDataForExtensionURL:(id)arg1 usingMIMEType:(id *)arg2;
- (void)saveUniqueIdentifierToStorageForWebExtension:(id)arg1;
- (id)lastSeenUniqueIdentiferForWebExtension:(id)arg1;
- (void)saveBackgroundPageListenersToStorageForWebExtension:(id)arg1;
- (id)loadBackgroundPageListenersVersionNumberFromStorageForWebExtension:(id)arg1;
- (id)loadBackgroundPageListenersFromStorageForWebExtension:(id)arg1;
- (void)removeListenerForExtensionWithIdentifier:(id)arg1 type:(unsigned long long)arg2 webView:(id)arg3;
- (void)addListenerForExtensionWithIdentifier:(id)arg1 type:(unsigned long long)arg2 webView:(id)arg3;
- (void)removeListenersIfNecessaryForExtension:(id)arg1;
- (void)addListenersIfNecessaryForExtension:(id)arg1;
- (void)_addOrRemoveListenersIfNecessaryForExtension:(id)arg1;
- (void)_addOrRemoveWebRequestListenerIfNecessaryForExtension:(id)arg1;
- (void)_addOrRemoveWebNavigationListenerIfNecessaryForExtension:(id)arg1;
- (void)_removeWebRequestListenerForExtension:(id)arg1;
- (void)_addWebRequestListenerForExtension:(id)arg1;
- (void)_removeWebNavigationListenerForExtension:(id)arg1;
- (void)_addWebNavigationListenerForExtension:(id)arg1;
- (void)disconnectAllPortsFromWebView:(id)arg1;
- (void)sendMessage:(id)arg1 toApplicationWithID:(id)arg2 fromExtensionWithIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)sendMessage:(id)arg1 fromExtensionWithID:(id)arg2 fromWebView:(id)arg3 rawSenderInfo:(id)arg4 toTabWithID:(double)arg5 withOptions:(id)arg6 responseCallback:(CDUnknownBlockType)arg7;
- (void)sendMessage:(id)arg1 fromExtensionWithID:(id)arg2 fromWebView:(id)arg3 rawSenderInfo:(id)arg4 toExtensionWithID:(id)arg5 replyHandler:(CDUnknownBlockType)arg6;
- (void)sendMessageFromContainingApp:(id)arg1 toExtensionWithIdentifier:(id)arg2;
- (id)bundleControllerProxyForWebView:(id)arg1;
- (void)unregisterRemoteObjectFromWebView:(id)arg1;
- (void)registerRemoteObjectWithWebView:(id)arg1;
@property(readonly) _Bool showAllWebsiteAccessRequestsAsAlerts;
- (id)installationDateForExtension:(id)arg1;
- (id)extensionWithBaseURIHost:(id)arg1;
- (id)webExtensionForBaseURIHost:(id)arg1;
- (id)webExtensionForComposedIdentifier:(id)arg1;
- (id)webExtensionForExtensionIdentifier:(id)arg1;
- (id)webExtensionForExtension:(id)arg1;
- (id)_generateBaseURIForExtension:(id)arg1;
- (id)lastSeenBaseURIForExtension:(id)arg1 updatingWithCurrentBaseURI:(id)arg2;
- (void)_updateExtensionStateIfThisVersionOfSafariIsNotSupported:(id)arg1;
- (id)_updatedExtensionStateForCurrentPermissions:(id)arg1 previousExtensionState:(id)arg2;
- (_Bool)_extensionShouldBeEnabled:(id)arg1;
- (void)setExtension:(id)arg1 isEnabled:(_Bool)arg2 skipSavingToStorage:(_Bool)arg3;
- (_Bool)extensionIsEnabled:(id)arg1;
- (void)_unloadPreviouslyEnabledExtension:(id)arg1;
- (void)_loadEnabledExtension:(id)arg1;
- (void)_queueStartupAndInstallEventsForExtensionIfNecessary:(id)arg1;
- (id)_versionNumberForExtension:(id)arg1;
- (id)_displayVersionForExtension:(id)arg1;
- (id)_displayNameForExtension:(id)arg1;
@property(nonatomic) __weak id <WBSWebExtensionsControllerDelegate> delegate; // @dynamic delegate;
- (id)init;

@end

