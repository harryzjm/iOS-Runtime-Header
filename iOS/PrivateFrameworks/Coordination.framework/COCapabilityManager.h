//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Coordination/COCapabilityManagerClientInterface-Protocol.h>

@class NSArray, NSSet, NSString, NSXPCConnection;
@protocol COCapabilityManagerConnectionProvider, OS_dispatch_queue;

@interface COCapabilityManager : NSObject <COCapabilityManagerClientInterface>
{
    struct os_unfair_lock_s _lock;
    NSSet *_registeredCapabilities;
    NSArray *_observers;
    NSObject<OS_dispatch_queue> *_observerQueue;
    NSXPCConnection *_lastConnection;
    id <COCapabilityManagerConnectionProvider> _provider;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) id <COCapabilityManagerConnectionProvider> provider; // @synthesize provider=_provider;
@property(nonatomic) __weak NSXPCConnection *lastConnection; // @synthesize lastConnection=_lastConnection;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *observerQueue; // @synthesize observerQueue=_observerQueue;
- (void)_registerObserver:(id)arg1;
- (void)_registerCapabililty:(id)arg1;
- (void)_lostConnectionToService;
- (id)_remoteInterfaceWithErrorHandler:(CDUnknownBlockType)arg1;
- (void)_withLock:(CDUnknownBlockType)arg1;
- (void)_notifyObserver:(id)arg1 available:(_Bool)arg2;
@property(copy, nonatomic) NSArray *observers; // @synthesize observers=_observers;
@property(copy, nonatomic) NSSet *registeredCapabilities; // @synthesize registeredCapabilities=_registeredCapabilities;
- (void)availabilityChanged:(_Bool)arg1 ofCapability:(id)arg2 inCluster:(id)arg3;
- (void)removeObserver:(id)arg1;
- (id)addObserverForCapability:(id)arg1 inCluster:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)unregisterCapability:(id)arg1;
- (void)registerCapability:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithConnectionProvider:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

