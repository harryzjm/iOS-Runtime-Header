//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class SCLSettingsSyncContext, SCLSettingsSyncErrorHandler, SCLSettingsSyncState;
@protocol SCLSettingsSyncStateMachineDelegate;

@interface SCLSettingsSyncStateMachine : NSObject
{
    id <SCLSettingsSyncStateMachineDelegate> _delegate;
    SCLSettingsSyncContext *_context;
    SCLSettingsSyncErrorHandler *_errorHandler;
    SCLSettingsSyncState *_currentState;
    SCLSettingsSyncState *_syncedState;
    SCLSettingsSyncState *_pendingSendState;
    SCLSettingsSyncState *_sendingState;
    SCLSettingsSyncState *_sentState;
    SCLSettingsSyncState *_failedState;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) SCLSettingsSyncState *failedState; // @synthesize failedState=_failedState;
@property(readonly, nonatomic) SCLSettingsSyncState *sentState; // @synthesize sentState=_sentState;
@property(readonly, nonatomic) SCLSettingsSyncState *sendingState; // @synthesize sendingState=_sendingState;
@property(readonly, nonatomic) SCLSettingsSyncState *pendingSendState; // @synthesize pendingSendState=_pendingSendState;
@property(readonly, nonatomic) SCLSettingsSyncState *syncedState; // @synthesize syncedState=_syncedState;
@property(readonly, nonatomic) SCLSettingsSyncState *currentState; // @synthesize currentState=_currentState;
@property(readonly, nonatomic) SCLSettingsSyncErrorHandler *errorHandler; // @synthesize errorHandler=_errorHandler;
@property(retain, nonatomic) SCLSettingsSyncContext *context; // @synthesize context=_context;
@property(nonatomic) __weak id <SCLSettingsSyncStateMachineDelegate> delegate; // @synthesize delegate=_delegate;
- (void)transitionToState:(id)arg1;
- (void)cancelCommitTimer;
- (void)scheduleCommitTimerWithInterval:(double)arg1;
- (void)cancelRetryActivity;
- (void)scheduleRetryWithActivityCriteria:(id)arg1;
- (void)performSync;
- (_Bool)_isRelevantMessage:(id)arg1;
- (void)message:(id)arg1 didFailToAcknowledgeWithError:(id)arg2;
- (void)messageWasDelivered:(id)arg1;
- (void)messageDidSend:(id)arg1;
- (void)message:(id)arg1 failedWithError:(id)arg2;
- (void)didEnqueueMessage:(id)arg1;
- (void)enqueueFailedWithError:(id)arg1;
- (void)xpcActivityStarted;
- (void)significantUserInteractionOccurred;
- (void)commitSettings;
- (void)settingsDidChange;
- (void)activate;
- (id)initWithContext:(id)arg1;
- (id)init;

@end

