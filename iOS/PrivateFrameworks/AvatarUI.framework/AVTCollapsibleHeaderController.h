//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AvatarUI/UIScrollViewDelegate-Protocol.h>

@class NSString, UIScrollView, UIView;
@protocol AVTCollapsibleHeaderControllerDelegate, UIScrollViewDelegate;

@interface AVTCollapsibleHeaderController : NSObject <UIScrollViewDelegate>
{
    _Bool _shouldResizeHeaderForScrolling;
    _Bool _shouldSnapToMinOrMax;
    _Bool _shouldOnlyExpandWhenScrollingAtEdge;
    _Bool _shouldPushContentOffsetOnExpandOrCollapse;
    _Bool _shouldCollapseOnBottomBounceScroll;
    UIScrollView *_scrollView;
    UIView *_headerView;
    id <AVTCollapsibleHeaderControllerDelegate> _delegate;
    double _minHeight;
    double _maxHeight;
    double _additionalTopContentInset;
    id <UIScrollViewDelegate> _scrollViewDelegate;
    double _scrollToCompressionMultiplier;
    double _expandMarginalScrollDistance;
    double _collapseMarginalScrollDistance;
    double _previousOffset;
    double _singleTouchOffset;
    unsigned long long _currentScrollDirection;
}

- (void).cxx_destruct;
@property(nonatomic) unsigned long long currentScrollDirection; // @synthesize currentScrollDirection=_currentScrollDirection;
@property(nonatomic) double singleTouchOffset; // @synthesize singleTouchOffset=_singleTouchOffset;
@property(nonatomic) double previousOffset; // @synthesize previousOffset=_previousOffset;
@property(nonatomic) _Bool shouldCollapseOnBottomBounceScroll; // @synthesize shouldCollapseOnBottomBounceScroll=_shouldCollapseOnBottomBounceScroll;
@property(nonatomic) _Bool shouldPushContentOffsetOnExpandOrCollapse; // @synthesize shouldPushContentOffsetOnExpandOrCollapse=_shouldPushContentOffsetOnExpandOrCollapse;
@property(nonatomic) double collapseMarginalScrollDistance; // @synthesize collapseMarginalScrollDistance=_collapseMarginalScrollDistance;
@property(nonatomic) double expandMarginalScrollDistance; // @synthesize expandMarginalScrollDistance=_expandMarginalScrollDistance;
@property(nonatomic) double scrollToCompressionMultiplier; // @synthesize scrollToCompressionMultiplier=_scrollToCompressionMultiplier;
@property(nonatomic) __weak id <UIScrollViewDelegate> scrollViewDelegate; // @synthesize scrollViewDelegate=_scrollViewDelegate;
@property(nonatomic) _Bool shouldOnlyExpandWhenScrollingAtEdge; // @synthesize shouldOnlyExpandWhenScrollingAtEdge=_shouldOnlyExpandWhenScrollingAtEdge;
@property(nonatomic) _Bool shouldSnapToMinOrMax; // @synthesize shouldSnapToMinOrMax=_shouldSnapToMinOrMax;
@property(nonatomic) _Bool shouldResizeHeaderForScrolling; // @synthesize shouldResizeHeaderForScrolling=_shouldResizeHeaderForScrolling;
@property(nonatomic) double additionalTopContentInset; // @synthesize additionalTopContentInset=_additionalTopContentInset;
@property(nonatomic) double maxHeight; // @synthesize maxHeight=_maxHeight;
@property(nonatomic) double minHeight; // @synthesize minHeight=_minHeight;
@property(nonatomic) id <AVTCollapsibleHeaderControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(readonly, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)updateInsetsIfNeeded;
- (struct UIEdgeInsets)updatedScrollViewInsetsFromExistingInsets:(struct UIEdgeInsets)arg1;
@property(readonly, nonatomic) double currentHeightForHeader;
- (void)updateHeaderSizeForGlobalHeaderHeight:(double)arg1;
- (double)headerHeightForContentOffset:(double)arg1 contentInset:(struct UIEdgeInsets)arg2;
- (void)updateHeaderHeightToMatchScrollViewStateForScrollDirection:(unsigned long long)arg1 animated:(_Bool)arg2;
- (_Bool)shouldResizeGivenScrollDirection:(unsigned long long)arg1 currentHeaderHeight:(double)arg2 targetHeaderHeight:(double)arg3;
- (_Bool)shouldResizeGivenMarginalScrollDistancesForScrollDirection:(unsigned long long)arg1;
- (void)scrollToTopAnimated:(_Bool)arg1;
- (struct CGPoint)topContentOffsetWithHeaderHeight:(double)arg1;
- (void)scrollToTopPreservingHeaderHeight:(_Bool)arg1 animated:(_Bool)arg2;
- (void)animationDidUpdateWithDisplayLink:(id)arg1;
- (void)updateHeaderForHeight:(double)arg1 withOffset:(struct CGPoint)arg2 animated:(_Bool)arg3;
- (void)snapToMinMaxIfNeededAnimated:(_Bool)arg1;
- (void)collapseAnimated:(_Bool)arg1;
- (void)expandAnimated:(_Bool)arg1 withFocusRect:(struct CGRect)arg2 standardItemHeight:(double)arg3;
- (void)expandAnimated:(_Bool)arg1;
- (void)updateMinHeight:(double)arg1 maxHeight:(double)arg2 animated:(_Bool)arg3;
- (id)initWithScrollView:(id)arg1 headerView:(id)arg2 minHeight:(double)arg3 maxHeight:(double)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

