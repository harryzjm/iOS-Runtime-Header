//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "HMIVideoAnalyzer.h"

@class HMFTimer, HMIVideoAssetWriter, HMIVideoCommandBuffer, HMIVideoDecoder, HMIVideoEncoder, HMIVideoEventBuffer, HMIVideoFrameAnalyzer, HMIVideoFrameSampler, HMIVideoFrameSelector, HMIVideoFrameTracker, HMIVideoTemporalEventFilter, HMIVideoTimeline, NSData, NSDate, NSObject, NSString;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface HMIVideoAnalyzerServer : HMIVideoAnalyzer
{
    long long _numDecodedSamples;
    long long _numDidAnalyzeFrames;
    long long _numDidAnalyzePackages;
    long long _numDidAnalyzeFragments;
    long long _numDidCreateTimelapseFragments;
    _Bool _monitored;
    _Bool _encode;
    _Bool _hasFailed;
    _Bool _cancelled;
    double _analysisFPS;
    NSObject<OS_dispatch_queue> *_inputQueue;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_queue> *_encoderQueue;
    struct opaqueCMFormatDescription *_inputVideoFormat;
    struct opaqueCMFormatDescription *_inputAudioFormat;
    struct opaqueCMFormatDescription *_timelapseOutputVideoFormat;
    HMFTimer *_watchdogTimer;
    HMIVideoCommandBuffer *_commandBuffer;
    HMIVideoDecoder *_decoder;
    HMIVideoFrameSampler *_frameThumbnailSampler;
    HMIVideoFrameSampler *_frameTimelapseSampler;
    HMIVideoEncoder *_encoder;
    HMIVideoEncoder *_timelapseEncoder;
    HMIVideoFrameSelector *_frameSelector;
    HMIVideoFrameTracker *_frameTracker;
    HMIVideoFrameAnalyzer *_frameAnalyzer;
    HMIVideoAssetWriter *_assetWriter;
    HMIVideoAssetWriter *_timelapseAssetWriter;
    HMIVideoEventBuffer *_frameAnalyzerFrameResultBuffer;
    HMIVideoEventBuffer *_thumbnailBuffer;
    NSData *_initializationSegment;
    NSData *_timelapseInitializationSegment;
    HMIVideoEventBuffer *_dynamicConfigurationBuffer;
    HMIVideoTemporalEventFilter *_temporalEventFilter;
    HMIVideoTimeline *_timeline;
    NSDate *_startDate;
    NSDate *_lastFragmentReceivedDate;
    CDStruct_1b6d18a9 _currentPTS;
    CDStruct_1b6d18a9 _currentDTS;
}

- (void).cxx_destruct;
@property(getter=isCancelled) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property _Bool hasFailed; // @synthesize hasFailed=_hasFailed;
@property(retain) NSDate *lastFragmentReceivedDate; // @synthesize lastFragmentReceivedDate=_lastFragmentReceivedDate;
@property(readonly) NSDate *startDate; // @synthesize startDate=_startDate;
@property(readonly) HMIVideoTimeline *timeline; // @synthesize timeline=_timeline;
@property(readonly) HMIVideoTemporalEventFilter *temporalEventFilter; // @synthesize temporalEventFilter=_temporalEventFilter;
@property(readonly) HMIVideoEventBuffer *dynamicConfigurationBuffer; // @synthesize dynamicConfigurationBuffer=_dynamicConfigurationBuffer;
@property(retain) NSData *timelapseInitializationSegment; // @synthesize timelapseInitializationSegment=_timelapseInitializationSegment;
@property(retain) NSData *initializationSegment; // @synthesize initializationSegment=_initializationSegment;
@property(readonly) HMIVideoEventBuffer *thumbnailBuffer; // @synthesize thumbnailBuffer=_thumbnailBuffer;
@property(readonly) HMIVideoEventBuffer *frameAnalyzerFrameResultBuffer; // @synthesize frameAnalyzerFrameResultBuffer=_frameAnalyzerFrameResultBuffer;
@property CDStruct_1b6d18a9 currentDTS; // @synthesize currentDTS=_currentDTS;
@property CDStruct_1b6d18a9 currentPTS; // @synthesize currentPTS=_currentPTS;
@property(retain) HMIVideoAssetWriter *timelapseAssetWriter; // @synthesize timelapseAssetWriter=_timelapseAssetWriter;
@property(retain) HMIVideoAssetWriter *assetWriter; // @synthesize assetWriter=_assetWriter;
@property(readonly) HMIVideoFrameAnalyzer *frameAnalyzer; // @synthesize frameAnalyzer=_frameAnalyzer;
@property(readonly) HMIVideoFrameTracker *frameTracker; // @synthesize frameTracker=_frameTracker;
@property(readonly) HMIVideoFrameSelector *frameSelector; // @synthesize frameSelector=_frameSelector;
@property(retain) HMIVideoEncoder *timelapseEncoder; // @synthesize timelapseEncoder=_timelapseEncoder;
@property(retain) HMIVideoEncoder *encoder; // @synthesize encoder=_encoder;
@property(readonly) HMIVideoFrameSampler *frameTimelapseSampler; // @synthesize frameTimelapseSampler=_frameTimelapseSampler;
@property(readonly) HMIVideoFrameSampler *frameThumbnailSampler; // @synthesize frameThumbnailSampler=_frameThumbnailSampler;
@property(readonly) HMIVideoDecoder *decoder; // @synthesize decoder=_decoder;
@property(readonly) HMIVideoCommandBuffer *commandBuffer; // @synthesize commandBuffer=_commandBuffer;
@property(readonly) HMFTimer *watchdogTimer; // @synthesize watchdogTimer=_watchdogTimer;
@property struct opaqueCMFormatDescription *timelapseOutputVideoFormat; // @synthesize timelapseOutputVideoFormat=_timelapseOutputVideoFormat;
@property struct opaqueCMFormatDescription *inputAudioFormat; // @synthesize inputAudioFormat=_inputAudioFormat;
@property struct opaqueCMFormatDescription *inputVideoFormat; // @synthesize inputVideoFormat=_inputVideoFormat;
@property(readonly) NSObject<OS_dispatch_queue> *encoderQueue; // @synthesize encoderQueue=_encoderQueue;
@property(readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly) NSObject<OS_dispatch_queue> *inputQueue; // @synthesize inputQueue=_inputQueue;
- (double)analysisFPS;
- (void)setEncode:(_Bool)arg1;
- (_Bool)encode;
- (void)setMonitored:(_Bool)arg1;
- (_Bool)monitored;
- (unsigned long long)status;
- (void)setAnalysisFPS:(double)arg1;
- (double)delay;
@property(readonly) double timeSinceLastFragmentWasReceived;
@property(readonly) double timeSinceAnalyzerStarted;
- (id)state;
- (void)_produceResult:(SEL)arg1 withArguments:(id)arg2;
- (void)_notifyDelegateDidProduceAnalysisStateUpdate:(id)arg1;
- (void)_notifyDelegateDidFailWithError:(id)arg1;
- (void)_notifyDelegateDidCreateTimelapseFragment:(id)arg1;
- (void)_notifyDelegateDidAnalyzeFrameWithResult:(id)arg1;
- (void)_notifyDelegateDidAnalyzeFragmentWithResult:(id)arg1;
- (void)timerDidFire:(id)arg1;
- (void)encoder:(id)arg1 didFailWithError:(id)arg2;
- (void)decoder:(id)arg1 didFailWithError:(id)arg2;
- (void)assetWriter:(id)arg1 didFailWithError:(id)arg2;
- (void)assetWriter:(id)arg1 didOutputSeparableSegment:(id)arg2 segmentReport:(id)arg3;
- (void)assetWriter:(id)arg1 didOutputInitializationSegment:(id)arg2;
- (void)frameSampler:(id)arg1 didSampleFrame:(struct opaqueCMSampleBuffer *)arg2;
- (void)frameAnalyzer:(id)arg1 didProduceAnalysisStateUpdate:(id)arg2;
- (void)frameAnalyzer:(id)arg1 didAnalyzeFrame:(id)arg2;
- (id)_filterFrameResult:(id)arg1 dynamicConfiguration:(id)arg2 motionDetections:(id)arg3;
- (void)frameTracker:(id)arg1 didTrackFrame:(struct opaqueCMSampleBuffer *)arg2 background:(struct opaqueCMSampleBuffer *)arg3 motionDetections:(id)arg4 tracks:(id)arg5;
- (void)frameSelector:(id)arg1 didSkipFrame:(struct opaqueCMSampleBuffer *)arg2;
- (void)frameSelector:(id)arg1 didSelectFrame:(struct opaqueCMSampleBuffer *)arg2 reference:(struct opaqueCMSampleBuffer *)arg3;
- (struct opaqueCMSampleBuffer *)frameSelector:(id)arg1 prepareFrame:(struct opaqueCMSampleBuffer *)arg2;
- (void)_handleDecodedSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)encoder:(id)arg1 didEncodeSampleBuffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)decoder:(id)arg1 didDecodeSampleBuffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)_ensureTimelapseEncoder;
- (void)_ensureEncoder;
- (void)_ensureDecoderForFragment:(id)arg1;
- (void)bufferWillFlush:(id)arg1;
- (void)buffer:(id)arg1 willHandleSampleBuffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)_configureTimelapseEncoder;
- (void)_configureEncoder;
- (void)_configureTimelapseAssetWriter;
- (void)_configureAssetWriter;
- (void)dealloc;
- (void)_prepareForTimelapseOutputVideoFormat:(struct opaqueCMFormatDescription *)arg1;
- (void)_prepareForInputVideoFormat:(struct opaqueCMFormatDescription *)arg1 audioFormat:(struct opaqueCMFormatDescription *)arg2;
- (void)_saveFragmentDataToDisk:(id)arg1 diskBufferSize:(unsigned long long)arg2;
- (void)cancel;
- (void)finishWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)flushAsync;
- (void)flush;
- (void)handleSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)handleAssetData:(id)arg1 withOptions:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)handleMessageWithOptions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)dynamicConfigurationForTime:(CDStruct_1b6d18a9)arg1;
- (id)initWithConfiguration:(id)arg1 identifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

