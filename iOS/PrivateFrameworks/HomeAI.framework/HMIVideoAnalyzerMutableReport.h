//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

#import <HomeAI/HMFLogging-Protocol.h>
#import <HomeAI/NSSecureCoding-Protocol.h>

@class NSData, NSDictionary, NSMutableDictionary, NSSet, NSString;

@interface HMIVideoAnalyzerMutableReport : HMFObject <NSSecureCoding, HMFLogging>
{
    NSString *_name;
    long long _version;
    NSDictionary *_deviceInformation;
    NSMutableDictionary *_sessions;
}

+ (id)logCategory;
+ (_Bool)supportsSecureCoding;
+ (void)sihouetteScoreForMatches:(id)arg1 previousMatches:(id)arg2 truePositiveScores:(id)arg3 falsePositiveScores:(id)arg4 falseNegativeScores:(id)arg5;
+ (id)greedyMatchBetweenPredictionEvents:(id)arg1 truthEvents:(id)arg2 falsePositiveIndices:(id)arg3 falseNegativeIndices:(id)arg4 eventClass:(Class)arg5 regionOfInterest:(struct CGRect)arg6 confidenceThreshold:(float)arg7 scoreThreshold:(float)arg8 scoreFunction:(CDUnknownBlockType)arg9;
+ (void)writeImageCropFromFrame:(id)arg1 events:(id)arg2 outputPath:(id)arg3 source:(id)arg4;
+ (id)eventTrackFromObjectGoundTruth:(id)arg1;
+ (id)systemDeviceInformation;
- (void).cxx_destruct;
@property(readonly) NSMutableDictionary *sessions; // @synthesize sessions=_sessions;
@property(readonly) NSDictionary *deviceInformation; // @synthesize deviceInformation=_deviceInformation;
@property(readonly) long long version; // @synthesize version=_version;
@property(readonly) NSString *name; // @synthesize name=_name;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)chartSpecWithRange:(struct CGRect)arg1 colors:(id)arg2 labels:(id)arg3;
- (void)writeFragmentFileComparison:(id)arg1 eventClass:(Class)arg2 outputPath:(id)arg3;
- (void)writeImageCropForEventClass:(Class)arg1 outputPath:(id)arg2 assetPath:(id)arg3;
- (void)writeHTMLReportComparison:(id)arg1 truth:(id)arg2 eventClass:(Class)arg3 comparisonType:(id)arg4 assetPath:(id)arg5 outputPath:(id)arg6 limit:(unsigned long long)arg7;
- (id)selectFramesWithRecord:(id)arg1 truth:(id)arg2 frameResults:(id)arg3;
- (id)compareWithObjectDetectionTruth:(id)arg1 trackFilter:(CDUnknownBlockType)arg2 minIntersectionOverMinArea:(float)arg3;
- (id)compareWithObjectDetectionTruth:(id)arg1 eventClass:(Class)arg2 confidenceLevel:(long long)arg3 minIntersectionOverMinArea:(float)arg4;
- (id)compareWithObjectDetectionTruth:(id)arg1 eventClass:(Class)arg2 confidenceThreshold:(float)arg3 minIntersectionOverMinArea:(float)arg4;
- (id)compareWithTrackingTruth:(id)arg1 eventClass:(Class)arg2 confidenceThreshold:(float)arg3 ioaThreshold:(float)arg4;
- (id)compareWithDetectionTruth:(id)arg1 eventClass:(Class)arg2 confidenceThreshold:(float)arg3 iouThreshold:(float)arg4;
- (id)compareWithClassificationTruth:(id)arg1 eventClass:(Class)arg2 confidenceThreshold:(float)arg3;
- (id)truthReportFromLegacyDetectionFormat:(id)arg1;
- (id)truthReportFromLegacyClassificationFormat:(id)arg1;
- (id)initWithDetectionGroundTruth:(id)arg1;
@property(readonly) NSData *data;
- (id)chartDataWithObjectDetectionTruth:(id)arg1 isBaseline:(_Bool)arg2 intersectionOverMinAreaThreshold:(float)arg3;
- (id)chartDataWithDetectionTruth:(id)arg1 isBaseline:(_Bool)arg2 iouThreshold:(float)arg3;
- (id)chartDataWithClassificationTruth:(id)arg1 isBaseline:(_Bool)arg2;
- (id)chartDataWithBaseline:(_Bool)arg1 comparator:(CDUnknownBlockType)arg2;
- (id)averagePrecisionWithDetectionTruth:(id)arg1 minPrecision:(float)arg2 iouThreshold:(float)arg3;
- (id)averagePrecisionWithClassificationTruth:(id)arg1 minPrecision:(float)arg2;
- (id)averagePrecisionForMinPrecision:(float)arg1 comparator:(CDUnknownBlockType)arg2;
@property(readonly) NSSet *eventClasses;
- (void)appendFragmentResultsFromReport:(id)arg1;
- (void)appendFragmentResult:(id)arg1 forKey:(id)arg2 source:(id)arg3 redactFrames:(_Bool)arg4;
- (id)initWithData:(id)arg1 error:(id *)arg2;
- (id)initWithName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

