//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIIndirectScribbleInteractionDelegate-Protocol.h>
#import <UIKitCore/UIKeyInput-Protocol.h>
#import <UIKitCore/UIPointerInteractionDelegate-Protocol.h>

@class NSAttributedString, NSNumberFormatter, NSString, UIFont, UIIndirectScribbleInteraction, UILabel, UIPointerInteraction, UITextField, UITextInputPasswordRules, UIView, _UIDatePickerCalendarTimeFormat, _UIDatePickerCalendarTimeLabelStateMachineContext, _UIDatePickerCalendarTimeValueStore, _UIDatePickerCalendarTimeWheel;
@protocol _UIDatePickerCalendarTimeLabelDelegate;

__attribute__((visibility("hidden")))
@interface _UIDatePickerCalendarTimeLabel <UIIndirectScribbleInteractionDelegate, UIPointerInteractionDelegate, UIKeyInput>
{
    UIIndirectScribbleInteraction *_scribbleInteraction;
    UITextField *_hiddenField;
    UIPointerInteraction *_pointerInteraction;
    struct CGRect _hourRect;
    struct CGRect _minuteRect;
    UIView *_inputView;
    struct CGSize _lastSize;
    _Bool _allowsTextInput;
    _UIDatePickerCalendarTimeFormat *_timeFormat;
    id <_UIDatePickerCalendarTimeLabelDelegate> _delegate;
    long long _minuteInterval;
    UILabel *_label;
    _UIDatePickerCalendarTimeWheel *_hourWheel;
    _UIDatePickerCalendarTimeWheel *_minuteWheel;
    unsigned long long _insertedDigitCount;
    long long _inputScope;
    _UIDatePickerCalendarTimeValueStore *_inputValue;
    NSNumberFormatter *_inputFormatter;
    _UIDatePickerCalendarTimeLabelStateMachineContext *_stateContext;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) _UIDatePickerCalendarTimeLabelStateMachineContext *stateContext; // @synthesize stateContext=_stateContext;
@property(retain, nonatomic) NSNumberFormatter *inputFormatter; // @synthesize inputFormatter=_inputFormatter;
@property(retain, nonatomic) _UIDatePickerCalendarTimeValueStore *inputValue; // @synthesize inputValue=_inputValue;
@property(nonatomic) long long inputScope; // @synthesize inputScope=_inputScope;
@property(nonatomic) unsigned long long insertedDigitCount; // @synthesize insertedDigitCount=_insertedDigitCount;
@property(nonatomic) _Bool allowsTextInput; // @synthesize allowsTextInput=_allowsTextInput;
@property(readonly, nonatomic) _UIDatePickerCalendarTimeWheel *minuteWheel; // @synthesize minuteWheel=_minuteWheel;
@property(readonly, nonatomic) _UIDatePickerCalendarTimeWheel *hourWheel; // @synthesize hourWheel=_hourWheel;
@property(readonly, nonatomic) UILabel *label; // @synthesize label=_label;
@property(nonatomic) long long minuteInterval; // @synthesize minuteInterval=_minuteInterval;
@property(nonatomic) __weak id <_UIDatePickerCalendarTimeLabelDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) _UIDatePickerCalendarTimeFormat *timeFormat; // @synthesize timeFormat=_timeFormat;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;
- (_Bool)_canChangeFirstResponder:(id)arg1 toResponder:(id)arg2;
- (void)indirectScribbleInteraction:(id)arg1 didFinishWritingInElement:(id)arg2;
- (void)indirectScribbleInteraction:(id)arg1 willBeginWritingInElement:(id)arg2;
- (_Bool)indirectScribbleInteraction:(id)arg1 shouldDelayFocusForElement:(id)arg2;
- (void)indirectScribbleInteraction:(id)arg1 focusElementIfNeeded:(id)arg2 referencePoint:(struct CGPoint)arg3 completion:(CDUnknownBlockType)arg4;
- (struct CGRect)indirectScribbleInteraction:(id)arg1 frameForElement:(id)arg2;
- (_Bool)indirectScribbleInteraction:(id)arg1 isElementFocused:(id)arg2;
- (void)indirectScribbleInteraction:(id)arg1 requestElementsInRect:(struct CGRect)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_endEditingMinutesFromWheelsOfTime:(id)arg1;
- (void)_updateMinutesFromWheelsOfTime:(id)arg1;
- (void)_beginEditingMinutesFromWheelsOfTime:(id)arg1;
- (void)_endEditingHoursFromWheelsOfTime:(id)arg1;
- (void)_updateHoursFromWheelsOfTime:(id)arg1;
- (void)_beginEditingHoursFromWheelsOfTime:(id)arg1;
- (void)_updateWheelsOfTimePosition;
- (void)_recreateWheelsOfTime;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
@property(readonly, nonatomic) _Bool hasText;
- (id)inputView;
- (_Bool)_suppressSoftwareKeyboard;
@property(nonatomic) long long keyboardType;
- (void)_resetTextInput;
- (void)_updateLayoutRectsForHourRange:(struct _NSRange)arg1 minuteRange:(struct _NSRange)arg2;
- (void)_pushCurrentStateIntoUIAndNotify;
- (void)_pushCurrentStateIntoUI;
@property(copy, nonatomic) NSString *minuteText;
@property(copy, nonatomic) NSString *hourText;
- (_Bool)_digits:(unsigned long long *)arg1 fromText:(id)arg2 count:(long long *)arg3;
- (void)_stateMachineUpdateFromState:(unsigned long long)arg1 toState:(unsigned long long)arg2;
- (void)_stateMachineSendEvent:(unsigned long long)arg1;
- (_Bool)processTapOutside;
@property(readonly, nonatomic) NSAttributedString *attributedText;
- (id)_attributedTextWithHourRange:(struct _NSRange *)arg1 minuteRange:(struct _NSRange *)arg2;
@property(readonly, nonatomic) NSString *text;
@property(copy, nonatomic) UIFont *font;
- (void)_didTap:(id)arg1;
- (void)tintColorDidChange;
- (struct UIEdgeInsets)alignmentRectInsets;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)layoutSubviews;
- (id)initWithTimeFormat:(id)arg1 minuteInterval:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(nonatomic) long long autocapitalizationType;
@property(nonatomic) long long autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long smartDashesType;
@property(nonatomic) long long smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;
@property(copy, nonatomic) NSString *textContentType;

@end

