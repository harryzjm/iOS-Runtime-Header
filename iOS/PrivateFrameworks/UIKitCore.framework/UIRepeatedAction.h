//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSInvocation, NSTimer;
@protocol UIRepeatedActionDelegate;

__attribute__((visibility("hidden")))
@interface UIRepeatedAction : NSObject
{
    _Bool _didCompletePreInvocationDelay;
    _Bool _didCompleteInvocationDelay;
    _Bool _disableRepeat;
    _Bool _skipInitialFire;
    double _preInvocationDelay;
    double _invocationDelay;
    double _repeatedDelay;
    NSInvocation *_invocation;
    id _invocationArgument;
    NSTimer *_timer;
    NSObject<UIRepeatedActionDelegate> *_delegate;
}

+ (id)actionWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
+ (id)_invocationForTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (void).cxx_destruct;
@property(nonatomic) __weak NSObject<UIRepeatedActionDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) id invocationArgument; // @synthesize invocationArgument=_invocationArgument;
@property(retain, nonatomic) NSInvocation *invocation; // @synthesize invocation=_invocation;
@property(nonatomic) _Bool skipInitialFire; // @synthesize skipInitialFire=_skipInitialFire;
@property(nonatomic) _Bool disableRepeat; // @synthesize disableRepeat=_disableRepeat;
@property(nonatomic) double repeatedDelay; // @synthesize repeatedDelay=_repeatedDelay;
@property(nonatomic) double invocationDelay; // @synthesize invocationDelay=_invocationDelay;
@property(nonatomic) double preInvocationDelay; // @synthesize preInvocationDelay=_preInvocationDelay;
- (void)dealloc;
- (void)reset;
- (void)_resetInternalState;
- (void)invalidate;
- (void)schedule;
- (void)_repeatedTimerFire;
- (void)_invocationTimerFire;
- (void)_preInvocationTimerFire;
- (_Bool)_shouldInvokeRepeatedActionForPhase:(unsigned long long)arg1;
- (void)_adjustInvocationForPhase:(unsigned long long)arg1;
- (_Bool)invoke;
- (void)scheduleWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (id)initWithInvocation:(id)arg1;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;

@end

