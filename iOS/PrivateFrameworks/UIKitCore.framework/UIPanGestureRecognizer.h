//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/_UIScrollEventRespondable-Protocol.h>

@class NSArray, NSMutableArray, NSString, UIPanGestureVelocitySample;

@interface UIPanGestureRecognizer <_UIScrollEventRespondable>
{
    struct CGPoint _firstSceneReferenceLocation;
    struct CGPoint _lastSceneReferenceLocation;
    double _lastTouchTime;
    NSMutableArray *_touches;
    unsigned long long _lastTouchCount;
    unsigned long long _minimumNumberOfTouches;
    unsigned long long _maximumNumberOfTouches;
    double _hysteresis;
    double _allowableSeparation;
    struct CGPoint _lastUnadjustedSceneReferenceLocation;
    double _allowableTouchTimeSeparation;
    unsigned int _delegateImplementsShouldTryToBeginHorizontally:1;
    unsigned int _delegateImplementsShouldTryToBeginVertically:1;
    unsigned int _failsPastMaxTouches:1;
    unsigned int _failsPastHysteresisWithoutMinTouches:1;
    unsigned int _canPanHorizontally:1;
    unsigned int _canPanVertically:1;
    unsigned int _delegateAllowsPanHorizontally:1;
    unsigned int _delegateAllowsPanVertically:1;
    unsigned int _queriedDelegateAllowsPanHorizontally:1;
    unsigned int _queriedDelegateAllowsPanVertically:1;
    unsigned int _ignoresStationaryTouches:1;
    unsigned int _multitouchTimerOn:1;
    unsigned int _requiresImmediateMultipleTouches:1;
    unsigned int _sawNonzeroStifledDeltaX:1;
    unsigned int _sawNonzeroStifledDeltaY:1;
    NSMutableArray *_movingTouches;
    struct CGPoint _digitizerLocation;
    UIPanGestureVelocitySample *_velocitySample;
    UIPanGestureVelocitySample *_previousVelocitySample;
    _Bool _iOSMacUseNonacceleratedDelta;
    _Bool _iOSMacIgnoreScrollDirectionUserPreference;
    _Bool _iOSMacScrollingEnabled;
    long long _allowedScrollTypesMask;
}

+ (void)_setPanGestureRecognizersEnabled:(_Bool)arg1;
+ (_Bool)supportsSecureCoding;
+ (_Bool)_shouldDefaultToTouches;
+ (double)_defaultHysteresis;
- (void).cxx_destruct;
@property(nonatomic, getter=_iOSMacScrollingEnabled, setter=_setiOSMacScrollingEnabled:) _Bool iOSMacScrollingEnabled; // @synthesize iOSMacScrollingEnabled=_iOSMacScrollingEnabled;
@property(nonatomic, getter=_iOSMacIgnoreScrollDirectionUserPreference, setter=_setiOSMacIgnoreScrollDirectionUserPreference:) _Bool iOSMacIgnoreScrollDirectionUserPreference; // @synthesize iOSMacIgnoreScrollDirectionUserPreference=_iOSMacIgnoreScrollDirectionUserPreference;
@property(nonatomic, getter=_iOSMacUseNonacceleratedDelta, setter=_setiOSMacUseNonacceleratedDelta:) _Bool iOSMacUseNonacceleratedDelta; // @synthesize iOSMacUseNonacceleratedDelta=_iOSMacUseNonacceleratedDelta;
@property(nonatomic) long long allowedScrollTypesMask; // @synthesize allowedScrollTypesMask=_allowedScrollTypesMask;
@property(nonatomic) unsigned long long maximumNumberOfTouches; // @synthesize maximumNumberOfTouches=_maximumNumberOfTouches;
@property(nonatomic) unsigned long long minimumNumberOfTouches; // @synthesize minimumNumberOfTouches=_minimumNumberOfTouches;
- (_Bool)_isGestureType:(long long)arg1;
- (void)_scrollingChangedWithEvent:(id)arg1;
- (void)_processScrollPhaseChanged:(id)arg1;
- (_Bool)isIOSMacScrollingEnabled;
- (_Bool)shouldReceiveEvent:(id)arg1;
@property(copy, nonatomic, getter=_allowedScrollTypes, setter=_setAllowedScrollTypes:) NSArray *allowedScrollTypes;
- (void)_setAllowedScrollTypesMask:(long long)arg1;
- (long long)_allowedScrollTypesMask;
- (struct CGPoint)locationOfTouch:(unsigned long long)arg1 inView:(id)arg2;
- (unsigned long long)numberOfTouches;
- (struct CGPoint)locationInView:(id)arg1;
- (void)_ignoreTouchForTouchIdentifier:(unsigned int)arg1;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)_handleEndedTouches:(id)arg1 withFinalStateAdjustments:(CDUnknownBlockType)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)_updateMovingTouchesArraySavingOldArray:(id *)arg1;
- (_Bool)_touchesExceedAllowableSeparation;
- (void)_willBeginAfterSatisfyingFailureRequirements;
- (void)_removeHysteresisFromTranslation;
- (_Bool)_shouldTryToBeginWithEvent:(id)arg1;
- (_Bool)_shouldBeginHorizontally:(_Bool)arg1 vertically:(_Bool)arg2 withEvent:(id)arg3;
- (void)setDelegate:(id)arg1;
- (void)_centroidMovedTo:(struct CGPoint)arg1 atTime:(double)arg2 affectingTranslation:(_Bool)arg3;
- (struct CGPoint)_adjustSceneReferenceLocation:(struct CGPoint)arg1;
- (void)_touchesListChangedFrom:(id)arg1 to:(id)arg2;
- (struct CGPoint)velocityInView:(id)arg1;
- (struct CGPoint)_convertVelocitySample:(id)arg1 fromSceneReferenceCoordinatesToView:(id)arg2;
- (void)setTranslation:(struct CGPoint)arg1 inView:(id)arg2;
- (struct CGPoint)translationInView:(id)arg1;
- (struct CGPoint)_convertPoint:(struct CGPoint)arg1 fromSceneReferenceCoordinatesToView:(id)arg2;
- (struct CGPoint)_convertPoint:(struct CGPoint)arg1 toSceneReferenceCoordinatesFromView:(id)arg2;
- (void)_setCanPanVertically:(_Bool)arg1;
- (void)_setCanPanHorizontally:(_Bool)arg1;
- (_Bool)_canPanVertically;
- (_Bool)_canPanHorizontally;
- (_Bool)_requiresImmediateMultipleTouches;
- (void)_setRequiresImmediateMultipleTouches:(_Bool)arg1;
- (double)_allowableTouchTimeSeparation;
- (void)_setAllowableTouchTimeSeparation:(double)arg1;
- (double)_allowableSeparation;
- (void)_setAllowableSeparation:(double)arg1;
- (double)_hysteresis;
- (void)_setHysteresis:(double)arg1;
- (_Bool)_failsPastHysteresisWithoutMinTouches;
- (void)_setFailsPastHysteresisWithoutMinTouches:(_Bool)arg1;
@property(nonatomic) _Bool failsPastMaxTouches;
- (void)multitouchExpired:(id)arg1;
- (void)startMultitouchTimer:(double)arg1;
- (void)clearMultitouchTimer;
- (void)_resetGestureRecognizer;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

