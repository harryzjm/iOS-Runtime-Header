//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class FBSScene, NSHashTable, NSString, NSXPCConnection, UIInputWindowController, UIView, _UIAssertionController, _UIKeyboardChangedInformation, _UIKeyboardUIInformation, _UIRemoteKeyboardsEventObserver;
@protocol _UIKBArbiterClientKeyboardChangeDelegate, _UIKeyboardUIStateDelegate;

__attribute__((visibility("hidden")))
@interface _UIKeyboardArbiterClient : NSObject
{
    int _ignoreLayoutSubviews;
    int _externalSuppression;
    NSHashTable *_windowControllers;
    int _recursionCheck;
    _UIAssertionController *_assertionController;
    _Bool _shouldFence;
    _Bool _snapshotting;
    _Bool _handlingRemoteEvent;
    _Bool _disableBecomeFirstResponder;
    _Bool _expectingInitialState;
    _Bool _currentInputDestination;
    _Bool _keyboardUIHost;
    _Bool _expectedSuppression;
    _Bool _enqueuedWillEnterForegroundActions;
    _Bool _windowEnabled;
    _Bool _updatingHeight;
    _Bool _didSignalKeyboardChangedForCurrentKeyboard;
    _Bool _deactivatedByControlCenter;
    _Bool _deactivatedBySystemGesture;
    _Bool _handlingKeyboardTransition;
    _UIKeyboardChangedInformation *_currentClientState;
    _UIKeyboardUIInformation *_currentUIState;
    id <_UIKeyboardUIStateDelegate> _kbUIStateDelegate;
    UIInputWindowController *_inputWindowRootViewController;
    long long _lastEventSource;
    id <_UIKBArbiterClientKeyboardChangeDelegate> _changeInfoDelegate;
    NSXPCConnection *_connection;
    UIView *_keyboardSnapshot;
    _UIKeyboardChangedInformation *_backupState;
    long long _keyboardSource;
    unsigned long long _hostedCount;
    _UIRemoteKeyboardsEventObserver *_eventObserver;
    FBSScene *_requiredScene;
    double _heightForRemoteIAVPlaceholderIfNecessary;
}

+ (id)mainBundleIdentifier;
+ (id)keyboardClientFBSSceneIdentityStringOrIdentifierFromScene:(id)arg1;
+ (id)serviceName;
+ (id)automaticSharedArbiterClient;
+ (_Bool)enabled;
- (void).cxx_destruct;
@property(nonatomic) double heightForRemoteIAVPlaceholderIfNecessary; // @synthesize heightForRemoteIAVPlaceholderIfNecessary=_heightForRemoteIAVPlaceholderIfNecessary;
@property(nonatomic) _Bool handlingKeyboardTransition; // @synthesize handlingKeyboardTransition=_handlingKeyboardTransition;
@property(retain, nonatomic) FBSScene *requiredScene; // @synthesize requiredScene=_requiredScene;
@property(nonatomic) _Bool deactivatedBySystemGesture; // @synthesize deactivatedBySystemGesture=_deactivatedBySystemGesture;
@property(nonatomic) _Bool deactivatedByControlCenter; // @synthesize deactivatedByControlCenter=_deactivatedByControlCenter;
@property(retain, nonatomic) _UIRemoteKeyboardsEventObserver *eventObserver; // @synthesize eventObserver=_eventObserver;
@property(nonatomic) unsigned long long hostedCount; // @synthesize hostedCount=_hostedCount;
@property(nonatomic) long long keyboardSource; // @synthesize keyboardSource=_keyboardSource;
@property(retain, nonatomic) _UIKeyboardChangedInformation *backupState; // @synthesize backupState=_backupState;
@property(nonatomic) _Bool didSignalKeyboardChangedForCurrentKeyboard; // @synthesize didSignalKeyboardChangedForCurrentKeyboard=_didSignalKeyboardChangedForCurrentKeyboard;
@property _Bool updatingHeight; // @synthesize updatingHeight=_updatingHeight;
@property(nonatomic) _Bool windowEnabled; // @synthesize windowEnabled=_windowEnabled;
@property(retain, nonatomic) UIView *keyboardSnapshot; // @synthesize keyboardSnapshot=_keyboardSnapshot;
@property(nonatomic) _Bool enqueuedWillEnterForegroundActions; // @synthesize enqueuedWillEnterForegroundActions=_enqueuedWillEnterForegroundActions;
@property(retain, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) _Bool expectedSuppression; // @synthesize expectedSuppression=_expectedSuppression;
@property(nonatomic) _Bool keyboardUIHost; // @synthesize keyboardUIHost=_keyboardUIHost;
@property(nonatomic) _Bool currentInputDestination; // @synthesize currentInputDestination=_currentInputDestination;
@property _Bool expectingInitialState; // @synthesize expectingInitialState=_expectingInitialState;
@property(nonatomic) _Bool disableBecomeFirstResponder; // @synthesize disableBecomeFirstResponder=_disableBecomeFirstResponder;
@property(nonatomic) __weak id <_UIKBArbiterClientKeyboardChangeDelegate> changeInfoDelegate; // @synthesize changeInfoDelegate=_changeInfoDelegate;
@property(nonatomic) _Bool handlingRemoteEvent; // @synthesize handlingRemoteEvent=_handlingRemoteEvent;
@property(nonatomic) _Bool snapshotting; // @synthesize snapshotting=_snapshotting;
@property(nonatomic) long long lastEventSource; // @synthesize lastEventSource=_lastEventSource;
@property(retain, nonatomic) UIInputWindowController *inputWindowRootViewController; // @synthesize inputWindowRootViewController=_inputWindowRootViewController;
@property(nonatomic) __weak id <_UIKeyboardUIStateDelegate> kbUIStateDelegate; // @synthesize kbUIStateDelegate=_kbUIStateDelegate;
@property(nonatomic) _Bool shouldFence; // @synthesize shouldFence=_shouldFence;
@property(retain, nonatomic) _UIKeyboardUIInformation *currentUIState; // @synthesize currentUIState=_currentUIState;
@property(retain, nonatomic) _UIKeyboardChangedInformation *currentClientState; // @synthesize currentClientState=_currentClientState;
- (id)prepareForHostedWindowWithScene:(id)arg1;
- (void)finishWithHostedWindow;
- (void)removeWindowHostingPID:(int)arg1 callerID:(id)arg2;
- (void)addWindowHostingPID:(int)arg1 callerID:(id)arg2;
- (void)setSuppressingKeyboard:(_Bool)arg1 forScene:(id)arg2;
- (void)peekApplicationEvent:(id)arg1;
- (void)willResume:(id)arg1;
- (void)applicationResume:(id)arg1;
- (void)didSuspend:(id)arg1;
- (_Bool)allowedToShowKeyboard;
- (_Bool)_didHandleKeyboardClientChange:(id)arg1 shouldConsiderSnapshottingKeyboard:(_Bool)arg2 isLocalEvent:(_Bool)arg3;
- (_Bool)keyboardClientDidChange:(id)arg1;
- (void)_preserveInputViewsForClientChange:(_Bool)arg1 clientInfo:(id)arg2 snapshotIfNecessary:(_Bool)arg3;
- (void)queue_keyboardUIDidChange:(id)arg1 onComplete:(CDUnknownBlockType)arg2;
- (void)resetSnapshotWithWindowCheck:(_Bool)arg1;
- (void)snapsShotKeyboard;
- (_Bool)shouldSnapshot;
- (void)reloadForSnapshotting;
- (void)sceneUpdated;
- (void)keyboardChangedCompleted;
- (unsigned long long)localSceneCount;
- (void)signalToProxyKeyboardChanged:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)ignoreLayoutNotifications:(CDUnknownBlockType)arg1;
- (void)controllerDidLayoutSubviews:(id)arg1;
- (void)_layoutKeyboardViews:(id)arg1;
- (_Bool)shouldAllowInputViewsRestoredForId:(id)arg1;
- (void)restorePreservedInputViewsIfNecessary;
- (void)performOnLocalDistributedControllers:(CDUnknownBlockType)arg1;
- (void)performOnDistributedControllers:(CDUnknownBlockType)arg1;
- (void)_performOnDistributedControllersExceptSelf:(CDUnknownBlockType)arg1;
- (void)performOnExistingControllers:(CDUnknownBlockType)arg1;
- (void)performOnControllers:(CDUnknownBlockType)arg1;
- (void)unregisterController:(id)arg1;
- (void)registerController:(id)arg1;
- (void)cleanSuppression;
- (void)updateEventSource:(long long)arg1 options:(unsigned long long)arg2 responder:(id)arg3;
- (void)updateEventSource:(long long)arg1 options:(unsigned long long)arg2;
- (void)_updateEventSource:(long long)arg1 options:(unsigned long long)arg2 responder:(id)arg3;
- (void)_updateEventSource:(long long)arg1 options:(unsigned long long)arg2;
- (void)_postInputSourceDidChangeNotificationForResponder:(id)arg1;
- (void)queue_sceneBecameFocused:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)queue_getDebugInfoWithCompletion:(CDUnknownBlockType)arg1;
- (void)verifyPlacement;
- (void)setDisableBecomeFirstResponder:(_Bool)arg1 forSuppressionAssertion:(_Bool)arg2 updatePlacement:(_Bool)arg3;
- (void)setDisableBecomeFirstResponder:(_Bool)arg1 forSuppressionAssertion:(_Bool)arg2;
- (void)queue_keyboardTransition:(id)arg1 event:(unsigned long long)arg2 withInfo:(id)arg3 onComplete:(CDUnknownBlockType)arg4;
- (void)queue_keyboardIAVChanged:(double)arg1 onComplete:(CDUnknownBlockType)arg2;
- (void)queue_keyboardChangedWithCompletion:(CDUnknownBlockType)arg1;
- (void)_handleKeyboardChanged:(id)arg1 isLocal:(_Bool)arg2 onComplete:(CDUnknownBlockType)arg3;
- (void)queue_keyboardChanged:(id)arg1 onComplete:(CDUnknownBlockType)arg2;
- (void)queue_keyboardSuppressed:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)queue_setLastEventSource:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)didFailArbiterConnection;
- (void)queue_failedConnection:(id)arg1;
- (id)existingInputWindowRootViewController;
- (void)resignFirstResponderIfNeeded;
- (void)assertionActivationStateChangedToState:(_Bool)arg1 forType:(unsigned long long)arg2;
- (_Bool)assertionActivationStateForType:(unsigned long long)arg1;
- (id)vendKeyboardSuppressionAssertionForReason:(id)arg1 type:(unsigned long long)arg2;
- (id)vendKeyboardSuppressionAssertionForReason:(id)arg1;
- (_Bool)isSpotlight:(id)arg1;
- (_Bool)remoteKeyboardUndocked:(_Bool)arg1;
@property(readonly) _Bool remoteKeyboardUndocked;
@property(readonly) _Bool keyboardActive;
- (_Bool)hasWindowHostingPID:(int)arg1;
- (_Bool)hasWindowHostingCallerID:(id)arg1;
- (_Bool)hasAnyHostedViews;
- (_Bool)isHostedInAnotherProcess;
- (_Bool)isOnScreenRotating;
@property(readonly) _Bool keyboardVisible;
- (void)checkState;
- (void)checkConnection;
- (void)stopConnection;
- (void)startConnectionWithCompletion:(CDUnknownBlockType)arg1;
- (void)startConnection;
- (id)arbiterProxy;
- (id)arbiterConnection;
- (void)configureArbiterCommunication:(id)arg1;
- (id)currentHostedPIDs;
- (void)dealloc;
- (id)initWithShouldConnect:(_Bool)arg1;
- (id)init;
- (void)setPlacement:(id)arg1 quietly:(_Bool)arg2 animated:(_Bool)arg3 generateSplitNotification:(_Bool)arg4;
- (void)completeTransition:(id)arg1 withInfo:(id)arg2;
- (void)updateTransition:(id)arg1 withInfo:(id)arg2;
- (void)startTransition:(id)arg1 withInfo:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

