//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/TIKeyboardInputManagerToImplProtocol-Protocol.h>
#import <UIKitCore/UIKBRTIPartnerDelegate-Protocol.h>
#import <UIKitCore/UIKeyboardCandidateControllerDelegate-Protocol.h>
#import <UIKitCore/UIKeyboardCandidateListDelegate-Protocol.h>
#import <UIKitCore/UIKeyboardImplStateProtocol-Protocol.h>
#import <UIKitCore/UIKeyboardLayoutSizeDelegate-Protocol.h>
#import <UIKitCore/UIPopoverPresentationControllerDelegate-Protocol.h>
#import <UIKitCore/UITextInputDelegatePrivate-Protocol.h>
#import <UIKitCore/UITextInputSuggestionDelegate-Protocol.h>
#import <UIKitCore/_UIIVCResponseDelegateImpl-Protocol.h>
#import <UIKitCore/_UIKeyboardTextSelectionGestureControllerDelegate-Protocol.h>

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString, TICandidateRequestToken, TIKeyboardCandidate, TIKeyboardCandidateResultSet, TIKeyboardInputManagerState, TIKeyboardInputManagerStub, TIKeyboardLayout, TIKeyboardState, TIKeyboardTouchEvent, TISmartPunctuationController, TUIKeyboardBackendController, UIAutocorrectBubbleContainer, UIAutocorrectInlinePrompt, UIContinuousPathIntroductionView, UIDelayedAction, UIKBAutofillController, UIKBEditingGesturesIntroduction, UIKBInputDelegateManager, UIKBRTIPartner, UIKeyboardAutocorrectionController, UIKeyboardCandidateController, UIKeyboardLayout, UIKeyboardPopoverController, UIKeyboardScheduledTask, UIKeyboardTaskQueue, UILexicon, UIPhysicalKeyboardEvent, UIResponder, UITextInputArrowKeyHistory, UITextInputTraits, UITextInteractionAssistant, UITextInteractionSelectableInputDelegate, UITextSelectionView, UIView, _UIActionWhenIdle, _UIKeyboardFeedbackGenerator, _UIKeyboardImplProxy, _UIKeyboardTextSelectionController, _UIStringAndPositionPair;
@protocol UIKeyInput, UIKeyboardCandidateList, UIKeyboardImplGeometryDelegate, UITextCursorAssertion;

@interface UIKeyboardImpl <_UIIVCResponseDelegateImpl, _UIKeyboardTextSelectionGestureControllerDelegate, UITextInputSuggestionDelegate, UIKeyboardCandidateControllerDelegate, TIKeyboardInputManagerToImplProtocol, UIPopoverPresentationControllerDelegate, UIKeyboardImplStateProtocol, UIKBRTIPartnerDelegate, UITextInputDelegatePrivate, UIKeyboardCandidateListDelegate, UIKeyboardLayoutSizeDelegate>
{
    id <UIKeyInput> m_delegate;
    UITextInteractionSelectableInputDelegate *m_selectableDelegate;
    UIKeyboardTaskQueue *m_taskQueue;
    CDUnknownBlockType m_externalTask;
    TIKeyboardState *m_keyboardState;
    TIKeyboardInputManagerState *m_inputManagerState;
    _Bool m_keyboardDelegateStateNeedsRefresh;
    long long m_textInputSource;
    UIView *m_languageIndicator;
    NSString *m_previousInputString;
    UIKeyboardAutocorrectionController *m_autocorrectionController;
    UIAutocorrectInlinePrompt *m_autocorrectPrompt;
    TIKeyboardCandidateResultSet *m_candidateResultSet;
    id <UIKeyboardCandidateList> m_candidateList;
    UIView *m_markedTextOverlay;
    id <UIKeyboardImplGeometryDelegate> m_geometryDelegate;
    UIKeyboardLayout *m_layout;
    NSMutableDictionary *m_keyedLayouts;
    UIKeyboardScheduledTask *m_autoDeleteTask;
    unsigned int m_autoDeleteCount;
    double m_autoDeleteLastDelete;
    double m_autoDeleteInterval;
    unsigned int m_autoDeleteShiftCharacter;
    double m_autoDeleteCurrentForceMultipler;
    double m_autoDeleteCurrentForce;
    _Bool m_autoDeleteUseForce;
    UIDelayedAction *m_longPressAction;
    long long m_originalOrientation;
    struct CGPoint m_inputPoint;
    int m_changeCount;
    double m_changeTime;
    id m_changedDelegate;
    struct __CFRunLoopObserver *m_observer;
    unsigned long long m_textInputChangingCount;
    _Bool m_textInputChangingText;
    _Bool m_textInputChangingDirection;
    _Bool m_textInputChangesIgnored;
    _Bool m_textInputUpdatingSelection;
    _Bool m_disableSyncTextChanged;
    _Bool m_disableClearingTextSuggestions;
    UITextInputTraits *m_defaultTraits;
    UITextInputTraits *m_traits;
    UITextInputTraits *m_overrideTraits;
    int m_returnKeyState;
    _Bool m_returnKeyEnabledInLayout;
    long long m_currentDirection;
    UILexicon *m_recentInputs;
    _Bool m_autoDeleteOK;
    _Bool m_autocapitalizationPreference;
    _Bool m_autocorrectionPreference;
    _Bool m_autoshift;
    _Bool m_caretShowingNow;
    _Bool m_changeNotificationDisabled;
    _Bool m_correctionLearningAllowed;
    _Bool m_delegateIsSMSTextView;
    _Bool m_delegateRequiresKeyEvents;
    _Bool m_doubleSpacePeriodWasAppliedInCurrentContext;
    _Bool m_doubleSpacePeriodPreference;
    _Bool m_hardwareKeyboardAttached;
    _Bool m_inDealloc;
    _Bool m_initializationDone;
    _Bool m_selecting;
    _Bool m_shift;
    _Bool m_shiftLocked;
    _Bool m_shiftLockedEnabled;
    _Bool m_settingShift;
    _Bool m_suggestionsShownForCurrentDeletion;
    _Bool m_originalShouldSkipCandidateSelection;
    _Bool m_updatingPreferences;
    _Bool m_suppressGeometryChangeNotifications;
    _Bool m_acceptingCandidate;
    _Bool m_didAutomaticallyInsertSpace;
    _Bool m_didSyncDocumentStateToInputDelegate;
    _Bool m_userChangedSelection;
    _Bool m_shouldChargeKeys;
    _Bool m_longPress;
    _Bool m_replacingWord;
    _Bool m_shiftNeedsUpdate;
    _Bool m_shiftPreventAutoshift;
    _Bool m_shiftHeldDownNeedsUpdated;
    _Bool m_clientVariantSupportEnabled;
    _Bool m_clientVariantSupportEnabledEver;
    NSMutableArray *m_keyplaneNamesPreviousDelegate;
    NSMutableArray *m_keyplaneNamesCurrentDelegate;
    UITextInputArrowKeyHistory *m_arrowKeyHistory;
    _Bool m_isRotating;
    _Bool m_preRotateShift;
    _Bool m_preRotateShiftLocked;
    _Bool m_showInputModeIndicator;
    _Bool m_suppressUpdateCandidateView;
    _Bool m_shouldUpdateCacheOnInputModesChange;
    _Bool m_rivenCenterFilled;
    double m_splitProgress;
    _Bool m_needsCandidates;
    _Bool m_shouldSkipCandidateGeneration;
    _Bool m_updateLayoutOnShowKeyboard;
    _Bool m_receivedCandidatesInCurrentInputMode;
    int _currentAlertReason;
    _Bool m_layoutAllowsCP;
    _Bool m_needsPasteSupportUpdate;
    _Bool m_delegateSupportsImagePaste;
    _Bool m_didUpdateCapsLockLanguageSwitchSetting;
    _Bool m_shouldEnableCapsLockLanguageSwitchByDefault;
    UIPhysicalKeyboardEvent *m_previousGlobeKeyEvent;
    _UIKeyboardFeedbackGenerator *m_feedbackGenerator;
    _Bool m_delegateAdoptsKeyboardInput;
    _Bool m_delegateAdoptsTextInput;
    _Bool m_delegateAdoptsTextInputPrivate;
    _Bool m_delegateAdoptsWebTextInputPrivate;
    _Bool m_delegateAdoptsWKInteraction;
    _Bool m_delegateAdoptsKeyInputPrivate;
    _Bool m_delegateAdoptsRTISourceSession;
    _Bool m_firstResponderAdoptsTextInput;
    UIResponder<UIKeyInput> *_forwardingInputDelegate;
    _Bool _forwardingInputDelegateConformsToWKInteraction;
    _Bool _shouldRespectForwardingInputDelegate;
    _Bool m_scrolling;
    _Bool m_hasInputOnAcceptCandidate;
    _Bool m_maximizing;
    _Bool m_usesAutoShiftFor3PK;
    unsigned long long m_previousSpaceKeyBehavior;
    unsigned long long m_previousReturnKeyBehavior;
    _Bool m_usesCandidateSelection;
    _Bool m_UsedCandidateSelection;
    _Bool m_hasEditedMarkedTextInExtendedView;
    _Bool m_updatingLayout;
    _Bool m_suppressUpdateLayout;
    _Bool m_suppressUpdateShiftState;
    _Bool m_animateUpdateBars;
    _Bool m_needsToRecomputeDesirableModes;
    _Bool m_isCapsLocked;
    UITextInputTraits *m_traitsForPreviousDelegate;
    UIDelayedAction *m_detachHardwareKeyboardAction;
    UIDelayedAction *m_updateLastUsedInputModeAction;
    UIView *m_capsLockSign;
    _Bool m_didAutomaticallyInsertSpaceBeforeChangingInputMode;
    _Bool m_disableSmartInsertDelete;
    _Bool m_didExtendLongPressDelayForContinuousPath;
    _Bool m_inHandleKeyTextCommandForCurrentEvent;
    _Bool m_inHandleKeyAppCommandForCurrentEvent;
    _Bool m_webEventWasHandledAsKeyCommand;
    _Bool m_webEventWasHandledByInputManager;
    _Bool m_webEventIsKeyDown;
    _Bool m_needsOneShotGenerateCandidatesAfterStoppingAutoDelete;
    _Bool m_disableAutocapitalization;
    int m_predictionType;
    _Bool m_repeatDeleteFromHardwareKeyboard;
    UIKBAutofillController *m_autofillController;
    long long m_cachedAutofillMode;
    _Bool m_isAutofilling;
    long long m_pendingAutofillIndex;
    _Bool m_ignoreSelectionChange;
    _Bool m_repeatDeleteWord;
    struct _NSRange m_textAlternativesRange;
    NSDictionary *m_autofillCustomInfo;
    unsigned long long m_numCPwords;
    _UIKeyboardImplProxy *m_implProxy;
    UIKeyboardScheduledTask *m_delayDeleteTask;
    CDUnknownBlockType _deferredUpdateTask;
    UIContinuousPathIntroductionView *_continuousPathIntroductionView;
    UIKBEditingGesturesIntroduction *_editingGestureIntroductionView;
    _Bool m_editingTraitsMarkedDirty;
    _Bool m_selectionIsEmpty;
    NSMutableDictionary *m_hardwareKeyDownCodeToEventMap;
    UIKeyboardPopoverController *_keyboardPopoverController;
    NSString *_inputModeForKeyboardPopoverToRestoreAfterRotation;
    _Bool _isSettingDelegate;
    double m_bottomPadding;
    unsigned long long _serviceRole;
    UIKBRTIPartner *_remoteTextInputPartner;
    _Bool m_showsCandidateBar;
    _Bool m_showsCandidateInline;
    _Bool committingCandidate;
    _Bool geometryIsChanging;
    _Bool m_automaticMinimizationEnabled;
    _Bool _mimicShiftBeingHeld;
    _Bool floatingForced;
    _Bool _forCustomInputView;
    _Bool _suppressUpdateAssistantView;
    _Bool _shouldUpdateLayoutAutomatically;
    _Bool _lockFloating;
    _Bool _handlingKeyCommandFromHardwareKeyboard;
    UIPhysicalKeyboardEvent *m_currentEventForKeyCommand;
    UIKeyboardCandidateController *m_candidateController;
    TISmartPunctuationController *m_smartPunctuationController;
    TIKeyboardTouchEvent *m_touchEventWaitingForKeyInputEvent;
    _UIActionWhenIdle *m_delayedCandidateRequest;
    _UIActionWhenIdle *m_deferredDidSetDelegateAction;
    UIView *m_internationalKeyIntroductionView;
    UIDelayedAction *m_updateCapsLockDelayOverrideForNonTyping;
    UIKBInputDelegateManager *_inputDelegateManager;
    _UIStringAndPositionPair *m_lastMatchedSupplementalCandidate;
    _UIStringAndPositionPair *m_pendingSupplementalCandidateToInsert;
    unsigned long long m_lastChooseSupplementalItemToInsertCallbackIdentifier;
    double _deleteWordLastDelete;
    _UIKeyboardTextSelectionController *_textSelectionController;
    unsigned long long _requestedInteractionModel;
    UIKeyboardScheduledTask *_autocorrectPromptTask;
    id <UITextCursorAssertion> _cursorAssertion;
    TICandidateRequestToken *_currentCandidateRequest;
    TIKeyboardCandidate *_autocorrectionToAcceptBeforeProgressiveCandidates;
    NSArray *_alternativePredictions;
    long long _candidateViewOffset;
    NSString *_deletedString;
    NSArray *_characterRectsForCharacterRange;
    NSNumber *_isAttachedHardwareKeyboard;
    UIAutocorrectBubbleContainer *_autocorrectBubbleContainer;
}

+ (id)uniqueNumberPadInputModesFromInputModes:(id)arg1 forKeyboardType:(long long)arg2;
+ (Class)layoutClassForInputMode:(id)arg1 keyboardType:(long long)arg2 screenTraits:(id)arg3;
+ (_Bool)smartInsertDeleteIsEnabled;
+ (void)setFloatingPersistentOffset:(struct CGPoint)arg1;
+ (struct CGPoint)floatingPersistentOffset;
+ (struct CGPoint)floatingNormalizedPersistentOffset;
+ (struct CGPoint)defaultUndockedOffsetForFloating:(_Bool)arg1;
+ (struct CGPoint)persistentOffset;
+ (struct CGPoint)normalizedPersistentOffsetIgnoringState;
+ (struct CGPoint)normalizedPersistentOffset;
+ (void)setPersistentOffset:(struct CGPoint)arg1;
+ (struct CGPoint)_screenPointFromNormalizedPoint:(struct CGPoint)arg1;
+ (struct CGPoint)_normalizedScreenPoint:(struct CGPoint)arg1;
+ (void)suppressSetPersistentOffset:(_Bool)arg1;
+ (void)setPersistentSplitProgress:(double)arg1;
+ (double)splitProgress;
+ (double)persistentSplitProgress;
+ (double)keyboardWidthForScreen:(id)arg1 withOrientation:(long long)arg2;
+ (double)floatingScreenWidthToEmulate;
+ (double)floatingHeight;
+ (double)floatingWidth;
+ (long long)floatingIdiom;
+ (void)setFloating:(_Bool)arg1 positionedAtOffset:(struct CGPoint)arg2 animated:(_Bool)arg3;
+ (void)setFloating:(_Bool)arg1 positionedAtDefaultOffsetAnimated:(_Bool)arg2;
+ (void)setFloating:(_Bool)arg1;
+ (_Bool)isFloating;
+ (void)performWithoutFloatingLock:(CDUnknownBlockType)arg1;
+ (_Bool)isFloatingForced;
+ (struct UIEdgeInsets)requestedFloatingInsets;
+ (_Bool)supportsFloating;
+ (_Bool)supportsSplit;
+ (_Bool)isSplit;
+ (_Bool)rivenShouldUndock;
+ (_Bool)rivenTranslationPreference;
+ (_Bool)rivenPreference;
+ (_Bool)rivenInstalled;
+ (void)refreshRivenStateWithTraits:(id)arg1 isKeyboard:(_Bool)arg2;
+ (_Bool)showsGlobeAndDictationKeysExternally;
+ (_Bool)shouldMergeAssistantBarWithKeyboardLayout;
+ (double)additionalInstanceHeightForInterfaceOrientation:(long long)arg1;
+ (double)additionalInstanceHeight;
+ (double)additionalInstanceHeightForInterfaceOrientation:(long long)arg1 hasInputView:(_Bool)arg2;
+ (double)topMarginForInterfaceOrientation:(long long)arg1;
+ (id)normalizedInputModesFromPreference;
+ (struct CGSize)keyboardSizeForInterfaceOrientation:(long long)arg1;
+ (_Bool)keyboardOrientation:(long long)arg1 isEquivalentToOrientation:(long long)arg2;
+ (struct CGSize)sizeForInterfaceOrientation:(long long)arg1 ignoreInputView:(_Bool)arg2;
+ (struct CGSize)sizeForInterfaceOrientation:(long long)arg1;
+ (struct CGSize)defaultSizeForInterfaceOrientation:(long long)arg1;
+ (struct UIEdgeInsets)deviceSpecificStaticHitBufferForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;
+ (struct UIEdgeInsets)deviceSpecificPaddingForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;
+ (Class)layoutClassForCurrentInputMode;
+ (_Bool)isActivatingForeground;
+ (void)switchControlStatusDidChange:(id)arg1;
+ (void)applicationDidReceiveMemoryWarning:(id)arg1;
+ (void)applicationWillEnterForeground:(id)arg1;
+ (void)applicationDidEnterBackground:(id)arg1;
+ (void)applicationDidBecomeActive:(id)arg1;
+ (void)applicationWillResignActive:(id)arg1;
+ (void)applicationWillSuspend:(id)arg1;
+ (void)purgeImageCache;
+ (void)releaseSharedInstance;
+ (id)activeInstance;
+ (id)sharedInstanceForCustomInputView:(_Bool)arg1;
+ (id)sharedInstance;
+ (void)sendPerformanceNotification:(id)arg1 userInfo:(id)arg2;
+ (void)sendPerformanceNotification:(id)arg1;
+ (void)setParentTestForProfiling:(id)arg1;
+ (void)_clearHardwareKeyboardMinimizationPreference;
+ (_Bool)isHardwareCommandKeyBeingHeld;
+ (_Bool)isHardwareShiftKeyBeingHeld;
+ (_Bool)overrideNativeScreen;
+ (id)keyboardScreen;
+ (id)keyboardWindow;
@property(retain, nonatomic) UIAutocorrectBubbleContainer *autocorrectBubbleContainer; // @synthesize autocorrectBubbleContainer=_autocorrectBubbleContainer;
@property(retain, nonatomic) NSNumber *isAttachedHardwareKeyboard; // @synthesize isAttachedHardwareKeyboard=_isAttachedHardwareKeyboard;
@property(copy, nonatomic) NSArray *characterRectsForCharacterRange; // @synthesize characterRectsForCharacterRange=_characterRectsForCharacterRange;
@property(retain, nonatomic) NSString *deletedString; // @synthesize deletedString=_deletedString;
@property(nonatomic) long long candidateViewOffset; // @synthesize candidateViewOffset=_candidateViewOffset;
@property(retain, nonatomic) NSArray *alternativePredictions; // @synthesize alternativePredictions=_alternativePredictions;
@property(retain, nonatomic) TIKeyboardCandidate *autocorrectionToAcceptBeforeProgressiveCandidates; // @synthesize autocorrectionToAcceptBeforeProgressiveCandidates=_autocorrectionToAcceptBeforeProgressiveCandidates;
@property(retain, nonatomic) TICandidateRequestToken *currentCandidateRequest; // @synthesize currentCandidateRequest=_currentCandidateRequest;
@property(nonatomic) _Bool handlingKeyCommandFromHardwareKeyboard; // @synthesize handlingKeyCommandFromHardwareKeyboard=_handlingKeyCommandFromHardwareKeyboard;
@property(retain, nonatomic) id <UITextCursorAssertion> cursorAssertion; // @synthesize cursorAssertion=_cursorAssertion;
@property(retain, nonatomic) UIKeyboardScheduledTask *autocorrectPromptTask; // @synthesize autocorrectPromptTask=_autocorrectPromptTask;
@property(nonatomic) unsigned long long requestedInteractionModel; // @synthesize requestedInteractionModel=_requestedInteractionModel;
@property(getter=isFloatingLocked) _Bool lockFloating; // @synthesize lockFloating=_lockFloating;
@property(nonatomic) _Bool shouldUpdateLayoutAutomatically; // @synthesize shouldUpdateLayoutAutomatically=_shouldUpdateLayoutAutomatically;
@property(nonatomic) _Bool suppressUpdateAssistantView; // @synthesize suppressUpdateAssistantView=_suppressUpdateAssistantView;
@property(retain, nonatomic) _UIKeyboardTextSelectionController *textSelectionController; // @synthesize textSelectionController=_textSelectionController;
@property(nonatomic) double deleteWordLastDelete; // @synthesize deleteWordLastDelete=_deleteWordLastDelete;
@property(nonatomic) _Bool forCustomInputView; // @synthesize forCustomInputView=_forCustomInputView;
@property(nonatomic) unsigned long long lastChooseSupplementalItemToInsertCallbackIdentifier; // @synthesize lastChooseSupplementalItemToInsertCallbackIdentifier=m_lastChooseSupplementalItemToInsertCallbackIdentifier;
@property(retain, nonatomic) _UIStringAndPositionPair *pendingSupplementalCandidateToInsert; // @synthesize pendingSupplementalCandidateToInsert=m_pendingSupplementalCandidateToInsert;
@property(retain, nonatomic) _UIStringAndPositionPair *lastMatchedSupplementalCandidate; // @synthesize lastMatchedSupplementalCandidate=m_lastMatchedSupplementalCandidate;
@property(nonatomic) _Bool shouldIgnoreTextInputChanges; // @synthesize shouldIgnoreTextInputChanges=m_textInputChangesIgnored;
@property(retain, nonatomic) UIKBInputDelegateManager *inputDelegateManager; // @synthesize inputDelegateManager=_inputDelegateManager;
@property(readonly, nonatomic) TIKeyboardState *keyboardState; // @synthesize keyboardState=m_keyboardState;
@property(readonly, nonatomic) _Bool updatingPreferences; // @synthesize updatingPreferences=m_updatingPreferences;
@property(nonatomic) _Bool floatingForced; // @synthesize floatingForced;
@property(readonly, nonatomic) _Bool delegateRequiresKeyEvents; // @synthesize delegateRequiresKeyEvents=m_delegateRequiresKeyEvents;
@property(nonatomic) _Bool _mimicShiftBeingHeld; // @synthesize _mimicShiftBeingHeld;
@property(retain, nonatomic) UIDelayedAction *updateCapsLockDelayOverrideForNonTyping; // @synthesize updateCapsLockDelayOverrideForNonTyping=m_updateCapsLockDelayOverrideForNonTyping;
@property(retain, nonatomic) _UIKeyboardFeedbackGenerator *feedbackGenerator; // @synthesize feedbackGenerator=m_feedbackGenerator;
@property(retain, nonatomic) UIKBAutofillController *autofillController; // @synthesize autofillController=m_autofillController;
@property(nonatomic) _Bool animateUpdateBars; // @synthesize animateUpdateBars=m_animateUpdateBars;
@property(nonatomic) _Bool suppressUpdateShiftState; // @synthesize suppressUpdateShiftState=m_suppressUpdateShiftState;
@property(nonatomic) _Bool suppressUpdateLayout; // @synthesize suppressUpdateLayout=m_suppressUpdateLayout;
@property(nonatomic) _Bool disableSmartInsertDelete; // @synthesize disableSmartInsertDelete=m_disableSmartInsertDelete;
@property(nonatomic) _Bool geometryIsChanging; // @synthesize geometryIsChanging;
@property(nonatomic) _Bool committingCandidate; // @synthesize committingCandidate;
@property(retain, nonatomic) UIView *internationalKeyIntroductionView; // @synthesize internationalKeyIntroductionView=m_internationalKeyIntroductionView;
@property(nonatomic) _Bool showsCandidateInline; // @synthesize showsCandidateInline=m_showsCandidateInline;
@property(nonatomic) _Bool receivedCandidatesInCurrentInputMode; // @synthesize receivedCandidatesInCurrentInputMode=m_receivedCandidatesInCurrentInputMode;
@property(nonatomic) _Bool showsCandidateBar; // @synthesize showsCandidateBar=m_showsCandidateBar;
@property(nonatomic) _Bool showInputModeIndicator; // @synthesize showInputModeIndicator=m_showInputModeIndicator;
@property(retain, nonatomic) id changedDelegate; // @synthesize changedDelegate=m_changedDelegate;
@property(retain, nonatomic) _UIActionWhenIdle *deferredDidSetDelegateAction; // @synthesize deferredDidSetDelegateAction=m_deferredDidSetDelegateAction;
@property(retain, nonatomic) _UIActionWhenIdle *delayedCandidateRequest; // @synthesize delayedCandidateRequest=m_delayedCandidateRequest;
@property(retain, nonatomic) TIKeyboardTouchEvent *touchEventWaitingForKeyInputEvent; // @synthesize touchEventWaitingForKeyInputEvent=m_touchEventWaitingForKeyInputEvent;
@property(readonly, nonatomic) UIKeyboardCandidateController *candidateController; // @synthesize candidateController=m_candidateController;
@property(readonly, nonatomic) UIKeyboardAutocorrectionController *autocorrectionController; // @synthesize autocorrectionController=m_autocorrectionController;
@property(retain, nonatomic) TIKeyboardInputManagerState *inputManagerState; // @synthesize inputManagerState=m_inputManagerState;
@property(retain, nonatomic) UIPhysicalKeyboardEvent *eventForCurrentWebEvent; // @synthesize eventForCurrentWebEvent=m_currentEventForKeyCommand;
@property(copy, nonatomic) CDUnknownBlockType externalTask; // @synthesize externalTask=m_externalTask;
@property(nonatomic) id <UIKeyboardImplGeometryDelegate> geometryDelegate; // @synthesize geometryDelegate=m_geometryDelegate;
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory; // @synthesize arrowKeyHistory=m_arrowKeyHistory;
- (id)markedText;
- (_Bool)hasMarkedText;
- (void)unmarkText:(id)arg1;
- (void)insertAttributedText:(id)arg1;
- (id)asynchronousInputDelegate;
- (void)assertTextForRemoteDocument:(id)arg1 withSelectionRange:(struct _NSRange)arg2 updatingSelection:(_Bool)arg3;
- (void)updateInputDelegateForRemoteDocumentStateChange:(id)arg1 selectedTextRange:(struct _NSRange)arg2 forceSync:(_Bool)arg3;
- (void)updateInputDelegateForRemoteTraitChange:(id)arg1 autofillMode:(unsigned long long)arg2 forceSync:(_Bool)arg3;
- (id)inputSystemSourceSession;
- (void)resetInputDelegate;
- (id)remoteTextEditingMetadata;
@property(readonly, nonatomic) UIKBRTIPartner *remoteTextInputPartner;
- (void)_ensureRTIConnection;
- (void)_performKeyboardOutput:(CDUnknownBlockType)arg1 respectingForwardingDelegate:(_Bool)arg2;
- (void)_setTransientSelectionModeEnabled:(_Bool)arg1 forInputDelegate:(id)arg2;
- (void)didChangeForwardingInputDelegate:(id)arg1;
- (void)clearForwardingInputDelegateAndResign:(_Bool)arg1;
- (void)enableTransientInputDelegateSelectionMode;
- (void)performSendCurrentLocation;
- (id)responderForSendCurrentLocation;
- (void)trackUsageForCandidateAcceptedAction:(id)arg1;
- (void)trackUsageForPromptedCorrection:(id)arg1 inputString:(id)arg2 previousPrompt:(id)arg3;
- (void)trackUsageForAcceptedAutocorrection:(id)arg1 promptWasShowing:(_Bool)arg2;
- (_Bool)isAutoFillMode;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)canHandleKeyHitTest;
- (void)updateNoContentViews;
- (id)dynamicCaretList;
- (void)clearSelection;
- (_Bool)caretVisible;
- (_Bool)caretBlinks;
- (void)setCaretVisible:(_Bool)arg1;
- (void)setCaretBlinks:(_Bool)arg1;
- (id)_activeAssertionController;
- (_Bool)canHandleEvent:(id)arg1;
- (void)_moveWithEvent:(id)arg1;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)remoteControlReceivedWithEvent:(id)arg1;
- (void)showKeyboardIfNeeded;
- (void)updateIsAttachedHardwareKeyboard;
- (void)ejectKeyDown;
- (void)toggleSoftwareKeyboard;
- (void)completeHandleKeyEvent:(id)arg1;
- (void)handleKeyWithString:(id)arg1 forKeyEvent:(id)arg2 executionContext:(id)arg3;
- (void)handleModifiersChangeForKeyEvent:(id)arg1 executionContext:(id)arg2;
- (void)handleKeyEvent:(id)arg1 executionContext:(id)arg2;
- (_Bool)_shouldEmitString:(id)arg1 forKeyEvent:(id)arg2;
- (unsigned long long)_handleKeyCommandCommon:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)_handleKeyCommand:(id)arg1;
- (_Bool)_handlesKeyCommandForEvent:(id)arg1;
- (_Bool)_isKeyCommand:(id)arg1;
- (void)handleKeyEvent:(id)arg1;
- (void)_handleKeyEvent:(id)arg1 executionContext:(id)arg2;
- (void)flushTouchEventWaitingForKeyInputEventIfNecessary;
- (void)_remapKeyEvent:(id)arg1 withKeyEventMap:(id)arg2;
- (void)_handleWebKeyEvent:(id)arg1 withInputString:(id)arg2 executionContext:(id)arg3;
- (void)_handleWebKeyEvent:(id)arg1 withIndex:(unsigned long long)arg2 inInputString:(id)arg3 executionContext:(id)arg4;
- (void)_handleWebKeyEvent:(id)arg1 withEventType:(int)arg2 withInputString:(id)arg3 withInputStringIgnoringModifiers:(id)arg4 executionContext:(id)arg5;
- (void)updateKeyboardEventsLagging:(id)arg1;
- (_Bool)_isValidKeyInput:(id)arg1;
- (void)cancelAllKeyEvents;
- (void)_attemptAuthenticationWithMessage:(id)arg1;
- (void)dismissKeyboard;
- (void)proceedShouldReturnIfNeededForASP;
@property(nonatomic, getter=isInHardwareKeyboardMode) _Bool inHardwareKeyboardMode;
- (void)setInHardwareKeyboardMode:(_Bool)arg1 forceRebuild:(_Bool)arg2;
- (void)_showKeyboardIgnoringPolicyDelegate:(_Bool)arg1;
- (void)showKeyboardWithoutSuppressionPolicy;
- (void)showKeyboard;
- (void)hideKeyboardIgnoringHardwareLayouts:(_Bool)arg1;
- (void)hideKeyboard;
- (void)hideKeyboardWithoutPreflightChecks;
- (void)hardwareKeyboardAvailabilityChanged;
- (void)hardwareKeyboardAvailabilityDidChange:(id)arg1;
- (void)detachHardwareKeyboard;
- (void)clearDetachHardwareKeyboardAction;
- (void)updateHardwareKeyboardLayout:(_Bool)arg1;
- (void)updateHardwareKeyboardLayout;
- (int)changeCount;
- (void)updateChangeTimeAndIncrementCount;
- (void)clearChangeTimeAndCount;
- (void)clearTimers;
- (_Bool)isLongPress;
- (void)longPressAction;
- (void)longPressAction:(id)arg1;
- (void)handleDelayedActionLongPress:(id)arg1;
- (double)shouldExtendLongPressAction:(id)arg1;
- (void)clearLongPressTimer;
- (void)touchLongPressTimer;
- (void)touchLongPressTimerWithDelay:(double)arg1;
- (void)touchLongPressTimerWithDelay:(double)arg1 userInfo:(id)arg2;
- (void)handleUpdateLastUsedInputModeAction:(id)arg1;
- (void)clearUpdateLastUsedInputModeAction;
- (void)touchUpdateLastUsedInputModeAction;
- (void)stopAutoDelete;
- (void)adjustAutoDeleteTimerForForce:(double)arg1;
- (void)startAutoDeleteTimerForForce:(double)arg1;
- (double)timeoutForCurrentForce;
- (double)scaleCurrentForceFrom:(double)arg1 to:(double)arg2;
- (double)convertForceToGrams:(double)arg1;
- (void)startAutoDeleteTimer;
- (void)completeHandleAutoDelete;
- (void)handleAutoDeleteWithExecutionContext:(id)arg1;
- (void)touchAutoDeleteTimerWithThreshold:(double)arg1 adjustForPartialCompletion:(_Bool)arg2;
- (void)clearAutoDeleteTimer;
- (id)generateAutocorrectionListForSelectedText;
- (id)generateAutocorrectionReplacements:(id)arg1;
- (void)generateCandidatesFromReplacements;
- (id)replacementsFromSelectedText;
- (void)_generateTextSuggestionForKeyboardCamera;
- (_Bool)_isShowingSuggestionForKeyboardCamera;
- (void)generateCandidatesWithOptions:(int)arg1;
- (void)generateCandidates;
- (_Bool)canShowAppConnections;
- (_Bool)delegateSuggestionsForCurrentInput;
- (id)autocorrectionRecordForWord:(id)arg1;
- (void)autocorrectionAnimationDidStopWithAutocorrectionView:(id)arg1;
- (void)fadeAutocorrectPrompt;
- (void)animateAutocorrectionToRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2;
- (void)animateAutocorrectionToText:(id)arg1 fromRect:(struct CGRect)arg2;
- (_Bool)applyAutocorrection:(id)arg1;
- (void)insertText:(id)arg1 withAlternativePredictions:(id)arg2;
- (void)updateAutocorrectContainerWithAutocorrection:(id)arg1 parentView:(id)arg2 correctionRects:(id)arg3;
- (void)updateLegacyAutocorrectPromptWithAutocorrection:(id)arg1 parentView:(id)arg2 correctionRects:(id)arg3;
- (void)updateAutocorrectPrompt:(id)arg1 correctionRects:(id)arg2;
- (id)autocorrectPromptRectsForInput:(id)arg1;
- (void)updateAutocorrectPrompt:(id)arg1 executionContext:(id)arg2;
- (void)updateAutocorrectPrompt:(id)arg1;
- (id)autocorrectPromptRectsFromFirstDelegateRect:(struct CGRect)arg1 lastDelegateRect:(struct CGRect)arg2;
- (id)_rangeForAutocorrectionText:(id)arg1;
- (void)clearAutocorrectPromptTimer;
- (void)touchDelayDeleteTimerWithThreshold:(double)arg1;
- (void)clearDelayDeleteTimer;
- (void)touchAutocorrectPromptTimer;
- (void)sendCallbacksForPostCorrectionsRemoval;
- (void)sendCallbacksForPreCorrectionsDisplay;
- (struct CGRect)convertRectToAutocorrectRect:(struct CGRect)arg1 delegateView:(id)arg2 container:(id)arg3;
- (void)updateTextCandidateView;
- (struct CGRect)getCorrectionRectIsVertical:(_Bool *)arg1;
- (struct CGRect)correctionRect;
- (id)inputOverlayContainerForCandidateView:(_Bool)arg1;
- (id)inputOverlayContainer;
- (_Bool)callLayoutIsGeometricShiftOrMoreKeyForTouch:(id)arg1;
- (void)callLayoutUpdateRecentInputs;
- (void)callLayoutUpdateAllLocalizedKeys;
- (void)callLayoutUpdateLocalizedKeys;
- (void)callLayoutLongPressAction;
- (void)callLayoutSetAutoshift:(_Bool)arg1;
- (void)callLayoutSetShift:(_Bool)arg1;
- (_Bool)callLayoutIsShiftKeyBeingHeld;
- (_Bool)callLayoutIsShiftKeyPlaneChooser;
- (_Bool)callLayoutIgnoresShiftState;
- (_Bool)callLayoutUsesAutoShift;
- (void)callLayoutUpdateReturnKey;
@property(readonly, nonatomic) UIKeyboardLayout *activeLayout;
- (void)_updateKeyboardConfigurations;
- (id)updatedKeyBehaviors;
- (id)updateKeyBehaviors:(id)arg1 withBehaviors:(id)arg2 forState:(id)arg3;
- (id)_keyboardBehaviorState;
- (void)performKeyBehaviorCommitInline;
- (void)performKeyBehaviorConfirmFirstCandidate;
- (void)performKeyBehaviorConfirm;
- (void)_handleKeyBehavior:(unsigned long long)arg1 forKeyType:(id)arg2;
- (void)_nop;
- (_Bool)shouldShowDictationKey;
- (_Bool)shouldShowInternationalKey;
- (void)updateReturnKey:(_Bool)arg1;
- (void)updateReturnKey;
- (void)setReturnKeyEnabled:(_Bool)arg1;
- (_Bool)returnKeyEnabled;
- (id)returnKeyDisplayName;
- (int)returnKeyType;
- (_Bool)noContent;
- (void)setCandidates:(id)arg1;
- (void)removeAutocorrectPromptAndCandidateList;
- (void)removeCandidateList;
- (void)removeAutocorrectPrompt;
- (id)autocorrectPrompt;
- (void)setAutocorrectionList:(id)arg1;
- (id)_supplementalCandidateIcon:(id)arg1;
- (void)setAutocorrection:(id)arg1;
- (void)responseContextDidChange;
- (void)layoutDidResize;
- (_Bool)layoutIsResizing;
- (_Bool)maximizing;
- (_Bool)isMinimized;
- (void)candidateBarDidExtendWithGesture;
- (_Bool)canUseCandidateBarAsSupplementToInlineView;
- (void)updateCandidateDisplay;
- (_Bool)needsToDeferUpdateTextCandidateView;
- (void)assertIntermediateText:(id)arg1;
- (void)updateCandidateDisplayAsyncWithCandidateSet:(id)arg1;
- (void)_conditionallyNotifyPredictionsAreAvailableForCandidates:(id)arg1 containingProactiveTriggers:(_Bool)arg2;
- (_Bool)displaysCandidates;
- (void)setCandidateList:(id)arg1;
- (void)pushAutocorrections:(id)arg1 requestToken:(id)arg2;
- (void)processPayloadInfo:(id)arg1;
- (_Bool)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2 forInput:(id)arg3;
- (_Bool)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2;
- (void)scheduleReplacementsWithOptions:(unsigned long long)arg1;
- (void)replaceText:(id)arg1;
- (void)clearDelegate;
- (void)clearAnimations;
- (void)clearTransientState;
- (void)completeAcceptCandidateBeforeAddingInputObject:(id)arg1 executionContext:(id)arg2;
- (void)addInputObject:(id)arg1 executionContext:(id)arg2;
- (void)addInputObject:(id)arg1;
- (void)acceptRecentInput:(id)arg1;
- (void)removeRecentInput:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)clearRecentInput;
- (void)clearInputWithCandidatesCleared:(_Bool)arg1;
- (void)clearInput;
- (id)candidateList;
- (void)candidateListInvalidateSelection:(id)arg1;
- (void)candidateListSelectionDidChange:(id)arg1;
- (void)candidateListAcceptCandidate:(id)arg1;
- (void)revealHiddenCandidates;
- (void)jumpToCompositions;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidates;
- (void)completeAcceptCandidate:(id)arg1;
- (void)acceptCurrentCandidateIfSelectedWithExecutionContext:(id)arg1;
- (void)acceptCurrentCandidateIfSelected;
- (void)setUserSelectedCurrentCandidate:(_Bool)arg1;
- (_Bool)userSelectedCurrentCandidate;
- (void)acceptFirstCandidate;
- (void)acceptCandidate:(id)arg1 forInput:(id)arg2 executionContext:(id)arg3;
- (id)acceptInlineCandidateForInput:(id)arg1;
- (id)acceptCurrentCandidateForInput:(id)arg1;
- (id)acceptInlineCandidate;
- (id)acceptCurrentCandidate;
- (void)acceptHandwritingCandidate;
- (void)handleDeletionForCandidate:(id)arg1;
- (void)acceptCandidate:(id)arg1 forInput:(id)arg2;
- (void)acceptCandidate:(id)arg1;
- (void)acceptPredictiveInput:(id)arg1 executionContext:(id)arg2;
- (_Bool)shouldForwardInsertSpaceAfterAcceptingPredictiveInput:(id)arg1;
- (void)textAccepted:(id)arg1 executionContext:(id)arg2;
- (void)textAccepted:(id)arg1;
- (_Bool)insertsSpaceAfterPredictiveInput;
- (void)rejectAutocorrection:(id)arg1;
- (void)acceptPredictiveInput:(id)arg1;
- (void)_acceptSupplementalCandidate:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)emojiCandidate:(id)arg1;
- (void)insertTextSuggestionCandidate:(id)arg1;
- (void)removeAutocorrection;
- (void)acceptAutocorrection;
- (void)willReplaceTextInRangedSelectionWithKeyboardInput;
- (void)completeDeleteFromInput;
- (void)deleteFromInputWithFlags:(unsigned long long)arg1 executionContext:(id)arg2;
- (void)deleteFromInputWithFlags:(unsigned long long)arg1;
- (void)deleteFromInput;
- (void)completeDeleteOnceFromInputWithCharacterBefore:(unsigned int)arg1;
- (void)scheduleReplacementsAfterDeletionToEndOfWord;
- (void)collapseSelection;
- (_Bool)nextCharacterIsWordCharacter;
- (void)deleteOnceFromInputWithExecutionContext:(id)arg1;
- (void)updateLayoutAndSetShift;
- (_Bool)shouldEnableShiftForDeletedCharacter:(unsigned int)arg1;
- (void)movePhraseBoundaryToDirection:(long long)arg1 granularity:(long long)arg2;
- (void)adjustSegmentSize:(long long)arg1;
- (unsigned long long)phraseBoundary;
- (void)didChangePhraseBoundary;
- (void)completeAddInputString:(id)arg1 generateCandidates:(_Bool)arg2;
- (void)completeAddInputString:(id)arg1;
- (void)addWordTerminator:(id)arg1 afterSpace:(_Bool)arg2 afterAcceptingCandidate:(id)arg3 elapsedTime:(double)arg4 executionContext:(id)arg5;
- (void)didApplyAutocorrection:(id)arg1 autocorrectPromptFrame:(struct CGRect)arg2;
- (_Bool)shouldApplyAcceptedAutocorrection:(id)arg1;
- (void)acceptAutocorrection:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;
- (void)handleEmojiInput:(id)arg1 keyboardState:(id)arg2;
- (void)emojiSearchWillInsertEmoji:(id)arg1 forSearchQuery:(id)arg2 selectionMethod:(id)arg3 inputType:(id)arg4;
- (void)emojiSearchWillInsertEmoji:(id)arg1 forSearchQuery:(id)arg2;
- (void)insertedEmojiFromPopover:(id)arg1 selectionMethod:(id)arg2;
- (void)setDocumentStateForAutocorrection:(id)arg1;
- (void)syncInputManagerToAcceptedAutocorrection:(id)arg1 forInput:(id)arg2;
- (void)didAcceptAutocorrection:(id)arg1 wordTerminator:(id)arg2;
- (id)inputWordForTerminatorAtSelection;
- (void)acceptAutocorrectionForWordTerminator:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;
- (id)acceptAutocorrectionForWordTerminator:(id)arg1;
- (void)addInputEvent:(id)arg1 executionContext:(id)arg2;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 executionContext:(id)arg4;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 executionContext:(id)arg3;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)_scheduleInputAdditionOrDeletion:(CDUnknownBlockType)arg1;
- (void)removeSpaceAfterEmojiForInputString:(id)arg1;
- (_Bool)shouldAcceptCandidate:(id)arg1 beforeInputString:(id)arg2;
- (id)handleReplacement:(id)arg1 forSpaceAndInput:(id)arg2;
- (id)handleDeleteAutospaceForInputString:(id)arg1 afterSpace:(_Bool)arg2;
- (_Bool)shouldDeleteAutospaceBeforeTerminator:(id)arg1;
- (_Bool)willDoubleSpacePeriodForInputString:(id)arg1 afterSpace:(_Bool)arg2 elapsedTime:(double)arg3;
- (void)updateDoubleSpacePeriodStateForString:(id)arg1;
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned int)arg1;
- (id)inputEventForInputString:(id)arg1;
- (void)addInputString:(id)arg1 fromVariantKey:(_Bool)arg2;
- (void)addInputString:(id)arg1;
- (_Bool)handleKeyAppCommandForCurrentEvent;
- (_Bool)handleKeyTextCommandForCurrentEvent;
- (_Bool)handleKeyInputMethodCommandForCurrentEvent;
- (_Bool)isCallingInputDelegate;
- (void)deleteBackward;
- (_Bool)deleteForwardAndNotify:(_Bool)arg1;
- (_Bool)_canDeleteForward;
- (void)updateKeyboardStateForDeletion;
- (void)deleteBackwardAndNotify:(_Bool)arg1;
- (void)moveCursorByAmount:(long long)arg1;
- (void)updateKeyboardStateForInsertion:(id)arg1;
- (void)setPreviousGlobeKeyEvent:(id)arg1;
- (void)setPreviousInputString:(id)arg1;
- (_Bool)acceptInputString:(id)arg1;
- (void)handleStringInput:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 executionContext:(id)arg4;
- (_Bool)handleTabWithShift:(_Bool)arg1 beforePublicKeyCommands:(_Bool)arg2 isMoveAction:(_Bool)arg3 testOnly:(_Bool)arg4;
- (_Bool)handleTabWithShift:(_Bool)arg1 beforePublicKeyCommands:(_Bool)arg2;
- (_Bool)handleMoveResponderWithShift:(_Bool)arg1;
- (_Bool)handleTabWithShift:(_Bool)arg1;
- (_Bool)handleVerticalArrow:(_Bool)arg1 shiftDown:(_Bool)arg2 beforePublicKeyCommands:(_Bool)arg3 testOnly:(_Bool)arg4 isVerticalCandidate:(_Bool)arg5 hasCandidatesForTypedInput:(_Bool)arg6 inputDelegateCommandEnabled:(_Bool)arg7 canHandleInputDelegateCommand:(CDUnknownBlockType)arg8 savedHistory:(id)arg9 keyCommandTypeHandled:(unsigned long long *)arg10;
- (_Bool)handleHorizontalArrow:(_Bool)arg1 shiftDown:(_Bool)arg2 beforePublicKeyCommands:(_Bool)arg3 testOnly:(_Bool)arg4 isVerticalCandidate:(_Bool)arg5 hasCandidatesForTypedInput:(_Bool)arg6 shouldNavigateCandidateList:(_Bool)arg7 canHandleInputDelegateCommand:(CDUnknownBlockType)arg8 savedHistory:(id)arg9 keyCommandTypeHandled:(unsigned long long *)arg10;
- (_Bool)handleMoveCursorToEndOfLine:(_Bool)arg1 beforePublicKeyCommands:(_Bool)arg2 testOnly:(_Bool)arg3 savedHistory:(id)arg4 force:(_Bool)arg5 canHandleSelectableInputDelegateCommand:(CDUnknownBlockType)arg6;
- (_Bool)handleMoveCursorToStartOfLine:(_Bool)arg1 beforePublicKeyCommands:(_Bool)arg2 testOnly:(_Bool)arg3 savedHistory:(id)arg4 force:(_Bool)arg5 canHandleSelectableInputDelegateCommand:(CDUnknownBlockType)arg6;
- (void)handleClearWithExecutionContext:(id)arg1;
- (void)handleClear;
- (void)handleClearWithInsertBeforeAdvance:(id)arg1;
- (_Bool)canHandleDelete;
- (void)handleDelete;
- (void)handleDeleteWordWithExecutionContext:(id)arg1;
- (void)completeDelete;
- (void)handleDeleteWithExecutionContext:(id)arg1;
- (void)startDelayDeleteTimer;
- (void)handleDeleteAsRepeat:(_Bool)arg1 executionContext:(id)arg2;
- (void)playDeleteKeyFeedback:(_Bool)arg1;
- (void)setInputPoint:(struct CGPoint)arg1;
- (void)keyDeactivated;
- (void)keyActivated;
- (_Bool)shouldUsePinyinStyleRowNavigation;
- (_Bool)supportsNumberKeySelection;
- (_Bool)suppliesCompletions;
- (_Bool)usesAutocorrectionLists;
- (_Bool)accessibilityUsesExtendedKeyboardPredictionsEnabled;
@property(readonly, nonatomic) _Bool continuousPathUnderway;
- (void)setLayoutAllowsContinuousPath:(_Bool)arg1;
- (_Bool)usesContinuousPathProgressiveCandidates;
- (_Bool)usesContinuousPath;
- (void)setUsesCandidateSelection:(_Bool)arg1;
- (_Bool)usesCandidateSelection;
- (void)updateShowCandidateBar;
- (void)setShouldSkipCandidateSelection:(_Bool)arg1 userInitiated:(_Bool)arg2;
@property(nonatomic) _Bool shouldSkipCandidateSelection;
- (void)forceShiftUpdateIfKeyboardStateChanged;
- (void)forceShiftUpdate;
- (void)clearShiftState;
- (_Bool)capsLockKeyHasLanguageSwitchLabel;
- (_Bool)isCapsLockSwitchEnabled;
- (_Bool)isCapsLockASCIIToggle;
- (_Bool)shiftLockedEnabled;
- (_Bool)isShiftLocked;
- (_Bool)isAutoShifted;
- (_Bool)isShifted;
- (void)setShiftLockedForced:(_Bool)arg1;
- (void)setShiftLocked:(_Bool)arg1;
- (void)setShiftNeedsUpdate;
- (void)setShiftPreventAutoshift:(_Bool)arg1;
- (void)setShift:(_Bool)arg1 autoshift:(_Bool)arg2;
- (void)setShift:(_Bool)arg1;
- (void)toggleShift;
- (void)setShiftOffIfNeeded;
- (_Bool)nextInputWouldStartSentence;
- (_Bool)isSelectionAtSentenceAutoshiftBoundary;
- (_Bool)canPasteImage;
- (void)pasteOperation;
- (void)copyOperation;
- (void)cutOperation;
- (void)setEditingTraitsMarkedDirty:(_Bool)arg1;
- (_Bool)editingTraitsMarkedDirty;
- (void)updateStylingTraitsIfNeeded;
- (id)responderStylingTraitsForceEditingMask:(_Bool)arg1;
- (void)updateShiftState;
- (void)notifyShiftState;
- (void)updateInputManagerAutocapitalizationType;
- (void)recomputeActiveInputModesWithExtensions:(_Bool)arg1 allowNonLinguisticInputModes:(_Bool)arg2;
- (void)recomputeActiveInputModesWithExtensions:(_Bool)arg1;
- (id)desirableInputModesWithExtensions:(_Bool)arg1;
- (_Bool)shouldSwitchInputMode:(id)arg1;
- (_Bool)shouldUseCarPlayModes;
- (void)releaseInputManagerIfInactive;
- (void)releaseInputManager;
- (void)setInputManagerFromCurrentInputMode;
@property(readonly, nonatomic) TUIKeyboardBackendController *backendController;
@property(readonly, nonatomic) TIKeyboardInputManagerStub *inputManager;
- (void)removeAllDynamicDictionaries;
- (void)adjustPhraseBoundaryInForwardDirection:(_Bool)arg1 granularity:(int)arg2 executionContext:(id)arg3;
- (void)performHitTestForTouchEvents:(id)arg1 executionContextPassingNSNumber:(id)arg2;
- (void)performHitTestForTouchEvent:(id)arg1 executionContextPassingNSNumber:(id)arg2;
- (void)skipHitTestForTouchEvent:(id)arg1 delayed:(_Bool)arg2;
- (void)skipHitTestForTouchEvents:(id)arg1;
- (void)skipHitTestForTouchEvent:(id)arg1;
- (void)generateReplacementsForString:(id)arg1 candidatesHandler:(CDUnknownBlockType)arg2 executionContext:(id)arg3;
- (void)handleAcceptedCandidate:(id)arg1 executionContext:(id)arg2;
- (void)_didReplaceText:(id)arg1 withSupplementalCandidate:(id)arg2;
- (void)_willReplaceText:(id)arg1 withSupplementalCandidate:(id)arg2;
- (_Bool)_insertSupplementalCandidate:(id)arg1 overridingCandidateText:(id)arg2;
- (void)inputManagerDidGenerateAutocorrections:(id)arg1 forPredictiveInput:(id)arg2 executionContext:(id)arg3;
- (void)inputManagerDidGenerateAutocorrections:(id)arg1 executionContext:(id)arg2;
- (void)_insertionPointExitedRangeWithSupplementalCandidate;
- (_Bool)shouldAcceptContinuousPathConversion:(id)arg1;
- (void)generateAutocorrectionsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)generateAutocorrectionWithExecutionContext:(id)arg1;
- (void)inputManagerDidGenerateCandidatesForRequest:(id)arg1 resultSet:(id)arg2;
- (void)_inputManagerDidGenerateSupplementalCandidates:(id)arg1;
- (id)_rangeForSupplementalItemText:(id)arg1;
- (long long)preferredCandidateViewTypeForCandidateResultSet:(id)arg1;
- (_Bool)shouldPrioritizeTextSuggestionsOverCandidateResultSet:(id)arg1;
- (void)cancelCandidateRequests;
- (void)generateCandidatesAsynchronouslyWithRange:(struct _NSRange)arg1 selectedCandidate:(id)arg2;
- (void)generateCandidatesAsynchronously;
- (void)performKeyboardOutput:(id)arg1 checkingDelegate:(_Bool)arg2 forwardToRemoteInputSource:(_Bool)arg3;
- (void)performKeyboardOutput:(id)arg1 checkingDelegate:(_Bool)arg2;
- (void)performKeyboardOutputAsRTIClient:(id)arg1;
- (void)performKeyboardOutput:(id)arg1;
- (void)_cancelPendingSupplementalCandidateInsertion;
- (void)performKeyboardOutputInfo:(id)arg1;
- (_Bool)dontPushOneTimeCode;
- (void)_touchIDDismissed;
- (void)_touchIDPresented;
- (void)replaceAllTextInResponder:(id)arg1 withText:(id)arg2;
- (void)updateKeyboardOutput:(id)arg1 withInputForSmartPunctuation:(id)arg2 keyboardConfiguration:(id)arg3;
- (void)handleKeyboardInput:(id)arg1 executionContext:(id)arg2;
- (void)setLabel:(id)arg1 forKey:(id)arg2;
- (void)syncKeyboardToConfiguration:(id)arg1;
- (void)syncInputManagerToKeyboardStateWithExecutionContext:(id)arg1;
- (void)syncInputManagerToKeyboardState;
@property(readonly, nonatomic) UIKeyboardTaskQueue *taskQueue;
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;
- (void)selectionDidChange:(id)arg1;
- (void)completeUpdateForChangedSelection:(_Bool)arg1;
- (_Bool)shouldGenerateCandidatesAfterSelectionChange;
- (void)updateForChangedSelectionWithExecutionContext:(id)arg1;
- (void)updateForChangedSelection;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (void)selectionWillChange:(id)arg1;
- (void)prepareForSelectionChange;
- (void)syncDocumentStateToInputDelegateWithExecutionContext:(id)arg1;
- (void)documentStateFromInputDelegate:(CDUnknownBlockType)arg1;
- (void)syncDocumentStateToInputDelegate;
- (_Bool)cursorIsAtEndOfMarkedText;
- (id)inputStringFromPhraseBoundary;
- (id)searchStringForMarkedText;
- (id)markedTextOverlay;
- (void)smartSelectionForTextInDocument:(id)arg1 inRange:(struct _NSRange)arg2 options:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
- (id)inputForMarkedText;
- (_Bool)hasEditableMarkedText;
- (void)clearInputForMarkedText;
- (void)_setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 inputString:(id)arg3 searchString:(id)arg4 compareAttributes:(_Bool)arg5;
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 inputString:(id)arg3 searchString:(id)arg4;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 inputString:(id)arg3 searchString:(id)arg4 candidateOffset:(long long)arg5 liveConversionSegments:(id)arg6 highlighSegmentIndex:(unsigned long long)arg7;
- (unsigned long long)_clipCornersOfView:(id)arg1;
- (void)_didChangeKeyplaneWithContext:(id)arg1;
- (void)updateInputAssistantButtonItems;
- (void)didMoveToSuperview;
- (void)willMoveToWindow:(id)arg1;
- (void)_updateExternalDeviceInputSettingForWindow:(id)arg1;
- (_Bool)transitionInProgress;
- (void)setTwoFingerTapTimestamp:(double)arg1;
- (_Bool)shouldAllowSelectionGestures:(_Bool)arg1 atPoint:(struct CGPoint)arg2 toBegin:(_Bool)arg3;
@property(readonly, nonatomic) double timestampOfLastTouchesEnded;
- (void)updateLayout;
- (void)finishLayoutChangeWithArguments:(id)arg1;
@property(readonly, nonatomic) _Bool shouldShowCandidateBar;
- (_Bool)shouldShowLongPredictionList;
- (_Bool)shouldShowCandidateBarIfReceivedCandidatesInCurrentInputMode:(_Bool)arg1 ignoreHidePredictionTrait:(_Bool)arg2;
- (_Bool)currentKeyboardTraitsAllowCandidateBarWhileIgnoringHidePredictionTrait:(_Bool)arg1;
- (void)layoutSubviews;
- (struct CGRect)subtractKeyboardFrameFromRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)geometryChangeDone:(_Bool)arg1;
- (void)prepareForGeometryChange;
- (void)releaseSuppressUpdateCandidateView;
- (void)updateLayoutIfNeeded;
- (void)handleEmojiPopoverKeyCommand;
- (_Bool)handleReturnKey:(_Bool)arg1;
- (_Bool)handleCandidateListNavigation:(unsigned int)arg1 hasCandidatesForTypedInput:(_Bool)arg2 shiftDown:(_Bool)arg3 keyCommandTypeHandled:(unsigned long long *)arg4 allowRepeat:(_Bool *)arg5;
- (_Bool)handleInputManagerBasedKeybind:(id)arg1 testOnly:(_Bool)arg2;
- (unsigned long long)handleKeyCommand:(id)arg1 repeatOkay:(_Bool *)arg2 options:(unsigned long long)arg3;
- (_Bool)shouldShowKeyboardMenu;
- (_Bool)handleKeyCommand:(id)arg1 repeatOkay:(_Bool *)arg2 beforePublicKeyCommands:(_Bool)arg3;
- (_Bool)isCurrentEditResponderInEditingMode;
- (_Bool)_cancelOperation:(_Bool)arg1 testOnly:(_Bool)arg2;
- (_Bool)_canHandleResponderCommandConservatively:(SEL)arg1;
- (_Bool)_canHandleResponderCommand:(SEL)arg1;
- (_Bool)shouldAllowRepeatEvent:(id)arg1;
- (void)handleObserverCallback;
- (void)updateObserverState;
- (void)setChangeNotificationDisabled:(_Bool)arg1;
- (_Bool)changeNotificationDisabled;
- (void)setChanged;
- (void)textFrameChanged:(id)arg1;
- (void)callChanged;
- (_Bool)callShouldDeleteWithWordCountForRapidDelete:(int)arg1 characterCountForRapidDelete:(int)arg2;
- (_Bool)shouldRapidDeleteWithDelegate;
- (_Bool)shouldRapidDelete;
- (_Bool)usesAutoDeleteWord;
- (_Bool)insertTextIfShould:(id)arg1;
- (_Bool)callShouldInsertText:(id)arg1;
- (void)didClearText;
- (void)setDocumentState:(id)arg1;
- (void)performTextOperationActionSelector:(SEL)arg1;
- (id)physicalKeyboardEventWithInput:(id)arg1 inputFlags:(int)arg2;
- (void)_completePerformInputViewControllerOutput:(id)arg1 executionContext:(id)arg2;
- (void)_processInputViewControllerKeyboardOutput:(id)arg1 executionContext:(id)arg2;
- (void)_updateInputViewControllerOutput:(id)arg1 forKeyboardOutput:(id)arg2;
- (_Bool)_shouldRequestInputManagerSyncForKeyboardOutputCallbacks:(id)arg1;
- (void)performKeyboardOutputAsInputViewControllerOutput:(id)arg1 textInputSource:(long long)arg2;
- (void)performKeyboardOutputAsInputViewControllerOutput:(id)arg1;
- (void)clearCapsLockDelayOverrideTimer;
- (void)removeCapsLockDelayOverride;
- (void)adjustCapsLockDelayOverride;
- (void)updateAssistantView;
- (_Bool)isTrackpadMode;
- (void)prepareForFloatingTransition:(_Bool)arg1;
- (id)keyplaneView;
- (void)handleWebViewCredentialsSaveForWebsiteURL:(id)arg1 user:(id)arg2 password:(id)arg3 passwordIsAutoGenerated:(_Bool)arg4;
- (void)setSuggestions:(id)arg1;
- (_Bool)predictionFromPreference;
@property(readonly, nonatomic) _Bool isAutofillPrediction;
@property(readonly, nonatomic) _Bool isDefaultPrediction;
- (void)enable;
- (id)textInputTraits;
- (void)setOverrideTextInputTraits:(id)arg1;
- (void)setDefaultTextInputTraits:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)textSuggestionDidChange:(id)arg1;
- (void)finishTextChanged;
- (void)textChanged:(id)arg1 executionContext:(id)arg2;
- (void)textChanged:(id)arg1;
- (void)layoutHasChanged;
- (void)textWillChange:(id)arg1;
- (_Bool)hasDelegate;
- (_Bool)autocorrectSpellingEnabled;
- (void)setAutocorrectSpellingEnabled:(_Bool)arg1;
- (_Bool)delegateSupportsCorrectionUI;
- (void)flushDelayedTasks;
- (void)queueDelayedTask:(CDUnknownBlockType)arg1;
- (_Bool)delegateSupportsImagePaste;
- (void)updateDelegatePasteSupport;
- (_Bool)delegateIsSMSTextView;
- (void)didSetDelegate;
- (void)setDelegate:(id)arg1 force:(_Bool)arg2;
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate; // @dynamic delegate;
- (id)inputDelegate;
- (id)delegateAsResponder;
- (void)postInputResponderCapabilitiesChangedNotification;
- (void)_postInputResponderCapabilitiesChangedNotificationWithOutput:(id)arg1 selectionChanged:(_Bool)arg2;
- (void)_postInputResponderChangedNotification;
- (id)documentIdentifierForInputDelegate:(id)arg1;
- (_Bool)_delegateRequiresKeyEvents;
- (void)setTextSelectionControllerFromDelegate;
- (id)textSelectionControllerForInputDelegate:(id)arg1;
- (void)removeSupplementalLexicon:(id)arg1;
- (void)addSupplementalLexicon:(id)arg1;
- (void)setLayoutRenderConfig:(id)arg1;
- (void)takeTextInputTraitsFromDelegate;
- (void)setCorrectionLearningAllowed:(_Bool)arg1;
- (void)finishLayoutToCurrentInterfaceOrientation;
@property(readonly, nonatomic) _Bool isRotating;
- (void)updateLayoutToCurrentInterfaceOrientation;
- (void)prepareLayoutForInterfaceOrientation:(long long)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)updateLayoutIfNecessary;
- (void)_updateSoundPreheatingForWindow:(id)arg1;
- (void)setInputModeToNextASCIICapableInPreferredList;
- (void)finishSetInputModeToNextInPreferredListWithExecutionContext:(id)arg1 withPreviousInputMode:(id)arg2;
- (void)setInputModeToNextInPreferredListWithExecutionContext:(id)arg1;
- (void)hideInternationalKeyIntroductionIfNeeded;
- (void)showInternationalKeyIntroductionIfNeededWithPreviousInputMode:(id)arg1;
- (_Bool)shouldShowInternationalKeyIntroduction;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(_Bool)arg1;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(_Bool)arg1 preserveIfPossible:(_Bool)arg2;
- (void)setKeyboardInputModeFromPreferences:(id)arg1;
- (void)prepareKeyboardInputModeFromPreferences:(id)arg1;
- (void)setInputModeFromPreferences;
- (void)finishSetInputMode:(id)arg1 didChangeDirection:(_Bool)arg2;
- (void)finishSetExtensionInputMode:(id)arg1 didChangeDirection:(_Bool)arg2;
- (void)finishSetKeyboardInputMode:(id)arg1 previousInputMode:(id)arg2 didChangeDirection:(_Bool)arg3;
- (void)didDismissMemojiCard;
- (void)didPresentMemojiCard;
- (void)dismissKeyboardPopoverBeforeCleanup:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismissKeyboardPopoverIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;
- (void)_presentKeyboardPopoverWithInputMode:(id)arg1 window:(id)arg2 textInputView:(id)arg3 caretRect:(struct CGRect)arg4 isVerticalText:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;
- (void)presentKeyboardPopoverWithInputMode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)cleanupKeyboardPopover;
- (void)presentEmojiPopoverViaTrigger:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)canPresentOrDismissEmojiPopover;
- (_Bool)canPresentEmojiPopover;
- (_Bool)isKeyboardPopoverVisibleOrDismissing;
- (_Bool)isKeyboardPopoverPresented;
- (void)presentationControllerDidDismiss:(id)arg1;
- (_Bool)presentationControllerShouldDismiss:(id)arg1;
- (void)reinitializeAfterInputModeSwitch:(_Bool)arg1;
- (void)updateForHandBiasChange;
- (void)updateSmartPunctuationOptionsForLocaleIdentifier:(id)arg1;
- (void)cleanUpBeforeInputModeSwitch;
- (void)_setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2 updateIndicator:(_Bool)arg3 force:(_Bool)arg4 executionContext:(id)arg5;
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2 updateIndicator:(_Bool)arg3 executionContext:(id)arg4;
- (void)reloadCurrentInputMode;
- (void)postInputViewControllerShouldUpdateNotification:(id)arg1;
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2;
- (void)_setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2 force:(_Bool)arg3;
- (void)setInputMode:(id)arg1 userInitiated:(_Bool)arg2 updateIndicator:(_Bool)arg3 executionContext:(id)arg4;
- (void)setInputMode:(id)arg1 userInitiated:(_Bool)arg2;
- (void)setInputMode:(id)arg1;
- (_Bool)shiftLockPreference;
- (void)setHardwareKeyboardsSeenPreference:(id)arg1;
- (id)hardwareKeyboardsSeenPreference;
- (void)setShouldUpdateCacheOnInputModesChange:(_Bool)arg1;
- (void)updateInputModeLastChosenPreference;
- (id)inputModeLastUsedPreference;
- (id)inputModePreference;
- (void)saveInputModesPreference:(id)arg1;
- (void)setAutomaticMinimizationEnabled:(_Bool)arg1;
@property(readonly, nonatomic) _Bool automaticMinimizationEnabled; // @synthesize automaticMinimizationEnabled=m_automaticMinimizationEnabled;
- (_Bool)keyboardsExpandedPreference;
- (id)UILanguagePreference;
- (_Bool)doubleSpacePeriodPreference;
@property(readonly, nonatomic) TISmartPunctuationController *smartPunctuationController; // @synthesize smartPunctuationController=m_smartPunctuationController;
- (_Bool)checkSpellingPreferenceForTraits;
- (_Bool)checkSpellingPreference;
- (_Bool)delayedCandidateList;
- (_Bool)liveConversionEnabled;
- (_Bool)smartInsertDeleteIsEnabled;
- (_Bool)autocapitalizationPreference;
- (_Bool)candidateSelectionPredictionForTraits;
- (_Bool)disableInputBars;
- (_Bool)isPredictionViewControllerVisible;
@property(readonly, nonatomic) _Bool canShowPredictionBar;
- (_Bool)_shouldLoadPredictionsBasedOnCurrentTraits;
- (unsigned long long)_updateAutocorrectionPreferenceForTraitsWithCurrentPreference:(_Bool)arg1;
- (unsigned long long)autocorrectionPreferenceForTraits;
- (void)updateTextInputKeyboardSource;
- (void)_updateTextInputPencilSource;
- (void)performOperations:(CDUnknownBlockType)arg1 withTextInputSource:(long long)arg2;
- (void)performDelete;
- (void)performReturn;
- (long long)_textInputSourceForDelegate:(id)arg1;
- (_Bool)keyboardIsInPencilTextInputMode;
- (_Bool)keyboardIsKeyPad;
- (_Bool)autocorrectionPreference;
- (void)cancelSplitTransition;
- (_Bool)hideAccessoryViewsDuringSplit;
- (void)setSplitProgress:(double)arg1;
- (void)setInSplitKeyboardMode:(_Bool)arg1;
- (_Bool)shouldAllowTwoFingerSelectionGestureOnView:(id)arg1;
- (void)beginFloatingTransitionFromPanGestureRecognizer:(id)arg1;
@property(readonly, nonatomic) _Bool splitTransitionInProgress;
@property(readonly) unsigned long long minimumTouchesForTranslation;
@property _Bool rivenSplitLock;
- (void)refreshRivenPreferences;
- (struct CGRect)dragGestureRectInView:(id)arg1;
- (struct CGRect)frameForKeylayoutName:(id)arg1;
@property(readonly) _Bool centerFilled;
- (void)defaultsDidChange;
- (void)updateDefaultsWithResults:(CDUnknownBlockType)arg1;
- (void)selectionScrolling:(id)arg1;
- (void)applicationResumedEventsOnly:(id)arg1;
- (void)applicationResumed:(id)arg1;
- (void)applicationSuspendedEventsOnly:(id)arg1;
- (void)removeFromSuperview;
- (void)deactivateLayout;
- (void)clearLayouts;
@property(retain, nonatomic) TIKeyboardLayout *layoutForKeyHitTest;
- (void)provideAutoFillTypingUpdatesIfNecessary;
- (_Bool)suppressOptOutASPCandidateUpdateForDelegate:(id)arg1;
- (void)trackResponderForAutofillIfNeeded:(id)arg1;
- (void)handleAutofillCredentialSaveIfNeeded:(id)arg1;
- (void)removeASPVisualEffectsIfNecessary:(id)arg1;
- (void)clearAutofillGroup;
- (_Bool)isMemberOfPossibleAutofillGroup:(id)arg1;
- (_Bool)isMemberOfAutofillGroup:(id)arg1;
- (_Bool)delegateAlreadyInAutofillGroup;
- (long long)needAutofillCandidate:(id)arg1;
- (_Bool)preferFallbackAutofillGroup;
- (void)setPendingAutofillIndex:(long long)arg1;
- (void)refreshSecureCandidatesIfNecessary;
- (void)refreshAutofillModeIfNecessary;
- (void)generateAutofillCandidateByAddingTask:(_Bool)arg1;
- (void)generateAutofillCandidate;
- (id)_contentsOfUsernameField;
- (long long)needAutofill;
- (_Bool)needOneTimeCodeAutofill;
- (_Bool)textInputTraitsNeedContactAutoFill;
- (_Bool)textInputTraitsNeedOneTimeCode;
@property(readonly, nonatomic) _Bool needAutofillLogin;
- (_Bool)textInputTraitsNeedAutofill;
- (_Bool)textInputTraitsNeedAutofillExcludeOneTimeCodeAndContact;
- (void)refreshKeyboardStateUpdatingSecureCandidateRenderTraits:(_Bool)arg1;
- (void)refreshKeyboardState;
- (void)updateInputManagerMode;
- (_Bool)shouldSwitchFromInputManagerMode:(id)arg1 toInputMode:(id)arg2;
- (id)updateSecureCandidateRenderTraits;
- (unsigned long long)maxNumberOfProactiveCells;
- (id)layoutState;
- (void)dealloc;
- (void)detach;
- (void)keyboardDidHide:(id)arg1;
- (void)delayedInit;
- (id)initWithFrame:(struct CGRect)arg1 forCustomInputView:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setCapsLockIfNeeded;
- (void)setCapsLockSign;
@property(nonatomic) _Bool hardwareKeyboardIsSeen;
- (void)didMoveToWindow;
- (struct UIEdgeInsets)deviceSpecificPaddingForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;
- (struct UIEdgeInsets)deviceSpecificStaticHitBufferForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;
- (struct CGSize)defaultSizeForInterfaceOrientation:(long long)arg1;
- (void)_setCandidateController:(id)arg1;
- (_Bool)_containsUsernamePasswordPairsInAutofillGroup:(id)arg1;
- (id)_fallbackAutofillGroup;
- (id)_autofillGroup;
- (void)_setAutofillGroup:(id)arg1;
- (void)_clearAutofillGroup;
- (long long)_needAutofillCandidate:(id)arg1;
- (void)logHandwritingData;
- (_Bool)isAutoDeleteActive;
- (int)textInputChangingCount;
- (_Bool)_isShowingCandidateUIWithAvailableCandidates;
- (void)updateFromTextInputTraits;
- (void)_setShiftLockedEnabled:(_Bool)arg1;
- (void)_setInputManager:(id)arg1;
- (void)createTypoTrackerReport;
- (void)dismissEditingIntroductionView;
- (void)presentEditingIntroductionView;
- (_Bool)shouldShowEditingIntroductionView;
- (void)dismissContinuousPathIntroductionView;
- (void)presentContinuousPathIntroductionView;
- (_Bool)shouldShowContinuousPathIntroductionView;
- (void)performKeyboardOutputOnInputSourceSession:(CDUnknownBlockType)arg1;
- (_Bool)isRTIClient;
- (_Bool)callShouldInsertText:(id)arg1 onDelegate:(id)arg2;
- (void)clearTextAlternativesRange;
- (void)showFirstTextAlternativeWithRangeAdjustment:(long long)arg1;
- (void)showTextAlternativesInRange:(struct _NSRange)arg1;
- (id)attributedText;
- (double)lastTouchDownTimestamp;
- (void)lookUpResponderChainForCustomInputView;
- (void)moveCursorRightShifted:(_Bool)arg1;
- (void)moveCursorLeftShifted:(_Bool)arg1;
- (_Bool)isShiftKeyBeingHeld;
- (_Bool)hardwareKeyboardAttached;
- (void)performBlockWithTextInputChangesIgnoredForNonMacOS:(CDUnknownBlockType)arg1;
- (void)_deactiveActiveKeys;
- (void)_showAutofillExtras;
- (_Bool)shouldLoadAutofillSignUpInputViewController;
- (id)_passwordRules;
- (id)_remoteAssociatedDomains;
- (id)_remoteUnlocalizedAppName;
- (id)_remoteLocalizedAppName;
- (id)_remoteAppId;
- (id)_autofillContext;
- (id)internationalKeyDisplayStringOnEmojiKeyboard;
- (_Bool)showsDedicatedEmojiKeyAlongsideGlobeButton;
- (_Bool)globeKeyDisplaysAsEmojiKey;
- (void)acceptAutocorrectionAndEndComposition;
- (double)biasedKeyboardWidthRatio;
- (long long)currentHandBias;
- (_Bool)allowsReachableKeyboard;
- (id)_layout;
- (_Bool)isUsingDictationLayout;
- (void)setTextInputChangesIgnored:(_Bool)arg1;
- (void)finishSplitTransitionWithProgress:(double)arg1;
- (void)_dynamicUserInterfaceTraitDidChange;
- (void)traitCollectionDidChange;
- (void)setSplit:(_Bool)arg1 animated:(_Bool)arg2;
- (void)showSelectionCommands;
@property(readonly, nonatomic) UITextInteractionAssistant *textInteractionAssistant;
@property(readonly, nonatomic) UITextSelectionView *selectionView;
- (void)setInitialDirection;
- (void)_suppressSoftwareKeyboardStateChangedIgnoringPolicyDelegate:(_Bool)arg1;
- (void)_updateKeyboardSuppression:(id)arg1;
- (_Bool)_shouldSuppressSoftwareKeyboardForResponder:(id)arg1 ignoringPolicyDelegate:(_Bool)arg2;
- (_Bool)_shouldSuppressSoftwareKeyboardIgnoringPolicyDelegate:(_Bool)arg1;
- (_Bool)_shouldSuppressSoftwareKeyboard;
- (_Bool)_shouldMinimizeForHardwareKeyboard;
- (void)updateKeyboardConfigurations;
- (void)clearLanguageIndicator;
- (_Bool)keyboardDrawsOpaque;
- (void)clearExcessKeyboardMemory;
- (void)_tagTouchForTypingMenu:(unsigned int)arg1;
- (void)_requestInputManagerSync;
- (void)_performInputViewControllerOutput:(id)arg1;
- (void)restoreFocusFromEntryPoint:(struct CGPoint)arg1;
- (struct CGRect)globalFrameForCurrentKey;
- (id)currentKey;
- (id)implProxy;
- (_Bool)isOutOfProcess;
@property(nonatomic) unsigned long long serviceRole;
- (_Bool)_needsCandidates;
- (void)_setNeedsCandidates:(_Bool)arg1;
- (long long)_positionInCandidateList:(id)arg1;
- (_Bool)_hasCandidates;
- (id)_getAutocorrectionList;
- (id)_getAutocorrection;
- (void)_setAutocorrects:(_Bool)arg1;
- (id)_getLocalizedInputMode;
- (id)_getCurrentKeyboardName;
- (id)_getCurrentKeyplaneName;
@property(nonatomic) _Bool prewarmsPredictiveCandidates;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

