//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <iWorkImport/TSDMixing-Protocol.h>
#import <iWorkImport/TSTCustomStrokeProviding-Protocol.h>
#import <iWorkImport/TSTStyleProviding-Protocol.h>
#import <iWorkImport/TSTTableHiddenRowColumnProviding-Protocol.h>
#import <iWorkImport/TSTTableInternalGeometryProviding-Protocol.h>
#import <iWorkImport/TSTTableMergeRangeProviding-Protocol.h>
#import <iWorkImport/TSTTableStrokeProviding-Protocol.h>

@class NSArray, NSIndexSet, NSMutableIndexSet, NSSet, NSString, NSUUID, TSCECalculationEngine, TSCECellCoordinateVector, TSCEOwnerFormulaMap, TSCEOwnerUidMapper, TSDCommentStorage, TSDStroke, TSKFormat, TSPObjectContext, TSSStylesheet, TSTCell, TSTCellBorder, TSTCellDictionary, TSTCellMap, TSTCellRegion, TSTCellStyle, TSTCellUIDList, TSTCommentHosting, TSTConditionalStyleFormulaOwner, TSTConditionalStyleSet, TSTHiddenStateFormulaOwner, TSTHiddenStateIndexSet, TSTImportWarningSetByCoordinateMap, TSTInfo, TSTMergeOwner, TSTMergeRegionMap, TSTSortRuleReferenceTracker, TSTStrokeSidecar, TSTTableFilterSet, TSTTableModel, TSTTableSortOrder, TSTTableStyleNetwork, TSTTableStylePreset, TSUColor, TSUMutableUUIDSet, TSUUUIDSet, TSWPParagraphStyle, TSWPStorage;
@protocol TSKStyleMapper, TSTCellIteratorData;

@protocol TSTInfoDelegating <TSDMixing, TSTCustomStrokeProviding, TSTStyleProviding, TSTTableHiddenRowColumnProviding, TSTTableInternalGeometryProviding, TSTTableMergeRangeProviding, TSTTableStrokeProviding>
@property NSArray *columnWidths;
@property NSArray *rowHeights;
@property(nonatomic) double defaultColumnWidth;
@property(nonatomic) double defaultRowHeight;
@property(nonatomic) _Bool wasUnarchivedFromAProvidedTable;
@property(nonatomic) _Bool presetNeedsStrongOwnership;
@property(readonly, retain, nonatomic) TSTStrokeSidecar *strokeSidecar;
@property(copy, nonatomic) TSTTableSortOrder *sortOrder;
@property(retain, nonatomic) TSTImportWarningSetByCoordinateMap *warningSetsForUndo;
@property(retain, nonatomic) TSCEOwnerFormulaMap *formulasForUndo;
@property(readonly, nonatomic) TSCECellCoordinateVector *cellsToInvalidateNonoverflowingAfterRecalc;
@property(readonly, nonatomic) TSCECellCoordinateVector *cellsToInvalidateAfterRecalc;
@property(readonly, nonatomic) TSTCellDictionary *cellsPendingWrite;
@property(copy, nonatomic) TSTTableFilterSet *filterSet;
@property(readonly, nonatomic) UUIDData_5fbc143e conditionalStyleFormulaOwnerUID;
@property(readonly, nonatomic) TSTMergeOwner *mergeOwner;
@property(readonly, nonatomic) TSTHiddenStateIndexSet *hiddenColumns;
@property(readonly, nonatomic) TSTHiddenStateIndexSet *userHiddenRows;
@property(readonly, nonatomic) TSTHiddenStateIndexSet *hiddenRows;
@property(readonly, nonatomic) TSTSortRuleReferenceTracker *sortRuleReferenceTracker;
@property(readonly, nonatomic) TSTHiddenStateFormulaOwner *hiddenStateFormulaOwnerForColumns;
@property(readonly, nonatomic) TSTHiddenStateFormulaOwner *hiddenStateFormulaOwnerForRows;
@property(readonly, nonatomic) TSTConditionalStyleFormulaOwner *conditionalStyleFormulaOwner;
@property(readonly, nonatomic) TSTCell *defaultFooterRowCell;
@property(readonly, nonatomic) TSTCell *defaultHeaderColumnCell;
@property(readonly, nonatomic) TSTCell *defaultHeaderRowCell;
@property(readonly, nonatomic) TSTCell *defaultBodyCell;
@property(retain, nonatomic) TSTTableStylePreset *tableStylePreset;
@property(nonatomic) _Bool styleApplyClearsAll;
@property(nonatomic) _Bool headerColumnsFrozen;
@property(nonatomic) _Bool headerRowsFrozen;
@property(readonly, nonatomic) unsigned short numberOfFilteredRows;
@property(readonly, nonatomic) unsigned short numberOfUserHiddenColumns;
@property(readonly, nonatomic) unsigned short numberOfUserHiddenRows;
@property(readonly, nonatomic) unsigned short numberOfHiddenColumns;
@property(readonly, nonatomic) unsigned short numberOfHiddenRows;
@property(nonatomic) unsigned short numberOfHeaderColumns;
@property(nonatomic) unsigned short numberOfFooterRows;
@property(nonatomic) unsigned short numberOfHeaderRows;
@property(nonatomic) unsigned short numberOfColumns;
@property(nonatomic) unsigned short numberOfRows;
@property(readonly, nonatomic) _Bool hasAlternatingRows;
@property(readonly, nonatomic) _Bool hasTableBorder;
@property(readonly, nonatomic) int tableWritingDirection;
@property(nonatomic) _Bool repeatingHeaderColumnsEnabled;
@property(nonatomic) _Bool repeatingHeaderRowsEnabled;
@property(readonly, nonatomic) TSDStroke *tableNameBorderStroke;
@property(nonatomic) _Bool tableNameBorderEnabled;
@property(nonatomic) double tableNameHeight;
@property(nonatomic) _Bool tableNameEnabled;
@property(retain, nonatomic) NSString *tableName;
@property(readonly, retain, nonatomic) NSUUID *nsTableUID;
@property(readonly, nonatomic) TSCEOwnerUidMapper *identityOwnerUIDMapper;
@property(readonly, nonatomic) TSCEOwnerUidMapper *ownerUIDMapper;
@property(nonatomic) UUIDData_5fbc143e fromTableUID;
@property(nonatomic) UUIDData_5fbc143e tableUID;
@property(nonatomic) _Bool wasCut;
@property(nonatomic) TSCECalculationEngine *calcEngine;
- (Class)editorClass;
- (Class)dataStoreIteratorClass;
- (Class)layoutClass;
- (Class)repClass;
- (struct TSUCellCoord)cellIDForCellContainingRichTextStorage:(TSWPStorage *)arg1;
- (NSSet *)allRichTextPayloadStorages;
- (TSKFormat *)populatedMultipleChoiceListFormat:(TSKFormat *)arg1;
- (unsigned long long)conditionalStyleRefCountForKey:(unsigned int)arg1;
- (_Bool)formatDataListContainsControlFormats;
- (long long)importWarningSetDataListCount;
- (TSTCellUIDList *)prunedCellUIDListFromCellUIDList:(TSTCellUIDList *)arg1 allowMergeFragment:(_Bool)arg2 addingPrunedIndicesToIndexSet:(NSMutableIndexSet *)arg3;
- (_Bool)writeCellIDsInCellUIDList:(TSTCellUIDList *)arg1 toVector:(vector_13f93596 *)arg2;
- (TSTCellRegion *)cellRegionForUIDRange:(const struct TSTCellUIDRange *)arg1;
- (struct TSTCellUIDRange)cellUIDRangeForCellRange:(struct TSUCellRect)arg1;
- (struct TSUCellRect)cellRangeForUIDRange:(const struct TSTCellUIDRange *)arg1;
- (NSMutableIndexSet *)mutableIndexesForUIDSet:(TSUUUIDSet *)arg1 isRows:(_Bool)arg2 notFoundUIDs:(TSUMutableUUIDSet *)arg3;
- (NSMutableIndexSet *)mutableIndexesForUIDSet:(TSUUUIDSet *)arg1 isRows:(_Bool)arg2;
- (TSUMutableUUIDSet *)UIDSetForIndexes:(NSIndexSet *)arg1 isRows:(_Bool)arg2;
- (vector_dadc1b26)prunedRowUIDsFromRowUIDs:(const vector_dadc1b26 *)arg1;
- (vector_dadc1b26)prunedColumnUIDsFromColumnUIDs:(const vector_dadc1b26 *)arg1;
- (vector_dadc1b26)columnUIDs;
- (vector_dadc1b26)columnUIDsForColumnRange:(struct _NSRange)arg1;
- (NSMutableIndexSet *)mutableColumnIndexesForUIDs:(const vector_dadc1b26 *)arg1;
- (NSIndexSet *)columnIndexesForUIDs:(const vector_dadc1b26 *)arg1;
- (vector_dadc1b26)columnUIDsForColumnIndexes:(NSIndexSet *)arg1;
- (unsigned char)columnIndexForColumnUID:(const UUIDData_5fbc143e *)arg1;
- (UUIDData_5fbc143e)columnUIDForColumnIndex:(unsigned char)arg1;
- (vector_dadc1b26)rowUIDs;
- (vector_dadc1b26)rowUIDsForRowRange:(struct _NSRange)arg1;
- (NSMutableIndexSet *)mutableRowIndexesForUIDs:(const vector_dadc1b26 *)arg1;
- (NSIndexSet *)rowIndexesForUIDs:(const vector_dadc1b26 *)arg1;
- (vector_dadc1b26)rowUIDsForRowIndexes:(NSIndexSet *)arg1;
- (unsigned short)rowIndexForRowUID:(const UUIDData_5fbc143e *)arg1;
- (UUIDData_5fbc143e)rowUIDForRowIndex:(unsigned short)arg1;
- (struct TSUCellCoord)cellIDForCellUID:(const struct TSTCellUID *)arg1;
- (struct TSTCellUID)cellUIDforCellID:(const struct TSUCellCoord *)arg1;
- (void)adoptStylesheet:(TSSStylesheet *)arg1 withMapper:(id <TSKStyleMapper>)arg2;
- (void)updateTableRowColumnStylesWithBlock:(TSSStyle * (^)(TSSStyle *))arg1;
- (void)mapTableStylesToStylesheet:(TSSStylesheet *)arg1 withMapper:(id <TSKStyleMapper>)arg2;
- (void)getValue:(out struct TSCEValue *)arg1 fromIteratorData:(id <TSTCellIteratorData>)arg2 fetchRichTextAttributesIfPlainText:(_Bool)arg3;
- (int)getValue:(out struct TSCEValue *)arg1 atCellID:(struct TSUCellCoord)arg2 fetchRichTextAttributesIfPlainText:(_Bool)arg3;
- (_Bool)hasFormulas;
- (void)prepareForPasteWithCalculationEngine:(TSCECalculationEngine *)arg1 sourceOffset:(CDStruct_945081a1)arg2;
- (void)registerAllFormulasWithCalculationEngine:(TSCECalculationEngine *)arg1;
- (void)registerAllFormulasWithCalculationEngine:(TSCECalculationEngine *)arg1 wasCrossDocumentPaste:(_Bool)arg2;
- (void)reassignPasteboardCustomFormatKeys;
- (void)addPasteboardCustomFormatsToDocumentAndUpdateCells;
- (void)setFormulaOwnerUIDsWithMap:(TSCEOwnerUidMapper *)arg1 shouldStealReferences:(_Bool)arg2;
- (void)remapTableUIDsInFormulasWithMap:(const UUIDMap_727ee07e *)arg1 calcEngine:(TSCECalculationEngine *)arg2 bakeForBadRefs:(_Bool)arg3;
- (_Bool)cellWasModifiedInCurrentRecalcCycle:(struct TSUCellCoord)arg1;
- (struct TSCERangeRef)referenceToHiddenStateFromColumn:(unsigned char)arg1 toColumn:(unsigned char)arg2;
- (struct TSCERangeRef)referenceToHiddenStateFromRow:(unsigned short)arg1 toRow:(unsigned short)arg2;
- (TSTCellRegion *)regionForValueOrCommentCellsInRange:(struct TSUCellRect)arg1;
- (NSMutableIndexSet *)mergedGridIndicesForDirection:(long long)arg1;
- (_Bool)hasMergeRangesIntersectingCellRegion:(TSTCellRegion *)arg1;
- (_Bool)hasMergeFragmentAtCellID:(struct TSUCellCoord)arg1;
- (_Bool)mergeRangesPartiallyIntersectingCellRange:(struct TSUCellRect)arg1;
- (struct TSUCellRect)mergeRangeAtCellID:(struct TSUCellCoord)arg1;
- (_Bool)hasMergeRanges;
- (_Bool)unmergeCellRange:(struct TSUCellRect)arg1;
- (_Bool)mergeCellRange:(struct TSUCellRect)arg1;
- (TSTMergeRegionMap *)mergeRangesForCellRegion:(TSTCellRegion *)arg1;
- (TSTMergeRegionMap *)mergeRangesForCellRange:(struct TSUCellRect)arg1;
- (TSTMergeRegionMap *)grabAllMergeRanges;
- (TSTMergeRegionMap *)allMergeRanges;
- (_Bool)hasFilterRulesWithTable:(TSTInfo *)arg1 inColumns:(NSIndexSet *)arg2;
- (void)dirtyFilterState;
- (void)filterSetUpdated;
- (_Bool)hasActiveFilters;
- (void)mutateFormulaFiltersWithTable:(TSTInfo *)arg1 usingBlock:(struct TSCEFormula (^)(struct TSCEFormula *, unsigned char, _Bool))arg2;
- (void)setFilterSetType:(int)arg1;
- (void)enableFilterSet:(_Bool)arg1;
- (void)setNeedsFilterFormulaRewriteForImport:(_Bool)arg1;
- (_Bool)needsFilterFormulaRewriteForImport;
- (void)resetSortRuleReferenceTrackerForInsert;
- (_Bool)isCellRangeHidden:(struct TSUCellRect)arg1;
- (_Bool)anyHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (unsigned short)numberOfHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (NSIndexSet *)indexesOfVisibleColumnsInColumnRange:(NSIndexSet *)arg1;
- (NSIndexSet *)indexesOfVisibleColumnsInCellRange:(struct TSUCellRect)arg1;
- (NSIndexSet *)indexesOfHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (unsigned char)hidingActionForColumnAtIndex:(unsigned char)arg1;
- (_Bool)hasHiddenColumnAtIndex:(unsigned char)arg1 forAction:(unsigned char)arg2;
- (_Bool)anyHiddenRowsInCellRange:(struct TSUCellRect)arg1 forAction:(unsigned char)arg2;
- (unsigned short)numberOfUserHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (unsigned short)numberOfHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (NSIndexSet *)indexesOfVisibleRowsInRowRange:(NSIndexSet *)arg1;
- (NSIndexSet *)indexesOfUserVisibleRowsInCellRange:(struct TSUCellRect)arg1;
- (NSIndexSet *)indexesOfVisibleRowsInCellRange:(struct TSUCellRect)arg1;
- (NSIndexSet *)indexesOfUserHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (NSIndexSet *)indexesOfHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (unsigned char)hidingActionForRowAtIndex:(unsigned short)arg1;
- (_Bool)hasHiddenRowAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2;
- (_Bool)showColumnAtIndex:(unsigned char)arg1 forAction:(unsigned char)arg2;
- (_Bool)showRowAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2;
- (_Bool)hideColumnAtIndex:(unsigned char)arg1 forAction:(unsigned char)arg2;
- (_Bool)hideRowAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2;
- (struct TSUCellRect)bottomCornerRange;
- (struct TSUCellRect)topCornerRange;
- (struct TSUCellRect)actualHeaderColumnRange;
- (struct TSUCellRect)headerColumnRange;
- (struct TSUCellRect)footerRowRange;
- (struct TSUCellRect)headerRowRange;
- (struct TSUCellRect)bodyRowRange;
- (struct TSUCellRect)bodyColumnRange;
- (struct TSUCellRect)bodyRange;
- (struct TSUCellRect)range;
- (void)setHeight:(double)arg1 ofRowAtIndex:(unsigned short)arg2;
- (void)setWidth:(double)arg1 ofColumnAtIndex:(unsigned char)arg2;
- (double)widthOfColumnAtIndex:(unsigned char)arg1 isDefault:(out _Bool *)arg2;
- (double)heightOfRowAtIndex:(unsigned short)arg1 isDefault:(out _Bool *)arg2;
- (double)computeDefaultFontHeightForTableArea:(unsigned long long)arg1;
- (void)computeDefaultRowHeight;
- (void)swapRowAtIndex:(unsigned short)arg1 withRowAtIndex:(unsigned short)arg2;
- (void)moveColumnRange:(struct _NSRange)arg1 toColumnIndex:(unsigned char)arg2;
- (void)moveRowRange:(struct _NSRange)arg1 toRowIndex:(unsigned short)arg2;
- (void)removeColumnsAtIndexes:(NSIndexSet *)arg1;
- (void)removeRowsAtIndexes:(NSIndexSet *)arg1;
- (int)insertRowsInRange:(struct _NSRange)arg1 uids:(const vector_dadc1b26 *)arg2 metadata:(NSArray *)arg3 unsetFilterHidingAction:(_Bool)arg4;
- (int)insertRowsInRange:(struct _NSRange)arg1 uids:(const vector_dadc1b26 *)arg2 metadata:(NSArray *)arg3;
- (int)insertColumnsInRange:(struct _NSRange)arg1 uids:(const vector_dadc1b26 *)arg2 metadata:(NSArray *)arg3;
- (void)removeColumnsAtIndex:(unsigned char)arg1 count:(unsigned short)arg2;
- (void)removeRowsAtIndex:(unsigned short)arg1 count:(unsigned short)arg2;
- (void)insertColumnsAtIndex:(unsigned char)arg1 count:(unsigned short)arg2 addBefore:(_Bool)arg3;
- (void)insertRowsAtIndex:(unsigned short)arg1 count:(unsigned short)arg2 addBefore:(_Bool)arg3;
- (void)setStroke:(TSDStroke *)arg1 forRightOfColumn:(unsigned char)arg2 order:(int)arg3 rowRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(TSDStroke *)arg1 forLeftOfColumn:(unsigned char)arg2 order:(int)arg3 rowRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(TSDStroke *)arg1 forBottomOfRow:(unsigned short)arg2 order:(int)arg3 columnRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(TSDStroke *)arg1 forTopOfRow:(unsigned short)arg2 order:(int)arg3 columnRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(TSDStroke *)arg1 forRightOfColumn:(unsigned char)arg2 order:(int)arg3;
- (void)setStroke:(TSDStroke *)arg1 forLeftOfColumn:(unsigned char)arg2 order:(int)arg3;
- (void)setStroke:(TSDStroke *)arg1 forBottomOfRow:(unsigned short)arg2 order:(int)arg3;
- (void)setStroke:(TSDStroke *)arg1 forTopOfRow:(unsigned short)arg2 order:(int)arg3;
- (TSTCellBorder *)cellBorderAtCellID:(struct TSUCellCoord)arg1;
- (int)maxStrokeOrder;
- (struct TSUCellCoord)cellIDBelowCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellCoord)cellIDAboveCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellCoord)cellIDRightOfCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellCoord)cellIDLeftOfCellID:(struct TSUCellCoord)arg1;
- (unsigned int)numberOfPopulatedCells;
- (NSString *)rowNameForCellID:(struct TSUCellCoord)arg1 cellRangeContainingName:(struct TSUCellRect *)arg2 restrictToBodyRange:(_Bool)arg3;
- (NSString *)columnNameForCellID:(struct TSUCellCoord)arg1 cellRangeContainingName:(struct TSUCellRect *)arg2 restrictToBodyRange:(_Bool)arg3;
- (TSTCommentHosting *)commentHostingAtCellID:(struct TSUCellCoord)arg1 table:(TSTInfo *)arg2;
- (TSTCommentHosting *)commentHostingAtCellID:(struct TSUCellCoord)arg1 forCommentStorage:(TSDCommentStorage *)arg2 table:(TSTInfo *)arg3;
- (void)clearCommentHostingMapForCommentStorage:(TSDCommentStorage *)arg1;
- (void)postCommentNotificationForStorage:(TSDCommentStorage *)arg1 atCellID:(struct TSUCellCoord)arg2 notificationKey:(NSString *)arg3 table:(TSTInfo *)arg4;
- (int)removeCommentStorageAtCellID:(struct TSUCellCoord)arg1 table:(TSTInfo *)arg2;
- (int)setCommentStorage:(TSDCommentStorage *)arg1 atCellID:(struct TSUCellCoord)arg2 table:(TSTInfo *)arg3;
- (_Bool)hasCommentAtCellID:(struct TSUCellCoord)arg1;
- (unsigned long long)numberOfComments;
- (TSUColor *)fontColorAtCellID:(struct TSUCellCoord)arg1 optionalCell:(TSTCell *)arg2;
- (NSString *)stringAtCellID:(struct TSUCellCoord)arg1 optionalCell:(TSTCell *)arg2;
- (TSWPParagraphStyle *)textStyleForCellWithEmptyStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out _Bool *)arg2;
- (TSTCellStyle *)cellStyleForCellWithEmptyStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out _Bool *)arg2;
- (int)setTextStyle:(TSWPParagraphStyle *)arg1 ofColumnAtIndex:(unsigned char)arg2;
- (TSWPParagraphStyle *)textStyleOfColumnAtIndex:(unsigned char)arg1 isDefault:(out _Bool *)arg2;
- (int)setTextStyle:(TSWPParagraphStyle *)arg1 ofRowAtIndex:(unsigned short)arg2;
- (TSWPParagraphStyle *)textStyleOfRowAtIndex:(unsigned short)arg1 isDefault:(out _Bool *)arg2;
- (TSTConditionalStyleSet *)conditionalStyleSetAtCellID:(struct TSUCellCoord)arg1;
- (int)setTextStyle:(TSWPParagraphStyle *)arg1 atCellID:(struct TSUCellCoord)arg2;
- (TSWPParagraphStyle *)textStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out _Bool *)arg2;
- (int)setCellStyle:(TSTCellStyle *)arg1 ofColumnAtIndex:(unsigned char)arg2;
- (TSTCellStyle *)cellStyleOfColumnAtIndex:(unsigned char)arg1 isDefault:(out _Bool *)arg2;
- (int)setCellStyle:(TSTCellStyle *)arg1 ofRowAtIndex:(unsigned short)arg2;
- (TSTCellStyle *)cellStyleOfRowAtIndex:(unsigned short)arg1 isDefault:(out _Bool *)arg2;
- (int)setCellStyle:(TSTCellStyle *)arg1 atCellID:(struct TSUCellCoord)arg2;
- (TSTCellStyle *)cellStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out _Bool *)arg2;
- (_Bool)isSingleCellOrMergeRange:(struct TSUCellRect)arg1;
- (int)cellValueTypeAtCellID:(struct TSUCellCoord)arg1;
- (TSKFormat *)formatAtCellID:(struct TSUCellCoord)arg1 formatIsImplicitOut:(_Bool *)arg2;
- (int)setCellsWithCellMap:(TSTCellMap *)arg1 ignoreFormulas:(_Bool)arg2 skipDirtyingNonFormulaCells:(_Bool)arg3 calculationEngine:(TSCECalculationEngine *)arg4;
- (int)setCellsWithCellMap:(TSTCellMap *)arg1 calculationEngine:(TSCECalculationEngine *)arg2;
- (struct TSCEFormula *)formulaAtCellID:(struct TSUCellCoord)arg1;
- (int)updateCalculationEngineForFormula:(struct TSCEFormula *)arg1 inCellID:(struct TSUCellCoord)arg2;
- (_Bool)hasFormulaAtCellID:(struct TSUCellCoord)arg1;
- (int)setCell:(TSTCell *)arg1 atCellID:(struct TSUCellCoord)arg2;
- (int)setCell:(TSTCell *)arg1 atCellID:(struct TSUCellCoord)arg2 clearWarnings:(_Bool)arg3;
- (int)setCell:(TSTCell *)arg1 atCellID:(struct TSUCellCoord)arg2 ignoreFormula:(_Bool)arg3 clearImportWarnings:(_Bool)arg4 calculationEngine:(TSCECalculationEngine *)arg5;
- (TSTCell *)cellAtCellID:(struct TSUCellCoord)arg1;
- (int)getCell:(TSTCell *)arg1 atCellID:(struct TSUCellCoord)arg2 suppressFormula:(_Bool)arg3 suppressCellBorder:(_Bool)arg4;
- (int)getCell:(TSTCell *)arg1 atCellID:(struct TSUCellCoord)arg2 suppressCellBorder:(_Bool)arg3;
- (int)getCell:(TSTCell *)arg1 atCellID:(struct TSUCellCoord)arg2;
- (int)getDefaultCell:(out TSTCell *)arg1 forCellID:(struct TSUCellCoord)arg2;
- (_Bool)cellExistsAtCellID:(struct TSUCellCoord)arg1;
- (_Bool)textStyle:(TSWPParagraphStyle *)arg1 isEqualToDefaultTextStyleForCellID:(struct TSUCellCoord)arg2;
- (_Bool)cellStyle:(TSTCellStyle *)arg1 isEqualToDefaultCellStyleForCellID:(struct TSUCellCoord)arg2;
- (TSWPParagraphStyle *)defaultTextStyleForTableArea:(unsigned long long)arg1;
- (TSWPParagraphStyle *)defaultTextStyleForCellID:(struct TSUCellCoord)arg1;
- (TSTCellStyle *)defaultCellStyleForTableArea:(unsigned long long)arg1;
- (TSTCellStyle *)defaultCellStyleForCellID:(struct TSUCellCoord)arg1;
- (TSTCell *)newCell;
- (int)getDefaultCell:(TSTCell *)arg1 forTableArea:(unsigned long long)arg2;
- (unsigned long long)tableAreaForColumn:(unsigned char)arg1;
- (unsigned long long)tableAreaForRow:(unsigned short)arg1;
- (unsigned long long)tableAreaForCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellRect)cellRangeForTableArea:(unsigned long long)arg1;
- (void)setStorageParentToInfo:(TSTInfo *)arg1;
- (void)setupDefaultCells;
- (void)resetStyles:(TSTTableStyleNetwork *)arg1;
- (void)upgradeFromPreUFF;
- (void)setStylesheetForUpgradeToSingleStylesheet:(TSSStylesheet *)arg1;
- (void)upgradeDuringDocumentUpgradeIfNeeded:(unsigned long long)arg1 tableInfo:(TSTInfo *)arg2;
- (void)validate;
- (TSTTableFilterSet *)duplicateFilterSetInUidFormWithTable:(TSTInfo *)arg1;
- (TSTTableFilterSet *)duplicateFilterSet;
- (void)clearFromTableUID;
- (id)initWithContext:(TSPObjectContext *)arg1 fromSourceModel:(TSTTableModel *)arg2 region:(TSTCellRegion *)arg3 tableInfo:(TSTInfo *)arg4 waitForCalcEngine:(_Bool)arg5;
- (id)initWithContext:(TSPObjectContext *)arg1 rows:(unsigned short)arg2 columns:(unsigned short)arg3 styles:(TSTTableStyleNetwork *)arg4 stylePreset:(TSTTableStylePreset *)arg5 tableInfo:(TSTInfo *)arg6;
@end

