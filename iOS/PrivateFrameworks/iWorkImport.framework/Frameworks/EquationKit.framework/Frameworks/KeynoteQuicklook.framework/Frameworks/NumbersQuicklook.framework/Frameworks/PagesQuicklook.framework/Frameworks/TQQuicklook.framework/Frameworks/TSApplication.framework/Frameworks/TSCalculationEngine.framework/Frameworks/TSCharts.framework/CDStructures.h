//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSSet;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AttributeSpecs {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct AxisGridLocation {
    _Bool _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    tvec3_17f03ce0 _field4;
};

struct BarElementInfo {
    _Bool _field1;
    float _field2;
    _Bool _field3;
    unsigned long long _field4;
};

struct BarExtrusionCrossSectionDetails {
    float detail;
    float tension;
    float adaptiveThreshold;
    float creaseAngle;
    int crossType;
};

struct BarExtrusionDetails {
    struct BarExtrusionCrossSectionDetails crossSection;
    struct BarExtrusionSpineDetails spine;
};

struct BarExtrusionSetting {
    float size;
    _Bool hasTopBevel;
    _Bool hasBottomBevel;
    _Bool isCylindrical;
    _Bool isStackedBar;
    struct BarExtrusionDetails details;
};

struct BarExtrusionSpineDetails {
    float bevelHeight;
    long long bevelSlices;
    long long stride;
    float creaseAngle;
};

struct BlendState {
    _Bool _blend;
    int _blendMode;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct ChartProjectedBoundsSpaces {
    box_c88174d1 _chart;
    box_c88174d1 _orient;
    box_c88174d1 _drawing;
    box_c88174d1 _layout;
    box_c88174d1 _layoutInPage;
    box_c88174d1 _bodyLayout;
    box_c88174d1 _bodyLayoutInPage;
    box_c88174d1 _containingViewport;
};

struct Color {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct ColorResult {
    _Bool _field1;
    struct Color _field2;
};

struct DataBuffer2DDimension {
    tvec2_3b141483 _size;
    unsigned long long _components;
    _Bool _hasLevels;
};

struct DataBuffer3DDimension {
    tvec3_c2818ced _size;
    unsigned long long _components;
};

struct DataBufferInfo {
    int componentType;
    unsigned long long components;
    unsigned long long count;
    unsigned long long byteSize;
    unsigned long long componentByteSize;
    unsigned long long elementByteSize;
};

struct DataBufferLevelData {
    void *_field1;
    tvec3_c2818ced _field2;
};

struct DepthState {
    _Bool depthTest;
    _Bool depthMask;
};

struct EdgeDetectionParameters {
    _Bool detectSilhouetteEdges;
    _Bool detectSharpEdges;
    float sharpEdgeThreshold;
};

struct ElementRenderPass {
    int _field1;
};

struct EnableClipDistances {
    struct array<bool, 8> states;
};

struct FlushResult {
    _Bool _field1;
    _Bool _field2;
};

struct FramebufferAttributes {
    int type;
    long long samples;
    int colorDataType;
    int colorFormat;
    int depthDataType;
    _Bool linearFilter;
    _Bool discardHint;
    _Bool useIOSurfaceBacking;
};

struct InternalMetadata {
    void *_field1;
};

struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
};

struct LabelRenderInfo {
    tvec2_84d5962d sampledLabelSize;
    tvec2_84d5962d sampledLabelFullSize;
    tvec2_84d5962d sampledLabelRenderOffset;
    tvec2_84d5962d sampledAlignmentPadding;
};

struct LabelTransform {
    tvec3_17f03ce0 _field1;
    tvec2_84d5962d _field2;
    unsigned int _field3;
    float _field4;
    _Bool _field5;
};

struct LightingPackageShaderEffectState {
    struct array<glm::detail::tmat4x4<float>, 2> transforms;
};

struct Message {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadata _field2;
};

struct ObjcSharedPtr<NSSet> {
    NSSet *mValue;
};

struct ObjectBounds {
    box_c9ef104e _bounds;
    box_c9ef104e _projected;
    box_c9ef104e _2DProjected;
    struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> _boxes;
};

struct ObjectState {
    struct ObjcSharedPtr<NSSet> _effects;
    struct vector<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>, std::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>>> _attributes;
    struct vector<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>, std::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>>> _textures;
};

struct ObjectStateMatchObject {
    struct ObjcSharedPtr<NSSet> _effects;
    struct vector<TSCH3D::ResourceAttributeState, std::allocator<TSCH3D::ResourceAttributeState>> _attributes;
    struct vector<TSCH3D::TextureAttributeState, std::allocator<TSCH3D::TextureAttributeState>> _textures;
};

struct RenderHints {
    struct TextureSizeHint _field1;
};

struct RenderState {
    struct BlendState blendState;
    struct DepthState depthState;
    _Bool culling;
    _Bool cullBack;
    _Bool polygonOffset;
    float polygonOffsetFactor;
    float polygonOffsetUnits;
    struct EnableClipDistances enableClipDistances;
};

struct ResizeData {
    tvec2_84d5962d size;
    tvec3_17f03ce0 scale;
    tvec2_84d5962d delta;
    tvec2_84d5962d steps;
    tvec2_84d5962d unrotatedSize;
    tvec2_84d5962d chartOnlySize;
};

struct ResizingSize {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
    tvec2_84d5962d _field3;
};

struct ResourceAttributeState;

struct StateStack<TSCH3D::ObjectState, 6> {
    unsigned long long _index;
    struct ObjectState _current;
    struct ObjectState _stack[6];
};

struct StateStack<TSCH3D::RenderState, 10> {
    unsigned long long _index;
    struct RenderState _current;
    struct RenderState _stack[10];
};

struct StateStack<glm::detail::tmat4x4<float>, 8> {
    unsigned long long _index;
    tmat4x4_3074befe _current;
    tmat4x4_3074befe _stack[8];
};

struct TSCH3DChartRotationLimit {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct TSCH3DChartSceneAreaLayoutItemCacheValues {
    tvec4_ac57c72d infoChartScale;
    tvec2_3b141483 containingViewport;
    tvec2_84d5962d chartBodyLayoutOffsetInChartAreaLayoutSpace;
    struct CGSize layoutSize;
    struct CGSize requestLayoutSize;
    struct CGSize chartBodyLayoutSize;
    struct CGSize requestChartBodyLayoutSize;
    tvec2_3b141483 modelSize;
    CDStruct_c48db077 layoutSettings;
    _Bool forcedValid;
};

struct TSCH3DShaderType {
    unsigned long long _value;
};

struct TSCH3DShaderVariableScopeType {
    unsigned long long _value;
};

struct TSCH3DShaderVariableScopes {
    struct array<TSCH3DShaderVariableScopeType, 2> _scopes;
};

struct TSCHBaseFormatProperties {
    unsigned char _field1;
    unsigned char _field2;
    _Bool _field3;
};

struct TSCHChartDrawableLayoutLegendResizerFrames {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct TSCHChartPieLabelGeometries {
    struct TSCHChartPieLabelGeometry _field1;
    struct TSCHChartPieLabelGeometry _field2;
};

struct TSCHChartPieLabelGeometry {
    struct CGAffineTransform _field1;
    struct CGSize _field2;
    struct CGRect _field3;
    struct CGRect _field4;
};

struct TSCHChartPieLabelRects {
    struct CGRect _field1;
    struct CGRect _field2;
};

struct TSCHChartPieWedgeElementLayoutSystem {
    long long coordinateSpace;
    struct CGPoint centerPoint;
};

struct TSCHCurrencyFormatProperties {
    struct TSCHNumericFormatProperties _field1;
    _Bool _field2;
    id _field3;
};

struct TSCHDurationFormatProperties {
    _Bool _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct TSCHFractionFormatProperties {
    char _field1;
};

struct TSCHLegendAnchorLine {
    struct CGPoint normal;
    double distance;
};

struct TSCHLegendAnchorRange {
    double _field1;
    double _field2;
};

struct TSCHNumericFormatProperties {
    unsigned long long _field1;
    unsigned char _field2;
    _Bool _field3;
};

struct TSCHTextLayoutResults {
    struct CGRect _field1;
    double _field2;
    _Bool _field3;
};

struct TextureAttributeState;

struct TextureAttributes {
    int _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    struct TextureSizeHint _field6;
    _Bool _field7;
};

struct TextureCoordinateConverter {
    box_c88174d1 _field1;
};

struct TextureSizeHint {
    int _field1;
    tvec2_3b141483 _field2;
};

struct Transform {
    tvec3_17f03ce0 _field1;
    tvec3_17f03ce0 _field2;
    tquat_f3d6c8fe _field3;
    tvec3_17f03ce0 _field4;
    _Bool _field5;
};

struct UIEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct ValueEnumerator {
    _Bool _forward;
    unsigned long long _index;
    unsigned long long _max;
    double _value;
};

struct Vector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct array<TSCH3D::BarExtrusionDetails, 2> {
    struct BarExtrusionDetails __elems_[2];
};

struct array<TSCH3DShaderVariableScopeType, 2> {
    struct TSCH3DShaderVariableScopeType __elems_[2];
};

struct array<bool, 8> {
    _Bool __elems_[8];
};

struct array<glm::detail::tmat4x4<float>, 2> {
    tmat4x4_3074befe __elems_[2];
};

struct bitset<5> {
    unsigned long long __first_;
};

struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d _min;
    tvec2_84d5962d _max;
};

struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 _min;
    tvec2_3b141483 _max;
};

struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 _min;
    tvec3_17f03ce0 _max;
};

struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 _position;
    tvec3_17f03ce0 _direction;
};

struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
};

struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
};

struct pair<bool, TSCH3DShaderVariableLinkage *> {
    _Bool _field1;
    id _field2;
};

struct pair<const char *, const char *> {
    char *_field1;
    char *_field2;
};

struct plane<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 _normal;
    float _distance;
};

struct range<unsigned int> {
    unsigned int _field1;
    unsigned int _field2;
};

struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
};

struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
};

struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
};

struct tvec2<bool> {
    union {
        _Bool x;
        _Bool r;
        _Bool s;
    } ;
    union {
        _Bool y;
        _Bool g;
        _Bool t;
    } ;
};

struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
};

struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
};

struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
};

struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
};

struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
};

struct vector<TSCH3D::BarElementInfo, std::allocator<TSCH3D::BarElementInfo>> {
    struct BarElementInfo *__begin_;
    struct BarElementInfo *__end_;
    struct __compressed_pair<TSCH3D::BarElementInfo *, std::allocator<TSCH3D::BarElementInfo>> {
        struct BarElementInfo *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>*, std::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>, std::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>*, std::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>, std::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>*, std::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned char>, std::allocator<TSCH3D::PODType<unsigned char>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned char>*, std::allocator<TSCH3D::PODType<unsigned char>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned short>, std::allocator<TSCH3D::PODType<unsigned short>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned short>*, std::allocator<TSCH3D::PODType<unsigned short>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::ResourceAttributeState, std::allocator<TSCH3D::ResourceAttributeState>> {
    struct ResourceAttributeState *__begin_;
    struct ResourceAttributeState *__end_;
    struct __compressed_pair<TSCH3D::ResourceAttributeState *, std::allocator<TSCH3D::ResourceAttributeState>> {
        struct ResourceAttributeState *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::TextureAttributeState, std::allocator<TSCH3D::TextureAttributeState>> {
    struct TextureAttributeState *__begin_;
    struct TextureAttributeState *__end_;
    struct __compressed_pair<TSCH3D::TextureAttributeState *, std::allocator<TSCH3D::TextureAttributeState>> {
        struct TextureAttributeState *__value_;
    } __end_cap_;
};

struct vector<TSCH3DShaderVariableScopeType, std::allocator<TSCH3DShaderVariableScopeType>> {
    struct TSCH3DShaderVariableScopeType *__begin_;
    struct TSCH3DShaderVariableScopeType *__end_;
    struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::allocator<TSCH3DShaderVariableScopeType>> {
        struct TSCH3DShaderVariableScopeType *__value_;
    } __end_cap_;
};

struct vector<double, std::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::allocator<double>> {
        double *__value_;
    } __end_cap_;
};

struct vector<float, std::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::allocator<float>> {
        float *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec1<float>, std::allocator<glm::detail::tvec1<float>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<glm::detail::tvec1<float>*, std::allocator<glm::detail::tvec1<float>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec2<float>, std::allocator<glm::detail::tvec2<float>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<glm::detail::tvec2<float>*, std::allocator<glm::detail::tvec2<float>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec2<int>, std::allocator<glm::detail::tvec2<int>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<glm::detail::tvec2<int>*, std::allocator<glm::detail::tvec2<int>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec3<float>, std::allocator<glm::detail::tvec3<float>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<glm::detail::tvec3<float>*, std::allocator<glm::detail::tvec3<float>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec4<float>, std::allocator<glm::detail::tvec4<float>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<glm::detail::tvec4<float>*, std::allocator<glm::detail::tvec4<float>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<long, std::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::allocator<long>> {
        long long *__value_;
    } __end_cap_;
};

struct vector<unsigned char, std::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool forceOmitLegend;
    _Bool forceOmitTitle;
    _Bool forceOmitAxisTitle;
    _Bool forceOmitLabelPlacement;
    _Bool forceTitleAtTop;
    _Bool forceLegendAtBottom;
    _Bool enable3DTightBounds;
    _Bool enable3DScaledDepthBounds;
    long long maxDepthRatioType;
    unsigned long long max3DLimitingSeries;
} CDStruct_c48db077;

typedef struct {
    unsigned long long _field1;
    CDUnknownFunctionPointerType _field2;
    void *_field3;
} CDStruct_188655c5;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    _Bool _field4;
} CDStruct_d230bf23;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    unsigned long long _field4;
} CDStruct_41cea37a;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    struct CGAffineTransform _field1;
    struct CGPoint _field2;
} CDStruct_71493e60;

typedef struct {
    struct CGPoint _field1;
    _Bool _field2;
} CDStruct_40a92360;

typedef struct {
    struct CGPoint _field1;
    double _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_460b8ffe;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    id _field1;
    id _field2;
    struct CGRect _field3;
} CDStruct_1cb6887c;

// Template types
typedef struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
} IteratorRange_617e5e79;

typedef struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d _min;
    tvec2_84d5962d _max;
} box_c88174d1;

typedef struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 _min;
    tvec2_3b141483 _max;
} box_ce64ce81;

typedef struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 _min;
    tvec3_17f03ce0 _max;
} box_c9ef104e;

typedef struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 _position;
    tvec3_17f03ce0 _direction;
} line_e1962432;

typedef struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
} pair_10e2d813;

typedef struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
} pair_952e027e;

typedef struct pair<bool, TSCH3DShaderVariableLinkage *> {
    _Bool _field1;
    id _field2;
} pair_64bf96b1;

typedef struct range<unsigned int> {
    unsigned int _field1;
    unsigned int _field2;
} range_f61e6b34;

typedef struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
} tmat3x3_b39cd897;

typedef struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
} tmat4x4_3074befe;

typedef struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
} tquat_f3d6c8fe;

typedef struct tvec2<bool> {
    union {
        _Bool x;
        _Bool r;
        _Bool s;
    } ;
    union {
        _Bool y;
        _Bool g;
        _Bool t;
    } ;
} tvec2_01ee4891;

typedef struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
} tvec2_84d5962d;

typedef struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
} tvec2_3b141483;

typedef struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
} tvec3_17f03ce0;

typedef struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
} tvec3_c2818ced;

typedef struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
} tvec4_ac57c72d;

#pragma mark Typedef'd Unions

// Ambiguous groups
typedef union {
    float x;
    float r;
    float s;
} CDUnion_d07f0a1e;

typedef union {
    float y;
    float g;
    float t;
} CDUnion_58f8d4fa;

typedef union {
    float z;
    float b;
    float p;
} CDUnion_47fe3727;

typedef union {
    int x;
    int r;
    int s;
} CDUnion_55b6007a;

typedef union {
    int y;
    int g;
    int t;
} CDUnion_020eeea2;

