//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSPersistence/TSPObject.h>

@class NSArray, NSMutableArray, NSMutableDictionary, TSUPointerKeyDictionary;

@interface TSTConcurrentCellList : TSPObject
{
    struct TSUViewCellRect _viewCellRect;
    struct TSKUIDStructTract _cellUIDRange;
    NSMutableArray *_tilesPerRow;
    NSMutableArray *_rowInfosPerRow;
    vector_cdf5f6a1 _cells;
    struct vector<TSUModelRowIndex, std::allocator<TSUModelRowIndex>> _baseRows;
    struct vector<TSUModelColumnIndex, std::allocator<TSUModelColumnIndex>> _baseColumns;
    struct vector<TSUViewRowIndex, std::allocator<TSUViewRowIndex>> _viewRows;
    struct vector<TSUViewColumnIndex, std::allocator<TSUViewColumnIndex>> _viewColumns;
    struct vector<long, std::allocator<long>> _cellCountDiffsPerRow;
    struct vector<long, std::allocator<long>> _cellCountDiffsPerColumn;
    struct vector<TSTNineKeyStructPreBNC, std::allocator<TSTNineKeyStructPreBNC>> _preBNCKeysList;
    vector_cdf5f6a1 _oldCells;
    _Bool _uidBased;
    NSArray *_interestingCells;
    TSUPointerKeyDictionary *_formatsAdded;
    NSMutableDictionary *_formatsRemoved;
}

+ (id)cellListWithContext:(id)arg1 cellUIDRange:(struct TSKUIDStructTract)arg2 repeatCellVectorPattern:(const void *)arg3 patternDirection:(long long)arg4;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableArray *rowInfosPerRow; // @synthesize rowInfosPerRow=_rowInfosPerRow;
@property(retain, nonatomic) NSMutableArray *tilesPerRow; // @synthesize tilesPerRow=_tilesPerRow;
@property(retain, nonatomic) NSMutableDictionary *formatsRemoved; // @synthesize formatsRemoved=_formatsRemoved;
@property(retain, nonatomic) TSUPointerKeyDictionary *formatsAdded; // @synthesize formatsAdded=_formatsAdded;
@property(retain, nonatomic) NSArray *interestingCells; // @synthesize interestingCells=_interestingCells;
@property(nonatomic) struct TSKUIDStructTract cellUIDRange; // @synthesize cellUIDRange=_cellUIDRange;
@property(nonatomic) struct TSUViewCellRect viewCellRect; // @synthesize viewCellRect=_viewCellRect;
@property(readonly, nonatomic, getter=isUIDBased) _Bool uidBased; // @synthesize uidBased=_uidBased;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (id)p_interestingCellIndexes;
- (id)p_baseRowIndexes;
- (id)p_baseColumnIndexes;
- (void)p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateRowCellCountDiffUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateColumnCellCountDiffUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateCellsAddedAndRemovedForFormatsUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateCellsAddedOfType:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)p_enumerateCellsAddedAndRemovedOfType:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateNewAndOldCellsSeriallyUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateRowsOfCellsConcurrentlyUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_accumulateBordersConcurrentlyUsingBlock:(CDUnknownBlockType)arg1 accumulateCellsConcurrentlyUsingBlock:(CDUnknownBlockType)arg2;
- (void)p_gatherRowState:(CDUnknownBlockType)arg1;
- (void)p_convertToInverseCellMap;
- (void)p_simpleInvokeBlock:(CDUnknownBlockType)arg1;
- (void)p_invokeBlock:(CDUnknownBlockType)arg1;
- (void)p_setupInterestingCells:(void *)arg1 interestingCellIndexes:(id)arg2 forAdding:(_Bool)arg3;
- (void)p_pruneToBaseWithBaseMap:(id)arg1 viewMap:(id)arg2;
- (void)p_pruneCellsAtColumn:(unsigned long long)arg1 rowsSize:(unsigned long long)arg2 columnsSize:(unsigned long long)arg3;
- (void)p_pruneCellsAtRow:(unsigned long long)arg1 rowsSize:(unsigned long long)arg2 columnsSize:(unsigned long long)arg3;
- (void)p_clearDataListIDs;
- (void)p_setObjectLocale:(id)arg1;
- (void)p_convertToUuidBasedCellListUsingTableInfo:(id)arg1 pruneCategorizedCells:(_Bool)arg2;
- (const void *)p_cells;
- (unsigned int)rowCount;
@property(readonly, nonatomic) unsigned long long cellCount;
@property(readonly, nonatomic) _Bool hasCells;
- (void)addCell:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addCell:(id)arg1 atViewCellCoord:(struct TSUViewCellCoord)arg2;
- (id)initWithContext:(id)arg1 cellUIDRange:(struct TSKUIDStructTract)arg2;
- (id)initWithContext:(id)arg1 viewCellRect:(struct TSUViewCellRect)arg2;
- (id)initWithContext:(id)arg1 viewCellRect:(struct TSUViewCellRect)arg2 cellUIDRange:(struct TSKUIDStructTract)arg3;

@end

