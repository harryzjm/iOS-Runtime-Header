//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSStyles/TSSStyle.h>

@class TSUColor;

@interface TSSStyle (TSWPArchivingAdditions)
+ (_Bool)p_isFillAdvanced:(id)arg1;
+ (void)addIgnoreAndPreserveRulesAndDocumentWarningsForPropertyMap:(id)arg1 withArchiver:(id)arg2 archive:(void *)arg3;
+ (id)adjustPropertyMapForFontColorArchiving:(id)arg1 fallbackColor:(id)arg2;
+ (void)upgradeFontColorToIncludeCharacterFillInPropertyMap:(id)arg1 forOwningTSPObject:(id)arg2;
+ (id)validateFontInPropertyMap:(id)arg1 parentStyle:(id)arg2 checkedFontMap:(id)arg3;
+ (id)validateFontName:(id)arg1 size:(double)arg2 bold:(_Bool)arg3 italic:(_Bool)arg4 checkedFontMap:(id)arg5 newFontName:(id *)arg6 newBold:(_Bool *)arg7 newItalic:(_Bool *)arg8;
+ (const struct __CTFont *)pCreateFontWithName:(id)arg1 fontSize:(double)arg2;
+ (id)pReplacementForMissingFontName:(id)arg1 outBold:(out int *)arg2 outItalic:(out int *)arg3 outQuiet:(out _Bool *)arg4;
- (void)saveParagraphStylePropertiesToArchive:(void *)arg1 archiver:(id)arg2;
- (void)saveCharacterStylePropertiesToArchive:(void *)arg1 archiver:(id)arg2 archivingForCommand:(_Bool)arg3;
@property(readonly, nonatomic) TSUColor *fallbackFontColorWhenUnableToReadCharacterFillColor;
- (void)loadParagraphStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const void *)arg2 unarchiver:(id)arg3;
- (void)p_removeFontColorPropertyInPropertyMap:(id)arg1;
- (void)loadCharacterStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const void *)arg2 unarchiver:(id)arg3;
- (void)upgradeOutlinesToStrokesForcingUpgradeForUnderspecifiedCharacterStyles:(_Bool)arg1 overridingCharacterStrokes:(_Bool)arg2;
- (void)p_upgradeOutlinesToStrokesInPropertyMap:(id)arg1 forcingUpgradeForUnderspecifiedCharacterStyles:(_Bool)arg2 overridingCharacterStrokes:(_Bool)arg3;
- (void)setBoolValue:(_Bool)arg1 forProperty:(int)arg2;
- (_Bool)boolValueForProperty:(int)arg1 defaultValue:(_Bool)arg2;
- (double)resolvedFloatForProperty:(int)arg1 inStyles:(id)arg2;
- (int)resolvedIntForProperty:(int)arg1 inStyles:(id)arg2;
- (id)resolvedValueForProperty:(int)arg1 inStyles:(id)arg2;
- (_Bool)wantsCustomResolveLogicForProperty:(int)arg1 forStyles:(id)arg2;
- (id)validateFontWithCheckedFontMap:(id)arg1;
@end

