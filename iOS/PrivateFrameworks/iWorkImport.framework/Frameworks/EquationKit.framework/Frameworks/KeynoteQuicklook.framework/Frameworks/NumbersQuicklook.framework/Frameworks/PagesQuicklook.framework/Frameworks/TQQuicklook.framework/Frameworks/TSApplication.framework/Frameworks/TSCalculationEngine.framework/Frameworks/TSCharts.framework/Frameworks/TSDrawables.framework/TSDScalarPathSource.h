//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSDrawables/TSDMixing-Protocol.h>
#import <TSDrawables/TSDSmartPathSource-Protocol.h>

@interface TSDScalarPathSource <TSDMixing, TSDSmartPathSource>
{
    _Bool mIsCurveContinuous;
    unsigned long long mType;
    double mScalar;
    struct CGSize mNaturalSize;
}

+ (id)pathSourceWithType:(unsigned long long)arg1 scalar:(double)arg2 naturalSize:(struct CGSize)arg3;
+ (id)chevronWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2;
+ (id)regularPolygonWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2;
+ (id)roundedRectangleWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2 continuousCurve:(_Bool)arg3;
+ (id)rectangleWithNaturalSize:(struct CGSize)arg1;
@property(nonatomic) _Bool isCurveContinuous; // @synthesize isCurveContinuous=mIsCurveContinuous;
- (void)setNaturalSize:(struct CGSize)arg1;
- (struct CGSize)naturalSize;
@property(nonatomic) double scalar; // @synthesize scalar=mScalar;
@property(nonatomic) unsigned long long type; // @synthesize type=mType;
- (id)inferredAccessibilityDescription;
- (struct CGPoint)p_getControlKnobPointForChevron;
- (void)p_setControlKnobPointForChevron:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForRegularPolygon;
- (void)p_setControlKnobPointForRegularPolygon:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForRoundedRect;
- (void)p_setControlKnobPointForRoundedRect:(struct CGPoint)arg1;
- (struct CGPath *)p_newChevronPath;
- (struct CGPath *)p_newRegularPolygonPath;
- (struct CGPath *)p_newRoundedRectPath;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (id)name;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (id)bezierPathWithoutFlips;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (unsigned long long)numberOfControlKnobs;
@property(readonly, nonatomic) unsigned long long numberOfSides;
@property(readonly, nonatomic) double maxCornerRadius;
@property(readonly, nonatomic) double cornerRadius;
@property(readonly, nonatomic) double maxScalar;
- (void)setScalarValue:(id)arg1;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithType:(unsigned long long)arg1 scalar:(double)arg2 naturalSize:(struct CGSize)arg3 continuousCurve:(_Bool)arg4;
- (void)saveToArchive:(void *)arg1;
- (id)initWithArchive:(const void *)arg1;

@end

