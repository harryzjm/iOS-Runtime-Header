//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSDrawables/TSDLayout.h>

@class NSMutableArray, NSMutableSet, NSObject, NSString, TPFootnoteHeightMeasurer, TSDCanvas, TSPObject, TSWPStorage;
@protocol TSDHint, TSWPFootnoteHeightMeasurer, TSWPFootnoteMarkProvider, TSWPOffscreenColumn, TSWPTopicNumberHints;

@interface TPBodyLayout : TSDLayout
{
    NSMutableArray *_columns;
    TPFootnoteHeightMeasurer *_footnoteHeightMeasurer;
    NSMutableArray *_anchoredDrawablesForRelayout;
    NSMutableSet *_inlineDrawableLayouts;
    NSMutableSet *_markedHiddenInlineDrawableLayouts;
}

+ (struct CGSize)minimumBodySize;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout; // @synthesize anchoredDrawablesForRelayout=_anchoredDrawablesForRelayout;
- (id)pageController;
@property(readonly, nonatomic) _Bool textIsVertical;
- (_Bool)invalidateForPageCountChange;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
- (struct CGPoint)anchoredAttachmentPositionFromLayoutPosition:(struct CGPoint)arg1;
- (struct CGPoint)layoutPositionFromAnchoredAttachmentPosition:(struct CGPoint)arg1;
- (_Bool)isLayoutOffscreen;
@property(readonly, nonatomic) double maxAnchorInBlockDirection;
- (id)currentAnchoredDrawableLayouts;
- (id)currentInlineDrawableLayouts;
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;
- (id)layoutForInlineDrawable:(id)arg1;
- (id)p_layoutForDrawable:(id)arg1 inContainingLayout:(id)arg2;
- (_Bool)excludeFromNearestVisibleRectSearchForSelectionPath:(id)arg1;
- (id)unscaledCommentFlagAnchorInfoForSearchReference:(id)arg1;
- (struct CGPoint)activityLineUnscaledEndPointForSearchReference:(id)arg1;
- (struct CGPoint)calculatePointFromSearchReference:(id)arg1;
- (void)addAttachmentLayout:(id)arg1;
- (id)existingAttachmentLayoutForInfo:(id)arg1;
- (void)markHiddenInlineDrawableLayout:(id)arg1;
- (void)clearHiddenInlineDrawableLayoutMarks;
- (_Bool)canHaveFootnotesFromPreviousTarget:(id)arg1;
- (_Bool)isFootnoteContainerOnSamePageAsTarget:(id)arg1;
- (id)interiorClippingPath;
@property(readonly, nonatomic) _Bool shouldWrapAroundExternalDrawables;
@property(readonly, nonatomic) _Bool layoutIsValid;
- (id)addPartitionableAttachmentLayout:(id)arg1;
- (id)parentLayoutForPartitionableAttachment:(id)arg1 atPosition:(struct CGPoint)arg2;
@property(readonly, nonatomic) TSDCanvas *canvas;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
@property(readonly, nonatomic) _Bool wantsLineFragments;
@property(readonly, nonatomic) int naturalDirection;
@property(readonly, nonatomic) long long naturalAlignment;
@property(readonly, nonatomic) int verticalAlignment;
@property(readonly, nonatomic) unsigned long long autosizeFlags;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
@property(readonly, nonatomic) struct CGPoint position;
@property(readonly, nonatomic) struct CGSize currentSize;
@property(readonly, nonatomic) struct CGSize maxSize;
@property(readonly, nonatomic) struct CGSize minSize;
@property(readonly, nonatomic) _Bool isInstructional;
- (_Bool)isLastTarget;
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)resetFootnoteHeightMeasurer;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, nonatomic) NSObject<TSWPTopicNumberHints> *nextTargetTopicNumberHints;
@property(readonly, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
@property(readonly, nonatomic) TSWPStorage *storage;
@property(readonly, nonatomic) _Bool marginsAreMirrored;
- (double)textScaleForChild:(id)arg1;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (void)unregisterFromLayoutController;
- (_Bool)shouldProvideSizingGuides;
- (void)p_addLayoutIfAttached:(id)arg1;
- (void)setChildren:(id)arg1;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceChild:(id)arg1 with:(id)arg2;
- (void)parentWillChangeTo:(id)arg1;
- (void)invalidateSize;
- (_Bool)shouldInvalidateSizeWhenInvalidateSizeOfReliedOnLayout:(id)arg1;
- (void)willInflate;
- (void)validate;
- (struct CGPoint)capturedInfoPositionForAttachment;
- (id)computeLayoutGeometry;
- (_Bool)childLayoutIsCurrentlyHiddenWhileManipulating:(id)arg1;
- (struct CGSize)maximumFrameSizeForChild:(id)arg1;
- (id)textColorOverride;
- (double)contentBlockHeight;
- (_Bool)processWidowAndInflation;
- (void)updateStartCharIndexWithDirtyRanges:(id)arg1;
- (void)setNeedsInflation;
- (void)p_killDrawableLayouts:(id)arg1;
- (_Bool)needsInflation;
- (struct CGRect)p_rectForSelection:(id)arg1 useParagraphModeRects:(_Bool)arg2;
- (struct CGRect)rectForPresentingAnnotationPopoverForSelectionPath:(id)arg1;
- (_Bool)containsStartOfRange:(struct _NSRange)arg1;
- (_Bool)containsStartOfPencilAnnotation:(id)arg1;
- (id)unscaledContentRectsToAvoidPencilAnnotationOverlap;
- (id)containedPencilAnnotations;
- (struct CGRect)rectInRootForPresentingAnnotationPopoverForSelectionPath:(id)arg1;
- (struct CGRect)rectForSelection:(id)arg1;
- (_Bool)selectionMustBeEntirelyOnscreenToCountAsVisibleInSelectionPath:(id)arg1;
- (struct CGRect)rectInRootForSelectionPath:(id)arg1;
- (struct CGRect)rectInRootOfAutoZoomContextOfSelectionPath:(id)arg1;
- (double)viewScaleForZoomingToSelectionPath:(id)arg1 targetPointSize:(double)arg2;
- (_Bool)descendersCannotClip;

// Remaining properties
@property(readonly, nonatomic) _Bool alwaysIncludesSpaceAfter;
@property(readonly, nonatomic) _Bool alwaysIncludesSpaceBefore;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property(readonly, nonatomic) Class inlineTableOfContentsLayoutClass;
@property(readonly, nonatomic) _Bool isLinked;
@property(readonly, nonatomic) struct CGRect maskRect;
@property(readonly, nonatomic) _Bool repShouldPreventCaret;
@property(readonly, nonatomic) struct _NSRange restrictedLayoutCharRange;
@property(readonly, nonatomic) _Bool shouldHyphenate;
@property(readonly, nonatomic) _Bool shouldIgnoreAnchoredAttachments;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool supportsPageNumbers;

@end

