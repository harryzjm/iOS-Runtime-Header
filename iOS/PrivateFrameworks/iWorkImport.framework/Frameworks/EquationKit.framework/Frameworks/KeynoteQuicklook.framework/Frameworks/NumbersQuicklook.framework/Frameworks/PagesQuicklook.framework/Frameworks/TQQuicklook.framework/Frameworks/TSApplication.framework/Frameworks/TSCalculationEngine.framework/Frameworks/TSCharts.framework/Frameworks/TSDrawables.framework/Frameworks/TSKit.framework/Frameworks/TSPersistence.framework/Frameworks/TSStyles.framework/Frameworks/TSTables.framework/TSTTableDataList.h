//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSPersistence/TSPObject.h>

@class NSMutableArray, NSMutableIndexSet, NSObject, TSTTableDataListSegment;
@protocol TSDContainerInfo><TSWPStorageParent;

@interface TSTTableDataList : TSPObject
{
    NSMutableArray *_segments;
    struct unordered_map<NSObject<TSTTableDataPayloadHashing>*, TSTTableDataObject *, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, std::allocator<std::pair<NSObject<TSTTableDataPayloadHashing>*const, TSTTableDataObject *>>> _payloadToObjectMap;
    NSMutableIndexSet *_unusedKeySet;
    _Bool _isNewForBraveNewCell;
    _Bool _mightHaveCustomFormats;
    _Bool _useReverseMap;
    int _listType;
    unsigned int _nextID;
    NSObject<TSDContainerInfo><TSWPStorageParent> *_richTextParentInfo;
    TSTTableDataListSegment *_cachedSegment;
}

+ (id)stringForListType:(int)arg1;
+ (Class)classForUnarchiver:(id)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) TSTTableDataListSegment *cachedSegment; // @synthesize cachedSegment=_cachedSegment;
@property(readonly, nonatomic) _Bool useReverseMap; // @synthesize useReverseMap=_useReverseMap;
@property(nonatomic) unsigned int nextID; // @synthesize nextID=_nextID;
@property(readonly, nonatomic) _Bool mightHaveCustomFormats; // @synthesize mightHaveCustomFormats=_mightHaveCustomFormats;
@property(nonatomic) _Bool isNewForBraveNewCell; // @synthesize isNewForBraveNewCell=_isNewForBraveNewCell;
@property(nonatomic) int listType; // @synthesize listType=_listType;
@property(nonatomic) NSObject<TSDContainerInfo><TSWPStorageParent> *richTextParentInfo; // @synthesize richTextParentInfo=_richTextParentInfo;
- (id)copyWithContext:(id)arg1;
- (id)listTypeString;
- (void)dropReferences:(unsigned int)arg1 forKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (void)dropReferenceForKey:(unsigned int)arg1 callWillModify:(_Bool)arg2;
- (void)takeReferences:(unsigned int)arg1 forKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (void)takeReferenceForKey:(unsigned int)arg1 callWillModify:(_Bool)arg2;
- (unsigned int)refCountForKey:(unsigned int)arg1;
- (unsigned long long)count;
- (_Bool)repairStyleDatalistStylesheetIfNecessary;
- (void)replaceFormatsUsingBlock:(CDUnknownBlockType)arg1;
- (void)replaceRichTextUsingBlock:(CDUnknownBlockType)arg1;
- (void)replaceFormulaErrorsUsingBlock:(CDUnknownBlockType)arg1;
- (void)replaceStylesUsingBlock:(CDUnknownBlockType)arg1;
- (void)replaceCommentStoragesUsingBlock:(CDUnknownBlockType)arg1;
- (void)replaceConditionalStyleSetsUsingBlock:(CDUnknownBlockType)arg1;
- (void)replaceFormulasUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateKeysAndCountsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateLegacyCustomFormatsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateFormatsUsingBlock:(CDUnknownBlockType)arg1;
- (void)removeObjectForKey:(unsigned int)arg1;
- (void)p_replaceObjectAtKey:(unsigned int)arg1 withObject:(id)arg2;
- (id)p_setPayload:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (id)p_objectForPayload:(id)arg1;
- (id)wrappedObjectForPayload:(id)arg1;
- (unsigned long long)p_objectCount;
- (unsigned int)p_nextAvailableKey;
- (void)p_clearReverseMapForObject:(id)arg1 atKey:(unsigned int)arg2;
- (void)p_setObject:(id)arg1 atKey:(unsigned int)arg2 updateReverseMap:(_Bool)arg3;
@property(readonly, nonatomic) unsigned long long archivingCompatibilityVersion;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (id)packageLocator;
- (id)initWithType:(int)arg1 context:(id)arg2;
- (void)p_setupWithType:(int)arg1 nextKeyID:(unsigned int)arg2;
- (void)p_addInitialSegment;
- (_Bool)p_shouldUseReverseMap;
- (id)styleForKey:(unsigned int)arg1;
- (id)stringForKey:(unsigned int)arg1 outShouldWrap:(_Bool *)arg2 outIsShared:(_Bool *)arg3;
- (id)stringForKey:(unsigned int)arg1;
- (id)richTextForKey:(unsigned int)arg1;
- (id)multipleChoiceListFormatForKey:(unsigned int)arg1;
- (id)importWarningSetForKey:(unsigned int)arg1;
- (id)formulaErrorForKey:(unsigned int)arg1;
- (id)controlCellSpecForKey:(unsigned int)arg1;
- (id)formulaForKey:(unsigned int)arg1;
- (id)conditionalStyleSetForKey:(unsigned int)arg1;
- (id)commentStorageForKey:(unsigned int)arg1;
- (id)cellFormatForKey:(unsigned int)arg1;
- (unsigned int)addStyle:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (unsigned int)addString:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (unsigned int)addRichText:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (unsigned int)addMultipleChoiceListFormat:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (unsigned int)addImportWarningSet:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (unsigned int)addFormulaError:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (unsigned int)addControlCellSpec:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (unsigned int)addFormula:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (unsigned int)addConditionalStyleSet:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (unsigned int)addCommentStorage:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (unsigned int)addCellFormat:(id)arg1 atSuggestedKey:(unsigned int)arg2 callWillModify:(_Bool)arg3;
- (void)updateCustomFormatsAtKey:(id)arg1;
- (void)p_replaceCustomFormatsWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)containsFormulas;
- (_Bool)containsControlCellSpecs;
- (id)allRichTextStorages;
- (id)getRefCountsFromDataList;
- (id)reassignCustomFormatUIDForPaste:(id)arg1;
- (void)upgradeConditionalStylesToLinkedRefWithTableUID:(const struct TSKUIDStruct *)arg1;
- (void)upgradeCellFormatsU2_0;
- (_Bool)hasDuplicatedElements;

@end

