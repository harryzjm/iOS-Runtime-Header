//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, TSDBezierNode, TSUBezierPath;

@interface TSDBezierSubpath : NSObject
{
    NSMutableArray *mNodes;
    _Bool mClosed;
}

- (void).cxx_destruct;
@property(nonatomic, getter=isClosed) _Bool closed; // @synthesize closed=mClosed;
@property(copy, nonatomic) NSArray *nodes; // @synthesize nodes=mNodes;
- (void)convertToHobby;
- (id)splitEdgeAtIndex:(unsigned long long)arg1 atPercentage:(double)arg2;
- (void)addNodesToArray:(id)arg1;
@property(readonly, nonatomic) _Bool closeIfEndpointsAreEqual;
- (void)smoothNode:(id)arg1;
- (void)sharpenAllNodes;
@property(readonly, nonatomic) struct CGRect nodeBounds;
- (id)bezierNodeUnderPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 andTolerance:(double)arg3 returningType:(long long *)arg4;
- (double)distanceToPoint:(struct CGPoint)arg1 elementIndex:(unsigned long long *)arg2 tValue:(double *)arg3 threshold:(double)arg4;
- (void)deselectAllNodes;
- (void)selectAllNodes;
- (void)deleteSelectedNodes;
- (_Bool)shouldChangePathToOpen:(long long)arg1;
@property(readonly, nonatomic) _Bool canDeleteSelectedNodes;
@property(readonly, nonatomic) _Bool hasSelectedNode;
@property(readonly, nonatomic) _Bool allNodesSelected;
- (void)offsetSelectedEdgesByDelta:(struct CGPoint)arg1;
- (void)offsetSelectedNodesByDelta:(struct CGPoint)arg1;
@property(readonly, nonatomic) TSDBezierNode *lastNode;
@property(readonly, nonatomic) TSDBezierNode *firstNode;
- (id)nodeAfterNode:(id)arg1;
- (id)nodePriorToNode:(id)arg1;
- (void)removeLastNode;
- (void)removeNode:(id)arg1;
- (void)addNode:(id)arg1;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (void)reverseDirection;
- (void)updateReflectedState;
- (void)appendToBezierPath:(id)arg1;
- (void)appendToBezierPath:(id)arg1 selectedNodesOnly:(_Bool)arg2 fromIndex:(unsigned long long)arg3 closed:(_Bool)arg4;
- (void)appendToBezierPath:(id)arg1 selectedNodesOnly:(_Bool)arg2 fromIndex:(unsigned long long)arg3;
@property(readonly, nonatomic) TSUBezierPath *bezierPath;
- (_Bool)isCircular;
@property(readonly, nonatomic) _Bool isRectangular;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

