//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSPersistence/TSPObject.h>

#import <TSTables/TSCEFormulaOwning-Protocol.h>
#import <TSTables/TSTCompatibilityVersionProviding-Protocol.h>
#import <TSTables/TSTGroupByChangeProtocol-Protocol.h>

@class NSArray, NSMutableArray, NSString, TSCECalculationEngine, TSKCustomFormatWrapper, TSTCategoryOwner, TSTGroupByChangeDistributor, TSTGroupBySet, TSTGroupNode, TSTHiddenStates, TSTTableInfo, TSTTableModel, TSULocale;
@protocol TSCEFormulaReplacing;

@interface TSTGroupBy : TSPObject <TSCEFormulaOwning, TSTGroupByChangeProtocol, TSTCompatibilityVersionProviding>
{
    struct UUIDData<TSP::UUIDData> _groupByUid;
    _Bool _isEnabled;
    NSArray *_groupingColumns;
    NSArray *_columnAggregates;
    TSTGroupNode *_groupRoot;
    unsigned short _ownerIndex;
    NSMutableArray *_aggregators;
    TSTCategoryOwner *_categoryOwner;
    TSTGroupBySet *_groupBySet;
    struct TSUCellCoord _indirectAggTypeChangeFormulaCoord;
    struct TSUCellCoord _groupingColumnsFormulaCoord;
    struct TSUCellCoord _groupingColumnHeadersFormulaCoord;
    struct TSUCellCoord _allAggsInGroupRootFormulaCoord;
    struct TSUCellCoord _columnOrderChangedCoord;
    struct TSUCellCoord _rowOrderChangedCoord;
    struct TSUCellCoord _rowOrderChangedIgnoringRecalcCoord;
    struct TSUCellCoord _hiddenStatesChangedCoord;
    TSTGroupByChangeDistributor *_groupByChangeDistributor;
    struct TSUCellCoord _nextAggFormulaCoord;
    struct os_unfair_lock_s _aggValuesLock;
    struct unordered_map<TSUCellCoord, TSTAggNode *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTAggNode *>>> _aggNodesByFormulaCoord;
    struct unordered_map<TSKUIDStruct, TSTGroupNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTGroupNode *>>> _groupNodesByGroupUid;
    unsigned long long _rebuildFormulasDeferredLevel;
    _Bool _needsRebuildOfAggFormulas;
    unsigned long long _deferGroupByChangeNotificationsLevel;
    NSMutableArray *_deferredGroupByChangeNotifications;
    NSMutableArray *_calcEngineGroupByChangeNotifications;
    _Bool _inCalcEngineMode;
    _Bool _groupingColumnHeadersChanged;
    TSTHiddenStates *_hiddenStates;
    struct TSCEUidLookupList _rowUidLookupList;
    _Bool _isRegisteredWithCalcEngine;
    TSKCustomFormatWrapper *_customFormatForBlankGroup;
    TSKCustomFormatWrapper *_customFormatForErrorGroup;
}

+ (_Bool)validateNumberOfGroupsForGroupingColumnList:(id)arg1 sourceTableModel:(id)arg2 sourceBodyTract:(id)arg3 limit:(unsigned long long)arg4 groupNodeCount:(unsigned long long *)arg5;
+ (_Bool)validateNumberOfGroupsForGroupingColumnList:(id)arg1 pivotDataModel:(id)arg2 limit:(unsigned long long)arg3 groupNodeCount:(unsigned long long *)arg4;
+ (id)localizedFalseStringForBooleanGroupWithString:(id)arg1 documentLocale:(id)arg2;
+ (id)localizedTrueStringForBooleanGroupWithString:(id)arg1 documentLocale:(id)arg2;
+ (id)localizedNameForErrorGroupForDocumentLocale:(id)arg1;
+ (id)localizedNameForBlankGroupForDocumentLocale:(id)arg1;
+ (unsigned char)aggregateTypeForAggregateLabel:(id)arg1 locale:(id)arg2;
+ (_Bool)isRelativeAncestorGroupUid:(const struct TSKUIDStruct *)arg1;
+ (int)relativeLevelOfAncestorGroupUid:(const struct TSKUIDStruct *)arg1;
+ (struct TSKUIDStruct)relativeAncestorGroupUid:(int)arg1;
+ (struct TSKUIDStruct)tableUIDForCategoryRef:(id)arg1 withCalcEngine:(id)arg2;
+ (id)groupByForCategoryRef:(id)arg1 withCalcEngine:(id)arg2;
+ (id)groupByForUID:(struct TSKUIDStruct)arg1 withCalcEngine:(id)arg2;
+ (id)p_dateBySettingUnit:(unsigned long long)arg1 value:(long long)arg2 ofDate:(id)arg3 inCalendar:(id)arg4;
+ (unsigned short)groupingComboForGroupingType:(long long)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, retain, nonatomic) TSKCustomFormatWrapper *customFormatForErrorGroup; // @synthesize customFormatForErrorGroup=_customFormatForErrorGroup;
@property(readonly, retain, nonatomic) TSKCustomFormatWrapper *customFormatForBlankGroup; // @synthesize customFormatForBlankGroup=_customFormatForBlankGroup;
@property(nonatomic) _Bool needsRebuildOfAggFormulas; // @synthesize needsRebuildOfAggFormulas=_needsRebuildOfAggFormulas;
@property(readonly, nonatomic) struct TSUCellCoord allAggsInGroupRootFormulaCoord; // @synthesize allAggsInGroupRootFormulaCoord=_allAggsInGroupRootFormulaCoord;
@property(readonly, nonatomic) struct TSUCellCoord groupingColumnHeadersFormulaCoord; // @synthesize groupingColumnHeadersFormulaCoord=_groupingColumnHeadersFormulaCoord;
@property(readonly, nonatomic) struct TSUCellCoord groupingColumnsFormulaCoord; // @synthesize groupingColumnsFormulaCoord=_groupingColumnsFormulaCoord;
@property(readonly, nonatomic) struct TSUCellCoord indirectAggTypeChangeFormulaCoord; // @synthesize indirectAggTypeChangeFormulaCoord=_indirectAggTypeChangeFormulaCoord;
@property(readonly, nonatomic) NSArray *columnAggregates; // @synthesize columnAggregates=_columnAggregates;
@property(nonatomic) _Bool isRegisteredWithCalcEngine; // @synthesize isRegisteredWithCalcEngine=_isRegisteredWithCalcEngine;
@property(readonly, nonatomic) unsigned short ownerIndex; // @synthesize ownerIndex=_ownerIndex;
@property(retain, nonatomic) TSTHiddenStates *hiddenStates; // @synthesize hiddenStates=_hiddenStates;
@property(readonly, retain, nonatomic) NSMutableArray *aggregators; // @synthesize aggregators=_aggregators;
@property(readonly, retain, nonatomic) TSTGroupByChangeDistributor *groupByChangeDistributor; // @synthesize groupByChangeDistributor=_groupByChangeDistributor;
@property(nonatomic) _Bool isEnabled; // @synthesize isEnabled=_isEnabled;
@property(readonly, retain) NSArray *groupingColumns; // @synthesize groupingColumns=_groupingColumns;
@property(nonatomic) __weak TSTGroupBySet *groupBySet; // @synthesize groupBySet=_groupBySet;
@property(nonatomic) __weak TSTCategoryOwner *categoryOwner; // @synthesize categoryOwner=_categoryOwner;
- (_Bool)verifyConnectionsWithPivotDataModel:(id)arg1;
- (id)categoryRefForAggregateRangeRef:(const struct TSCERangeRef *)arg1;
- (struct TSCERangeRef)aggregateRangeRefForCategoryRef:(id)arg1;
- (_Bool)isErrorGroupUid:(const struct TSKUIDStruct *)arg1;
- (_Bool)isBlankGroupUid:(const struct TSKUIDStruct *)arg1;
- (void)p_setupCustomFormatsWithLocale:(id)arg1;
- (_Bool)analyze;
- (struct TSKUIDStruct)rowUIDForLookupKey:(unsigned int)arg1;
- (unsigned int)findKeyForRowUid:(const struct TSKUIDStruct *)arg1;
- (unsigned int)lookupKeyForRowUID:(const struct TSKUIDStruct *)arg1;
- (id)prettyStringForCategoryRef:(id)arg1 forHostCellRef:(const struct TSCECellRef *)arg2 namingContext:(id)arg3;
- (id)stringForCategoryRef:(id)arg1 hostTableUID:(const struct TSKUIDStruct *)arg2;
- (id)groupHierarchyTreeAsFiltered:(_Bool)arg1 usingOrder:(id)arg2 forDimension:(long long)arg3;
- (id)viewCellTractRefForCategoryRef:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2;
- (id)viewCellTractRefForCategoryRef:(id)arg1;
- (vector_0812e05b)captureCategoryRefsForViewRegion:(id)arg1 atLevel:(unsigned char)arg2 asSpanning:(_Bool)arg3;
- (vector_0812e05b)captureAnyCategoryRefsForViewRegion:(id)arg1 atLevel:(unsigned char)arg2 asSpanning:(_Bool)arg3;
- (vector_0812e05b)captureCategoryLabelRefsForViewRegion:(id)arg1 atLevel:(unsigned char)arg2 asSpanning:(_Bool)arg3 forRows:(_Bool)arg4;
- (vector_0812e05b)p_promoteSpanningReferences:(vector_0812e05b)arg1 withCaptured:(id)arg2 atLevel:(unsigned char)arg3;
- (vector_0812e05b)promoteSpanningReferences:(vector_0812e05b)arg1;
- (vector_0812e05b)captureCategoryRefsFromIterator:(id)arg1 atLevel:(unsigned char)arg2 asSpanning:(_Bool)arg3;
- (vector_0812e05b)expandSpanningCategoryRef:(id)arg1;
- (id)uidRectRefForCategoryRef:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2;
- (vector_0812e05b)categoryRefsForSpanningCategoryRef:(id)arg1;
- (vector_522b9630)cellRefsForCategoryRef:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2 ordered:(_Bool)arg3;
- (vector_522b9630)cellRefsForCategoryRef:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2;
- (vector_522b9630)unorderedCellRefsForCategoryRef:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2;
- (unsigned long long)countOfValuesForCategoryRef:(id)arg1;
- (id)valueGridForCategoryRef:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2 hidingActionMask:(unsigned char)arg3;
- (id)valueGridForCategoryRef:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2;
- (id)valueGridForCategoryRef:(id)arg1;
- (vector_ff6aafb2)valuesForCategoryRef:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2 hidingActionMask:(unsigned char)arg3;
- (vector_ff6aafb2)valuesForCategoryRef:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2;
- (vector_ff6aafb2)valuesForCategoryRef:(id)arg1;
- (TSKUIDStructVectorTemplate_de88e035)bodyRowUidsForCategoryRef:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2 ordered:(_Bool)arg3;
- (id)groupNodeForGroupValueHierarchyFromSplitter:(id)arg1 startAtComponent:(unsigned long long)arg2 startAtWord:(unsigned long long)arg3 preserveFlags:(struct TSUPreserveFlags *)arg4;
- (id)groupValueHierarchyStringForCategoryRef:(id)arg1 forHostCellRef:(const struct TSCECellRef *)arg2 namingContext:(id)arg3;
- (id)labelForCategoryRef:(id)arg1;
- (unsigned char)aggregateTypeForAggregateLabel:(id)arg1;
- (id)aggregateLabelForCategoryRef:(id)arg1;
- (unsigned char)aggregateTypeForCategoryRef:(id)arg1;
- (id)p_columnNameForColumnUid:(const struct TSKUIDStruct *)arg1;
- (id)columnNameForCategoryLevel:(unsigned char)arg1 shortForm:(_Bool)arg2;
- (id)columnNameForCategoryRef:(id)arg1;
- (_Bool)isSpanningCategoryRef:(id)arg1;
- (_Bool)isValidCategoryRef:(id)arg1;
- (void)remapTableUIDsInFormulasWithMap:(const void *)arg1 calcEngine:(id)arg2;
- (void)invalidateForCalcEngine:(id)arg1;
- (void)writeResultsForCalcEngine:(id)arg1;
- (struct TSCERecalculationState)evaluateFormulaAt:(struct TSUCellCoord)arg1 withCalcEngine:(id)arg2 recalcOptions:(struct TSCERecalculationState)arg3;
- (long long)evaluationMode;
- (id)linkedResolver;
- (struct TSKUIDStruct)ownerUID;
- (unsigned short)ownerKind;
- (id)aggregatorForColumn:(struct TSKUIDStruct)arg1;
- (void)dropAllAggregators;
- (_Bool)createAggregatorsIfMissingAndAssert:(_Bool)arg1;
- (void)dropAggregator:(id)arg1;
- (id)anyAggregator;
- (id)createAggregatorOnColumn:(struct TSKUIDStruct)arg1;
- (void)addAggregator:(id)arg1;
- (id)aggNodeForAggFormulaCoord:(const struct TSUCellCoord *)arg1;
- (void)clearAggNode:(id)arg1 forFormulaCoord:(const struct TSUCellCoord *)arg2;
- (void)setAggNode:(id)arg1 forFormulaCoord:(const struct TSUCellCoord *)arg2;
- (id)valueForFormulaCoord:(const struct TSUCellCoord *)arg1;
- (void)clearValueForFormulaCoord:(const struct TSUCellCoord *)arg1;
- (void)setValue:(id)arg1 forFormulaCoord:(const struct TSUCellCoord *)arg2;
- (void)updateAggFormulaCoord:(struct TSUCellCoord)arg1;
- (void)usedAggFormulaCoord:(const struct TSUCellCoord *)arg1;
- (struct TSUCellCoord)getNextAggFormulaCoord;
- (void)insertRowUids:(id)arg1;
- (void)resetGroupings;
- (void)rebuildAllAggFormulas;
- (void)upgradeForNewAggregateTypes:(id)arg1;
- (_Bool)inCalcEngineMode;
- (void)exitCalcEngineMode;
- (void)enterCalcEngineMode;
- (_Bool)isDeferringGroupByChangeNotifications;
- (void)resumeGroupByChangeNotifications;
- (void)sendDeferredNotifictions:(id)arg1;
- (void)deferGroupByChangeNotifications;
- (_Bool)isRebuildFormulasDeferred;
- (void)endDeferringRebuildFormulas;
- (void)beginDeferringRebuildFormulas;
@property(readonly, nonatomic) TSCECalculationEngine *calcEngine;
@property(readonly, nonatomic) TSTTableInfo *tableInfo;
@property(readonly, nonatomic) TSTTableModel *tableModel;
- (id)groupValueHierarchyRefOnValue:(id)arg1 atLevel:(unsigned char)arg2;
- (id)groupValueRefOnValue:(id)arg1 atLevel:(unsigned char)arg2;
- (id)aggregateRefOnValue:(id)arg1 forColumnUid:(const struct TSKUIDStruct *)arg2 forType:(unsigned char)arg3 atLevel:(unsigned char)arg4;
- (id)sortedValuesAtLevel:(unsigned char)arg1;
- (id)distinctValuesAtLevel:(unsigned char)arg1;
- (id)findGroupNodeForValue:(id)arg1 atLevel:(unsigned char)arg2 createIfMissing:(_Bool)arg3;
- (void)removeRowUids:(id)arg1;
- (void)removeRowUid:(const struct TSKUIDStruct *)arg1;
- (void)removeRowUid:(const struct TSKUIDStruct *)arg1 forGroupValue:(id)arg2;
- (_Bool)containsRowUid:(const struct TSKUIDStruct *)arg1;
- (void)insertRowUid:(const struct TSKUIDStruct *)arg1 atRowIndex:(unsigned int)arg2 forGroupValue:(id)arg3;
- (void)willMakeGroupingChangesInRowUIDs:(id)arg1;
- (id)groupValueTupleForRowUid:(struct TSKUIDStruct)arg1 atLevel:(unsigned char)arg2;
- (id)groupNodeForRowUid:(struct TSKUIDStruct)arg1 atLevel:(unsigned char)arg2;
- (id)indexesOfGroupUidsInUids:(const void *)arg1;
- (id)rowUIDSetForCategoryLevel:(unsigned char)arg1;
- (id)labelRowUIDSetForCategoryLevel:(unsigned char)arg1 labelRowVisibility:(unsigned long long)arg2;
- (id)labelRowUIDSet;
- (id)labelRowUidsForGroupUids:(id)arg1;
- (id)childGroupUidsForGroupUids:(id)arg1;
- (void)enumerateRowsUidsAtLevel:(unsigned char)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)rowUidsForGroupUids:(id)arg1;
- (id)rowsForGroupValue:(id)arg1 atLevel:(unsigned char)arg2;
- (id)groupsAtLevel:(unsigned char)arg1;
- (void)markAllGroupNodesDirty;
- (unsigned char)groupLevelForGroupingColumnUid:(struct TSKUIDStruct)arg1;
- (unsigned char)groupLevelForGroupUid:(const struct TSKUIDStruct *)arg1 isBlank:(_Bool *)arg2 isError:(_Bool *)arg3;
- (unsigned char)groupLevelForGroupUid:(struct TSKUIDStruct)arg1;
- (id)groupNodeForGroupUid:(struct TSKUIDStruct)arg1;
- (id)groupNodeForGroupUuid:(id)arg1;
- (void)enumerateGroupsBetweenLevel:(unsigned char)arg1 andLevel:(unsigned char)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)enumerateGroupsAtLevel:(unsigned char)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)enumerateAllGroupsWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateAggregatesAtLevel:(unsigned char)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)enumerateAggregates:(CDUnknownBlockType)arg1;
- (void)setAggregateType:(unsigned char)arg1 forColumnUID:(struct TSKUIDStruct)arg2 atGroupLevel:(unsigned char)arg3;
- (void)setAggregates:(id)arg1;
@property(readonly, nonatomic) _Bool usesPrePivotAggregateTypesOnly;
- (unsigned char)anyAggregateTypeForColumnUID:(struct TSKUIDStruct)arg1;
- (unsigned char)aggregateTypeForColumnUID:(struct TSKUIDStruct)arg1 atGroupLevel:(unsigned char)arg2;
- (void)markAllDependentsAsDirty;
- (void)markAllAggregatesAsDirty;
- (id)allGroupNodeUids;
- (id)groupingColumnAtCategoryLevel:(unsigned char)arg1;
- (unsigned long long)indexOfGroupingColumn:(id)arg1;
- (void)enumerateGroupingColumnsForColumn:(struct TSKUIDStruct)arg1 withBlock:(CDUnknownBlockType)arg2;
- (vector_515ab57d)groupingColumnLevelsForColumn:(const struct TSKUIDStruct *)arg1;
- (_Bool)isGroupingColumn:(const struct TSKUIDStruct *)arg1;
- (unsigned long long)numberOfGroupsUptoLevel:(unsigned char)arg1;
- (unsigned long long)numberOfGroupsAtLevel:(unsigned char)arg1;
- (void)runChange:(id)arg1 withAggregates:(id)arg2;
- (void)_removeAggregates:(id)arg1;
- (void)_addAggregates:(id)arg1 atLevel:(unsigned char)arg2;
- (id)aggregatesOnLevel:(unsigned char)arg1;
- (void)mapGroupUidsForChange:(id)arg1;
- (id)changeForSettingGroupingColumnList:(id)arg1;
- (id)changeForMovingBaseRows:(const void *)arg1 toDestGroup:(id)arg2;
- (id)changeForUpdatingGroupValueOnNode:(const struct TSKUIDStruct *)arg1 toValue:(id)arg2;
- (void)setGroupingColumnList:(id)arg1;
- (id)columnAggregatesOnColumnUids:(const void *)arg1;
- (id)columnAggregateListCopy;
- (id)groupingColumnListCopy;
- (void)checkForFormulaCoordUpgrade;
- (void)updateWithDocumentRoot:(id)arg1;
@property(readonly, nonatomic) unsigned long long archivingCompatibilityVersion;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (void)encodeToArchive:(void *)arg1 archiver:(id)arg2 backwardCompat:(_Bool)arg3;
- (id)initWithArchive:(const void *)arg1 forCategoryOwner:(id)arg2;
- (void)loadFromArchive:(const void *)arg1;
- (void *)groupNodesByGroupUid;
- (void)didChangeGroupByStructure;
- (void)endOfGroupingChangesBatch;
- (void)startOfGroupingChangesBatch;
- (void)didRemoveRowUID:(struct TSKUIDStruct)arg1 fromGroup:(id)arg2;
- (void)didAddRowUID:(struct TSKUIDStruct)arg1 toGroup:(id)arg2;
- (void)willRemoveGroupNode:(id)arg1;
- (void)didRemoveGroup:(id)arg1;
- (void)willRemoveGroup:(id)arg1;
- (void)didAddGroupNode:(id)arg1;
- (void)didCreateGroup:(id)arg1;
- (void)resetAllAggsFormula;
- (void)resetGroupingColumnsFormula;
@property(readonly, nonatomic) struct TSCECellRef hiddenStatesChangedPrecedent;
@property(readonly, nonatomic) struct TSCECellRef rowOrderChangedPrecedentIgnoringRecalc;
@property(readonly, nonatomic) struct TSCECellRef rowOrderChangedPrecedent;
@property(readonly, nonatomic) struct TSCECellRef columnOrderChangedPrecedent;
@property(readonly, nonatomic) TSTGroupNode *topLevelGroupNode;
@property(readonly, nonatomic) struct TSKUIDStruct topLevelGroupUid;
@property(readonly) unsigned char numberOfLevels;
@property(readonly, nonatomic) _Bool isCategorized;
- (void)resetGroupBy;
@property(readonly, nonatomic) TSULocale *locale;
@property(readonly, nonatomic) struct TSKUIDStruct baseTableUID;
@property(readonly, nonatomic) id <TSCEFormulaReplacing> minion;
@property(readonly, nonatomic) _Bool isForPivotTable;
- (id)convertCategoryRefToRelativeAncestorUid:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2 inHostTable:(const struct TSKUIDStruct *)arg3;
- (id)resolveCategoryRef:(id)arg1 atRowUid:(const struct TSKUIDStruct *)arg2 inHostTable:(const struct TSKUIDStruct *)arg3;
- (struct TSKUIDStruct)convertToRelativeAncestorUid:(const struct TSKUIDStruct *)arg1 atRowUid:(const struct TSKUIDStruct *)arg2;
- (struct TSKUIDStruct)resolveRelativeAncestorUid:(const struct TSKUIDStruct *)arg1 atRowUid:(const struct TSKUIDStruct *)arg2;
- (void)teardown;
- (void)didInitFromSOS;
@property(nonatomic) struct TSKUIDStruct groupByUid;
- (void)resetWithGroupings:(id)arg1 categoryOwner:(id)arg2 hiddenStates:(id)arg3 groupBySet:(id)arg4;
- (void)willModify;
- (id)initWithGroupings:(id)arg1 isEnabled:(_Bool)arg2 categoryOwner:(id)arg3 groupByUid:(const struct TSKUIDStruct *)arg4 ownerIndex:(unsigned short)arg5;
- (id)initWithGroupings:(id)arg1 categoryOwner:(id)arg2 groupByUid:(const struct TSKUIDStruct *)arg3 ownerIndex:(unsigned short)arg4;
- (id)initWithGroupings:(id)arg1 categoryOwner:(id)arg2;
- (void)p_setCell:(id)arg1 forQuarterOfYearGroupingTypeWithGroupColumnValue:(id)arg2 toBeInGroup:(id)arg3;
- (void)p_setCell:(id)arg1 forMonthOfYearGroupingTypeWithGroupColumnValue:(id)arg2 toBeInGroup:(id)arg3;
- (void)p_setCell:(id)arg1 forYearQuarterGroupingTypeWithGroupColumnValue:(id)arg2 toBeInGroup:(id)arg3;
- (void)p_setCell:(id)arg1 forYearWeekGroupingTypeWithGroupColumnValue:(id)arg2 toBeInGroup:(id)arg3;
- (void)p_setCell:(id)arg1 forDayGroupingTypeWithGroupColumnValue:(id)arg2 toBeInGroup:(id)arg3;
- (void)p_setCell:(id)arg1 forDayOfWeekGroupingTypeWithGroupColumnValue:(id)arg2 toBeInGroup:(id)arg3;
- (void)p_setCell:(id)arg1 forMonthGroupingTypeWithGroupColumnValue:(id)arg2 toBeInGroup:(id)arg3;
- (void)p_setCell:(id)arg1 forYearGroupingTypeWithGroupColumnValue:(id)arg2 toBeInGroup:(id)arg3;
- (id)defaultDateForGrouping;
- (void)p_setCell:(id)arg1 forUniqueGroupingTypeWithGroupColumnValue:(id)arg2 toBeInGroup:(id)arg3;
- (_Bool)p_setCell:(id)arg1 groupingCellPlan:(const void *)arg2 groupValue:(id)arg3 toGroup:(id)arg4 templateCell:(id)arg5;
- (void)p_setCell:(id)arg1 groupingTypeCombo:(unsigned short)arg2 groupingCellValue:(id)arg3 toBeInGroup:(id)arg4;
- (id)p_cellDiffForFinishedCell:(id)arg1;
- (id)cellDiffForCell:(id)arg1 applyingGroupCellValue:(id)arg2 groupingType:(long long)arg3 toBeInGroup:(id)arg4;
- (id)changeCellDiffMapToMoveRows:(const void *)arg1 toGroup:(id)arg2 templateRowUID:(const struct TSKUIDStruct *)arg3;
- (_Bool)changeCell:(id)arg1 atCellUID:(const struct TSKUIDStructCoord *)arg2 toBeInGroup:(id)arg3;
- (unordered_map_7115e45a)changesPerColumnMapToBeInGroup:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

