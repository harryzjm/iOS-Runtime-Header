//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TSTables/TSCEFormulaOwning-Protocol.h>
#import <TSTables/TSTCellWillChangeProtocol-Protocol.h>
#import <TSTables/TSTGroupByChangeProtocol-Protocol.h>

@class NSArray, NSMutableArray, NSMutableDictionary, NSMutableIndexSet, NSString, TSCECalculationEngine, TSCEMutableUIDSet, TSCEUIDSet, TSTHiddenStatesOwner, TSTTableFilterSet, TSTTableInfo, TSTTableModel;

@interface TSTHiddenStateExtent : NSObject <TSCEFormulaOwning, TSTGroupByChangeProtocol, TSTCellWillChangeProtocol>
{
    TSTHiddenStatesOwner *_hiddenStatesOwner;
    TSCECalculationEngine *_calcEngine;
    struct TSKUIDStruct _hiddenStateExtentUid;
    struct unordered_map<TSKUIDStruct, unsigned char, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned char>>> _hiddenByUid;
    _Bool _forRows;
    TSTTableFilterSet *_filterSet;
    TSCEMutableUIDSet *_collapsedGroupUids;
    NSMutableIndexSet *_baseUserHiddenIndexes;
    NSMutableIndexSet *_baseFilteredIndexes;
    NSMutableIndexSet *_viewOnlyFilteredIndexes;
    NSMutableIndexSet *_pivotHiddenIndexes;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _viewIndexesMutex;
    NSMutableIndexSet *_userHiddenIndexes;
    NSMutableIndexSet *_filteredIndexes;
    NSMutableIndexSet *_combinedHiddenIndexes;
    NSMutableIndexSet *_collapsedIndexes;
    NSMutableArray *_thresholdCellValues;
    NSMutableDictionary *_uniqueValuesByColumnUid;
    struct unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>> _columnUidsWithUniqueIndexes;
    TSTTableFilterSet *_rewrittenFilterSet;
    struct os_unfair_lock_s _pendingComputedLock;
    struct TSUIndexSet _pendingColumnsOrRowsShown;
    struct TSUIndexSet _pendingColumnsOrRowsHidden;
    struct TSUIndexSet _pendingViewColumnsOrRowsShown;
    struct TSUIndexSet _pendingViewColumnsOrRowsHidden;
    vector_fad096c6 _cellRangesToInvalidate;
    _Bool _invalidateViewGeometry;
    _Bool _invalidateCollapsed;
    _Bool _needsToUpdateFilterSetForImport;
}

+ (void)swapIndexesWithIndexSet:(id)arg1 index:(unsigned long long)arg2 withIndex:(unsigned long long)arg3;
+ (unsigned long long)lastIndexNotInIndexSet:(id)arg1 orIndexSet:(id)arg2 beginRange:(unsigned long long)arg3 pastEndRange:(unsigned long long)arg4;
+ (unsigned long long)firstIndexNotInIndexSet:(id)arg1 orIndexSet:(id)arg2 beginRange:(unsigned long long)arg3 pastEndRange:(unsigned long long)arg4;
+ (unsigned long long)lastIndexNotInIndexSet:(id)arg1 beginRange:(unsigned long long)arg2 pastEndRange:(unsigned long long)arg3;
+ (unsigned long long)firstIndexNotInIndexSet:(id)arg1 beginRange:(unsigned long long)arg2 pastEndRange:(unsigned long long)arg3;
+ (id)mutableIndexSetByIntersecting:(id)arg1 withRange:(struct _NSRange)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) TSCEUIDSet *collapsedGroupUids; // @synthesize collapsedGroupUids=_collapsedGroupUids;
@property(readonly, nonatomic) _Bool forRows; // @synthesize forRows=_forRows;
@property(readonly, nonatomic) NSArray *thresholdCellValues; // @synthesize thresholdCellValues=_thresholdCellValues;
@property(nonatomic) _Bool needsToUpdateFilterSetForImport; // @synthesize needsToUpdateFilterSetForImport=_needsToUpdateFilterSetForImport;
@property(nonatomic) struct TSKUIDStruct hiddenStateExtentUid; // @synthesize hiddenStateExtentUid=_hiddenStateExtentUid;
@property(nonatomic) __weak TSTHiddenStatesOwner *hiddenStatesOwner; // @synthesize hiddenStatesOwner=_hiddenStatesOwner;
- (void)verifyIndexesAreConsistent;
- (void)didChangeGroupByStructure;
- (void)didRemoveRowUID:(struct TSKUIDStruct)arg1 fromGroup:(id)arg2;
- (void)didAddRowUID:(struct TSKUIDStruct)arg1 toGroup:(id)arg2;
- (void)didRemoveGroup:(id)arg1;
- (void)willRemoveGroup:(id)arg1;
- (void)didCreateGroup:(id)arg1;
- (void)endOfGroupingChangesBatch;
- (void)startOfGroupingChangesBatch;
- (void)clearAllCachedRowIndexes;
- (id)uniqueValuesForColumnUID:(const struct TSKUIDStruct *)arg1;
- (void)willRemoveRows:(const void *)arg1 tableUID:(const struct TSKUIDStruct *)arg2;
- (void)willApplyConcurrentCellMap:(id)arg1 tableUID:(const struct TSKUIDStruct *)arg2;
- (void)willApplyBaseCellMap:(id)arg1 tableUID:(const struct TSKUIDStruct *)arg2;
- (void)willApplyCell:(id)arg1 baseCellCoord:(struct TSUModelCellCoord)arg2 tableUID:(const struct TSKUIDStruct *)arg3;
- (void)hiddenStateChangedForBaseIndex:(struct TSUModelColumnOrRowIndex)arg1 viewIndex:(struct TSUViewColumnOrRowIndex)arg2 forAction:(unsigned char)arg3;
- (struct TSCECellRef)cellReferenceForIndex:(struct TSUModelColumnOrRowIndex)arg1;
- (_Bool)hasFilterRulesWithTable:(id)arg1 inBaseColumns:(id)arg2;
- (void)dirtyFilterState;
- (void)dirtyFilterStateForFooters;
- (void)dirtyFilterStateForHeaders;
- (void)dirtyFilterStateForRowRange:(struct _NSRange)arg1;
- (void)filterSetUpdated;
- (_Bool)hasActiveFilters;
- (void)setFilterSetType:(int)arg1;
- (void)enableFilterSet:(_Bool)arg1;
- (void)mutateFormulaFiltersWithTable:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) _Bool needsFilterFormulaRewriteForImport;
- (id)duplicateFilterSetInUidFormWithTable:(id)arg1;
- (id)duplicateFilterSet;
@property(retain, nonatomic) TSTTableFilterSet *filterSet;
- (void)invalidateForCalcEngine:(id)arg1;
- (void)writeResultsForCalcEngine:(id)arg1;
- (struct TSCERecalculationState)evaluateFormulaAt:(struct TSUCellCoord)arg1 withCalcEngine:(id)arg2 recalcOptions:(struct TSCERecalculationState)arg3;
- (long long)evaluationMode;
- (id)linkedResolver;
@property(readonly, nonatomic) TSTTableModel *tableModel;
- (struct TSKUIDStruct)ownerUID;
- (unsigned short)ownerKind;
- (void)p_calculateUniqueDistinctIndexWithCalcEngine:(id)arg1 formulaCoord:(const struct TSUCellCoord *)arg2 tableModel:(id)arg3 rule:(id)arg4;
- (id)p_createThresholdCellValue:(struct TSCEValue)arg1 locale:(id)arg2;
- (struct TSCEValue)p_calculateTopOrBottomThresholdWithCalcEngine:(id)arg1 formulaCoord:(const struct TSUCellCoord *)arg2 isTop:(_Bool)arg3 keyScale:(unsigned char)arg4;
- (id)p_calculateUniqueThresholdWithCalcEngine:(id)arg1 formulaCoord:(const struct TSUCellCoord *)arg2;
- (struct TSCEValue)p_calculateAverageThresholdWithCalcEngine:(id)arg1 formulaCoord:(const struct TSUCellCoord *)arg2;
- (id)pruneCollapsedGroupsInDimension:(long long)arg1;
- (id)applyCollapseExpandState:(id)arg1 outUndoState:(id *)arg2;
- (id)copyCollapsedStateToUpdatedGroupUids:(id)arg1 dimension:(long long)arg2;
- (id)expandSummaryGroupUIDs:(id)arg1;
- (id)collapseSummaryGroupUIDs:(id)arg1;
- (void)setGroupUID:(const struct TSKUIDStruct *)arg1 asCollapsed:(_Bool)arg2;
- (_Bool)isGroupUIDCollapsed:(const struct TSKUIDStruct *)arg1;
- (_Bool)isGroupCollapsedAndVisible:(const struct TSKUIDStruct *)arg1 dimension:(long long)arg2;
- (_Bool)isGroupOrParentsCollapsed:(const struct TSKUIDStruct *)arg1 dimension:(long long)arg2;
- (void)p_registerAllFormulas;
- (void)p_registerAllFormulasReturningCoords:(void *)arg1;
- (id)precedentsForFilterSet:(id)arg1 calcEngine:(id)arg2 hostOwnerUID:(const struct TSKUIDStruct *)arg3 hostCellID:(const struct TSUCellCoord *)arg4;
- (void)p_removeAllFormulaFromCalculationEngine;
- (void)remapTableUIDsInFormulasWithMap:(const void *)arg1 calcEngine:(id)arg2;
- (void)unregisterFromCalcEngine;
- (int)registerWithCalcEngine:(id)arg1 baseOwnerUID:(const struct TSKUIDStruct *)arg2;
- (void)encodeToArchive:(void *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const void *)arg1 unarchiver:(id)arg2 forHiddenStatesOwner:(id)arg3;
- (id)mutablePivotHiddenIndexes;
- (id)hiddenOrCollapsedIndexes;
- (id)mutableFilteredIndexes;
- (id)mutableUserHiddenIndexes;
- (id)p_viewOnlyHiddenIndexes;
- (id)p_baseHiddenIndexes;
- (void)swapBaseIndex:(struct TSUModelColumnOrRowIndex)arg1 withIndex:(struct TSUModelColumnOrRowIndex)arg2;
- (void)moveViewRangeOnlyFrom:(struct _NSRange)arg1 toIndex:(struct TSUViewColumnOrRowIndex)arg2;
- (void)moveBaseRangeFrom:(struct _NSRange)arg1 toIndex:(struct TSUModelColumnOrRowIndex)arg2;
- (void)deleteBaseRange:(struct _NSRange)arg1 withUids:(const void *)arg2;
- (void)insertBaseRange:(struct _NSRange)arg1;
- (unsigned int)indexOfVisibleAfterAndIncludingIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleAfterIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleBeforeAndIncludingIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleBeforeIndex:(unsigned int)arg1;
- (unsigned int)findLastVisibleIndexInBegin:(unsigned int)arg1 afterEnd:(unsigned int)arg2;
- (unsigned int)findFirstVisibleIndexInBegin:(unsigned int)arg1 afterEnd:(unsigned int)arg2;
- (_Bool)hasHiddenAtIndex:(unsigned int)arg1;
- (_Bool)anyHiddenInRange:(struct _NSRange)arg1 forAction:(unsigned char)arg2;
- (_Bool)anyHiddenInRange:(struct _NSRange)arg1;
- (unsigned int)numberOfUserHiddenInRange:(struct _NSRange)arg1;
- (unsigned int)numberOfUserHiddenInBaseRange:(struct _NSRange)arg1;
- (unsigned int)numberOfHiddenInBaseRange:(struct _NSRange)arg1;
- (unsigned int)numberOfHiddenInRange:(struct _NSRange)arg1;
- (id)indexesOfVisibleIndexesInIndexes:(id)arg1;
- (id)indexesOfUserVisibleInRange:(struct _NSRange)arg1;
- (id)indexesOfVisibleInRange:(struct _NSRange)arg1;
- (id)indexesOfCollapsedInRange:(struct _NSRange)arg1;
- (id)indexesOfFilteredInRange:(struct _NSRange)arg1;
- (id)indexesOfUserHiddenInRange:(struct _NSRange)arg1;
- (id)indexesOfHiddenInBaseRange:(struct _NSRange)arg1;
- (id)indexesOfHiddenInRange:(struct _NSRange)arg1;
- (unsigned char)hidingActionForBaseIndex:(struct TSUModelColumnOrRowIndex)arg1;
- (unsigned char)hidingActionForViewIndex:(struct TSUViewColumnOrRowIndex)arg1;
- (void)invalidateAllCollapsed;
- (void)clearAllPivotHidden;
- (void)clearAllFiltered;
- (_Bool)showAtBaseIndex:(struct TSUModelColumnOrRowIndex)arg1 forAction:(unsigned char)arg2;
- (_Bool)hideAtBaseIndex:(struct TSUModelColumnOrRowIndex)arg1 forAction:(unsigned char)arg2;
- (void)showAtViewIndexes:(id)arg1 forAction:(unsigned char)arg2;
- (void)hideAtViewIndexes:(id)arg1 forAction:(unsigned char)arg2;
- (_Bool)showAtViewIndex:(struct TSUViewColumnOrRowIndex)arg1 forAction:(unsigned char)arg2;
- (_Bool)hideAtViewIndex:(struct TSUViewColumnOrRowIndex)arg1 forAction:(unsigned char)arg2;
- (id)userHiddenIndexes;
- (id)filteredIndexes;
- (id)p_hiddenIndexes;
- (id)collapsedIndexes;
- (void)clearInvalidIndexes;
- (void)loadIndexesFromTable:(id)arg1;
@property(readonly, nonatomic) unsigned int numberOfUserHidden;
@property(readonly, nonatomic) unsigned int numberOfHidden;
@property(readonly, nonatomic) _Bool anyUserHidden;
@property(readonly, nonatomic) _Bool anyCollapsed;
@property(readonly, nonatomic) _Bool anyHidden;
- (void)removeUid:(const struct TSKUIDStruct *)arg1;
- (unsigned char)hidingActionForUid:(const struct TSKUIDStruct *)arg1 viewRcIndex:(struct TSUViewColumnOrRowIndex)arg2;
- (_Bool)showAtUid:(const struct TSKUIDStruct *)arg1 forIndex:(struct TSUModelColumnOrRowIndex)arg2 forViewIndex:(struct TSUViewColumnOrRowIndex)arg3 forAction:(unsigned char)arg4;
- (_Bool)showAtUid:(const struct TSKUIDStruct *)arg1 forAction:(unsigned char)arg2;
- (_Bool)hideAtUid:(const struct TSKUIDStruct *)arg1 forIndex:(struct TSUModelColumnOrRowIndex)arg2 forViewIndex:(struct TSUViewColumnOrRowIndex)arg3 forAction:(unsigned char)arg4;
- (_Bool)hideAtUid:(const struct TSKUIDStruct *)arg1 forAction:(unsigned char)arg2;
- (void)removeHiddenIndex:(struct TSUModelColumnOrRowIndex)arg1 viewIndex:(struct TSUViewColumnOrRowIndex)arg2 forAction:(unsigned char)arg3;
- (void)addHiddenIndex:(struct TSUModelColumnOrRowIndex)arg1 viewIndex:(struct TSUViewColumnOrRowIndex)arg2 forAction:(unsigned char)arg3;
- (struct TSUViewColumnOrRowIndex)viewIndexForBaseIndex:(struct TSUModelColumnOrRowIndex)arg1;
- (struct TSUModelColumnOrRowIndex)baseIndexForViewIndex:(struct TSUViewColumnOrRowIndex)arg1;
- (void)willChangeGroupByTo:(id)arg1;
- (void)syncUpHiddenStateFormulaOwnerUIDs;
- (void)setupAfterUnarchive;
- (id)tableTranslator;
@property(readonly, nonatomic) TSTTableInfo *tableInfo;
- (void)dealloc;
- (id)initWithHiddenStatesOwner:(id)arg1 forRows:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

