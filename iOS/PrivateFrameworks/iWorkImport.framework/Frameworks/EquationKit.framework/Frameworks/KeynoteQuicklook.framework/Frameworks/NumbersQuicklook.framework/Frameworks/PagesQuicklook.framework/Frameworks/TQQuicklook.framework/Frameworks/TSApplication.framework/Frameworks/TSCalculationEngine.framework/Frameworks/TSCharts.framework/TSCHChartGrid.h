//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, NSMutableDictionary;
@protocol TSCHNotifyOnModify;

@interface TSCHChartGrid : NSObject
{
    int _direction;
    _Bool _dirty;
    NSMutableArray *_rowNames;
    NSMutableArray *_columnNames;
    NSMutableArray *_values;
    NSMutableArray *_mutableRowIds;
    NSMutableArray *_mutableColumnIds;
    _Bool _addingMultipleRows;
    _Bool _addingMultipleCols;
    _Bool _skipUUIDAssertions;
    id <TSCHNotifyOnModify> _objectToNotify;
    NSMutableDictionary *_rowIdToIndexMap;
    NSMutableDictionary *_columnIdToIndexMap;
    unsigned long long _nextRowNumber;
    unsigned long long _nextColNumber;
    unsigned long long _transitionLevel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableArray *mutableColumnIds; // @synthesize mutableColumnIds=_mutableColumnIds;
@property(retain, nonatomic) NSMutableArray *mutableRowIds; // @synthesize mutableRowIds=_mutableRowIds;
@property(retain, nonatomic) NSMutableArray *values; // @synthesize values=_values;
@property(retain, nonatomic) NSMutableArray *columnNames; // @synthesize columnNames=_columnNames;
@property(retain, nonatomic) NSMutableArray *rowNames; // @synthesize rowNames=_rowNames;
@property(nonatomic) _Bool skipUUIDAssertions; // @synthesize skipUUIDAssertions=_skipUUIDAssertions;
@property(nonatomic) unsigned long long transitionLevel; // @synthesize transitionLevel=_transitionLevel;
@property(nonatomic) unsigned long long nextColNumber; // @synthesize nextColNumber=_nextColNumber;
@property(nonatomic) _Bool addingMultipleCols; // @synthesize addingMultipleCols=_addingMultipleCols;
@property(nonatomic) unsigned long long nextRowNumber; // @synthesize nextRowNumber=_nextRowNumber;
@property(nonatomic) _Bool addingMultipleRows; // @synthesize addingMultipleRows=_addingMultipleRows;
@property(retain, nonatomic) NSMutableDictionary *columnIdToIndexMap; // @synthesize columnIdToIndexMap=_columnIdToIndexMap;
@property(retain, nonatomic) NSMutableDictionary *rowIdToIndexMap; // @synthesize rowIdToIndexMap=_rowIdToIndexMap;
@property(nonatomic) _Bool dirty; // @synthesize dirty=_dirty;
@property(nonatomic) int direction; // @synthesize direction=_direction;
@property(nonatomic) __weak id <TSCHNotifyOnModify> objectToNotify; // @synthesize objectToNotify=_objectToNotify;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (id)gridAdapterForColumnConstant;
- (id)gridAdapterForRowConstant;
- (id)gridAdapterForColumnCount;
- (id)gridAdapterForRowCount;
- (id)gridAdapterForColumn:(unsigned long long)arg1;
- (id)gridAdapterForRow:(unsigned long long)arg1;
- (void)takeDataFromDictionary:(id)arg1 rowIds:(id)arg2 columnIds:(id)arg3;
- (void)takeDataFromDictionary:(id)arg1;
- (void)insertColumnNames:(id)arg1 at:(unsigned long long)arg2 withIds:(id)arg3;
- (void)insertRowsNames:(id)arg1 at:(unsigned long long)arg2 withIds:(id)arg3;
- (void)insertColumnsAt:(unsigned long long)arg1 names:(id)arg2 data:(id)arg3 withIds:(id)arg4;
- (void)insertRowsAt:(unsigned long long)arg1 names:(id)arg2 data:(id)arg3 withIds:(id)arg4;
- (id)extractGridValuesReturningRowNames:(id *)arg1 rowIds:(id *)arg2 columnNames:(id *)arg3 columnIds:(id *)arg4;
- (id)extractColumnNames:(struct _NSRange)arg1 returningColumnIds:(id *)arg2 valueColumns:(id *)arg3;
- (id)extractRowNames:(struct _NSRange)arg1 returningRowIds:(id *)arg2 valueRows:(id *)arg3;
- (void)moveColumns:(struct _NSRange)arg1 afterColumn:(long long)arg2;
- (void)moveRows:(struct _NSRange)arg1 afterRow:(long long)arg2;
- (void)setValue:(id)arg1 forRow:(unsigned long long)arg2 column:(unsigned long long)arg3;
- (void)removeColumn:(unsigned long long)arg1;
- (void)removeRow:(unsigned long long)arg1;
- (void)setNameForColumn:(unsigned long long)arg1 toName:(id)arg2;
- (void)setNameForRow:(unsigned long long)arg1 toName:(id)arg2;
- (void)insertColumn:(unsigned long long)arg1 withName:(id)arg2 withId:(id)arg3;
- (void)insertRow:(unsigned long long)arg1 withName:(id)arg2 withId:(id)arg3;
- (void)decrementTransitionLevel;
- (void)incrementTransitionLevel;
- (void)setColumnIds:(id)arg1;
- (void)setRowIds:(id)arg1;
- (void)p_updateIdMapStartingAtIndex:(unsigned long long)arg1 isRow:(_Bool)arg2;
- (void)p_updateColumnMapStartingAtIndex:(unsigned long long)arg1;
- (void)p_updateRowMapStartingAtIndex:(unsigned long long)arg1;
- (void)p_updateColumnIndexMap;
- (void)p_updateRowIndexMap;
- (void)updateRowAndColumnIndexMaps;
- (id)p_uuidsForColumns:(struct _NSRange)arg1;
- (id)p_uuidsForRows:(struct _NSRange)arg1;
- (id)createUUIDArrayWithCount:(unsigned long long)arg1;
- (id)createUUID;
- (void)validateRowColumnIdMapsAndFix:(_Bool)arg1;
- (void)generateRowColumnIdMaps;
- (void)adjustRowAndColumnNameListLength;
- (void)p_adjustNameListLength:(_Bool)arg1;
- (id)getNewRowNameForLocale:(id)arg1;
- (id)getNewColumnNameForLocale:(id)arg1;
- (void)addingMultipleCols:(_Bool)arg1;
- (void)addingMultipleRows:(_Bool)arg1;
- (_Bool)p_name:(id)arg1 isInArray:(id)arg2;
- (id)description;
- (unsigned long long)columnIndexForColumnId:(id)arg1;
- (unsigned long long)rowIndexForRowId:(id)arg1;
- (id)columnIdForColumn:(unsigned long long)arg1;
- (id)rowIdForRow:(unsigned long long)arg1;
- (id)valueForRow:(unsigned long long)arg1 column:(unsigned long long)arg2;
- (id)nameForColumn:(unsigned long long)arg1;
- (id)nameForRow:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long numberOfColumns;
@property(readonly, nonatomic) unsigned long long numberOfRows;
- (unsigned long long)noAssertNumberOfColumns;
- (unsigned long long)noAssertNumberOfRows;
@property(readonly, nonatomic) NSArray *columnIds;
@property(readonly, nonatomic) NSArray *rowIds;
- (void)willModify;
- (_Bool)contentsEqualToGrid:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)loadFromPreUFFArchive:(const void *)arg1;
- (void)insertColumn:(unsigned long long)arg1 withName:(id)arg2;
- (void)insertRow:(unsigned long long)arg1 withName:(id)arg2;
- (void)saveToUnityArchive:(void *)arg1 forCopy:(_Bool)arg2;
- (void)loadFromUnityArchive:(const void *)arg1 chartInfo:(id)arg2;

@end

