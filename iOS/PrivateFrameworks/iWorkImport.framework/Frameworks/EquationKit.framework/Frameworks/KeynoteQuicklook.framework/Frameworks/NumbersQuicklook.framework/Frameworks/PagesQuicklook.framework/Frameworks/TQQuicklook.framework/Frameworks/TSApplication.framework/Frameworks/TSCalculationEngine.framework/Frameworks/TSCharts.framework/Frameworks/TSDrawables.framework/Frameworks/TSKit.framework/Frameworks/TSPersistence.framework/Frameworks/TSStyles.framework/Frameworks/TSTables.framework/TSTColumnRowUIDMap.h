//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSPersistence/TSPObject.h>

@class TSTColumnRowUIDMapper;

@interface TSTColumnRowUIDMap : TSPObject
{
    TSKUIDStructVectorTemplate_de88e035 _columnUidForIndex;
    TSKUIDStructVectorTemplate_de88e035 _rowUidForIndex;
    struct unordered_map<TSKUIDStruct, unsigned short, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned short>>> _columnIndexForUid;
    struct unordered_map<TSKUIDStruct, unsigned int, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned int>>> _rowIndexForUid;
    unsigned long long _versionCounter;
    TSTColumnRowUIDMapper *_copyOnWriteUIDMapper;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long versionCounter; // @synthesize versionCounter=_versionCounter;
- (_Bool)_checkStructure;
- (struct TSCERangeCoordinate)tableRangeCoordinate;
- (void)assertCollaborationConvergence;
- (void)convertCellUIDLookupList:(id)arg1 toCellRangeVector:(void *)arg2 prunedSummaryCellUIDs:(void *)arg3;
- (_Bool)writeCellIDsInCellUIDList:(id)arg1 toVector:(void *)arg2 prunedCellUIDs:(void *)arg3;
- (void)applyMap:(const void *)arg1 toRows:(_Bool)arg2;
- (void)reset;
- (_Bool)isEmpty;
- (void)swapRowAtIndex:(unsigned int)arg1 withRowAtIndex:(unsigned int)arg2;
- (void)insertRowsWithUIDs:(const void *)arg1 atIndex:(unsigned int)arg2;
- (void)insertColumnsWithUIDs:(const void *)arg1 atIndex:(unsigned short)arg2;
- (void)insertNewColumnsInIndexRange:(struct _NSRange)arg1;
- (void)insertNewRowsInIndexRange:(struct _NSRange)arg1;
- (void)replaceColumnsWithUids:(const void *)arg1;
- (void)replaceRowsWithUids:(const void *)arg1;
- (void)removeColumnsAtIndexes:(id)arg1;
- (void)removeRowsAtIndexes:(id)arg1;
- (void)moveColumnIndexRange:(struct _NSRange)arg1 toIndex:(unsigned short)arg2;
- (void)moveRowIndexRange:(struct _NSRange)arg1 toIndex:(unsigned int)arg2;
- (id)uidRectRefForCellTractRef:(id)arg1;
- (id)cellTractRefForUIDRectRef:(id)arg1;
- (id)cellRegionForUIDRange:(const void *)arg1;
- (struct TSKUIDStructTract)cellUIDRangeForCellRange:(struct TSUCellRect)arg1;
- (struct TSUCellRect)cellRangeForUIDRange:(const void *)arg1;
- (TSKUIDStructVectorTemplate_de88e035)prunedRowUIDsFromRowUIDs:(const void *)arg1;
- (TSKUIDStructVectorTemplate_de88e035)prunedColumnUIDsFromColumnUIDs:(const void *)arg1;
- (struct TSUCellCoord)cellIDForCellUID:(struct TSKUIDStructCoord)arg1;
- (struct TSKUIDStructCoord)cellUIDForCellID:(struct TSUCellCoord)arg1;
- (struct _NSRange)rowRangeForUIDs:(const void *)arg1;
- (struct _NSRange)columnRangeForUIDs:(const void *)arg1;
- (id)rowIndexesForUIDs:(const void *)arg1;
- (id)mutableRowIndexesForUIDs:(const void *)arg1;
- (id)columnIndexesForUIDs:(const void *)arg1;
- (id)mutableColumnIndexesForUIDs:(const void *)arg1;
- (struct TSKUIDStruct)firstUidFromUIDSet:(id)arg1 isRows:(_Bool)arg2;
- (id)mutableIndexesForUIDSet:(id)arg1 isRows:(_Bool)arg2;
- (id)p_mutableRowIndexesForUIDSet:(id)arg1 notFoundUIDs:(id)arg2;
- (id)p_mutableColumnIndexesForUIDSet:(id)arg1 notFoundUIDs:(id)arg2;
- (id)mutableIndexesForUIDSet:(id)arg1 isRows:(_Bool)arg2 notFoundUIDs:(id)arg3;
- (id)UIDSetForIndexes:(id)arg1 isRows:(_Bool)arg2;
@property(readonly, nonatomic) unsigned int numberOfRows;
@property(readonly, nonatomic) unsigned short numberOfColumns;
- (TSKUIDStructVectorTemplate_de88e035)orderedRowUidsFromUids:(const void *)arg1;
- (TSKUIDStructVectorTemplate_de88e035)orderedColumnUidsFromUids:(const void *)arg1;
- (TSKUIDStructVectorTemplate_de88e035)rowUIDsForRowRange:(struct _NSRange)arg1;
- (TSKUIDStructVectorTemplate_de88e035)columnUIDsForColumnRange:(struct _NSRange)arg1;
- (struct TSUCellRect)range;
- (const void *)rowUIDs;
- (const void *)columnUIDs;
- (TSKUIDStructVectorTemplate_de88e035)rowUIDsForRowIndexes:(id)arg1;
- (TSKUIDStructVectorTemplate_de88e035)columnUIDsForColumnIndexes:(id)arg1;
- (unsigned short)columnIndexForUUIDBytes:(unsigned char [16])arg1;
- (unsigned int)rowIndexForUUIDBytes:(unsigned char [16])arg1;
- (void)getUUIDBytes:(unsigned char [16])arg1 forColumnIndex:(unsigned short)arg2;
- (void)getUUIDBytes:(unsigned char [16])arg1 forRowIndex:(unsigned int)arg2;
- (id)rowUuids;
- (id)columnUuids;
- (unsigned int)rowIndexForRowUID:(struct TSKUIDStruct)arg1;
- (unsigned short)columnIndexForColumnUID:(struct TSKUIDStruct)arg1;
- (struct TSKUIDStruct)rowUIDForRowIndex:(unsigned int)arg1;
- (struct TSKUIDStruct)columnUIDForColumnIndex:(unsigned short)arg1;
- (id)copyOnWriteUIDMapper;
- (void)incrementVersionCounter;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 columnUIDs:(const void *)arg2 rowUIDs:(const void *)arg3;
- (id)initWithContext:(id)arg1 tableUUID:(id)arg2 numberOfRows:(unsigned int)arg3 numberOfColumns:(unsigned int)arg4;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;

@end

