//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class TSCECalculationEngine, TSTColumnAggregateList, TSTGroupBy, TSTGroupingColumnList, TSTHiddenStates, TSTTableFilterSet, TSTTableModel;

@interface TSTGroupBySet : NSObject
{
    struct vector<TSTGroupBy *, std::allocator<TSTGroupBy *>> _inUseGroupBys;
    TSCECalculationEngine *_calcEngine;
    TSTHiddenStates *_hiddenStates;
    TSKUIDStructVectorTemplate_de88e035 _aggregateUidList;
    struct unordered_map<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>> _aggregateUidMap;
    TSKUIDStructVectorTemplate_de88e035 _allColumnGroupUids;
    TSKUIDStructVectorTemplate_de88e035 _baseColumnGroupUids;
    TSKUIDStructVectorTemplate_de88e035 _summaryColumnGroupUids;
    TSKUIDStructVectorTemplate_de88e035 _allRowGroupUids;
    TSKUIDStructVectorTemplate_de88e035 _baseRowGroupUids;
    TSKUIDStructVectorTemplate_de88e035 _summaryRowGroupUids;
    TSKUIDStructVectorTemplate_de88e035 _allFlattenedUids;
    TSKUIDStructVectorTemplate_de88e035 _baseFlattenedUids;
    struct unordered_map<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>> _groupAggregateUidFlatteningMap;
    struct unordered_map<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>> _groupAggregateUidUnflatteningMap;
    _Bool _isRegisteredWithCalcEngine;
    struct vector<TSUIndexSet, std::allocator<TSUIndexSet>> _assertedOnMissingCombinations;
    TSTTableFilterSet *_filterSet;
    TSTTableModel *_pivotDataTable;
    TSTGroupingColumnList *_columnGroupings;
    TSTGroupingColumnList *_rowGroupings;
    TSTColumnAggregateList *_aggregates;
    long long _flatteningDimension;
    long long _activeFlatteningDimension;
    TSTGroupingColumnList *_bodyGroupingList;
    struct TSKUIDStruct _pivotTableUID;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) TSTGroupingColumnList *bodyGroupingList; // @synthesize bodyGroupingList=_bodyGroupingList;
@property(readonly, nonatomic) long long activeFlatteningDimension; // @synthesize activeFlatteningDimension=_activeFlatteningDimension;
@property(readonly, nonatomic) long long flatteningDimension; // @synthesize flatteningDimension=_flatteningDimension;
@property(readonly, nonatomic) TSTColumnAggregateList *aggregates; // @synthesize aggregates=_aggregates;
@property(readonly, nonatomic) TSTGroupingColumnList *rowGroupings; // @synthesize rowGroupings=_rowGroupings;
@property(readonly, nonatomic) TSTGroupingColumnList *columnGroupings; // @synthesize columnGroupings=_columnGroupings;
@property(readonly, nonatomic) _Bool isRegisteredWithCalcEngine; // @synthesize isRegisteredWithCalcEngine=_isRegisteredWithCalcEngine;
@property(readonly, nonatomic) TSTTableModel *pivotDataTable; // @synthesize pivotDataTable=_pivotDataTable;
@property(nonatomic) struct TSKUIDStruct pivotTableUID; // @synthesize pivotTableUID=_pivotTableUID;
@property(retain, nonatomic) TSTHiddenStates *hiddenStates; // @synthesize hiddenStates=_hiddenStates;
@property(retain, nonatomic) TSCECalculationEngine *calcEngine; // @synthesize calcEngine=_calcEngine;
@property(copy, nonatomic) TSTTableFilterSet *filterSet; // @synthesize filterSet=_filterSet;
- (_Bool)verifyConnectionsWithPivotDataModel:(id)arg1 pivotTableUID:(struct TSKUIDStruct)arg2;
- (id)duplicateFilterSet;
- (id)groupValueTupleForUuidCoord:(const struct TSKUIDStructCoord *)arg1 createIfMissing:(_Bool)arg2;
- (id)groupNodeForUuidCoord:(const struct TSKUIDStructCoord *)arg1;
- (id)groupByForUuidCoord:(const struct TSKUIDStructCoord *)arg1;
- (void)getHidingIndexesForGrandTotalsForPivotTable:(id)arg1 columns:(id)arg2 rows:(id)arg3;
- (void)getPivotHidingIndexesForGroupingColumn:(const struct TSKUIDStruct *)arg1 columns:(id)arg2 rows:(id)arg3 forHiding:(_Bool)arg4 forPivotTable:(id)arg5;
- (id)filteringCategoryRefAt:(const struct TSKUIDStruct *)arg1 forDimension:(long long)arg2;
- (_Bool)hasUnfilteredAt:(const struct TSKUIDStruct *)arg1 forDimension:(long long)arg2;
- (id)restrictRowIndexes:(id)arg1 forAggrIndexLevel:(unsigned short)arg2 forPivotTable:(id)arg3;
- (id)restrictColumnIndexes:(id)arg1 forAggrIndexLevel:(unsigned short)arg2 forPivotTable:(id)arg3;
- (id)restrictRowIndexes:(id)arg1 toRowGroupLevel:(unsigned char)arg2 forPivotTable:(id)arg3;
- (id)restrictColumnIndexes:(id)arg1 toColumnGroupLevel:(unsigned char)arg2 forPivotTable:(id)arg3;
- (id)percentRunningDenominatorCategoryRefFor:(id)arg1 inGroupBy:(id)arg2 runningOnColumnUid:(const struct TSKUIDStruct *)arg3 forAggregate:(id)arg4;
- (id)percentParentDenominatorCategoryRefFor:(id)arg1 inGroupBy:(id)arg2 forAggregate:(id)arg3 forShowAsType:(unsigned char)arg4;
- (id)grandTotalCategoryRefForRow:(const struct TSKUIDStruct *)arg1 forAggregate:(id)arg2;
- (id)grandTotalCategoryRefForColumn:(const struct TSKUIDStruct *)arg1 forAggregate:(id)arg2;
- (id)firstAggregate;
- (id)grandGrandTotalCategoryRefForAggregate:(id)arg1;
- (id)findExistingGroupNodeInGroupBy:(id)arg1 usingValues:(const void *)arg2 upToLevel:(unsigned long long)arg3;
- (struct TSUIndexSet)pivotDataModelRowIndexesNeededForCell:(const struct TSKUIDStructCoord *)arg1;
- (id)getPivotDataBundleForUidCoord:(const struct TSKUIDStructCoord *)arg1;
- (id)getPivotDataBundleForUidCoord:(const struct TSKUIDStructCoord *)arg1 upToLevel:(unsigned char)arg2;
- (id)categoryRefForUidCoord:(const struct TSKUIDStructCoord *)arg1 outShowAsType:(unsigned char *)arg2;
- (unsigned char)rowGroupLevelForRowUID:(const struct TSKUIDStruct *)arg1;
- (unsigned char)columnGroupLevelForColumnUID:(const struct TSKUIDStruct *)arg1;
- (struct TSKUIDStruct)columnUIDForGroupingColumnName:(id)arg1;
- (unsigned short)aggregateIndexForAggName:(id)arg1 locale:(id)arg2;
- (id)compactQualifiedColumnNameForAggregateIndex:(unsigned long long)arg1 useShortLabel:(_Bool)arg2 allowDuplicateNames:(_Bool)arg3 locale:(id)arg4;
- (id)compactQualifiedColumnNameForAggregateIndex:(unsigned long long)arg1 locale:(id)arg2;
- (id)qualifiedColumnNameForAggregateIndex:(unsigned long long)arg1 useShortLabel:(_Bool)arg2 allowDuplicateNames:(_Bool)arg3 locale:(id)arg4;
- (id)qualifiedColumnNameForAggregateIndex:(unsigned long long)arg1 locale:(id)arg2;
- (id)columnNameForAggregateIndex:(unsigned long long)arg1 allowDuplicateNames:(_Bool)arg2;
- (id)aggregateForUidCoord:(const struct TSKUIDStructCoord *)arg1;
- (unsigned short)aggregateIndexForUidCoord:(const struct TSKUIDStructCoord *)arg1;
- (unsigned long long)aggregateIndexForRowUid:(const struct TSKUIDStruct *)arg1;
- (unsigned long long)aggregateIndexForColumnUid:(const struct TSKUIDStruct *)arg1;
- (id)expandGroupUidsForFlattening:(id)arg1 forDimension:(long long)arg2;
- (struct TSKUIDStruct)rowGroupUidForRowUid:(const struct TSKUIDStruct *)arg1 outAggregateIndex:(unsigned long long *)arg2;
- (struct TSKUIDStruct)columnGroupUidForColumnUid:(const struct TSKUIDStruct *)arg1 outAggregateIndex:(unsigned long long *)arg2;
@property(readonly, nonatomic) _Bool hasRunningTotalAggregates;
- (const void *)rowUidsForRowGroupUid:(const struct TSKUIDStruct *)arg1;
- (const void *)columnUidsForColumnGroupUid:(const struct TSKUIDStruct *)arg1;
- (const void *)baseRowUids;
- (const void *)baseColumnUids;
- (const void *)allRowUids;
- (const void *)allColumnUids;
- (const void *)summaryRowGroupUids;
- (const void *)summaryColumnGroupUids;
- (const void *)baseRowGroupUids;
- (const void *)baseColumnGroupUids;
- (const void *)allRowGroupUids;
- (const void *)allColumnGroupUids;
@property(readonly, nonatomic) unsigned long long rowAggregateGroupSize;
@property(readonly, nonatomic) unsigned long long columnAggregateGroupSize;
- (vector_57ec1851)allGroupRoots;
- (id)groupByForOwnerIndex:(unsigned short)arg1 createIfMissing:(_Bool)arg2;
- (_Bool)sawMissingCombination:(const struct TSUIndexSet *)arg1;
- (void)clearMissingCombinations;
- (unsigned short)ownerIndexForGroupingCombination:(const struct TSUIndexSet *)arg1;
- (id)groupingColumnForIndex:(unsigned long long)arg1;
- (long long)groupingIndexForColumnUID:(const struct TSKUIDStruct *)arg1;
- (id)groupingColumnsForOwnerIndex:(unsigned short)arg1;
- (vector_2056c7c2)groupColumnIndexesForOwnerIndex:(unsigned short)arg1;
- (unsigned short)maxGroupByIndex;
- (unsigned long long)numPracticalGroupBys;
@property(readonly, nonatomic) TSTGroupBy *groupByForRowGroups;
@property(readonly, nonatomic) TSTGroupBy *groupByForColumnGroups;
- (id)groupByForColumnLevel:(unsigned char)arg1 rowLevel:(unsigned char)arg2;
- (void)p_resetAllGroupUids:(void *)arg1 baseGroupUids:(void *)arg2 summaryGroupUids:(void *)arg3 forGroupBy:(id)arg4 uptoLevel:(unsigned char)arg5 isFlattening:(_Bool)arg6;
- (void)resetGroupingList;
- (void)setPivotRulesWithPivotDataTable:(id)arg1 columnGroupings:(id)arg2 rowGroupings:(id)arg3 aggregates:(id)arg4 flatteningDimension:(long long)arg5;
- (void)restoreFromPivotDataTable:(id)arg1 columnGroupings:(id)arg2 rowGroupings:(id)arg3 aggregates:(id)arg4 flatteningDimension:(long long)arg5;
- (id)description;
@property(readonly, nonatomic) struct TSKUIDStruct pivotDataTableUID;
- (void)unregisterFromCalcEngine;
- (int)linkToCalcEngine:(id)arg1;
- (int)registerWithCalcEngine:(id)arg1 baseOwnerUID:(const struct TSKUIDStruct *)arg2;
- (id)initWithPivotTableUID:(const struct TSKUIDStruct *)arg1;

@end

