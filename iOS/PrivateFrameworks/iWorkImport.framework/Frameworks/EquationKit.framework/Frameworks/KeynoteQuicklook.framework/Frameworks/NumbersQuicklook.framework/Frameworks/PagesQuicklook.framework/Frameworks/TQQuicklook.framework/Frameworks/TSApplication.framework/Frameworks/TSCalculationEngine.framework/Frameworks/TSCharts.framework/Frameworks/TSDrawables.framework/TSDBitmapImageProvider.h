//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSMutableDictionary, NSObject, TSUOnce;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface TSDBitmapImageProvider
{
    struct CGImageSource *mImageSource;
    struct CGImage *mImage;
    struct CGImage *mLargestSafeImage;
    NSMutableDictionary *mResampledImages;
    unsigned long long mImageGamut;
    struct CGSize mNaturalSize;
    long long mOrientation;
    _Bool mIsOpaque;
    _Bool mIsValid;
    unsigned long long mValidationStatus;
    _Bool mIsRawImage;
    unsigned long long mDPI;
    NSObject<OS_dispatch_queue> *mImageQueue;
    TSUOnce *mCheckIfValidOnce;
    NSObject<OS_dispatch_semaphore> *mFlushableContentLock;
    _Bool mHasFlushableContent;
    unsigned long long mEstimatedSize;
}

+ (struct CGSize)naturalSizeForImageData:(id)arg1;
+ (id)TSUImageForImageData:(id)arg1;
+ (struct CGImage *)CGImageForImageData:(id)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long validationStatus; // @synthesize validationStatus=mValidationStatus;
@property(readonly, nonatomic) struct CGImageSource *CGImageSource;
- (struct CGImageSource *)p_newImageOfSize:(struct CGSize)arg1;
- (struct CGImage *)p_newImageOfSize:(struct CGSize)arg1 fromSource:(struct CGImageSource *)arg2;
- (struct CGImageSource *)p_newCGImageSourceForTemporaryUse;
- (void)p_configureRawBehaviorFromImageSource:(struct CGImageSource *)arg1;
- (void)p_configureOrientationAndSizeFromImageSource:(struct CGImageSource *)arg1 andImage:(struct CGImage *)arg2;
- (struct CGImage *)p_newImageFromSource:(struct CGImageSource *)arg1;
- (struct CGImageSource *)p_newCGImageSource;
- (void)p_loadSourceRefIfNecessary;
- (void)p_loadLargestSafeImageIfNecessary;
- (void)p_loadFullSizedImageIfNecessary;
- (void)p_loadImageMetadata;
- (void)p_updateEstimatedSize;
- (unsigned long long)i_flushableMemoryEstimate;
- (_Bool)i_hasFlushableContent;
- (void)flush;
- (_Bool)p_shouldScaleRetinaImages;
- (struct CGSize)dpiAdjustedNaturalSize;
@property(readonly, nonatomic) struct CGSize dpiAdjustedFillSize;
@property(readonly, nonatomic) unsigned long long imageDPI;
- (unsigned long long)imageGamut;
@property(readonly, nonatomic) _Bool isOpaque;
@property(readonly, nonatomic) long long orientation;
- (struct CGImage *)p_resampledImageOfReciprocalScale:(unsigned long long)arg1;
- (struct CGImage *)p_createResampledImageWithReciprocalScale:(unsigned long long)arg1;
- (struct CGImage *)CGImageResampledToSize:(struct CGSize)arg1 lowQuality:(_Bool)arg2;
- (long long)p_reciprocalScaleForImageSize:(struct CGSize)arg1;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1 inContext:(struct CGContext *)arg2 orContentsScaleProvider:(id)arg3;
- (struct CGImage *)CGImageForNaturalSize;
@property(readonly, nonatomic) struct CGImage *CGImageOfLargestSafeSize;
@property(readonly, nonatomic) struct CGImage *CGImageOfAnySize;
- (void)drawImageInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (_Bool)isValid;
- (struct CGSize)naturalSize;
- (void)dealloc;
- (void)i_commonInit;

@end

