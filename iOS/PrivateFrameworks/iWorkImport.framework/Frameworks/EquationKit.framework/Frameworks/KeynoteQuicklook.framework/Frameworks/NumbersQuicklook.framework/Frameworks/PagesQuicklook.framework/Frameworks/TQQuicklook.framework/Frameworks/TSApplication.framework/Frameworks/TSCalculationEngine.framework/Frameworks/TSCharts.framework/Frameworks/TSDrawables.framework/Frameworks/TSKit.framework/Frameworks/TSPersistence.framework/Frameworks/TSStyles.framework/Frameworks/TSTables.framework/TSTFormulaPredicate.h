//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate, NSString, TSCEFormulaObject, TSTFormulaPredArg;

@interface TSTFormulaPredicate : NSObject
{
    TSCEFormulaObject *_formula;
    unsigned char _predicateType;
    unsigned char _qualifier1;
    unsigned char _qualifier2;
    short _argIndex0;
    short _argIndex1;
    short _argIndex2;
    TSTFormulaPredArg *_predArg0;
    TSTFormulaPredArg *_predArg1;
    TSTFormulaPredArg *_predArg2;
    _Bool _forConditionalStyle;
    struct TSCEUidCellRef _hostCellRef;
}

+ (_Bool)isThresholdNeededForType:(unsigned char)arg1;
+ (id)defaultPredicateForType:(unsigned char)arg1 argumentCellReference:(id)arg2 hostCell:(struct TSUCellCoord)arg3;
+ (id)defaultPredicateForType:(unsigned char)arg1 argumentCellRef:(struct TSCECellRef)arg2 hostCell:(struct TSUCellCoord)arg3;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) struct TSCEUidCellRef hostCellRef; // @synthesize hostCellRef=_hostCellRef;
@property(nonatomic) _Bool forConditionalStyle; // @synthesize forConditionalStyle=_forConditionalStyle;
@property(retain, nonatomic) TSTFormulaPredArg *predArg2; // @synthesize predArg2=_predArg2;
@property(retain, nonatomic) TSTFormulaPredArg *predArg1; // @synthesize predArg1=_predArg1;
@property(retain, nonatomic) TSTFormulaPredArg *predArg0; // @synthesize predArg0=_predArg0;
- (void)p_smokeTestThePredicate;
- (unsigned char)expectedArgTypeForPredicateType:(unsigned char)arg1 firstArg:(_Bool)arg2;
- (id)initFromArchive:(const void *)arg1;
- (void)encodeToArchive:(void *)arg1 archiver:(id)arg2;
- (id)initFromPrePivotArchive:(const void *)arg1;
- (void)encodeToPrePivotArchive:(void *)arg1 archiver:(id)arg2 encodingForSOS:(_Bool)arg3;
- (void)encodeToPrePivotArchive:(void *)arg1 archiver:(id)arg2;
- (id)downgradeForPrePivotFormatForLocale:(id)arg1;
@property(readonly, nonatomic) _Bool canDowngradeForPrePivotFormat;
@property(readonly, nonatomic) _Bool backwardCompatiblePrePivot;
- (void)upgradeTopAndBottom;
- (void)iterateFormulasWithContext:(struct TSCEFormulaRewriteContext *)arg1 shouldStop:(_Bool *)arg2 block:(CDUnknownBlockType)arg3;
- (id)copyByRewritingWithContext:(struct TSCEFormulaRewriteContext *)arg1 rewriteBlock:(CDUnknownBlockType)arg2;
- (id)copyByClearingUids:(id)arg1 containingTableUID:(const struct TSKUIDStruct *)arg2;
- (id)copyByUpdatingLinkedTable:(const struct TSKUIDStruct *)arg1 hostCell:(struct TSUCellCoord)arg2;
- (id)copyByUpgradingToLinkedRefForTable:(const struct TSKUIDStruct *)arg1 hostCell:(struct TSUCellCoord)arg2;
- (id)copyByOffsettingRelativeReferencesWithOffset:(struct TSUColumnRowOffset)arg1;
- (id)copyByRewritingWithSpec:(id)arg1 inOwner:(id)arg2 inCellCoordinate:(struct TSUCellCoord)arg3;
- (id)copyByConvertingChromeToBase:(id)arg1 inOwner:(id)arg2 inCellCoordinate:(struct TSUCellCoord)arg3;
- (id)copyByConvertingBaseToChrome:(id)arg1 inOwner:(id)arg2 inCellCoordinate:(struct TSUCellCoord)arg3;
- (id)copyByRemappingHostCellAgnosticOwnerUIDsWithMap:(const void *)arg1 rewriteContext:(struct TSCEFormulaRewriteContext *)arg2 error:(_Bool *)arg3;
- (void)rewriteFormulaWithBlock:(CDUnknownBlockType)arg1;
- (void)rewriteNumberToDurationForSageImport:(const struct TSCECellRef *)arg1 durationUnitLargest:(unsigned char)arg2;
- (void)remapOwnerUIDsWithMap:(const void *)arg1 rewriteContext:(struct TSCEFormulaRewriteContext *)arg2 error:(_Bool *)arg3;
- (id)copyByRemappingOwnerUIDsWithMap:(const void *)arg1 rewriteContext:(struct TSCEFormulaRewriteContext *)arg2 error:(_Bool *)arg3;
- (void)p_populateMembersFromFormula;
- (id)predicateArg2atBaseHostCoord:(struct TSUModelCellCoord)arg1 calcEngine:(id)arg2;
- (id)predicateArg1atBaseHostCoord:(struct TSUModelCellCoord)arg1 calcEngine:(id)arg2;
- (id)dataList1;
- (struct TSCECrossTableReference)crossTableRefParam2;
- (struct TSCECrossTableReference)crossTableRefParam1;
- (struct TSCENumberValue)durationParam2;
- (struct TSCENumberValue)durationParam1;
@property(readonly, nonatomic) NSDate *dateTimeParam2;
@property(readonly, nonatomic) NSDate *dateTimeParam1;
@property(readonly, nonatomic) NSString *stringParam1;
@property(readonly, nonatomic) double numberParam2;
@property(readonly, nonatomic) double numberParam1;
@property(readonly, nonatomic) unsigned char predArg2Type;
@property(readonly, nonatomic) unsigned char predArg1Type;
- (unsigned char)predArg0Type;
- (void)setArgumentAt:(long long)arg1 withPredArg:(id)arg2;
- (void)p_setQualifier2:(unsigned char)arg1;
- (void)p_setQualifier1:(unsigned char)arg1;
- (void)p_setPredicateType:(unsigned char)arg1;
@property(readonly, nonatomic) unsigned char qualifier2; // @synthesize qualifier2=_qualifier2;
@property(readonly, nonatomic) unsigned char qualifier1; // @synthesize qualifier1=_qualifier1;
@property(readonly, nonatomic) unsigned char predicateType; // @synthesize predicateType=_predicateType;
- (void)setFormula:(id)arg1;
@property(readonly, nonatomic) TSCEFormulaObject *formula;
- (_Bool)evaluateAtCellID:(struct TSUCellCoord)arg1 onOwnerUID:(const struct TSKUIDStruct *)arg2 calcEngine:(id)arg3;
- (_Bool)p_testDataTypesForArg0:(unsigned char)arg1 arg1:(unsigned char)arg2 arg2:(unsigned char)arg3 predShouldReturn:(_Bool *)arg4;
- (unsigned char)p_argTypeForPredArg:(id)arg1 argNum:(unsigned long long)arg2 calculationEngine:(id)arg3 hostCell:(struct TSUCellCoord)arg4;
- (void)getPrecedents:(void *)arg1 calcEngine:(id)arg2 hostOwnerUID:(const struct TSKUIDStruct *)arg3 hostCellID:(const struct TSUCellCoord *)arg4;
- (_Bool)hasBadRefWithUidInfo;
- (_Bool)containsUidReferences;
- (void)setHostCell:(const struct TSKUIDStruct *)arg1 hostColumnUID:(const struct TSKUIDStruct *)arg2 hostRowUID:(const struct TSKUIDStruct *)arg3;
- (id)copyToUidFormForConditionalStylesWithTableInfo:(id)arg1 containingCell:(struct TSUCellCoord)arg2 preserveHostCell:(_Bool)arg3;
- (id)copyToGeometricFormForHiddenRowsWithTableInfo:(id)arg1 containsBadRef:(_Bool *)arg2;
- (id)copyToUidFormForHiddenRowsWithTableInfo:(id)arg1;
- (id)copyToGeometricFormWithRewriteContext:(struct TSCEFormulaRewriteContext *)arg1;
- (id)copyToUidFormWithRewriteContext:(struct TSCEFormulaRewriteContext *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)recreateFormula;
- (_Bool)useColumnRefForArg0;
- (id)initWithLiteralTextType:(unsigned char)arg1 string:(id)arg2 argumentCellRef:(struct TSCECellRef)arg3 hostCell:(struct TSUCellCoord)arg4;
- (id)initWithLiteralDurationType:(unsigned char)arg1 duration1:(double)arg2 durationUnits1:(unsigned char)arg3 duration2:(double)arg4 durationUnits2:(unsigned char)arg5 qualifier:(unsigned char)arg6 argumentCellRef:(struct TSCECellRef)arg7 hostCell:(struct TSUCellCoord)arg8;
- (id)initWithLiteralNumberType:(unsigned char)arg1 number1:(double)arg2 number2:(double)arg3 qualifier:(unsigned char)arg4 argumentCellRef:(struct TSCECellRef)arg5 hostCell:(struct TSUCellCoord)arg6;
- (id)initWithLiteralDateType:(unsigned char)arg1 date1:(id)arg2 date2:(id)arg3 number1:(double)arg4 number2:(double)arg5 qualifier1:(unsigned char)arg6 qualifier2:(unsigned char)arg7 argumentCellRef:(struct TSCECellRef)arg8 hostCell:(struct TSUCellCoord)arg9;
- (id)initWithLiteralDateType:(unsigned char)arg1 date1:(id)arg2 date2:(id)arg3 number1:(double)arg4 number2:(double)arg5 qualifier1:(unsigned char)arg6 qualifier2:(unsigned char)arg7 argumentCellRef:(struct TSCECellRef)arg8 hostCell:(struct TSUCellCoord)arg9 forConditionalStyle:(_Bool)arg10;
- (struct TSCEFormulaCreator)p_creatorForPeriodBoundaryWithScale:(unsigned char)arg1 direction:(unsigned char)arg2 offset:(id)arg3 argIndex:(unsigned int)arg4 earlierBound:(_Bool)arg5 isCalPers:(_Bool)arg6;
- (id)initWithPredicateType:(unsigned char)arg1 arg1:(id)arg2 arg2:(id)arg3 qualifier1:(unsigned char)arg4 qualifier2:(unsigned char)arg5 argumentCellRef:(struct TSCECellRef)arg6 hostCell:(struct TSUCellCoord)arg7;
- (id)initWithPredicateType:(unsigned char)arg1 arg1:(id)arg2 arg2:(id)arg3 qualifier1:(unsigned char)arg4 qualifier2:(unsigned char)arg5 argumentCellReference:(id)arg6 hostCell:(struct TSUCellCoord)arg7 forConditionalStyle:(_Bool)arg8;
- (id)initWithPredicateType:(unsigned char)arg1 arg1:(id)arg2 arg2:(id)arg3 qualifier1:(unsigned char)arg4 qualifier2:(unsigned char)arg5 argumentCellRef:(struct TSCECellRef)arg6 hostCell:(struct TSUCellCoord)arg7 forConditionalStyle:(_Bool)arg8;
- (id)initWithPredicateType:(unsigned char)arg1 arg0:(id)arg2 arg1:(id)arg3 arg2:(id)arg4 qualifier1:(unsigned char)arg5 qualifier2:(unsigned char)arg6 forConditionalStyle:(_Bool)arg7;
- (_Bool)isEqualForInspector:(id)arg1 atHostCoordinate:(struct TSUCellCoord)arg2;
- (_Bool)isEqual:(id)arg1;
- (_Bool)p_isEqualForNonFormulaItems:(id)arg1;
- (unsigned long long)hash;
- (id)init;

@end

