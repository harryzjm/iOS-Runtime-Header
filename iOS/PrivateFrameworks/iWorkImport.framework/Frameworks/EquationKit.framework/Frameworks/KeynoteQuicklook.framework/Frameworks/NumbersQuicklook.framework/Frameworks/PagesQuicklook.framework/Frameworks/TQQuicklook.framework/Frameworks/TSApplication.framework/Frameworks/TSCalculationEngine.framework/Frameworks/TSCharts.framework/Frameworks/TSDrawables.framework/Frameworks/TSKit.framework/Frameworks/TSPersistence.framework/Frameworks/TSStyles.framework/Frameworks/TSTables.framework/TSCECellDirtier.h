//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate;

@interface TSCECellDirtier : NSObject
{
    void *_dependTracker;
    struct TSCEInternalCellReference _startCellRef;
    _Bool _dirtyingInProgress;
    struct os_unfair_lock_s _dirtyingLock;
    NSDate *_startTime;
    double _timeout;
    struct unordered_map<TSCEInternalCellReference, TSCECountedInternalCellRefSet, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, TSCECountedInternalCellRefSet>>> _dependentsToDirtyByFromRef;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) _Bool dirtyingInProgress; // @synthesize dirtyingInProgress=_dirtyingInProgress;
@property(readonly, nonatomic) struct TSCEInternalCellReference startCellRef; // @synthesize startCellRef=_startCellRef;
@property(readonly, nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(readonly, nonatomic) NSDate *startTime; // @synthesize startTime=_startTime;
@property(readonly, nonatomic) void *dependTracker; // @synthesize dependTracker=_dependTracker;
- (_Bool)dirtyNewCellRef:(const struct TSCEInternalCellReference *)arg1 forSeconds:(double)arg2 fromStartTime:(id)arg3;
- (_Bool)dirtyCellsForSeconds:(double)arg1 fromStartTime:(id)arg2;
- (_Bool)_dirtyCellsWithNoLockForSeconds:(double)arg1 fromStartTime:(id)arg2;
- (void)stopDirtyingCellRef;
- (void)startDirtyingCellRef;
- (void)dirtyCellsNow;
@property(readonly, nonatomic) _Bool isDoneDirtying;
- (void *)dependentsToDirtyByFromRef;
- (id)initWithDependencyTracker:(void *)arg1;

@end

