//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSCountedSet, NSIndexSet, NSMutableArray, NSMutableDictionary, NSMutableSet, NSPointerArray, NSString, TSDFill, TSDInfoGeometry, TSDLayoutGeometry, TSKChangeNotifier, TSTCellRegion, TSTCellSelection, TSTConcurrentMutableIndexSet, TSTDupContentCache, TSTFontInfoCache, TSTHiddenRowsColumnsCache, TSTLayout, TSTLayoutDynamicResizeInfo, TSTMergeRangeSortedSet, TSTStrokeDefaultVendor, TSTStrokeWidthCache, TSTTableInfo, TSTTextEngineDelegate, TSTTextStyleToFontHeightCache, TSTWPColumnCache, TSTWidthHeightCache, TSUColor, TSUWidthLimitedQueue, TSWPColumnStyle;
@protocol OS_dispatch_group, OS_dispatch_queue, TSTLayoutDynamicCellFillProtocol, TSTLayoutDynamicContentProtocol, TSWPStyleProviding;

@interface TSTLayoutEngine : NSObject
{
    struct vector<TSTStrokeLayerStack *, std::allocator<TSTStrokeLayerStack *>> _topRowStrokes;
    struct vector<TSTStrokeLayerStack *, std::allocator<TSTStrokeLayerStack *>> _bottomRowStrokes;
    struct vector<TSTStrokeLayerStack *, std::allocator<TSTStrokeLayerStack *>> _leftColumnStrokes;
    struct vector<TSTStrokeLayerStack *, std::allocator<TSTStrokeLayerStack *>> _rightColumnStrokes;
    struct vector<double, std::allocator<double>> _tableDefaultFontHeightForArea;
    NSObject<OS_dispatch_group> *_layoutInFlight;
    struct _opaque_pthread_rwlock_t _strokesRWLock;
    struct _opaque_pthread_rwlock_t _contentRWLock;
    struct os_unfair_lock_s _dynamicModeUnfairLock;
    _Bool _useBandedFill;
    _Bool _inDynamicLayoutMode;
    _Bool _dynamicBandedFill;
    _Bool _dynamicBandedFillSetting;
    _Bool _dynamicRepResize;
    _Bool _dynamicRepResizeSessionInProgress;
    _Bool _dynamicResizingColumns;
    _Bool _dynamicResizingRows;
    _Bool _emptyFilteredTable;
    _Bool _isGrouped;
    _Bool _processHiddenRowsForExport;
    _Bool _tableNameEnabled;
    _Bool _headerColumnsFrozen;
    _Bool _headerRowsFrozen;
    _Bool _headerColumnsRepeat;
    _Bool _headerRowsRepeat;
    _Bool _tableNameHeightValid;
    _Bool _bandedFillIsValid;
    _Bool _tableDefaultFontHeightsAreValid;
    _Bool _dynamicRepressFrozenHeaderRows;
    _Bool _dynamicRepressFrozenHeaderColumns;
    unsigned int _maxConcurrentTasks;
    unsigned int _numCellsPerTask;
    int _tableEnvironment;
    int _tableRowsBehavior;
    int _dynamicColumnAdjustment;
    int _dynamicRowAdjustment;
    unsigned int _cachedNumberOfColumns;
    unsigned int _cachedNumberOfRows;
    unsigned int _cachedNumberOfHeaderColumns;
    unsigned int _cachedNumberOfHeaderRows;
    unsigned int _cachedNumberOfGrandTotalColumns;
    unsigned int _cachedNumberOfFooterRows;
    unsigned int _cachedNumberOfFooterOrGrandTotalRows;
    TSTTableInfo *_tableInfo;
    TSKChangeNotifier *_changeNotifier;
    TSTStrokeDefaultVendor *_strokesDefaultVendor;
    TSTWPColumnCache *_cellIDToWPColumnCache;
    TSTDupContentCache *_dupContentCache;
    TSTWPColumnCache *_tempWPColumnCache;
    TSTWidthHeightCache *_widthHeightCache;
    TSTHiddenRowsColumnsCache *_hiddenRowsColumnsCache;
    TSDFill *_bandedFillObject;
    TSTLayout *_dynamicLayout;
    double _dynamicAddOrRemoveColumnElementSize;
    double _dynamicAddOrRemoveRowElementSize;
    double _dynamicColumnTabSize;
    id <TSTLayoutDynamicContentProtocol> _dynamicContentDelegate;
    TSUColor *_dynamicFontColor;
    TSDInfoGeometry *_dynamicInfoGeometry;
    double _dynamicWidthResize;
    double _dynamicHeightResize;
    double _dynamicResizingColumnAdjustment;
    double _dynamicResizingRowAdjustment;
    double _dynamicRowTabSize;
    TSDLayoutGeometry *_dynamicSavedLayoutGeometry;
    TSTCellSelection *_dynamicSelection;
    double _dynamicTableNameResize;
    struct TSUCellCoord _dynamicSuppressingConditionalStylesCellID;
    id <TSTLayoutDynamicCellFillProtocol> _dynamicCellFillDelegate;
    double _dynamicFooterHeight;
    NSMutableArray *_changeDescriptors;
    TSTMergeRangeSortedSet *_mergeRangesForLayoutPass;
    id <TSWPStyleProviding> _styleProvidingSource;
    TSTFontInfoCache *_fontInfoCache;
    TSUWidthLimitedQueue *_layoutValidateQueue;
    TSUWidthLimitedQueue *_layoutMeasureQueue;
    NSObject<OS_dispatch_queue> *_layoutConcurrentQueue;
    TSTConcurrentMutableIndexSet *_spillStrokeColumns;
    TSTCellRegion *_cellRegionForClearedMergeStrokes;
    TSTStrokeWidthCache *_columnToStrokeWidthCache;
    TSTStrokeWidthCache *_rowToStrokeHeightCache;
    TSTTextStyleToFontHeightCache *_paraStyleToHeightCache;
    double _cachedTableNameHeight;
    NSMutableDictionary *_tableNameHeightCache;
    unsigned long long _cachedMaxNumberOfColumns;
    unsigned long long _cachedMaxNumberOfRows;
    NSMutableSet *_contentReadingThreads;
    NSCountedSet *_dynamicLayoutParticipants;
    long long _dynamicHidingRowsColsDirection;
    TSTLayoutDynamicResizeInfo *_dynamicResizeInfo;
    long long _dynamicRevealingRowsColsDirection;
    TSWPColumnStyle *_defaultColumnStyle;
    TSTTextEngineDelegate *_tableNameTextEngineDelegate;
    NSPointerArray *_styleProviderStack;
    NSPointerArray *_fixedColumnWidthStack;
    struct TSUCellRect _dynamicFontColorCellRange;
    struct TSUCellRect _dynamicResizingColumnRange;
    struct TSUCellRect _dynamicResizingRowRange;
    struct TSUCellRect _dynamicHidingContent;
    struct TSUCellRect _dynamicHidingRowsCols;
    struct TSUCellRect _dynamicHidingText;
    struct TSUCellRect _dynamicRemovingText;
    struct TSUCellRect _dynamicRevealingRowsCols;
    struct CGRect _tableNameBounds;
}

+ (int)tableRowsBehaviorForTable:(id)arg1 andEnvironment:(int)arg2;
+ (double)effectiveTableNameHeightForTable:(id)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) NSPointerArray *fixedColumnWidthStack; // @synthesize fixedColumnWidthStack=_fixedColumnWidthStack;
@property(retain, nonatomic) NSPointerArray *styleProviderStack; // @synthesize styleProviderStack=_styleProviderStack;
@property(retain, nonatomic) TSTTextEngineDelegate *tableNameTextEngineDelegate; // @synthesize tableNameTextEngineDelegate=_tableNameTextEngineDelegate;
@property(readonly, nonatomic) TSWPColumnStyle *defaultColumnStyle; // @synthesize defaultColumnStyle=_defaultColumnStyle;
@property(nonatomic) long long dynamicRevealingRowsColsDirection; // @synthesize dynamicRevealingRowsColsDirection=_dynamicRevealingRowsColsDirection;
@property(nonatomic) struct TSUCellRect dynamicRevealingRowsCols; // @synthesize dynamicRevealingRowsCols=_dynamicRevealingRowsCols;
@property(retain, nonatomic) TSTLayoutDynamicResizeInfo *dynamicResizeInfo; // @synthesize dynamicResizeInfo=_dynamicResizeInfo;
@property(nonatomic) _Bool dynamicRepressFrozenHeaderColumns; // @synthesize dynamicRepressFrozenHeaderColumns=_dynamicRepressFrozenHeaderColumns;
@property(nonatomic) _Bool dynamicRepressFrozenHeaderRows; // @synthesize dynamicRepressFrozenHeaderRows=_dynamicRepressFrozenHeaderRows;
@property(nonatomic) struct TSUCellRect dynamicRemovingText; // @synthesize dynamicRemovingText=_dynamicRemovingText;
@property(nonatomic) struct TSUCellRect dynamicHidingText; // @synthesize dynamicHidingText=_dynamicHidingText;
@property(nonatomic) long long dynamicHidingRowsColsDirection; // @synthesize dynamicHidingRowsColsDirection=_dynamicHidingRowsColsDirection;
@property(nonatomic) struct TSUCellRect dynamicHidingRowsCols; // @synthesize dynamicHidingRowsCols=_dynamicHidingRowsCols;
@property(nonatomic) struct TSUCellRect dynamicHidingContent; // @synthesize dynamicHidingContent=_dynamicHidingContent;
@property(retain, nonatomic) NSCountedSet *dynamicLayoutParticipants; // @synthesize dynamicLayoutParticipants=_dynamicLayoutParticipants;
@property(retain, nonatomic) NSMutableSet *contentReadingThreads; // @synthesize contentReadingThreads=_contentReadingThreads;
@property(nonatomic) _Bool tableDefaultFontHeightsAreValid; // @synthesize tableDefaultFontHeightsAreValid=_tableDefaultFontHeightsAreValid;
@property(nonatomic) _Bool bandedFillIsValid; // @synthesize bandedFillIsValid=_bandedFillIsValid;
@property(nonatomic) unsigned long long cachedMaxNumberOfRows; // @synthesize cachedMaxNumberOfRows=_cachedMaxNumberOfRows;
@property(nonatomic) unsigned long long cachedMaxNumberOfColumns; // @synthesize cachedMaxNumberOfColumns=_cachedMaxNumberOfColumns;
@property(nonatomic) unsigned int cachedNumberOfFooterOrGrandTotalRows; // @synthesize cachedNumberOfFooterOrGrandTotalRows=_cachedNumberOfFooterOrGrandTotalRows;
@property(nonatomic) unsigned int cachedNumberOfFooterRows; // @synthesize cachedNumberOfFooterRows=_cachedNumberOfFooterRows;
@property(nonatomic) unsigned int cachedNumberOfGrandTotalColumns; // @synthesize cachedNumberOfGrandTotalColumns=_cachedNumberOfGrandTotalColumns;
@property(nonatomic) unsigned int cachedNumberOfHeaderRows; // @synthesize cachedNumberOfHeaderRows=_cachedNumberOfHeaderRows;
@property(nonatomic) unsigned int cachedNumberOfHeaderColumns; // @synthesize cachedNumberOfHeaderColumns=_cachedNumberOfHeaderColumns;
@property(nonatomic) unsigned int cachedNumberOfRows; // @synthesize cachedNumberOfRows=_cachedNumberOfRows;
@property(nonatomic) unsigned int cachedNumberOfColumns; // @synthesize cachedNumberOfColumns=_cachedNumberOfColumns;
@property(readonly, nonatomic) NSMutableDictionary *tableNameHeightCache; // @synthesize tableNameHeightCache=_tableNameHeightCache;
@property(nonatomic) _Bool tableNameHeightValid; // @synthesize tableNameHeightValid=_tableNameHeightValid;
@property(nonatomic) double cachedTableNameHeight; // @synthesize cachedTableNameHeight=_cachedTableNameHeight;
@property(nonatomic) struct CGRect tableNameBounds; // @synthesize tableNameBounds=_tableNameBounds;
@property(nonatomic) _Bool headerRowsRepeat; // @synthesize headerRowsRepeat=_headerRowsRepeat;
@property(nonatomic) _Bool headerColumnsRepeat; // @synthesize headerColumnsRepeat=_headerColumnsRepeat;
@property(nonatomic) _Bool headerRowsFrozen; // @synthesize headerRowsFrozen=_headerRowsFrozen;
@property(nonatomic) _Bool headerColumnsFrozen; // @synthesize headerColumnsFrozen=_headerColumnsFrozen;
@property(retain, nonatomic) TSTTextStyleToFontHeightCache *paraStyleToHeightCache; // @synthesize paraStyleToHeightCache=_paraStyleToHeightCache;
@property(retain, nonatomic) TSTStrokeWidthCache *rowToStrokeHeightCache; // @synthesize rowToStrokeHeightCache=_rowToStrokeHeightCache;
@property(retain, nonatomic) TSTStrokeWidthCache *columnToStrokeWidthCache; // @synthesize columnToStrokeWidthCache=_columnToStrokeWidthCache;
@property(retain, nonatomic) TSTCellRegion *cellRegionForClearedMergeStrokes; // @synthesize cellRegionForClearedMergeStrokes=_cellRegionForClearedMergeStrokes;
@property(retain, nonatomic) TSTConcurrentMutableIndexSet *spillStrokeColumns; // @synthesize spillStrokeColumns=_spillStrokeColumns;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *layoutConcurrentQueue; // @synthesize layoutConcurrentQueue=_layoutConcurrentQueue;
@property(retain, nonatomic) TSUWidthLimitedQueue *layoutMeasureQueue; // @synthesize layoutMeasureQueue=_layoutMeasureQueue;
@property(retain, nonatomic) TSUWidthLimitedQueue *layoutValidateQueue; // @synthesize layoutValidateQueue=_layoutValidateQueue;
@property(retain, nonatomic) TSTFontInfoCache *fontInfoCache; // @synthesize fontInfoCache=_fontInfoCache;
@property(readonly, nonatomic) id <TSWPStyleProviding> styleProvidingSource; // @synthesize styleProvidingSource=_styleProvidingSource;
@property(nonatomic) _Bool tableNameEnabled; // @synthesize tableNameEnabled=_tableNameEnabled;
@property(nonatomic) _Bool processHiddenRowsForExport; // @synthesize processHiddenRowsForExport=_processHiddenRowsForExport;
@property(retain, nonatomic) TSTMergeRangeSortedSet *mergeRangesForLayoutPass; // @synthesize mergeRangesForLayoutPass=_mergeRangesForLayoutPass;
@property(nonatomic) _Bool isGrouped; // @synthesize isGrouped=_isGrouped;
@property(retain, nonatomic) NSMutableArray *changeDescriptors; // @synthesize changeDescriptors=_changeDescriptors;
@property(nonatomic) _Bool emptyFilteredTable; // @synthesize emptyFilteredTable=_emptyFilteredTable;
@property(readonly, nonatomic) double dynamicFooterHeight; // @synthesize dynamicFooterHeight=_dynamicFooterHeight;
@property(retain, nonatomic) id <TSTLayoutDynamicCellFillProtocol> dynamicCellFillDelegate; // @synthesize dynamicCellFillDelegate=_dynamicCellFillDelegate;
@property(nonatomic) struct TSUCellCoord dynamicSuppressingConditionalStylesCellID; // @synthesize dynamicSuppressingConditionalStylesCellID=_dynamicSuppressingConditionalStylesCellID;
@property(nonatomic) double dynamicTableNameResize; // @synthesize dynamicTableNameResize=_dynamicTableNameResize;
@property(retain, nonatomic) TSTCellSelection *dynamicSelection; // @synthesize dynamicSelection=_dynamicSelection;
@property(copy, nonatomic) TSDLayoutGeometry *dynamicSavedLayoutGeometry; // @synthesize dynamicSavedLayoutGeometry=_dynamicSavedLayoutGeometry;
@property(nonatomic) double dynamicRowTabSize; // @synthesize dynamicRowTabSize=_dynamicRowTabSize;
@property(nonatomic) int dynamicRowAdjustment; // @synthesize dynamicRowAdjustment=_dynamicRowAdjustment;
@property(nonatomic) double dynamicResizingRowAdjustment; // @synthesize dynamicResizingRowAdjustment=_dynamicResizingRowAdjustment;
@property(nonatomic) struct TSUCellRect dynamicResizingRowRange; // @synthesize dynamicResizingRowRange=_dynamicResizingRowRange;
@property(nonatomic) _Bool dynamicResizingRows; // @synthesize dynamicResizingRows=_dynamicResizingRows;
@property(nonatomic) double dynamicResizingColumnAdjustment; // @synthesize dynamicResizingColumnAdjustment=_dynamicResizingColumnAdjustment;
@property(nonatomic) struct TSUCellRect dynamicResizingColumnRange; // @synthesize dynamicResizingColumnRange=_dynamicResizingColumnRange;
@property(nonatomic) _Bool dynamicResizingColumns; // @synthesize dynamicResizingColumns=_dynamicResizingColumns;
@property(nonatomic) double dynamicHeightResize; // @synthesize dynamicHeightResize=_dynamicHeightResize;
@property(nonatomic) double dynamicWidthResize; // @synthesize dynamicWidthResize=_dynamicWidthResize;
@property(retain, nonatomic) TSDInfoGeometry *dynamicInfoGeometry; // @synthesize dynamicInfoGeometry=_dynamicInfoGeometry;
@property(nonatomic) _Bool dynamicRepResizeSessionInProgress; // @synthesize dynamicRepResizeSessionInProgress=_dynamicRepResizeSessionInProgress;
@property(nonatomic) _Bool dynamicRepResize; // @synthesize dynamicRepResize=_dynamicRepResize;
@property(nonatomic) struct TSUCellRect dynamicFontColorCellRange; // @synthesize dynamicFontColorCellRange=_dynamicFontColorCellRange;
@property(retain, nonatomic) TSUColor *dynamicFontColor; // @synthesize dynamicFontColor=_dynamicFontColor;
@property(retain, nonatomic) id <TSTLayoutDynamicContentProtocol> dynamicContentDelegate; // @synthesize dynamicContentDelegate=_dynamicContentDelegate;
@property(nonatomic) double dynamicColumnTabSize; // @synthesize dynamicColumnTabSize=_dynamicColumnTabSize;
@property(nonatomic) int dynamicColumnAdjustment; // @synthesize dynamicColumnAdjustment=_dynamicColumnAdjustment;
@property(nonatomic) _Bool dynamicBandedFillSetting; // @synthesize dynamicBandedFillSetting=_dynamicBandedFillSetting;
@property(nonatomic) _Bool dynamicBandedFill; // @synthesize dynamicBandedFill=_dynamicBandedFill;
@property(nonatomic) double dynamicAddOrRemoveRowElementSize; // @synthesize dynamicAddOrRemoveRowElementSize=_dynamicAddOrRemoveRowElementSize;
@property(nonatomic) double dynamicAddOrRemoveColumnElementSize; // @synthesize dynamicAddOrRemoveColumnElementSize=_dynamicAddOrRemoveColumnElementSize;
@property(retain, nonatomic) TSTLayout *dynamicLayout; // @synthesize dynamicLayout=_dynamicLayout;
@property(nonatomic, getter=isInDynamicLayoutMode) _Bool inDynamicLayoutMode; // @synthesize inDynamicLayoutMode=_inDynamicLayoutMode;
@property(nonatomic) int tableRowsBehavior; // @synthesize tableRowsBehavior=_tableRowsBehavior;
@property(nonatomic) int tableEnvironment; // @synthesize tableEnvironment=_tableEnvironment;
@property(retain, nonatomic) TSDFill *bandedFillObject; // @synthesize bandedFillObject=_bandedFillObject;
@property(nonatomic) _Bool useBandedFill; // @synthesize useBandedFill=_useBandedFill;
@property(nonatomic) unsigned int numCellsPerTask; // @synthesize numCellsPerTask=_numCellsPerTask;
@property(nonatomic) unsigned int maxConcurrentTasks; // @synthesize maxConcurrentTasks=_maxConcurrentTasks;
@property(retain, nonatomic) TSTHiddenRowsColumnsCache *hiddenRowsColumnsCache; // @synthesize hiddenRowsColumnsCache=_hiddenRowsColumnsCache;
@property(retain, nonatomic) TSTWidthHeightCache *widthHeightCache; // @synthesize widthHeightCache=_widthHeightCache;
@property(retain, nonatomic) TSTWPColumnCache *tempWPColumnCache; // @synthesize tempWPColumnCache=_tempWPColumnCache;
@property(retain, nonatomic) TSTDupContentCache *dupContentCache; // @synthesize dupContentCache=_dupContentCache;
@property(retain, nonatomic) TSTWPColumnCache *cellIDToWPColumnCache; // @synthesize cellIDToWPColumnCache=_cellIDToWPColumnCache;
@property(retain, nonatomic) TSTStrokeDefaultVendor *strokesDefaultVendor; // @synthesize strokesDefaultVendor=_strokesDefaultVendor;
@property(nonatomic) __weak TSKChangeNotifier *changeNotifier; // @synthesize changeNotifier=_changeNotifier;
@property(nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=_tableInfo;
- (void)readSafelyUsingBlock:(CDUnknownBlockType)arg1;
- (void)modifySafelyUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)isAPivotTable;
- (_Bool)isLastVisibleBodyRowCategorySummaryOrLabelRow;
- (_Bool)isCategoryLastSummaryRowCollapsed;
- (long long)groupingArrowStateAtCellID:(struct TSUCellCoord)arg1;
- (_Bool)hasGroupingArrowAtCellID:(struct TSUCellCoord)arg1;
- (id)indexesForLeadingRows;
- (id)indexesForCategoryColumnsInRegion:(id)arg1;
- (id)indexesForCategoryColumns;
- (id)indexesForSummaryAndLabelRows;
- (id)indexesForLabelRowsInRegion:(id)arg1;
- (id)indexesForLabelRows;
- (id)indexesForSummaryRows;
- (id)indexesForSummaryRowsInRegion:(id)arg1;
- (_Bool)isPivotTrailingAligned:(struct TSUCellCoord)arg1;
- (_Bool)isCategoryGroupValueLabelCell:(struct TSUCellCoord)arg1;
- (_Bool)isCategoryGroupValueCell:(struct TSUCellCoord)arg1;
- (_Bool)isCategoryColumnUneditableCell:(struct TSUCellCoord)arg1;
- (_Bool)isCategoryLabelCell:(struct TSUCellCoord)arg1;
- (_Bool)isSummaryCell:(struct TSUCellCoord)arg1;
- (_Bool)isCategoryColumn:(unsigned short)arg1;
- (_Bool)isGroupingRowCollapsed:(unsigned int)arg1;
- (unsigned char)groupLevelAtLabelRow:(unsigned int)arg1;
- (unsigned char)groupLevelAtSummaryRow:(unsigned int)arg1;
- (_Bool)isSummaryOrLabelRow:(unsigned int)arg1;
- (_Bool)isSummaryRow:(unsigned int)arg1;
- (unsigned long long)numberOfColumnLevels;
- (unsigned long long)numberOfRowLevels;
- (unsigned int)numberOfCategoryLevels;
- (_Bool)isCategorized;
- (void)clearRenderingCaches;
- (double)fontHeightOfParagraphStyle:(id)arg1;
- (struct UIEdgeInsets)defaultPaddingForCellID:(struct TSUCellCoord)arg1;
- (struct UIEdgeInsets)paddingForCellID:(struct TSUCellCoord)arg1;
- (struct UIEdgeInsets)edgeInsetsFromPadding:(id)arg1;
- (id)formattedDataParagraphStylePropertyMapForCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (id)newTextEngineForCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2 textStyle:(id)arg3;
- (id)newTextEngineForCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2 textStyle:(id)arg3 naturalAlignment:(long long)arg4 cellDirection:(int)arg5;
- (id)p_resolvedTextStyleForCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2 textStyle:(id)arg3 outNaturalAlignment:(long long *)arg4 outCellDirection:(int *)arg5;
- (void)enqueueBootstrapChangeDescriptors;
- (id)p_validationBundleForRegionToValidate:(id)arg1;
- (id)unwrappedFittingWidthsForColumnsInCellRegion:(id)arg1;
- (double)unwrappedFittingWidthsForColumnInCellRegionWorker:(id)arg1;
- (void)waitForLayoutToComplete:(id)arg1;
- (void)processLayoutTask:(id)arg1 validationBundle:(id)arg2;
- (void)measureWithLayoutState:(id)arg1;
- (void)queueCellForValidation:(struct TSUCellRect)arg1 cell:(id)arg2 textStyleHandle:(id)arg3 modelMergeRange:(struct TSUCellRect)arg4 wrap:(_Bool)arg5 verticalAlignment:(int)arg6 padding:(id)arg7 prop:(_Bool)arg8 layoutCacheFlags:(int)arg9 validationBundle:(id)arg10 layoutTask:(id)arg11;
- (id)validateCellForDrawing:(struct TSUCellCoord)arg1 cell:(id)arg2 contents:(id)arg3 wrap:(_Bool)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 layoutCacheFlags:(int)arg7 pageNumber:(unsigned long long)arg8 pageCount:(unsigned long long)arg9;
- (id)fittingWidthsMapForColumns:(id)arg1 includeStrokes:(_Bool)arg2;
- (id)validateFittingInfoForValidationRegion:(id)arg1 rowsNeedingFittingInfo:(id)arg2;
- (id)validateFittingRegionForChangeDescriptors:(id)arg1;
- (_Bool)p_containsGradientThatFillsContainerInStyle:(id)arg1;
- (_Bool)p_containsGradientFillThatFillsContainerInCell:(id)arg1 cellContents:(id)arg2;
- (void)p_validationFittingForChangeDescriptorType:(int)arg1 regionFromChangeDescriptor:(id)arg2 cellRegionGatherer:(id)arg3;
- (void)p_validationFittingCellRegionForStrokesChanged:(id)arg1 cellRegionGatherer:(id)arg2;
- (void)p_validationFittingCellRegionForRangeMergeUnmerge:(id)arg1 cellRegionGatherer:(id)arg2;
- (void)p_validationFittingCellRegionForRowsMovedFrom:(id)arg1 toRowIndex:(unsigned int)arg2 cellRegionGatherer:(id)arg3;
- (void)p_validationFittingCellRegionForRowsInserted:(id)arg1 cellRegionGatherer:(id)arg2;
- (void)p_validationFittingCellRegionForRowsDeleted:(id)arg1 cellRegionGatherer:(id)arg2;
- (void)p_validationFittingCellRegionForColumnsMovedFrom:(id)arg1 toColumnIndex:(unsigned short)arg2 cellRegionGatherer:(id)arg3;
- (void)p_validationFittingCellRegionForColumnsVisibility:(id)arg1 cellRegionGatherer:(id)arg2;
- (void)p_validationFittingCellRegionForColumnsInserted:(id)arg1 cellRegionGatherer:(id)arg2;
- (void)p_validationFittingCellRegionForColumnsDeleted:(id)arg1 cellRegionGatherer:(id)arg2;
- (void)p_addFittingInfoForEmptyMergeRange:(struct TSUCellRect)arg1;
- (struct TSUCellCoord)p_validateFittingInfoForEmptyCellsBetween:(struct TSUCellCoord)arg1 andCellID:(struct TSUCellCoord)arg2 inRange:(struct TSUCellRect)arg3 widthHeightCollection:(id)arg4;
- (void)p_validateFittingInfoForEmptyCellsOnSingleRowBetween:(struct TSUCellCoord)arg1 andEndCellID:(struct TSUCellCoord)arg2 widthHeightCollection:(id)arg3;
- (void)validateFittingInfoWithCellRange:(struct TSUCellRect)arg1 validationBundle:(id)arg2;
- (void)p_validateFittingInfoWithCellRangeWorker:(struct TSUCellRect)arg1 widthHeightCollection:(id)arg2 containsMerges:(_Bool)arg3 validationBundle:(id)arg4;
- (void)validateFittingInfoForCell:(id)arg1 cellID:(struct TSUCellCoord)arg2 mergeRange:(struct TSUCellRect)arg3 setFitting:(_Bool)arg4 layoutTask:(id)arg5 widthHeightCollection:(id)arg6 validationBundle:(id)arg7 styleDefaultsCache:(id)arg8;
- (void)validateRowVisibility:(id)arg1;
- (void)finalizeLayoutPassWithRowsNeedingFittingInfo:(id)arg1;
- (void)p_validateCellIDToWPColumnCacheForChangeDescriptors:(id)arg1;
- (void)validateChangeDescriptorQueue;
- (void)validateLayoutEngineForChangeDescriptors:(id)arg1;
- (void)validate;
- (void)addChangeDescriptor:(id)arg1;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(struct TSUCellRect)arg2 andStrokeRange:(struct TSUCellRect)arg3;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(struct TSUCellRect)arg2;
- (void)validateDynamicResizeInfo;
- (void)invalidateDynamicResizeInfo;
- (void)updateDynamicResizeInfo:(id)arg1;
- (void)captureDynamicResizeInfo;
- (_Bool)isDynamicallyChangingFontColorOfCellID:(struct TSUCellCoord)arg1;
- (_Bool)isDynamicallyChangingContent;
- (_Bool)isDynamicallyChangingCellFill;
- (void)updateDynamicFontColor:(id)arg1 andRange:(struct TSUCellRect)arg2;
- (_Bool)isDynamicallyRepressingFrozenHeaderColumns;
- (_Bool)isDynamicallyRepressingFrozenHeaderRows;
- (_Bool)isDynamicallySettingBandedFill;
- (_Bool)isDynamicallyRowTabResizing;
- (_Bool)isDynamicallyColumnTabResizing;
- (_Bool)isDynamicallyChangingSelection;
- (_Bool)isDynamicallyChangingRowOrColumnCount;
- (_Bool)isDynamicallyChangingColumnCount;
- (_Bool)isDynamicallyChangingRowCount;
- (_Bool)isDynamicallyResizingTableName;
- (void)updateDynamicTableNameSize:(double)arg1;
- (_Bool)isDynamicallyRevealingRowsCols:(long long)arg1 rowColIndex:(unsigned int)arg2;
- (_Bool)isDynamicallyRevealingRowsCols;
- (_Bool)isDynamicallyChangingInfoGeometry;
- (_Bool)isDynamicallyRemovingText;
- (_Bool)isDynamicallyRemovingTextOfCellID:(struct TSUCellCoord)arg1;
- (_Bool)isDynamicallyHidingTextOfCellID:(struct TSUCellCoord)arg1;
- (_Bool)isDynamicallyHidingContentOfCellID:(struct TSUCellCoord)arg1;
- (_Bool)isDynamicallyHidingRowsColsCellID:(struct TSUCellCoord)arg1;
- (_Bool)isDynamicallyHidingRowsCols:(long long)arg1 rowColIndex:(unsigned int)arg2;
- (_Bool)isDynamicallyHidingRowsCols;
- (_Bool)containsAnyContentInRange:(struct TSUCellRect)arg1;
- (unsigned int)firstEmptyBodyRow;
- (struct TSUCellRect)expandCellRangeToVisibleNeighbors:(struct TSUCellRect)arg1;
@property(readonly, nonatomic) NSIndexSet *hiddenColumnIndices;
@property(readonly, nonatomic) NSIndexSet *hiddenRowIndices;
@property(readonly, nonatomic) NSIndexSet *visibleColumnIndices;
@property(readonly, nonatomic) NSIndexSet *visibleRowIndices;
- (unsigned short)indexOfVisibleColumnAfterAndIncludingColumnAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleColumnAfterColumnAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleColumnBeforeColumnAtIndex:(unsigned short)arg1;
- (unsigned int)nonUserHiddenRowAfterAndIncludingRow:(unsigned int)arg1;
- (unsigned int)indexOfVisibleRowAfterAndIncludingRowAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleRowAfterRowAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleRowBeforeAndIncludingRowAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleRowBeforeRowAtIndex:(unsigned int)arg1;
- (_Bool)anyHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (_Bool)anyRowsUserHiddenInCellRange:(struct TSUCellRect)arg1;
- (_Bool)anyHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (_Bool)isEntireCellRangeHidden:(struct TSUCellRect)arg1;
- (_Bool)hasHiddenColumnAtIndex:(unsigned short)arg1;
- (_Bool)isRowUserHidden:(unsigned int)arg1;
- (_Bool)hasHiddenRowAtIndex:(unsigned int)arg1;
- (_Bool)isDynamicallyResizingCellIDForColumnRowAdd:(struct TSUCellCoord)arg1;
- (_Bool)isDynamicallyResizingForColumnRowAdd:(long long)arg1 rowColIndex:(unsigned int)arg2;
- (_Bool)isDynamicallyResizingForColumnRowAdd:(long long)arg1;
- (id)layoutCellRegionForModelCellRegion:(id)arg1;
- (struct TSUCellCoord)layoutCellIDForModelCellID:(struct TSUCellCoord)arg1;
- (unsigned short)layoutColumnForModelColumn:(unsigned short)arg1;
- (unsigned int)layoutRowForModelRow:(unsigned int)arg1;
- (id)modelCellRegionForLayoutCellRegion:(id)arg1;
- (struct TSUCellCoord)modelCellIDForLayoutCellID:(struct TSUCellCoord)arg1;
- (unsigned short)modelColumnForLayoutColumn:(unsigned short)arg1;
- (unsigned int)modelRowForLayoutRow:(unsigned int)arg1;
- (_Bool)cell:(id *)arg1 forCellID:(struct TSUCellCoord)arg2;
- (void)endDynamicMode:(id)arg1;
- (void)beginDynamicMode:(id)arg1;
- (void)p_setDefaultFontHeight:(double)arg1 forTableStyleArea:(unsigned long long)arg2;
- (void)validateDefaultFontHeights;
- (void)invalidateDefaultFontHeights;
- (void)validateBandedFill;
- (void)invalidateBandedFill;
- (_Bool)shouldRowUseBandedFill:(unsigned int)arg1;
- (void)p_validateStrokeWidthCachesForRegion:(id)arg1 invalidateStrokeDefaults:(_Bool)arg2;
- (void)verifyStrokes;
- (void)p_validateStrokesForRegion:(id)arg1;
- (void)validateStrokesForChangeDescriptors:(id)arg1;
- (double)contentHeightForCellRange:(struct TSUCellRect)arg1 skipDynamicSwap:(_Bool)arg2 maximumPartitionSize:(struct CGSize)arg3;
- (double)p_contentWidthForCellRange:(struct TSUCellRect)arg1 skipDynamicSwap:(_Bool)arg2 validationBundle:(id)arg3;
- (double)contentWidthForCellRange:(struct TSUCellRect)arg1 validationBundle:(id)arg2;
- (double)contentWidthForCellRange:(struct TSUCellRect)arg1 skipDynamicSwap:(_Bool)arg2;
- (struct CGSize)contentSizeForCellRange:(struct TSUCellRect)arg1 skipDynamicSwap:(_Bool)arg2;
- (void)p_clearStrokesForMergesInCellRegion:(id)arg1;
- (void)p_invalidateClearedStrokesForCellRegion:(id)arg1;
- (void)enumerateMergedStrokesAndCapsForGridRow:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesAndCapsForGridColumn:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesForGridRow:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesForGridColumn:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)clearDynamicStrokesForCellRange:(struct TSUCellRect)arg1;
- (void)strokesForCellID:(struct TSUCellCoord)arg1 top:(id *)arg2 left:(id *)arg3 bottom:(id *)arg4 right:(id *)arg5;
- (void)setDynamicCellBorder:(id)arg1 forCellID:(struct TSUCellCoord)arg2;
- (double)strokeHeightOfGridRow:(unsigned int)arg1 atColumnIndex:(unsigned int)arg2;
- (double)strokeHeightOfGridRow:(unsigned int)arg1 beginColumn:(unsigned int)arg2 endColumn:(unsigned int)arg3;
- (double)strokeHeightOfGridRow:(unsigned int)arg1 inColumnRange:(struct TSTSimpleRange)arg2;
- (void)p_validateStrokeWidthCachesForGridColumn:(unsigned int)arg1;
- (void)p_validateStrokeWidthCachesForGridRow:(unsigned int)arg1;
- (id)mergedStrokesForGridRow:(unsigned int)arg1;
- (id)p_strokesForValidationOfGridRow:(unsigned int)arg1 isTop:(_Bool)arg2;
- (id)p_strokesForGridRow:(unsigned int)arg1 isTop:(_Bool)arg2 takeStrokeWriteLock:(_Bool)arg3;
- (_Bool)adjustGridRowForVisibility:(unsigned int *)arg1 isTop:(_Bool)arg2;
- (void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridRow:(unsigned int)arg3 isTop:(_Bool)arg4 beginColumn:(unsigned int)arg5 endColumn:(unsigned int)arg6;
- (double)strokeWidthOfGridColumn:(unsigned int)arg1 atRowIndex:(unsigned int)arg2;
- (double)strokeWidthOfGridColumn:(unsigned int)arg1 beginRow:(unsigned int)arg2 endRow:(unsigned int)arg3;
- (double)strokeWidthOfGridColumn:(unsigned int)arg1 inRowRange:(struct TSTSimpleRange)arg2;
- (id)mergedStrokesForGridColumn:(unsigned int)arg1;
- (id)p_strokesForGridColumn:(unsigned int)arg1 isLeft:(_Bool)arg2 takeStrokeWriteLock:(_Bool)arg3;
- (_Bool)adjustGridColumnForVisibility:(unsigned int *)arg1 isLeft:(_Bool)arg2;
- (void)setClearedStrokeForGridRow:(unsigned int)arg1 beginColumn:(unsigned int)arg2 endColumn:(unsigned int)arg3;
- (void)setClearedStrokeForGridColumn:(unsigned int)arg1 beginRow:(unsigned int)arg2 endRow:(unsigned int)arg3;
- (_Bool)hasStrokeSpillForLeftGridColumn:(unsigned int)arg1 inRow:(unsigned int)arg2;
- (void)setStrokeSpillForRightGridColumn:(unsigned int)arg1 leftGridColumn:(unsigned int)arg2 inRow:(unsigned int)arg3;
- (void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridColumn:(unsigned int)arg3 isLeft:(_Bool)arg4 beginRow:(unsigned int)arg5 endRow:(unsigned int)arg6;
- (void)validateStrokesArrays:(id)arg1;
- (void)invalidateStrokeSpills;
- (void)invalidateStrokeDefaults;
@property(readonly, nonatomic) _Bool hasActiveFilters;
- (double)fittingHeightOfRow:(unsigned int)arg1;
- (double)heightOfRowIgnoringFitting:(unsigned int)arg1 withStrokeHeights:(_Bool)arg2;
- (double)clampRowHeightAccountingForMaximumPartitionSize:(struct CGSize)arg1 rowIndex:(unsigned int)arg2 rowHeight:(double)arg3;
- (double)heightOfRow:(unsigned int)arg1 skipDynamicSwap:(_Bool)arg2 withStrokeHeights:(_Bool)arg3 returnZeroIfHidden:(_Bool)arg4 clampToPartitionSize:(_Bool)arg5 maximumPartitionSize:(struct CGSize)arg6 outIsFitting:(_Bool *)arg7;
- (double)widthOfColumn:(unsigned short)arg1 skipDynamicSwap:(_Bool)arg2 returnZeroIfHidden:(_Bool)arg3 outIsFitting:(_Bool *)arg4;
- (_Bool)hasRangeSpanningRowsForCellRange:(struct TSUCellRect)arg1;
- (id)expandCellRegionToCoverMergedCells:(id)arg1;
- (struct TSUCellRect)expandCellRangeToCoverMergedCells:(struct TSUCellRect)arg1;
- (id)mergesIntersectingCellRegion:(id)arg1;
- (id)mergesIntersectingRange:(struct TSUCellRect)arg1;
- (id)mergeRangesProppingRowHeightsInRegion:(id)arg1;
@property(readonly, nonatomic) unsigned short numberOfColumns;
@property(readonly, nonatomic) unsigned int numberOfRows;
- (unsigned long long)tableStyleAreaForCellID:(struct TSUCellCoord)arg1;
- (unsigned long long)tableAreaForCellID:(struct TSUCellCoord)arg1;
@property(readonly, nonatomic) struct TSUCellRect entireBodyCellRange;
@property(readonly, nonatomic) struct TSUCellRect entireBodyRowsCellRange;
@property(readonly, nonatomic) struct TSUCellRect entireFooterRowsCellRange;
@property(readonly, nonatomic) struct TSUCellRect entireHeaderRowsCellRange;
@property(readonly, nonatomic) struct TSUCellRect entireActualHeaderColumnsCellRange;
@property(readonly, nonatomic) struct TSUCellRect entireHeaderColumnsCellRange;
@property(readonly, nonatomic) struct TSUCellRect categoryColumnsCellRange;
@property(readonly, nonatomic) unsigned int numberOfNonHiddenFooterRows;
@property(readonly, nonatomic) unsigned int numberOfGrandTotalColumns;
@property(readonly, nonatomic) unsigned int numberOfFooterOrGrandTotalRows;
@property(readonly, nonatomic) unsigned int numberOfFooterRows;
@property(readonly, nonatomic) unsigned int numberOfHeaderRows;
@property(readonly, nonatomic) unsigned int numberOfHeaderColumns;
@property(readonly, nonatomic) struct TSUCellRect cellRange;
- (void)updateCellRange;
- (void)validateTableNameEnabled;
- (void)validateTableNameHeight;
- (void)invalidateTableNameHeight;
- (double)calculatedTableNameHeightIncludingDynamicResize:(_Bool)arg1;
- (double)calculatedTableNameHeight;
- (double)tableNameHeightForStorage:(id)arg1 withMaxWidth:(double)arg2;
- (double)tableNameHeight;
- (struct CGSize)tableNameTextSizeForTableName:(id)arg1 maxWidth:(double)arg2 tableNameStyle:(id)arg3;
- (struct CGSize)tableNameTextSize;
- (id)tableNameTextEngine;
- (id)tableNameTextEngineWithTableNameStyle:(id)arg1;
- (void)clearModelHeightWidthCacheForCellRange:(struct TSUCellRect)arg1;
- (void)resetModelHeightWidthCache;
- (_Bool)validateLayoutHint:(id)arg1;
- (_Bool)hintIsValid:(id)arg1;
- (id)newLayoutHint;
- (id)customStrokeProvider;
- (id)tableStrokeProvider;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithInfo:(id)arg1 layoutEngineBundle:(id)arg2;
- (void)popFromFixedColumnWidthStack;
- (void)pushToFixedColumnWidthStack:(void *)arg1;
- (void)popFromStyleProviderStack;
- (void)pushToStyleProviderStack:(id)arg1;
- (id)fixedWidthProvider;
- (void)setStyleProvidingSource:(id)arg1;
- (void)iterateCellsInRange:(struct TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)iterateCellsAndTerminateWithIterator:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)cellIteratorWithRange:(struct TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

