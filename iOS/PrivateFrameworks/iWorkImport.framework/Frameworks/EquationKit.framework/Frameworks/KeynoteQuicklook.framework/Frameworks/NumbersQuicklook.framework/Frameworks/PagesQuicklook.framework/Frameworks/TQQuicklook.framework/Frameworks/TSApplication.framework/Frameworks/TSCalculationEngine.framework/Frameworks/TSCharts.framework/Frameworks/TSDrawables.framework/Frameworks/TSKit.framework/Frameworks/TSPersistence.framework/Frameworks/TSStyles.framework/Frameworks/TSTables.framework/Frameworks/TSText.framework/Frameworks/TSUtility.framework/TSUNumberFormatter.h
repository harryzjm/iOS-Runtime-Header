//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSMutableDictionary, NSString, TSUDecimalFormatter, TSUFormattingSymbols, TSULocale;

@interface TSUNumberFormatter : NSObject
{
    TSULocale *_locale;
    TSUFormattingSymbols *_formattingSymbols;
    NSArray *_decimalFormatters;
    NSDictionary *_currencyFormatters;
    NSArray *_percentageFormatters;
    NSArray *_scientificFormatters;
    TSUDecimalFormatter *_fractionFormatter;
    NSMutableDictionary *_currencyCodeToSymbolMap;
    NSMutableDictionary *_currencyCodeToHalfWidthSymbolMap;
    NSString *_additionalCurrencyCode;
    NSDictionary *_additionalCurrencyCodeFormatters;
}

+ (id)formatterForLocale:(id)arg1;
+ (id)defaultFormatStringForValueType:(int)arg1;
+ (id)defaultFormatStringForValueType:(int)arg1 negativeStyle:(unsigned char)arg2;
+ (id)numberFormatStringSpecialSymbols;
+ (void)formatString:(id)arg1 replaceOccurencesOfUnescapedString:(id)arg2 withString:(id)arg3;
+ (id)formatString:(id)arg1 transformedForNegativeStyle:(unsigned char)arg2 placeMinusSignAfterRLM:(_Bool)arg3;
+ (id)formatString:(id)arg1 transformedForNegativeStyle:(unsigned char)arg2;
+ (int)positionOfMinusSignInNumberFormatSubpattern:(id)arg1;
+ (int)positionOfCurrencySymbolInNumberFormatSubpattern:(id)arg1;
+ (int)positionOfSymbol:(id)arg1 inNumberFormatSubpattern:(id)arg2;
+ (id)stringBySubstitutingCharactersCFNumberFormatterDoesntUnderstand:(id)arg1;
+ (void)unlock;
+ (void)lock;
+ (void)initialize;
- (void).cxx_destruct;
- (id)p_scientificFormatters;
- (id)p_percentageFormatters;
- (id)p_currencyFormatters;
- (id)p_decimalFormatters;
- (id)p_createDictionaryOfCurrencyFormattersForCurrencies:(id)arg1;
- (id)defaultFormatStringForValueType:(int)arg1;
- (id)defaultFormatStringForValueType:(int)arg1 negativeStyle:(unsigned char)arg2;
- (id)p_findCurrencySymbolInString:(id)arg1 additionalCurrencyCode:(id)arg2 successfullString:(id *)arg3 currencyCode:(id *)arg4;
- (_Bool)p_valueFromString:(id)arg1 formatters:(id)arg2 value:(double *)arg3 formatString:(id *)arg4;
- (_Bool)fractionFromString:(id)arg1 value:(double *)arg2;
- (_Bool)scientificFromString:(id)arg1 value:(double *)arg2 formatString:(id *)arg3;
- (_Bool)percentageFromString:(id)arg1 value:(double *)arg2 formatString:(id *)arg3;
- (_Bool)currencyFromString:(id)arg1 additionalCurrencyCode:(id)arg2 value:(double *)arg3 formatString:(id *)arg4 currencyCode:(id *)arg5;
- (_Bool)decimalFromString:(id)arg1 value:(double *)arg2 formatString:(id *)arg3;
- (void)p_numberPreferencesChanged:(id)arg1;
- (id)initWithLocale:(id)arg1;

@end

