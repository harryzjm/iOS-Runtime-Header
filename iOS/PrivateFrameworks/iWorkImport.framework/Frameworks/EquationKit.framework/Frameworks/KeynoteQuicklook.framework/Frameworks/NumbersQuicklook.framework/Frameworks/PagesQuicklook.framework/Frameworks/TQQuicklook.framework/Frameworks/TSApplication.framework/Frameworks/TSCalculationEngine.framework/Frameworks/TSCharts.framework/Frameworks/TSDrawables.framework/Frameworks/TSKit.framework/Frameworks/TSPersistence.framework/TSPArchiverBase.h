//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDictionary, NSHashTable, NSMutableDictionary, NSString, TSPObject, TSPReferenceOrderedSet, _TtC13TSPersistence23TSPMutableIdentifierSet;

@interface TSPArchiverBase : NSObject
{
    unique_ptr_f0def102 _message;
    void *_fieldRules;
    void *_currentFieldPath;
    NSMutableDictionary *_alternates;
    TSPObject *_object;
    unsigned long long _messageVersion;
    TSPReferenceOrderedSet *_strongReferences;
    TSPReferenceOrderedSet *_weakReferences;
    NSHashTable *_lazyReferences;
    NSHashTable *_dataReferences;
    _TtC13TSPersistence23TSPMutableIdentifierSet *_countedDataReferences;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) _TtC13TSPersistence23TSPMutableIdentifierSet *countedDataReferences; // @synthesize countedDataReferences=_countedDataReferences;
@property(readonly, nonatomic) NSHashTable *dataReferences; // @synthesize dataReferences=_dataReferences;
@property(readonly, nonatomic) NSHashTable *lazyReferences; // @synthesize lazyReferences=_lazyReferences;
@property(readonly, nonatomic) TSPReferenceOrderedSet *weakReferences; // @synthesize weakReferences=_weakReferences;
@property(readonly, nonatomic) TSPReferenceOrderedSet *strongReferences; // @synthesize strongReferences=_strongReferences;
@property(nonatomic) unsigned long long messageVersion; // @synthesize messageVersion=_messageVersion;
@property(readonly, nonatomic) TSPObject *object; // @synthesize object=_object;
- (void)setWeakReferenceToObjectUUIDPathArray:(id)arg1 message:(void *)arg2;
- (void)setWeakReferenceToObjectUUIDArray:(id)arg1 message:(void *)arg2;
- (void)setWeakReferenceToObjectUUIDPath:(id)arg1 message:(void *)arg2;
- (void)setWeakReferenceToObjectUUIDData:(const void *)arg1 message:(void *)arg2;
- (void)setWeakReferenceToObjectUUID:(id)arg1 message:(void *)arg2;
- (void)addWeakReferenceToObjectUUID:(id)arg1;
@property(readonly, nonatomic) _Bool isSavingCollaborativeDocument;
@property(readonly, nonatomic) _Bool isSavingDocumentAs;
- (id)alternateDiffToMergeBeforeVersion:(unsigned long long)arg1 fileFormatVersion:(unsigned long long)arg2 fieldPath:(int *)arg3 baseFieldPath:(const void *)arg4 message:(const struct Message *)arg5;
- (id)alternateDiffToMergeBeforeVersion:(unsigned long long)arg1 fileFormatVersion:(unsigned long long)arg2 fieldPath:(int *)arg3 message:(const struct Message *)arg4;
- (id)alternateDiffToMergeBeforeVersion:(unsigned long long)arg1 fileFormatVersion:(unsigned long long)arg2 field:(int)arg3 message:(const struct Message *)arg4;
- (id)alternateDiffToMergeBeforeVersion:(unsigned long long)arg1 fileFormatVersion:(unsigned long long)arg2 message:(const struct Message *)arg3;
- (id)addAlternateArchiverForVersion:(unsigned long long)arg1 fieldPath:(const void *)arg2 isDiffArchiver:(_Bool)arg3 diffReadVersion:(unsigned long long)arg4 message:(const struct Message *)arg5;
@property(readonly, nonatomic) unsigned long long minimumSupportedVersion;
@property(readonly, nonatomic) NSDictionary *alternates;
- (void)enumerateFieldRulesUsingBlock:(CDUnknownBlockType)arg1;
- (void)pushScopeForField:(int)arg1 message:(const struct Message *)arg2 usingBlock:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) const void *currentFieldPath;
- (void)setRule:(int)arg1 forFieldPath:(int *)arg2 fileFormatVersion:(unsigned long long)arg3 featureIdentifier:(id)arg4 message:(const struct Message *)arg5;
- (const void *)baseFieldPathAndReturnShouldDeleteReturnedValue:(_Bool *)arg1;
- (void)setIgnoreAndPreserveUntilModifiedRuleForFieldPath:(int *)arg1 message:(const struct Message *)arg2;
- (void)setIgnoreAndPreserveUntilModifiedRuleForField:(int)arg1 message:(const struct Message *)arg2;
- (void)setIgnoreAndPreserveRuleForFieldPath:(int *)arg1 message:(const struct Message *)arg2;
- (void)setIgnoreAndPreserveRuleForField:(int)arg1 message:(const struct Message *)arg2;
- (void)setMustUnderstandRuleForFieldPath:(int *)arg1 message:(const struct Message *)arg2;
- (void)setMustUnderstandRuleForField:(int)arg1 message:(const struct Message *)arg2;
- (void)setDataReferenceOrderedSet:(id)arg1 message:(void *)arg2;
- (void)setDataReferenceSet:(id)arg1 message:(void *)arg2;
- (void)setDataReferenceArray:(id)arg1 message:(void *)arg2;
- (void)setDataReference:(id)arg1 message:(void *)arg2;
- (void)setWeakLazyReference:(id)arg1 message:(void *)arg2;
- (void)setStrongLazyReferenceArray:(id)arg1 message:(void *)arg2;
- (void)setStrongLazyReference:(id)arg1 message:(void *)arg2;
- (void)setWeakReferenceOrderedSet:(id)arg1 message:(void *)arg2;
- (void)setStrongReferenceOrderedSet:(id)arg1 message:(void *)arg2;
- (void)setWeakReferenceSet:(id)arg1 message:(void *)arg2;
- (void)setStrongReferenceSet:(id)arg1 message:(void *)arg2;
- (void)setWeakReferenceArray:(id)arg1 message:(void *)arg2;
- (void)setStrongReferenceArray:(id)arg1 message:(void *)arg2;
- (void)setWeakReference:(id)arg1 message:(void *)arg2;
- (void)setStrongReference:(id)arg1 message:(void *)arg2;
@property(readonly, nonatomic) _Bool isForCopy;
@property(readonly, nonatomic) long long targetType;
- (void)releaseMessage;
@property(readonly, nonatomic) unsigned int messageType;
- (void)validateMessage:(const struct Message *)arg1;
- (struct Message *)messageWithNewFunction:(CDUnknownFunctionPointerType)arg1 descriptor:(const void *)arg2;
- (struct Message *)message;
- (void)cleanup;
- (void)dealloc;
- (id)initWithObject:(id)arg1;
- (id)init;
@property(readonly, nonatomic) const void *fieldPath;
@property(readonly, nonatomic) _Bool isDiff;
@property(readonly, nonatomic) _Bool isContentUnknown;
- (void)setSparseWeakObjectUUIDPathReferenceArray:(id)arg1 message:(void *)arg2;
- (void)setSparseWeakObjectUUIDReferenceArray:(id)arg1 message:(void *)arg2;
- (void)setSparseReferenceArray:(id)arg1 isWeak:(_Bool)arg2 message:(void *)arg3;
- (void)setSparseWeakReferenceArray:(id)arg1 message:(void *)arg2;
- (void)setSparseReferenceArray:(id)arg1 message:(void *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

