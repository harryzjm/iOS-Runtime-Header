//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSPersistence/TSPObject.h>

@class NSArray, NSMutableArray, TSCECalculationEngine, TSTTableModel;
@protocol TSCEFormulaReplacing;

@interface TSTCategoryOwner : TSPObject
{
    TSTTableModel *_tableModel;
    TSCECalculationEngine *_calcEngine;
    struct TSKUIDStruct _baseTableUID;
    struct os_unfair_lock_s _lock;
    NSMutableArray *_groupBys;
    id <TSCEFormulaReplacing> _minion;
    _Bool _isRegisteredWithCalcEngine;
}

+ (long long)p_compareGroupByViaOwnerIndexes:(id)arg1 otherGroupBy:(id)arg2;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isRegisteredWithCalcEngine; // @synthesize isRegisteredWithCalcEngine=_isRegisteredWithCalcEngine;
@property(retain, nonatomic) id <TSCEFormulaReplacing> minion; // @synthesize minion=_minion;
@property(nonatomic) struct TSKUIDStruct baseTableUID; // @synthesize baseTableUID=_baseTableUID;
@property(nonatomic) __weak TSTTableModel *tableModel; // @synthesize tableModel=_tableModel;
- (_Bool)verifyConnectionsWithPivotDataModel:(id)arg1;
- (void)didAddRows:(const void *)arg1;
- (void)willRemoveRows:(const void *)arg1 tableUID:(const struct TSKUIDStruct *)arg2;
- (void)didUnmergeRange:(struct TSUModelCellRect)arg1;
- (void)didMergeRange:(struct TSUModelCellRect)arg1;
- (void)willApplyConcurrentCellMap:(id)arg1 tableUID:(const struct TSKUIDStruct *)arg2;
- (void)willApplyBaseCellMap:(id)arg1 tableUID:(const struct TSKUIDStruct *)arg2;
- (void)willApplyCell:(id)arg1 baseCellCoord:(struct TSUModelCellCoord)arg2 tableUID:(const struct TSKUIDStruct *)arg3;
- (struct TSKUIDStruct)p_willApplyCell:(id)arg1 baseCellCoord:(struct TSUModelCellCoord)arg2 refreshCategoryInfo:(_Bool)arg3;
- (_Bool)verifySubOwnerUIDsUsed:(const struct TSKUIDStruct *)arg1;
- (void)setFormulaOwnerUIDsWithMap:(id)arg1;
- (void)remapTableUIDsInFormulasWithMap:(const void *)arg1 calcEngine:(id)arg2;
- (void)unpackAfterUnarchive:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (void)saveToArchive:(void *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const void *)arg1 unarchiver:(id)arg2 forBaseTable:(id)arg3;
@property(readonly, nonatomic) _Bool allowRegistrationOfAggFormulas;
- (void)updateWithDocumentRoot:(id)arg1;
- (void)unregisterGroupBy:(id)arg1;
- (id)registerGroupByForColumns:(id)arg1 ownerIndex:(unsigned short)arg2 hiddenStates:(id)arg3 groupBySet:(id)arg4;
- (id)groupByForOwnerIndex:(unsigned short)arg1;
- (id)groupByByUid:(const struct TSKUIDStruct *)arg1;
- (void)resetAllGroupings;
- (void)linkGroupBy:(id)arg1;
- (void)setCalcEngine:(id)arg1;
- (id)calcEngine;
- (void)unregisterFromCalcEngine;
- (int)registerWithCalcEngine:(id)arg1 baseOwnerUID:(const struct TSKUIDStruct *)arg2;
- (void)teardown;
- (void)unregisterFromDistributors;
- (void)registerWithDistributors;
- (id)description;
- (void)sortGroupBys;
- (void)addGroupByInSortedOrder:(id)arg1;
- (void)willModify;
@property(readonly, nonatomic) _Bool backwardCompatibleToPrePivot;
- (_Bool)hasEnabledGroupBys;
- (void)dealloc;
@property(readonly, nonatomic) NSArray *groupBys;
- (id)initWithBaseTableModel:(id)arg1;
- (id)initWithContext:(id)arg1;

@end

