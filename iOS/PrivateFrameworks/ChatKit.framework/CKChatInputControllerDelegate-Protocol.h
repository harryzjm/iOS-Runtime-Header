//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ChatKit/NSObject-Protocol.h>

@class CKBrowserDragControllerTarget, CKBrowserDraggedSticker, CKChatInputController, CKComposition, CKConversation, CKMessagePartChatItem, CKSendMenuPresentation, IMSticker, NSData, NSString, UIInputViewController, UIKeyboardLayoutGuide, UIView, UIViewController;
@protocol CKBrowserDragControllerTranscriptDelegate, CKSceneOverlayPresentationContext;

@protocol CKChatInputControllerDelegate <NSObject>
@property(readonly, nonatomic, getter=isKeyboardVisible) _Bool keyboardVisible;
- (unsigned long long)recipientsCount;
- (long long)sceneInterfaceOrientation;
- (void)stopForcingOrientation;
- (void)updateSupportedInterfaceOrientations:(unsigned long long)arg1;
- (_Bool)chatInputControllerShouldShowHandwriting:(CKChatInputController *)arg1;
- (_Bool)isKeyboardSnapshotted;
- (void)chatInputController:(CKChatInputController *)arg1 didFinishDismissAnimationForSendMenuViewController:(UIViewController *)arg2;
- (void)chatInputController:(CKChatInputController *)arg1 requestPresentSendMenu:(UIViewController *)arg2 withPresentationContext:(id <CKSceneOverlayPresentationContext>)arg3;
- (void)chatInputControllerDidSelectFunCamera:(CKChatInputController *)arg1;
- (void)chatInputControllerCancelSelectFunCamera:(CKChatInputController *)arg1;
- (void)chatInputControllerWillSelectFunCamera:(CKChatInputController *)arg1;
- (void)showContactForHandle:(NSString *)arg1;
- (void)sendCurrentLocation;
- (void)chatInputControllerDidSelectRequestLocation:(CKChatInputController *)arg1;
- (void)chatInputController:(CKChatInputController *)arg1 didPresentStickerPickerForChatItem:(CKMessagePartChatItem *)arg2;
- (void)chatInputController:(CKChatInputController *)arg1 willPresentStickerPickerForChatItem:(CKMessagePartChatItem *)arg2;
- (void)chatInputControllerRequestDismissKeyboardSnapshot:(CKChatInputController *)arg1;
- (void)chatInputControllerRequestShowKeyboardSnapshot:(CKChatInputController *)arg1;
- (void)chatInputControllerWillDismissCompactBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerDidDismissCompactBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerDidTransitionCollapsed:(CKChatInputController *)arg1;
- (void)chatInputControllerWillTransitionCollapsed:(CKChatInputController *)arg1;
- (void)chatInputControllerDidTransitionExpanded:(CKChatInputController *)arg1;
- (void)chatInputControllerWillTransitionExpanded:(CKChatInputController *)arg1;
- (void)chatInputControllerDidDismissModalBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerWillDismissModalBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerDidPresentModalBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerWillPresentModalBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerWillHideHandwriting:(CKChatInputController *)arg1;
- (void)chatInputControllerDidShowHandwriting:(CKChatInputController *)arg1;
- (void)chatInputDidChangeSize;
- (void)chatInputWillChangeHeightForCompactPresentation:(double)arg1;
- (void)chatInputDidSelectEffectPicker;
- (void)chatInputDidSelectPhotoPicker;
- (void)setLocalUserIsComposing:(_Bool)arg1 withPluginBundleID:(NSString *)arg2 typingIndicatorData:(NSData *)arg3;
- (void)chatInputDidUpdateWithNewInputViewController:(UIInputViewController *)arg1;
- (void)chatInputController:(CKChatInputController *)arg1 presentShelfModal:(UIViewController *)arg2 animated:(_Bool)arg3 completion:(void (^)(void))arg4;
- (void)chatInputDidUpdateInputViewShowingBrowser:(_Bool)arg1 entryFieldCollapsed:(_Bool)arg2 animated:(_Bool)arg3;
- (void)chatInputWillUpdateInputViewShowingBrowser;
- (_Bool)chatInputControllerCanSend:(CKChatInputController *)arg1;
- (void)chatInputSentComposition:(CKComposition *)arg1;
- (_Bool)keyboardIsVisibleForChatInputController:(CKChatInputController *)arg1;
- (id <CKBrowserDragControllerTranscriptDelegate>)dragControllerTranscriptDelegate;
- (void)sendAutomaticallyPlacedSticker:(IMSticker *)arg1 forChatItem:(CKMessagePartChatItem *)arg2 withDragTarget:(CKBrowserDragControllerTarget *)arg3 draggedSticker:(CKBrowserDraggedSticker *)arg4;
- (void)sendAutomaticallyPlacedSticker:(IMSticker *)arg1 forChatItem:(CKMessagePartChatItem *)arg2 stickerFrame:(struct CGRect)arg3 completionHandler:(void (^)(void))arg4;
- (void)sendSticker:(IMSticker *)arg1 withDragTarget:(CKBrowserDragControllerTarget *)arg2 draggedSticker:(CKBrowserDraggedSticker *)arg3;
- (void)chatInputControllerRequestInputViewFocusFromFullscreen:(CKChatInputController *)arg1;
- (void)appCardDidChangeEntryViewAlignmentHeight:(double)arg1 animated:(_Bool)arg2;
- (void)updateActiveEntryViewPositioningGuide;
- (UIKeyboardLayoutGuide *)keyboardLayoutGuideForAppCardPresentation;
- (UIView *)viewForDragAndChatInputDropTarget;
- (void)dismissKeyboard;
- (void)enforceSendMenuOrderingInWindowSubviews;
- (NSString *)chatInputTranscriptIdentifier;
- (UIViewController *)viewControllerForChatInputModalPresentation;
- (CKSendMenuPresentation *)activeSendMenuPresentationForChatInputController:(CKChatInputController *)arg1;
- (CKConversation *)targetConversationForChatInputController:(CKChatInputController *)arg1;

@optional
- (void)chatInputDidSelectEmojiPicker;
@end

