//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class FPProviderDomain, LSApplicationRecord, MCMContainer, NSArray, NSData, NSDate, NSDictionary, NSString, PSUsageBundleApp, STSizeVector;

@interface STStorageApp : NSObject
{
    NSData *_lsid;
    MCMContainer *_appContainer;
    NSArray *_dataContainers;
    NSArray *_sharedContainers;
    _Bool _isDocumentApp;
    _Bool _isAppClip;
    long long _appContainerSize;
    long long _dataContainerSize;
    long long _dataPurgeableSize;
    long long _sharedContainerSize;
    long long _sharedPurgeableSize;
    long long _assetPurgeableSize;
    long long _coreMLDataSize;
    long long _externalSize;
    long long _externalPurgeableSize;
    _Bool _forceVisible;
    _Bool _forceHidden;
    _Bool _isPseudoApp;
    int _appKind;
    NSString *_bundleIdentifier;
    NSString *_appIdentifier;
    NSString *_name;
    NSString *_vendorName;
    NSString *_versionString;
    NSDate *_lastUsedDate;
    PSUsageBundleApp *_usageBundle;
    NSArray *_mediaTypes;
    FPProviderDomain *_fpDomain;
    NSString *_parentAppIdentifier;
    NSArray *_childApps;
    CDUnknownBlockType _externalDataSizeBlock;
    STSizeVector *_intSizesVar;
    STSizeVector *_extSizesVar;
    STSizeVector *_appSizesVar;
}

+ (id)sizeOfPluginKitContainers;
- (void).cxx_destruct;
@property(retain) STSizeVector *appSizesVar; // @synthesize appSizesVar=_appSizesVar;
@property(retain) STSizeVector *extSizesVar; // @synthesize extSizesVar=_extSizesVar;
@property(retain) STSizeVector *intSizesVar; // @synthesize intSizesVar=_intSizesVar;
@property _Bool isPseudoApp; // @synthesize isPseudoApp=_isPseudoApp;
@property long long externalPurgeableSize; // @synthesize externalPurgeableSize=_externalPurgeableSize;
@property long long externalSize; // @synthesize externalSize=_externalSize;
@property long long sharedPurgeableSize; // @synthesize sharedPurgeableSize=_sharedPurgeableSize;
@property long long sharedContainerSize; // @synthesize sharedContainerSize=_sharedContainerSize;
@property long long dataPurgeableSize; // @synthesize dataPurgeableSize=_dataPurgeableSize;
@property long long dataContainerSize; // @synthesize dataContainerSize=_dataContainerSize;
@property long long appContainerSize; // @synthesize appContainerSize=_appContainerSize;
@property(copy) CDUnknownBlockType externalDataSizeBlock; // @synthesize externalDataSizeBlock=_externalDataSizeBlock;
@property(retain) NSArray *childApps; // @synthesize childApps=_childApps;
@property(retain) NSString *parentAppIdentifier; // @synthesize parentAppIdentifier=_parentAppIdentifier;
@property(retain) NSArray *sharedContainers; // @synthesize sharedContainers=_sharedContainers;
@property(retain) NSArray *dataContainers; // @synthesize dataContainers=_dataContainers;
@property(retain) MCMContainer *appContainer; // @synthesize appContainer=_appContainer;
@property _Bool forceHidden; // @synthesize forceHidden=_forceHidden;
@property _Bool forceVisible; // @synthesize forceVisible=_forceVisible;
@property(retain) FPProviderDomain *fpDomain; // @synthesize fpDomain=_fpDomain;
@property(retain) NSArray *mediaTypes; // @synthesize mediaTypes=_mediaTypes;
@property(retain) PSUsageBundleApp *usageBundle; // @synthesize usageBundle=_usageBundle;
@property(retain) NSDate *lastUsedDate; // @synthesize lastUsedDate=_lastUsedDate;
@property int appKind; // @synthesize appKind=_appKind;
@property(retain) NSString *versionString; // @synthesize versionString=_versionString;
@property(retain) NSString *vendorName; // @synthesize vendorName=_vendorName;
@property(retain) NSString *name; // @synthesize name=_name;
@property(retain) NSString *appIdentifier; // @synthesize appIdentifier=_appIdentifier;
@property(retain) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly) NSDictionary *infoDict;
- (void)addNumber:(long long)arg1 toDict:(id)arg2 forKey:(id)arg3;
- (long long)sharedDataSize;
- (long long)totalSize;
- (long long)dynamicSize;
- (long long)docAndDataSize;
- (long long)docsAndDataSize;
- (long long)staticSize;
- (void)refreshAppState;
- (void)refreshAppSizes;
- (id)updateAppSizes;
- (long long)sizeOfMLData;
@property(readonly) STSizeVector *appSize;
@property(readonly) STSizeVector *internalSizes;
@property(retain) STSizeVector *external;
@property(retain) STSizeVector *externalSizes;
@property long long assetPurgeableSize;
@property long long coreMLDataSize;
- (void)notifyAppSizeChanged;
@property(readonly) NSArray *documents;
- (id)dataPath;
- (id)appPath;
@property(readonly) _Bool isAppClip;
@property(readonly) _Bool isDocumentApp;
@property(readonly) _Bool isUsageApp;
@property(readonly) _Bool isDemoted;
@property(readonly) _Bool isDeleted;
@property(readonly) _Bool isDemotable;
@property(readonly) _Bool isDeletable;
- (void)postNotify:(id)arg1;
- (void)_postNotify:(id)arg1;
@property(readonly) _Bool userVisible;
@property(readonly) _Bool isUserApp;
@property(readonly) _Bool isSystemApp;
@property(readonly) _Bool isApple;
@property(retain) LSApplicationRecord *appRecord;
- (id)appProxy;
- (id)initWithBundleIdentifier:(id)arg1 name:(id)arg2 vendorName:(id)arg3;
- (id)initWithApplicationIdentifier:(id)arg1;
- (id)initWithBundleIdentifier:(id)arg1;
- (id)initWithAppRecord:(id)arg1;
- (id)initWithAppRecord:(id)arg1 usageBundle:(id)arg2;

@end

