//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <IconFoundation/NSCopying-Protocol.h>
#import <IconFoundation/NSSecureCoding-Protocol.h>

@class NSData, NSUUID;

@interface IFImage : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _largest;
}

+ (struct CGImage *)escapingCGImageWithCGImage:(struct CGImage *)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)imageWithContentsOfURL:(id)arg1;
+ (struct CGColorSpace *)defaultCGColorSpace;
+ (_Bool)supportsSecureCoding;
+ (struct CGImage *)createCGImageWithBitmapData:(id)arg1 imageHeader:(CDStruct_0adfc866 *)arg2;
@property _Bool largest; // @synthesize largest=_largest;
@property(readonly) double dimension; // @dynamic dimension;
@property(readonly) struct CGImage *cgImage;
@property _Bool placeholder; // @dynamic placeholder;
@property(readonly) struct CGSize pixelSize; // @dynamic pixelSize;
- (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2;
- (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 placeholder:(_Bool)arg3;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 scale:(double)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_init;
- (id)digest;
@property(readonly) NSData *bitmapData;
@property(readonly) NSData *validationToken; // @dynamic validationToken;
@property(readonly) NSUUID *uuid; // @dynamic uuid;
- (_Bool)writeToURL:(id)arg1;
- (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 minimumSize:(struct CGSize)arg3 placeholder:(_Bool)arg4;
- (id)initWithData:(id)arg1 uuid:(id)arg2 validationToken:(id)arg3;
- (id)initWithData:(id)arg1 uuid:(id)arg2;

// Remaining properties
@property(readonly) struct CGImage *CGImage; // @dynamic CGImage;
@property struct CGSize minimumSize; // @dynamic minimumSize;
@property(readonly) double scale; // @dynamic scale;
@property(readonly) struct CGSize size; // @dynamic size;
@property unsigned long long validationFlags; // @dynamic validationFlags;

@end

