//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class EMFEmojiPreferences, EMKGlyphRippler, EMKOverlayView, EMKTextEnumerator, EMKTextView, NSArray, NSString, NSTextLayoutManager, NSTimer, UIView, _EMKTextContainerOverlayView, _EMKTouchInfo;

__attribute__((visibility("hidden")))
@interface _EMKTextKit2Controller : NSObject
{
    _Bool _darkModeEnabled;
    _Bool _emojiConversionEnabled;
    _Bool _emojiConversionActive;
    _Bool _emojiAnimationActive;
    UIView *_textContainerOverlayView;
    NSArray *_emojiConversionLanguages;
    EMKTextView *_textView;
    _EMKTextContainerOverlayView *_containerOverlayView;
    EMFEmojiPreferences *_emojiPreferences;
    EMKOverlayView *_overlayView;
    NSTimer *_rippleTimer;
    EMKGlyphRippler *_rippler;
    EMKTextEnumerator *_textEnumerator;
    _EMKTouchInfo *_lastTouchInfo;
}

+ (id)log;
- (void).cxx_destruct;
@property(nonatomic, getter=isEmojiAnimationActive) _Bool emojiAnimationActive; // @synthesize emojiAnimationActive=_emojiAnimationActive;
@property(retain, nonatomic) _EMKTouchInfo *lastTouchInfo; // @synthesize lastTouchInfo=_lastTouchInfo;
@property(retain, nonatomic) EMKTextEnumerator *textEnumerator; // @synthesize textEnumerator=_textEnumerator;
@property(retain, nonatomic) EMKGlyphRippler *rippler; // @synthesize rippler=_rippler;
@property(retain) NSTimer *rippleTimer; // @synthesize rippleTimer=_rippleTimer;
@property(retain) EMKOverlayView *overlayView; // @synthesize overlayView=_overlayView;
@property(retain) EMFEmojiPreferences *emojiPreferences; // @synthesize emojiPreferences=_emojiPreferences;
@property(retain, nonatomic) _EMKTextContainerOverlayView *containerOverlayView; // @synthesize containerOverlayView=_containerOverlayView;
@property __weak EMKTextView *textView; // @synthesize textView=_textView;
@property(copy, nonatomic) NSArray *emojiConversionLanguages; // @synthesize emojiConversionLanguages=_emojiConversionLanguages;
@property(nonatomic, getter=isEmojiConversionActive) _Bool emojiConversionActive; // @synthesize emojiConversionActive=_emojiConversionActive;
@property(nonatomic, getter=isEmojiConversionEnabled) _Bool emojiConversionEnabled; // @synthesize emojiConversionEnabled=_emojiConversionEnabled;
@property(nonatomic, getter=isDarkModeEnabled) _Bool darkModeEnabled; // @synthesize darkModeEnabled=_darkModeEnabled;
- (id)textContentStorage:(id)arg1 textParagraphWithRange:(struct _NSRange)arg2;
- (_Bool)textContentManager:(id)arg1 shouldEnumerateTextElement:(id)arg2 options:(unsigned long long)arg3;
- (void)dismissOverlayView;
- (void)_updateOverlayView;
- (void)textViewDidLayoutSubviews;
- (void)replaceRange:(struct _NSRange)arg1 withEmojiToken:(id)arg2 language:(id)arg3;
- (void)textTapGestureRecognized:(id)arg1;
- (_Bool)touchHasEmojiSignificance:(id)arg1;
- (void)__startAnimation;
- (void)__stopAnimation;
@property(retain, nonatomic) UIView *textContainerOverlayView; // @synthesize textContainerOverlayView=_textContainerOverlayView;
- (void)_startOrStopAnimation;
- (void)updateEmojiDisplay:(id)arg1;
- (void)_startRippleAnimation;
@property(readonly) NSTextLayoutManager *_layoutManager;
- (id)initWithTextView:(id)arg1 emojiPreferences:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

