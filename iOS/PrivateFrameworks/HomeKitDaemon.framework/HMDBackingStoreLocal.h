//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class NSMutableArray, NSMutableDictionary, NSString;

__attribute__((visibility("hidden")))
@interface HMDBackingStoreLocal : HMFObject
{
    struct sqlite3 *context;
    void *sqlite3_cache;
    struct sqlite3_stmt *insertZone;
    struct sqlite3_stmt *deleteZone;
    struct sqlite3_stmt *selectZones;
    struct sqlite3_stmt *insertStore;
    struct sqlite3_stmt *selectStores;
    struct sqlite3_stmt *insertGroup;
    struct sqlite3_stmt *deleteGroup;
    struct sqlite3_stmt *selectGroups;
    struct sqlite3_stmt *updateGroupToken;
    struct sqlite3_stmt *updateGroupSubscription;
    struct sqlite3_stmt *insertShare;
    struct sqlite3_stmt *updateShareShare;
    struct sqlite3_stmt *updateShareUsers;
    struct sqlite3_stmt *deleteShare;
    struct sqlite3_stmt *selectShares;
    struct sqlite3_stmt *insertRecord;
    struct sqlite3_stmt *updateRecordSchema;
    struct sqlite3_stmt *selectRecordCountGroup;
    struct sqlite3_stmt *selectRecordGroupTypeSchema;
    struct sqlite3_stmt *selectRecordGroup;
    struct sqlite3_stmt *selectRecordGroupMap;
    struct sqlite3_stmt *selectRecordUUID;
    struct sqlite3_stmt *selectRecordParentUUID;
    struct sqlite3_stmt *selectRecordParent;
    struct sqlite3_stmt *selectRecordName;
    struct sqlite3_stmt *selectRecordUUIDNoShare;
    struct sqlite3_stmt *selectRecordParentNoShare;
    struct sqlite3_stmt *selectRecordNameNoShare;
    struct sqlite3_stmt *selectRecords;
    struct sqlite3_stmt *selectStoreRecords;
    struct sqlite3_stmt *deleteRecord;
    struct sqlite3_stmt *flushPushedXact;
    struct sqlite3_stmt *insertLog;
    struct sqlite3_stmt *updateLogToDiskCommited;
    struct sqlite3_stmt *updateLogXactID;
    struct sqlite3_stmt *selectLog;
    struct sqlite3_stmt *selectChangeExistsLog;
    struct sqlite3_stmt *selectAllLog;
    struct sqlite3_stmt *insertLogOptions;
    struct sqlite3_stmt *selectLogOptions;
    struct sqlite3_stmt *updateLog;
    struct sqlite3_stmt *deleteLog;
    struct sqlite3_stmt *insertArchive;
    struct sqlite3_stmt *selectArchive;
    struct sqlite3_stmt *commit;
    struct sqlite3_stmt *rollback;
    struct sqlite3_stmt *begin;
    NSString *_datastoreFile;
    NSMutableArray *_zoneCache;
    NSMutableDictionary *_storeCache;
}

+ (id)logCategory;
+ (void)cleanDatastoreFilesAt:(id)arg1 everything:(_Bool)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *storeCache; // @synthesize storeCache=_storeCache;
@property(retain, nonatomic) NSMutableArray *zoneCache; // @synthesize zoneCache=_zoneCache;
@property(readonly, nonatomic) NSString *datastoreFile; // @synthesize datastoreFile=_datastoreFile;
- (id)logIdentifier;
- (_Bool)_selectArchiveWithIdentifier:(id)arg1 archive:(id *)arg2 controllerUserName:(id *)arg3 error:(id *)arg4;
- (unsigned long long)_insertArchive:(id)arg1 identifier:(id)arg2 controllerUserName:(id)arg3 error:(id *)arg4;
- (id)_deleteLog:(long long)arg1;
- (id)_updateLog:(long long)arg1 mask:(long long)arg2 set:(long long)arg3;
- (void)_selectAllLog:(CDUnknownBlockType)arg1;
- (id)_selectLogOptionsWithID:(long long)arg1;
- (id)_insertLogOptionsWithID:(long long)arg1 options:(id)arg2;
- (void)_selectLogWithMask:(long long)arg1 compare:(long long)arg2 callback:(CDUnknownBlockType)arg3;
- (void)_selectLogWithRoot:(id)arg1 after:(long long)arg2 mask:(long long)arg3 compare:(long long)arg4 callback:(CDUnknownBlockType)arg5;
- (unsigned long long)_insertLogWithRoot:(id)arg1 transaction:(id)arg2 set:(long long)arg3 error:(id *)arg4;
- (void)_selectAllRecords:(CDUnknownBlockType)arg1;
- (void)_fetchRecordsWithGroupID:(long long)arg1 names:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)_fetchRecordsWithGroupID:(long long)arg1 parent:(id)arg2 type:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)_fetchRecordsWithGroupID:(long long)arg1 parentUuids:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)_fetchRecordWithUUID:(id)arg1 root:(id)arg2 error:(id *)arg3;
- (void)_fetchRecordsWithGroupID:(long long)arg1 uuids:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)_fetchRecordsWithGroupID:(long long)arg1 callback:(CDUnknownBlockType)arg2;
- (void)_fetchRecordMapWithGroupID:(long long)arg1 callback:(CDUnknownBlockType)arg2;
- (void)_fetchRecordTypeSchemaWithGroupID:(long long)arg1 callback:(CDUnknownBlockType)arg2;
- (void)_fetchRecordCountWithGroupID:(long long)arg1 callback:(CDUnknownBlockType)arg2;
- (id)_deleteRecordWithGroupID:(long long)arg1 recordName:(id)arg2;
- (id)_updateRecordWithGroupID:(long long)arg1 store:(long long)arg2 name:(id)arg3 model:(id)arg4;
- (id)_updateRecordWithGroupID:(long long)arg1 store:(long long)arg2 record:(id)arg3;
- (id)_updateRecordWithGroupID:(long long)arg1 store:(long long)arg2 record:(id)arg3 data:(id)arg4 encoding:(long long)arg5;
- (id)_updateRecordWithGroupID:(long long)arg1 store:(long long)arg2 name:(id)arg3 record:(id)arg4 uuid:(id)arg5 parentUUID:(id)arg6 type:(id)arg7 data:(id)arg8 encoding:(long long)arg9 schema:(id)arg10;
- (id)_fetchGroupsForZone:(id)arg1 withError:(id *)arg2;
- (id)_updateGroupWithID:(long long)arg1 subscription:(id)arg2;
- (id)_updateGroupWithID:(long long)arg1 serverChangeToken:(id)arg2;
- (id)_deleteGroupWithID:(long long)arg1;
- (long long)_insertGroupWithZoneID:(long long)arg1 root:(id)arg2 owner:(id)arg3 subscription:(id)arg4 error:(id *)arg5;
- (id)_fetchZonesWithError:(id *)arg1;
- (id)_deleteZoneWithID:(long long)arg1;
- (long long)_insertZoneWithName:(id)arg1 error:(id *)arg2;
- (id)_fillZoneCache;
- (unsigned long long)_fetchIDForStore:(id)arg1 error:(id *)arg2;
- (id)_fetchUncommittedAndPushedTransactions;
- (id)_dropUncommittedUnpushedTransactions;
- (long long)_numUncommittedTransactions;
- (id)_fillStoreCache;
- (void)_rollback;
- (id)_commit;
- (id)_begin;
- (id)_instanceResources:(_Bool)arg1 migrate:(_Bool)arg2;
- (id)_updateRecordWithGroupID:(long long)arg1 name:(id)arg2 schema:(id)arg3;
- (void)_freeResources;
- (id)flush:(_Bool)arg1;
- (void)dealloc;
- (id)initWithDatastore:(id)arg1;
- (id)initWithDB:(id)arg1 migrate:(_Bool)arg2 error:(id *)arg3;
- (id)_createDatastoreTables:(id)arg1;
- (id)_createNewDatastore:(id)arg1;
- (id)_runSQLite3:(const char *)arg1 bind:(id)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

