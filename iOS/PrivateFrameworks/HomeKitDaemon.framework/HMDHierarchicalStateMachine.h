//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class CUStateEvent, CUStateMachine, HMDHierarchicalStateMachineState, NSObject, NSString;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface HMDHierarchicalStateMachine : HMFObject
{
    _Bool _allowSelfStateTransitions;
    CUStateMachine *_cuStateMachine;
    HMDHierarchicalStateMachineState *_currentHSMState;
    CUStateEvent *_eventCausingStateTransition;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)logCategory;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) CUStateEvent *eventCausingStateTransition; // @synthesize eventCausingStateTransition=_eventCausingStateTransition;
@property(readonly, nonatomic) _Bool allowSelfStateTransitions; // @synthesize allowSelfStateTransitions=_allowSelfStateTransitions;
@property(nonatomic) __weak HMDHierarchicalStateMachineState *currentHSMState; // @synthesize currentHSMState=_currentHSMState;
@property(retain, nonatomic) CUStateMachine *cuStateMachine; // @synthesize cuStateMachine=_cuStateMachine;
- (void)setHSMInternalCurrentState:(id)arg1;
- (id)stateWithName:(id)arg1;
- (void)getCurrentHSMStateWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setStates:(id)arg1;
@property(retain, nonatomic) HMDHierarchicalStateMachineState *initialState; // @dynamic initialState;
- (void)transitionToState:(id)arg1 withEvent:(id)arg2;
- (void)transitionToState:(id)arg1;
- (void)dispatchEvent:(id)arg1 userInfo:(id)arg2;
- (void)dispatchEvent:(id)arg1;
- (void)invalidate;
- (void)start;
- (id)initWithQueue:(id)arg1 allowSelfStateTransitions:(_Bool)arg2;
- (id)initWithQueue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

