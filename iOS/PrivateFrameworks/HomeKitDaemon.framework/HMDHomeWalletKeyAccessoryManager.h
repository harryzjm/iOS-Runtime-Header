//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class HMDDevice, HMDHome, HMDHomeWalletKeyAccessoryManagerDeviceCredentialKeyOperation, HMFMessageDispatcher, NSMutableDictionary, NSNotificationCenter, NSNumber, NSObject, NSString, NSUUID;
@protocol HMDHomeWalletDataSource, HMDHomeWalletKeyAccessoryManagerDelegate, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface HMDHomeWalletKeyAccessoryManager : HMFObject
{
    _Bool _currentDevicePrimaryResident;
    _Bool _canConfigureAccessories;
    id <HMDHomeWalletKeyAccessoryManagerDelegate> _delegate;
    HMDHome *_home;
    NSUUID *_uuid;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMFMessageDispatcher *_messageDispatcher;
    NSNotificationCenter *_notificationCenter;
    id <HMDHomeWalletDataSource> _dataSource;
    NSMutableDictionary *_pendingAccessoryDeviceCredentialKeyOperationByDeviceUUID;
    HMDHomeWalletKeyAccessoryManagerDeviceCredentialKeyOperation *_pendingPrimaryResidentDeviceCredentialKeyOperation;
    NSMutableDictionary *_nfcReaderKeyConfigureStateByAccessoryUUID;
    NSNumber *_walletKeyColor;
}

+ (id)logCategory;
+ (id)createMatterIssuerKeyDataForUser:(id)arg1 withUserIndex:(id)arg2 logUUID:(id)arg3;
- (void).cxx_destruct;
@property(readonly, copy) NSNumber *walletKeyColor; // @synthesize walletKeyColor=_walletKeyColor;
@property(readonly, copy) NSMutableDictionary *nfcReaderKeyConfigureStateByAccessoryUUID; // @synthesize nfcReaderKeyConfigureStateByAccessoryUUID=_nfcReaderKeyConfigureStateByAccessoryUUID;
@property(copy) HMDHomeWalletKeyAccessoryManagerDeviceCredentialKeyOperation *pendingPrimaryResidentDeviceCredentialKeyOperation; // @synthesize pendingPrimaryResidentDeviceCredentialKeyOperation=_pendingPrimaryResidentDeviceCredentialKeyOperation;
@property(readonly, copy) NSMutableDictionary *pendingAccessoryDeviceCredentialKeyOperationByDeviceUUID; // @synthesize pendingAccessoryDeviceCredentialKeyOperationByDeviceUUID=_pendingAccessoryDeviceCredentialKeyOperationByDeviceUUID;
@property _Bool canConfigureAccessories; // @synthesize canConfigureAccessories=_canConfigureAccessories;
@property(getter=isCurrentDevicePrimaryResident) _Bool currentDevicePrimaryResident; // @synthesize currentDevicePrimaryResident=_currentDevicePrimaryResident;
@property(readonly) id <HMDHomeWalletDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(readonly) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(retain) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, copy) NSUUID *uuid; // @synthesize uuid=_uuid;
@property __weak HMDHome *home; // @synthesize home=_home;
@property __weak id <HMDHomeWalletKeyAccessoryManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)logIdentifier;
- (id)newLogUUID;
- (id)fetchWalletKeyColorForAccessories_HAP:(id)arg1 home:(id)arg2 logUUID:(id)arg3;
- (id)fetchWalletKeyColorForAccessories_Matter:(id)arg1 home:(id)arg2 logUUID:(id)arg3;
- (void)fetchWalletKeyColorForAccessories:(id)arg1 logUUID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (id)walletKeyColorWithCharacteristicValue:(id)arg1 logUUID:(id)arg2;
- (void)fetchWalletKeyColorWithAccessory:(id)arg1 logUUID:(id)arg2;
- (id)writeRequestsWithAccessories:(id)arg1 home:(id)arg2 deviceCredentialKey:(id)arg3 user:(id)arg4 logUUID:(id)arg5;
- (id)configureMatterAccessory:(id)arg1 withDeviceCredentialKey:(id)arg2 forUser:(id)arg3 logUUID:(id)arg4;
- (id)performHAPWriteRequestsHH2:(id)arg1 home:(id)arg2 logUUID:(id)arg3;
- (void)configureAccessories_HH2:(id)arg1 withDeviceCredentialKey:(id)arg2 forDeviceWithUUID:(id)arg3 user:(id)arg4 logUUID:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)configureAccessories_HH1:(id)arg1 withDeviceCredentialKey:(id)arg2 forDeviceWithUUID:(id)arg3 user:(id)arg4 logUUID:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)configureAccessories:(id)arg1 withDeviceCredentialKey:(id)arg2 forDeviceWithUUID:(id)arg3 user:(id)arg4 logUUID:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)unregisterForNotificationsWithReason:(id)arg1;
- (void)handlePendingDeviceCredentialKeysSyncForAccessories:(id)arg1 withReason:(id)arg2;
- (void)handlePendingDeviceCredentialKeysSyncForAccessory:(id)arg1 withReason:(id)arg2;
- (void)registerForNotificationsWithReason:(id)arg1;
- (void)configureNotificationsWithReason:(id)arg1;
- (void)configureAccessoryWithNfcReaderKey:(id)arg1 accessory:(id)arg2 logUUID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)removeNfcReaderKeyWithIdentifier:(id)arg1 accessory:(id)arg2 logUUID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchIsAccessoryConfiguredWithReaderKey:(id)arg1 accessory:(id)arg2 logUUID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)configureNFCReaderKeyOnMatterAccessory:(id)arg1 logUUID:(id)arg2;
- (void)fetchOrConfigureNFCReaderKeyForAccessory:(id)arg1 logUUID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)configureNFCReaderKeyForAccessory:(id)arg1 logUUID:(id)arg2;
- (void)configureNFCReaderKeyForAllAccessoriesWithReason:(id)arg1;
- (void)requestPrimaryResident:(id)arg1 toConfigureAccessories:(id)arg2 withDeviceCredentialKey:(id)arg3 logUUID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)configureAccessories:(id)arg1 withDeviceCredentialKey:(id)arg2 logUUID:(id)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly) HMDDevice *primaryResidentDevice;
@property(readonly, copy) NSString *walletKeyColorPreferenceKey;
- (void)handleHomeUserAddedNotification:(id)arg1;
- (void)handleWalletKeySupportDidChange:(id)arg1;
- (void)handleAccessoryConfigured:(id)arg1;
- (void)handleHomeAccessoryRemovedNotification:(id)arg1;
- (void)handleHomeAddedAccessoryNotification:(id)arg1;
- (void)handleHomeDidDisableCharacteristicNotification:(id)arg1;
- (void)handleHomeDidEnableCharacteristicNotification:(id)arg1;
- (void)handleHomeNFCReaderKeyKeychainItemAvailableNotification:(id)arg1;
- (void)handlePrimaryResidentUpdateNotification:(id)arg1;
- (void)handleAccessoryCharacteristicsChangedNotification:(id)arg1;
- (id)addIssuerKeyForUser:(id)arg1 toAccessory:(id)arg2 logUUID:(id)arg3;
- (id)addIssuerKeysToAccessoriesForUser:(id)arg1 logUUID:(id)arg2;
- (id)addIssuerKeysToAccessory:(id)arg1 logUUID:(id)arg2;
- (id)addIssuerKeysToAccessories:(id)arg1 logUUID:(id)arg2;
- (void)_handleAddIssuerKeysToAccessoriesMessage:(id)arg1;
- (void)handleHMDHomeConfigureMatterAccessoryWithReaderKeyMessage:(id)arg1;
- (void)handleConfigureAccessoriesWithDeviceCredentialKeyMessage:(id)arg1;
- (id)missingWalletKeysForAccessoryUUID:(id)arg1 usersByUniqueID:(id)arg2 accessoryUsersByUniqueID:(id)arg3 logUUID:(id)arg4;
- (id)fetchMissingWalletKeysForAccessory:(id)arg1 users:(id)arg2 logUUID:(id)arg3;
- (id)fetchMissingWalletKeysForUserUUID:(id)arg1 logUUID:(id)arg2;
- (id)fetchMissingWalletKeysForAccessoryUUID:(id)arg1 logUUID:(id)arg2;
- (id)restoreMissingWalletKeys:(id)arg1 onAccessory:(id)arg2 logUUID:(id)arg3;
- (void)handleRestoreMissingWalletKeysMessage:(id)arg1;
- (void)handleFetchMissingWalletKeysMessage:(id)arg1;
- (void)createAccessoryDeviceCredentialKeyPendingOperationWithAccessories:(id)arg1 deviceCredentialKey:(id)arg2 user:(id)arg3 deviceUUID:(id)arg4;
- (void)createAccessoryDeviceCredentialKeyPendingOperationWithAccessoriesUUIDs:(id)arg1 deviceCredentialKey:(id)arg2 user:(id)arg3 deviceUUID:(id)arg4;
- (void)handleFetchWalletKeyColorMessage:(id)arg1;
- (void)handleWalletKeyRemoved;
- (void)fetchWalletKeyColorWithLogUUID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)configureAllAccessoriesWithDeviceCredentialKey:(id)arg1 logUUID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)configureAccessory:(id)arg1 withDeviceCredentialKey:(id)arg2 logUUID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)configureWithHome:(id)arg1;
- (id)initWithUUID:(id)arg1 workQueue:(id)arg2 dataSource:(id)arg3 notificationCenter:(id)arg4;
- (id)initWithUUID:(id)arg1 workQueue:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

