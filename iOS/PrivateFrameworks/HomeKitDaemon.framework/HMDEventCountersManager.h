//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class HMFUnfairLock, NSDate, NSMutableDictionary, NSObject;
@protocol HMDEventCountersStoring, OS_dispatch_queue;

@interface HMDEventCountersManager : HMFObject
{
    HMFUnfairLock *_lock;
    NSMutableDictionary *_eventCounters;
    NSDate *_lastSaveTime;
    NSObject<OS_dispatch_queue> *_workQueue;
    id <HMDEventCountersStoring> _counterStorage;
    double _saveInterval;
}

+ (id)sharedEventCountersManager;
- (void).cxx_destruct;
@property(nonatomic) double saveInterval; // @synthesize saveInterval=_saveInterval;
@property(readonly) id <HMDEventCountersStoring> counterStorage; // @synthesize counterStorage=_counterStorage;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) NSDate *lastSaveTime; // @synthesize lastSaveTime=_lastSaveTime;
@property(retain, nonatomic) NSMutableDictionary *eventCounters; // @synthesize eventCounters=_eventCounters;
- (void)archiveEventCountersWithEventCountersSnapshot:(id)arg1;
- (id)unarchivedEventCounters;
- (void)_save;
- (void)_performOnUpdate;
- (void)forceSave;
- (void)_resetEventCountersForRequestGroup:(id)arg1;
- (void)_resetEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (id)_fetchAllEventCounters;
- (id)_fetchEventCountersForRequestGroup:(id)arg1;
- (unsigned long long)_fetchEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (id)_getOrCreateEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)_incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2 withValue:(unsigned long long)arg3;
- (void)resetAllEventCounters;
- (void)resetEventCountersForRequestGroup:(id)arg1;
- (void)resetEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (id)fetchAllEventCounters;
- (unsigned long long)fetchAggregatedEventCountersForRequestGroup:(id)arg1;
- (id)fetchEventCountersForRequestGroup:(id)arg1;
- (unsigned long long)fetchEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2 withValue:(unsigned long long)arg3;
- (void)addObserver:(id)arg1 forEventName:(id)arg2 requestGroup:(id)arg3;
- (id)initWithEventCountersStorage:(id)arg1 saveInterval:(double)arg2;
- (id)init;

@end

