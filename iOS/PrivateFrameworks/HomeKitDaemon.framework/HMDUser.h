//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class AVOutputDeviceAuthorizedPeer, HAPPairingIdentity, HMBShareUserID, HMDAccountHandle, HMDAccountIdentifier, HMDAssistantAccessControl, HMDCloudShareMessenger, HMDCloudShareTrustManager, HMDHome, HMDPersonSettingsManager, HMDPhotosPersonManager, HMDSiriMultiUserNewLanguageNotificationManager, HMDUserDataController, HMDUserPhotosPersonDataManager, HMDUserSettingsBackingStoreController, HMFMessageDispatcher, HMPhotosPersonManagerSettings, HMUserHomeAccessSettings, HMUserPresenceAuthorization, NAFuture, NSData, NSDictionary, NSNumber, NSObject, NSSet, NSString, NSUUID;
@protocol HMDUserAccessorySettingsDataController, HMDUserDataSource, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface HMDUser : HMFObject
{
    struct os_unfair_lock_s _lock;
    NSUUID *_uuid;
    _Bool _remoteAccessAllowed;
    HMDAccountHandle *_accountHandle;
    HMDAccountIdentifier *_accountIdentifier;
    NSString *_mergeIdentifier;
    _Bool _needsiTunesMultiUserRepair;
    _Bool _ownerCompletedSwitchingHomesOnboardingUI;
    _Bool _ownerDismissedAccessCodeOnboarding;
    _Bool _ownerDismissedAccessoryFirmwareUpdateOnboarding;
    _Bool _ownerDismissedAnnounceOnboarding;
    _Bool _ownerDismissedCameraRecordingOnboarding;
    _Bool _ownerDismissedCameraRecordingSetupBanner;
    _Bool _ownerDismissedCameraUpgradeOfferBanner;
    _Bool _ownerDismissedHomeTheaterOnboarding;
    _Bool _ownerDismissedIdentifyVoiceOnboarding;
    _Bool _ownerDismissedIdentifyVoiceSetupBanner;
    _Bool _ownerDismissedNaturalLightingOnboarding;
    _Bool _ownerDismissedTVViewingProfileOnboarding;
    _Bool _ownerDismissedTVViewingProfileSetupBanner;
    _Bool _ownerDismissedUserSplitMediaAccountWarning;
    _Bool _ownerDismissedWalletKeyExpressModeOnboarding;
    _Bool _ownerDismissedWelcomeUI;
    _Bool _ownerHasUserSeenRMVNewLanguageNotification;
    _Bool _allowExplicitContent;
    _Bool _allowiTunesAccount;
    _Bool _dolbyAtmosEnabled;
    _Bool _losslessMusicEnabled;
    _Bool _playbackInfluencesEnabled;
    _Bool _siriIdentifyVoiceEnabled;
    unsigned long long _privilege;
    HMDHome *_home;
    NSString *_userID;
    HMUserPresenceAuthorization *_presenceAuthStatus;
    unsigned long long _camerasAccessLevel;
    HAPPairingIdentity *_pairingIdentity;
    NSString *_displayName;
    HMDAssistantAccessControl *_assistantAccessControl;
    unsigned long long _announceAccessLevel;
    unsigned long long _audioAnalysisUserDropInAccessLevel;
    long long _userCloudShareWithOwnerMessagingState;
    HMUserHomeAccessSettings *_homeAccessSettings;
    HMBShareUserID *_cloudShareID;
    NAFuture *_cloudShareIDFuture;
    HMDUserPhotosPersonDataManager *_photosPersonDataManager;
    HMDPersonSettingsManager *_personSettingsManager;
    NSString *_accessCode;
    NSUUID *_accessCodeChangedByUserUUID;
    HMDUserDataController *_userDataController;
    NSDictionary *_ownerCharacteristicAuthorizationData;
    HMDCloudShareMessenger *_shareMessenger;
    HMDUserSettingsBackingStoreController *_privateBackingStoreController;
    id <HMDUserDataSource> _dataSource;
    HMDSiriMultiUserNewLanguageNotificationManager *_siriMultiUserNewLanguageNotificationManager;
    id <HMDUserAccessorySettingsDataController> _accessorySettingsDataController;
    NSSet *_cachedCurrentUserPairingIdentityIdentifiers;
    NSObject<OS_dispatch_queue> *_queue;
    HMFMessageDispatcher *_messageDispatcher;
    unsigned long long _announceNotificationModeForCurrentDevice;
    HMDCloudShareTrustManager *_cloudShareTrustManager;
    HMDUserSettingsBackingStoreController *_sharedBackingStoreController;
    unsigned long long _ownerAddSceneButtonPresentedCount;
}

+ (id)appendRootPath:(id)arg1 withSettingPath:(id)arg2;
+ (id)getSettingsUsingPreOrderTraversal:(id)arg1 rootUUID:(id)arg2 keyPath:(id)arg3;
+ (id)localSharedZoneForSharedUserUUID:(id)arg1 database:(id)arg2;
+ (id)localPrivateZoneForSharedUserUUID:(id)arg1 database:(id)arg2;
+ (id)_openZoneWithName:(id)arg1 inDatabase:(id)arg2;
+ (void)_saveSharedUserSettingsToCoreData:(id)arg1 managedObjectContext:(id)arg2 rootShareObject:(id)arg3;
+ (void)__findOrCreateCKSharedUserAccessorySettingsForAccessory:(id)arg1 usingManagedObjectContext:(id)arg2 rootShareObject:(id)arg3 listeningHistoryEnabled:(id)arg4 mediaContentProfileEnabled:(id)arg5 personalRequestsEnabled:(id)arg6;
+ (void)_fetchAndMigrateAssistantAccessControlModelV2ToCoreDataFromLocalZone:(id)arg1 managedObjectContext:(id)arg2 rootShareObject:(id)arg3;
+ (void)_fetchAndMigrateMediaContentProfileAccessControlModelToCoreDataFromLocalZone:(id)arg1 managedObjectContext:(id)arg2 rootShareObject:(id)arg3;
+ (void)_fetchAndMigrateUserListeningHistoryUpdatedControlModelToCoreDataFromLocalZone:(id)arg1 managedObjectContext:(id)arg2 rootShareObject:(id)arg3;
+ (void)_fetchAndMigratePhotosPersonManagerSettingsFromLocalZone:(id)arg1 managedObjectContext:(id)arg2 rootShareObject:(id)arg3;
+ (void)migrateHH1SettingsToHH2ForSharedUserWithUUID:(id)arg1 homeUUID:(id)arg2 privateZone:(id)arg3 backingStoreContext:(id)arg4;
+ (void)migrateHH1SettingsToHH2ForSharedUserWithUUID:(id)arg1 homeUUID:(id)arg2 sharedZone:(id)arg3 backingStoreContext:(id)arg4;
+ (id)userDictionaryWithUserID:(id)arg1 privilege:(unsigned long long)arg2 remoteAccessAllowed:(_Bool)arg3 cameraAccessLevel:(unsigned long long)arg4 announceAccessAllowed:(id)arg5 announceAccessLevel:(unsigned long long)arg6 audioAnalysisUserDropInAccessLevel:(unsigned long long)arg7 homeAccessSettings:(id)arg8;
+ (id)userWithDictionary:(id)arg1 home:(id)arg2;
+ (id)userWithDictionary:(id)arg1;
+ (unsigned long long)privilegeFromDictionary:(id)arg1;
+ (_Bool)supportsSecureCoding;
+ (_Bool)hasMessageReceiverChildren;
+ (id)logCategory;
+ (id)getSyncDataFromLocalDiskWithArchive:(id)arg1;
+ (id)allLastUserSyncDataArchives;
+ (id)allowedClassesForSyncData;
+ (id)allowedClassesForAnnounceNotificationMode;
+ (id)sharedZoneNameForUserUUID:(id)arg1;
+ (id)privateZoneNameForUserUUID:(id)arg1;
+ (id)UUIDWithUserID:(id)arg1 forHomeIdentifier:(id)arg2 uuid:(id)arg3 pairingIdentity:(id)arg4;
+ (id)userIDForAccountHandle:(id)arg1;
+ (id)ownerWithUserID:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 homeManager:(id)arg4;
+ (id)currentUserWithPrivilege:(unsigned long long)arg1 forHome:(id)arg2;
+ (id)currentUserWithPrivilege:(unsigned long long)arg1 forHome:(id)arg2 forceHH1Key:(_Bool)arg3;
+ (id)av_authorizedPeerForPairingIdentity:(id)arg1 isOwner:(_Bool)arg2;
- (void).cxx_destruct;
@property _Bool siriIdentifyVoiceEnabled; // @synthesize siriIdentifyVoiceEnabled=_siriIdentifyVoiceEnabled;
@property _Bool playbackInfluencesEnabled; // @synthesize playbackInfluencesEnabled=_playbackInfluencesEnabled;
@property _Bool losslessMusicEnabled; // @synthesize losslessMusicEnabled=_losslessMusicEnabled;
@property _Bool dolbyAtmosEnabled; // @synthesize dolbyAtmosEnabled=_dolbyAtmosEnabled;
@property _Bool allowiTunesAccount; // @synthesize allowiTunesAccount=_allowiTunesAccount;
@property _Bool allowExplicitContent; // @synthesize allowExplicitContent=_allowExplicitContent;
@property _Bool ownerHasUserSeenRMVNewLanguageNotification; // @synthesize ownerHasUserSeenRMVNewLanguageNotification=_ownerHasUserSeenRMVNewLanguageNotification;
@property _Bool ownerDismissedWelcomeUI; // @synthesize ownerDismissedWelcomeUI=_ownerDismissedWelcomeUI;
@property _Bool ownerDismissedWalletKeyExpressModeOnboarding; // @synthesize ownerDismissedWalletKeyExpressModeOnboarding=_ownerDismissedWalletKeyExpressModeOnboarding;
@property _Bool ownerDismissedUserSplitMediaAccountWarning; // @synthesize ownerDismissedUserSplitMediaAccountWarning=_ownerDismissedUserSplitMediaAccountWarning;
@property _Bool ownerDismissedTVViewingProfileSetupBanner; // @synthesize ownerDismissedTVViewingProfileSetupBanner=_ownerDismissedTVViewingProfileSetupBanner;
@property _Bool ownerDismissedTVViewingProfileOnboarding; // @synthesize ownerDismissedTVViewingProfileOnboarding=_ownerDismissedTVViewingProfileOnboarding;
@property _Bool ownerDismissedNaturalLightingOnboarding; // @synthesize ownerDismissedNaturalLightingOnboarding=_ownerDismissedNaturalLightingOnboarding;
@property _Bool ownerDismissedIdentifyVoiceSetupBanner; // @synthesize ownerDismissedIdentifyVoiceSetupBanner=_ownerDismissedIdentifyVoiceSetupBanner;
@property _Bool ownerDismissedIdentifyVoiceOnboarding; // @synthesize ownerDismissedIdentifyVoiceOnboarding=_ownerDismissedIdentifyVoiceOnboarding;
@property _Bool ownerDismissedHomeTheaterOnboarding; // @synthesize ownerDismissedHomeTheaterOnboarding=_ownerDismissedHomeTheaterOnboarding;
@property _Bool ownerDismissedCameraUpgradeOfferBanner; // @synthesize ownerDismissedCameraUpgradeOfferBanner=_ownerDismissedCameraUpgradeOfferBanner;
@property _Bool ownerDismissedCameraRecordingSetupBanner; // @synthesize ownerDismissedCameraRecordingSetupBanner=_ownerDismissedCameraRecordingSetupBanner;
@property _Bool ownerDismissedCameraRecordingOnboarding; // @synthesize ownerDismissedCameraRecordingOnboarding=_ownerDismissedCameraRecordingOnboarding;
@property _Bool ownerDismissedAnnounceOnboarding; // @synthesize ownerDismissedAnnounceOnboarding=_ownerDismissedAnnounceOnboarding;
@property _Bool ownerDismissedAccessoryFirmwareUpdateOnboarding; // @synthesize ownerDismissedAccessoryFirmwareUpdateOnboarding=_ownerDismissedAccessoryFirmwareUpdateOnboarding;
@property _Bool ownerDismissedAccessCodeOnboarding; // @synthesize ownerDismissedAccessCodeOnboarding=_ownerDismissedAccessCodeOnboarding;
@property _Bool ownerCompletedSwitchingHomesOnboardingUI; // @synthesize ownerCompletedSwitchingHomesOnboardingUI=_ownerCompletedSwitchingHomesOnboardingUI;
@property unsigned long long ownerAddSceneButtonPresentedCount; // @synthesize ownerAddSceneButtonPresentedCount=_ownerAddSceneButtonPresentedCount;
@property(retain) HMDUserSettingsBackingStoreController *sharedBackingStoreController; // @synthesize sharedBackingStoreController=_sharedBackingStoreController;
@property(retain) HMDCloudShareTrustManager *cloudShareTrustManager; // @synthesize cloudShareTrustManager=_cloudShareTrustManager;
@property unsigned long long announceNotificationModeForCurrentDevice; // @synthesize announceNotificationModeForCurrentDevice=_announceNotificationModeForCurrentDevice;
@property(retain) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(readonly) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly) NSSet *cachedCurrentUserPairingIdentityIdentifiers; // @synthesize cachedCurrentUserPairingIdentityIdentifiers=_cachedCurrentUserPairingIdentityIdentifiers;
@property(retain) id <HMDUserAccessorySettingsDataController> accessorySettingsDataController; // @synthesize accessorySettingsDataController=_accessorySettingsDataController;
@property(retain) HMDSiriMultiUserNewLanguageNotificationManager *siriMultiUserNewLanguageNotificationManager; // @synthesize siriMultiUserNewLanguageNotificationManager=_siriMultiUserNewLanguageNotificationManager;
@property(readonly) id <HMDUserDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property _Bool needsiTunesMultiUserRepair; // @synthesize needsiTunesMultiUserRepair=_needsiTunesMultiUserRepair;
@property(retain) HMDUserSettingsBackingStoreController *privateBackingStoreController; // @synthesize privateBackingStoreController=_privateBackingStoreController;
@property(retain) HMDCloudShareMessenger *shareMessenger; // @synthesize shareMessenger=_shareMessenger;
@property(retain) NSDictionary *ownerCharacteristicAuthorizationData; // @synthesize ownerCharacteristicAuthorizationData=_ownerCharacteristicAuthorizationData;
@property(retain) HMDUserDataController *userDataController; // @synthesize userDataController=_userDataController;
@property(retain) NSUUID *accessCodeChangedByUserUUID; // @synthesize accessCodeChangedByUserUUID=_accessCodeChangedByUserUUID;
@property(copy) NSString *accessCode; // @synthesize accessCode=_accessCode;
@property(retain) HMDPersonSettingsManager *personSettingsManager; // @synthesize personSettingsManager=_personSettingsManager;
@property(retain) HMDUserPhotosPersonDataManager *photosPersonDataManager; // @synthesize photosPersonDataManager=_photosPersonDataManager;
@property(readonly) NAFuture *cloudShareIDFuture; // @synthesize cloudShareIDFuture=_cloudShareIDFuture;
@property(retain) HMBShareUserID *cloudShareID; // @synthesize cloudShareID=_cloudShareID;
@property(copy, setter=setUUID:) NSUUID *uuid; // @synthesize uuid=_uuid;
- (id)allAccessoryUUID;
- (void)applyConditionalValueUpdateToModels:(id)arg1;
- (id)pushTokensForDevicesObservingSubjectDevice:(id)arg1 subActivity:(id)arg2;
- (void)deregisterIDSActivityObserver:(id)arg1;
- (void)deregisterIDSActivityObserver:(id)arg1 subActivity:(id)arg2 subjectDevice:(id)arg3;
- (void)updateIDSActivityObserver:(id)arg1;
- (void)registerIDSActivityObserver:(id)arg1 subActivity:(id)arg2 subjectDevice:(id)arg3;
- (void)cloudShareTrustManager:(id)arg1 didRemoveUserWithUUID:(id)arg2;
- (void)didRemoveTrustZoneInCloudShareTrustManager:(id)arg1;
- (void)didFinishConfiguringForCloudShareTrustManager:(id)arg1;
- (void)cloudShareTrustManager:(id)arg1 didFetchOwnerCloudShareID:(id)arg2;
- (_Bool)isOwnerCapableForTrustManager:(id)arg1;
- (id)homeForCloudShareTrustManager:(id)arg1;
- (id)ownerForCloudShareTrustManager:(id)arg1;
- (id)zoneNameForCloudShareTrustManager:(id)arg1;
- (_Bool)cloudShareTrustManager:(id)arg1 shouldShareTrustWithUser:(id)arg2;
- (void)configureCloudShareTrustManager;
- (id)trustTargetUUID;
- (void)updateCloudShareID:(id)arg1;
- (void)removeCloudShareID;
- (id)setHasUserSeenRMVNewLanguageNotification:(_Bool)arg1;
- (_Bool)userDataController:(id)arg1 isHAPAccessory:(id)arg2;
- (_Bool)userDataController:(id)arg1 isAppleMediaAccessory:(id)arg2;
- (id)privateZoneControllerForUserDataController:(id)arg1;
- (id)sharedZoneControllerForUserDataController:(id)arg1;
- (void)postUserSettingsUpdatedNotificationWithReason:(id)arg1;
- (void)userDataControllerDidUpdateMediaContentProfile:(id)arg1;
- (void)userDataControllerDidUpdateAssistantAccessControl:(id)arg1;
- (_Bool)userDataController:(id)arg1 isMediaContentProfileCapableAccessoryID:(id)arg2;
- (_Bool)userDataController:(id)arg1 isPersonalRequestCapableAccessoryID:(id)arg2;
- (void)backingStoreController:(id)arg1 didUpdatePhotosPersonManagerSettingsModel:(id)arg2 previousPhotosPersonManagerSettingsModel:(id)arg3;
- (id)ownerForUserSettingsBackingStoreController:(id)arg1;
- (id)backingStoreController:(id)arg1 createParticipantManagerForCloudZone:(id)arg2;
- (void)didStopBackingStoreController:(id)arg1;
- (void)didStartLocalZoneForBackingStoreController:(id)arg1;
- (void)didStartBackingStoreController:(id)arg1;
@property(readonly) NSUUID *userUUID;
@property(readonly) _Bool isRunningOnHomeOwnersDevice;
- (id)settingsControllerFollowerKeyPaths:(id)arg1;
- (id)dictionaryEncoding;
- (void)removeCloudData;
- (id)modelObjectWithChangeType:(unsigned long long)arg1 version:(long long)arg2;
- (id)modelObjectWithChangeType:(unsigned long long)arg1;
- (id)backingStoreObjects:(long long)arg1;
- (void)migrateCloudZone:(id)arg1 migrationQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;
- (void)_transactionPhotosPersonManagerSettingsUpdated:(id)arg1;
- (void)_transactionUserSettingsUpdated:(id)arg1;
- (void)_transactionAccessorySettingsUpdated:(id)arg1;
- (void)_transactionUserUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;
- (id)sharedSettingsAsDictionary;
- (id)ownerPrivateSettingsAsDictionary;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, copy, nonatomic) NSString *encodingRemoteDisplayName;
- (id)initWithCoder:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
- (id)messageDestination;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)logIdentifier;
@property(readonly, copy) NSData *publicKey;
@property(readonly, copy) NSString *pairingUsername;
@property(copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly) NSNumber *uniqueIDForAccessories;
@property(copy) HMUserHomeAccessSettings *homeAccessSettings; // @synthesize homeAccessSettings=_homeAccessSettings;
@property(readonly) NSNumber *notificationContextNFCIdentifier;
@property(readonly) NSNumber *notificationContextHAPIdentifier;
- (void)configurePersonSettingsManager;
- (void)configurePhotosPersonDataManager;
@property(readonly) HMDPhotosPersonManager *photosPersonManager;
@property(readonly, copy) HMPhotosPersonManagerSettings *photosPersonManagerSettings;
- (id)announceNotificationFileName;
- (id)announceNotificationFileNameForUserUUID:(id)arg1;
- (void)_removeAnnounceNotificationModeFileFromDiskForUserUUID:(id)arg1;
- (void)_migrateAnnounceNotificationModeIfNeeded;
- (id)userIDsToMigrateAnnounceSettingsFrom;
- (void)_readAnnounceNotificationModeFromLocalStore;
- (void)_updateAnnounceNotificationModeToLocalStore:(unsigned long long)arg1 managedObjectContext:(id)arg2;
- (void)_saveAnnounceSettingsToLocalStore:(unsigned long long)arg1;
- (void)_handleAnnounceSettingsUpdate:(id)arg1;
- (void)handleRemovedAccessory:(id)arg1;
- (void)removeAccessoriesFromAssistantAccessControlList:(id)arg1;
- (void)_handleMediaContentProfileAccessControlUpdate:(id)arg1;
- (void)handleMediaContentProfileAccessControlUpdate:(id)arg1;
- (void)_handleAssistantAccessControlUpdate:(id)arg1;
- (void)handleAssistantAccessControlUpdate:(id)arg1;
- (_Bool)isCurrentUserAndOwner;
@property(retain) HMDAssistantAccessControl *assistantAccessControl; // @synthesize assistantAccessControl=_assistantAccessControl;
@property(readonly) NSUUID *assistantAccessControlModelUUID;
@property(readonly, getter=isValid) _Bool valid;
@property(readonly, getter=isRemoteGateway) _Bool remoteGateway;
@property unsigned long long audioAnalysisUserDropInAccessLevel; // @synthesize audioAnalysisUserDropInAccessLevel=_audioAnalysisUserDropInAccessLevel;
@property unsigned long long announceAccessLevel; // @synthesize announceAccessLevel=_announceAccessLevel;
- (unsigned long long)defaultAnnounceUserAccessLevel;
@property(readonly, getter=isAnnounceAccessAllowed) _Bool announceAccessAllowed;
@property unsigned long long camerasAccessLevel; // @synthesize camerasAccessLevel=_camerasAccessLevel;
- (_Bool)_setRemoteAccessAllowed:(_Bool)arg1;
@property(getter=isRemoteAccessAllowed) _Bool remoteAccessAllowed; // @synthesize remoteAccessAllowed=_remoteAccessAllowed;
- (_Bool)refreshDisplayName;
- (void)setDisplayName:(id)arg1;
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy) HMUserPresenceAuthorization *presenceAuthStatus; // @synthesize presenceAuthStatus=_presenceAuthStatus;
- (void)__handleRemovedAccount:(id)arg1;
- (void)__handleAddedAccount:(id)arg1;
- (_Bool)requiresMakoSupport;
- (id)account;
- (void)_handleNeedsiTunesMultiUserRepair:(id)arg1;
- (void)_handleShareClientRepairRequest:(id)arg1;
- (void)_sendAccountMessage:(id)arg1 payload:(id)arg2 deviceCapabilities:(id)arg3 multicast:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_sendSecureShareClientPayloadToMostEligibleDevice:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_handleMultiUserSharePayloadRequest:(id)arg1;
- (void)_handleShareLookupInfoRequest:(id)arg1;
- (void)_handleLegacyPairingIdentityRequest:(id)arg1;
- (void)_handlePairingIdentityRequest:(id)arg1;
- (_Bool)matchingPairingIdentityIdentifier:(id)arg1;
- (void)deregisterIdentity;
- (void)registerIdentity;
@property(copy) HAPPairingIdentity *pairingIdentity; // @synthesize pairingIdentity=_pairingIdentity;
@property(readonly, copy, nonatomic) NSUUID *spiClientIdentifier;
@property(copy) NSString *mergeIdentifier;
@property(copy) HMDAccountIdentifier *accountIdentifier;
- (void)setAccountHandle:(id)arg1;
- (id)accountHandle;
@property(readonly) _Bool isCurrentUser;
- (_Bool)updateAdministrator:(_Bool)arg1;
@property unsigned long long privilege; // @synthesize privilege=_privilege;
@property(readonly, getter=isPending) _Bool pending;
@property(readonly, getter=isOwner) _Bool owner;
@property(readonly, getter=isAdministrator) _Bool administrator;
- (unsigned long long)_compatiblePrivilege;
@property __weak HMDHome *home; // @synthesize home=_home;
- (unsigned long long)allowedRemoteEventAccessUserTypes;
- (void)deregisterForMessages;
- (void)registerForMessages;
- (void)unconfigure;
- (void)_recoverTrustManagerDueToUUIDChange;
- (void)updateSharedBackingStoreControllerParticipants;
- (void)_recoverUserSettingsDueToUUIDChange;
- (void)recoverUserCloudDataDueToUUIDChangeFromOldUUID:(id)arg1;
- (void)_handleCloudShareWithOwnerMessageError;
@property long long userCloudShareWithOwnerMessagingState; // @synthesize userCloudShareWithOwnerMessagingState=_userCloudShareWithOwnerMessagingState;
- (long long)sharedUserSettingsLogEventBackingStoreControllerRunState;
- (void)initializeUserSettingsWithHome:(id)arg1;
- (id)sharedZoneName;
- (id)privateZoneName;
- (void)handleUserDataControllerInitialized:(id)arg1;
- (void)configureWithHome:(id)arg1;
- (_Bool)hasDeviceWithHomeKitVersionGreaterThanVersion:(id)arg1;
- (id)dumpState;
- (id)attributeDescriptions;
- (id)shortDescription;
- (_Bool)isAccountEqualWithUser:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)dealloc;
- (id)initWithAccountHandle:(id)arg1 homeUUID:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4 dataSource:(id)arg5;
- (id)initWithAccountHandle:(id)arg1 homeUUID:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4;
- (id)initWithAccountHandle:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4 dataSource:(id)arg5;
- (id)initWithAccountHandle:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4;
- (id)initWithModelObject:(id)arg1;
- (id)privateSettingValuesByKeyPath;
- (id)sharedSettingValuesByKeyPath;
- (void)_setUuidUnsafely:(id)arg1;
@property(readonly, copy) AVOutputDeviceAuthorizedPeer *av_authorizedPeer;
@property(readonly) _Bool hasCameraClipsAccess;
@property(readonly, copy) NSData *nfcIssuerKeyIdentifier;

// Remaining properties
@property(readonly, getter=isCurrentUser) _Bool currentUser;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSSet *messageReceiverChildren;
@property(readonly) Class superclass;

@end

