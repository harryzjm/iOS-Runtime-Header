//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HomeKitDaemon/HMDAccessorySettingsControllerDataSource-Protocol.h>
#import <HomeKitDaemon/HMDAccessorySettingsControllerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDAccessoryUserManagement-Protocol.h>
#import <HomeKitDaemon/HMDAppleMediaAccessoryLocalMessageHandlerDataSource-Protocol.h>
#import <HomeKitDaemon/HMDAppleMediaAccessoryMessageRouterDataSource-Protocol.h>
#import <HomeKitDaemon/HMDAppleMediaAccessoryMessengerFactory-Protocol.h>
#import <HomeKitDaemon/HMDAppleMediaAccessoryMetricsDispatcherDataSource-Protocol.h>
#import <HomeKitDaemon/HMDAppleMediaAccessorySleepWakeStateControllerDataSource-Protocol.h>
#import <HomeKitDaemon/HMDDeviceControllerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDLanguageValueListSettingDataProvider-Protocol.h>
#import <HomeKitDaemon/HMDMediaDestinationControllerDataSource-Protocol.h>
#import <HomeKitDaemon/HMDMediaDestinationControllerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDMediaDestinationManagerDataSource-Protocol.h>
#import <HomeKitDaemon/HMDMediaDestinationManagerDelegate-Protocol.h>
#import <HomeKitDaemon/HMFLogging-Protocol.h>

@class HMDAccessorySettingsController, HMDAccessorySetupMetricDispatcher, HMDAccessorySymptomHandler, HMDAppleMediaAccessoryMessenger, HMDAppleMediaAccessoryMetricsDispatcher, HMDAppleMediaAccessorySleepWakeStateController, HMDBackingStore, HMDDevice, HMDDeviceController, HMDMediaDestinationController, HMDMediaDestinationManager, HMDRemoteLoginHandler, HMDTargetControlManager, HMFActivity, HMFPairingIdentity, HMFSoftwareVersion, HMFWiFiManager, HMFWiFiNetworkInfo, HMMediaDestination, HMMediaDestinationControllerData, NSArray, NSNotificationCenter, NSObject, NSString;
@protocol HMDAppleMediaAccessoryModelDataSource, OS_os_log;

@interface HMDAppleMediaAccessory <HMDAppleMediaAccessoryLocalMessageHandlerDataSource, HMDLanguageValueListSettingDataProvider, HMDAppleMediaAccessoryMessengerFactory, HMDAppleMediaAccessoryMessageRouterDataSource, HMDAccessorySettingsControllerDataSource, HMDMediaDestinationControllerDataSource, HMDMediaDestinationControllerDelegate, HMDMediaDestinationManagerDataSource, HMDMediaDestinationManagerDelegate, HMDDeviceControllerDelegate, HMDAppleMediaAccessoryMetricsDispatcherDataSource, HMDAppleMediaAccessorySleepWakeStateControllerDataSource, HMDAccessorySettingsControllerDelegate, HMDAccessoryUserManagement, HMFLogging>
{
    HMDDevice *_device;
    HMDDeviceController *_deviceController;
    HMMediaDestination *_committedAudioDestination;
    HMMediaDestinationControllerData *_committedAudioDestinationControllerData;
    NSObject<OS_os_log> *_logger;
    _Bool _deviceReachable;
    _Bool _fixedPairingIdentityInCloud;
    HMFPairingIdentity *_pairingIdentity;
    HMDRemoteLoginHandler *_remoteLoginHandler;
    HMDAccessorySymptomHandler *_symptomsHandler;
    HMFSoftwareVersion *_softwareVersion;
    HMFWiFiNetworkInfo *_wifiNetworkInfo;
    HMFWiFiNetworkInfo *_lastStagedWifiNetworkInfo;
    HMDTargetControlManager *_targetControlManager;
    unsigned long long _supportedStereoPairVersions;
    HMDAccessorySettingsController *_settingsController;
    NSArray *_supportedMultiUserLanguageCodes;
    HMDMediaDestinationManager *_audioDestinationManager;
    HMDMediaDestinationController *_audioDestinationController;
    long long _fallbackMediaUserType;
    HMFPairingIdentity *_lastCreatedPairingIdentity;
    id <HMDAppleMediaAccessoryModelDataSource> _modelDataSource;
    CDUnknownBlockType _deviceMediaRouteIdentifierFactory;
    HMDAppleMediaAccessoryMetricsDispatcher *_metricsDispatcher;
    HMDAppleMediaAccessorySleepWakeStateController *_sleepWakeStateController;
    HMDAppleMediaAccessoryMessenger *_messenger;
    HMFWiFiManager *_wifiManager;
    NSNotificationCenter *_notificationCenter;
    CDUnknownBlockType _settingsConnectionFactory;
}

+ (id)logCategory;
+ (_Bool)supportsSecureCoding;
+ (_Bool)hasMessageReceiverChildren;
+ (_Bool)shouldAcceptMessage:(id)arg1 home:(id)arg2 privilege:(unsigned long long)arg3;
- (void).cxx_destruct;
@property(copy) CDUnknownBlockType settingsConnectionFactory; // @synthesize settingsConnectionFactory=_settingsConnectionFactory;
@property(retain) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(retain) HMFWiFiManager *wifiManager; // @synthesize wifiManager=_wifiManager;
@property(retain) HMDAppleMediaAccessoryMessenger *messenger; // @synthesize messenger=_messenger;
@property(retain) HMDAppleMediaAccessorySleepWakeStateController *sleepWakeStateController; // @synthesize sleepWakeStateController=_sleepWakeStateController;
@property(retain) HMDAppleMediaAccessoryMetricsDispatcher *metricsDispatcher; // @synthesize metricsDispatcher=_metricsDispatcher;
@property(readonly, copy) CDUnknownBlockType deviceMediaRouteIdentifierFactory; // @synthesize deviceMediaRouteIdentifierFactory=_deviceMediaRouteIdentifierFactory;
@property(readonly) id <HMDAppleMediaAccessoryModelDataSource> modelDataSource; // @synthesize modelDataSource=_modelDataSource;
@property(retain, nonatomic) HMFPairingIdentity *lastCreatedPairingIdentity; // @synthesize lastCreatedPairingIdentity=_lastCreatedPairingIdentity;
@property(nonatomic) _Bool fixedPairingIdentityInCloud; // @synthesize fixedPairingIdentityInCloud=_fixedPairingIdentityInCloud;
@property(readonly, nonatomic) long long fallbackMediaUserType; // @synthesize fallbackMediaUserType=_fallbackMediaUserType;
@property(retain) HMDMediaDestinationController *audioDestinationController; // @synthesize audioDestinationController=_audioDestinationController;
@property(retain) HMDMediaDestinationManager *audioDestinationManager; // @synthesize audioDestinationManager=_audioDestinationManager;
@property(retain) NSArray *supportedMultiUserLanguageCodes; // @synthesize supportedMultiUserLanguageCodes=_supportedMultiUserLanguageCodes;
@property(retain) HMDAccessorySettingsController *settingsController; // @synthesize settingsController=_settingsController;
@property(retain, nonatomic) HMDTargetControlManager *targetControlManager; // @synthesize targetControlManager=_targetControlManager;
@property(readonly) HMDAccessorySymptomHandler *symptomsHandler; // @synthesize symptomsHandler=_symptomsHandler;
@property(readonly) HMDRemoteLoginHandler *remoteLoginHandler; // @synthesize remoteLoginHandler=_remoteLoginHandler;
- (id)currentDeviceProductInfoForAppleMediaAccessorySleepWakeStateController:(id)arg1;
- (id)deviceForAppleMediaAccessorySleepWakeStateController:(id)arg1;
- (id)currentRoomForAppleMediaAccessoryMetricsDispatcher:(id)arg1;
- (id)logIdentifier;
- (id)dumpSimpleState;
- (id)dumpState;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)languagesChangedForAccessorySettingsController:(id)arg1;
- (id)assistantAccessControlModelWithRemovedAccessoriesForAccessorySettingsController:(id)arg1;
- (id)remoteMessageDestinationForAccessorySettingsController:(id)arg1 target:(id)arg2;
- (id)supportedMultiUserLanguageCodesForAccessorySettingsController:(id)arg1;
- (_Bool)isMultiUserEnabledForAccessorySettingsController:(id)arg1;
- (void)accessorySettingsController:(id)arg1 saveWithReason:(id)arg2;
- (void)accessorySettingsController:(id)arg1 saveWithReason:(id)arg2 model:(id)arg3;
- (id)modelsToMigrateSettingsForController:(id)arg1;
- (id)modelsToMakeSettingsForController:(id)arg1 parentUUID:(id)arg2;
@property double setupStartTimestamp;
@property(retain) HMFActivity *setupActivity;
@property(readonly) HMDAccessorySetupMetricDispatcher *accessorySetupMetricDispatcher;
@property(readonly) HMDBackingStore *backingStore;
- (void)mediaDestinationManagerDidUpdateStagedValues:(id)arg1;
- (id)rootDestinationManagerForMediaDestinationManager:(id)arg1;
- (id)mediaDestinationManager:(id)arg1 destinationControllerWithIdentifier:(id)arg2;
- (id)targetAccessoryForMediaDestinationManager:(id)arg1;
- (void)mediaDestinationControllerDidUpdateStagedValues:(id)arg1;
- (id)currentDestinationTypeForMediaDestinationControllerMetricsEventDispatcher:(id)arg1;
- (long long)mediaDestinationControllerMetricsEventDispatcher:(id)arg1 destinationTypeForDestinationWithIdentifier:(id)arg2;
- (_Bool)isTriggeredOnControllerDeviceForMediaDestinationControllerMetricsEventDispatcher:(id)arg1;
- (id)currentUserForMediaDestinationControllerMetricsEventDispatcher:(id)arg1;
- (id)mediaDestinationController:(id)arg1 rootDestinationWithDecendantIdentifier:(id)arg2;
- (id)targetAccessoryForMediaDestinationController:(id)arg1;
- (id)mediaDestinationController:(id)arg1 destinationWithParentIdentifier:(id)arg2;
- (id)mediaDestinationController:(id)arg1 destinationManagerWithIdentifier:(id)arg2;
- (id)availableDestinationIdentifiersForMediaDestinationController:(id)arg1;
- (id)messageReceiverChildren;
- (void)deviceController:(id)arg1 didUpdateDevice:(id)arg2;
- (void)handleRemovedMediaDestinationControllerModel:(id)arg1 message:(id)arg2;
- (void)handleRemovedMediaDestinationModel:(id)arg1 message:(id)arg2;
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;
- (void)handleUpdatedMediaDestinationModel:(id)arg1 message:(id)arg2;
- (void)handleUpdatedMediaDestinationControllerModel:(id)arg1 message:(id)arg2;
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;
- (id)backingStoreObjects:(long long)arg1;
- (void)populateModelObject:(id)arg1 version:(long long)arg2;
- (id)modelObjectWithChangeType:(unsigned long long)arg1;
- (id)transactionWithObjectChangeType:(unsigned long long)arg1;
- (id)messageSendPolicy;
- (void)migrateAudioDestinationWithCloudZone:(id)arg1 migrationQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)migrateAudioDestinationControllerWithCloudZone:(id)arg1 migrationQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)migrateWithCloudZone:(id)arg1 migrationQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)remoteMessageDestination;
- (void)_relayRequestMessage:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
- (void)handleCurrentNetworkChangedNotification:(id)arg1;
- (void)updateWiFiNetworkInfo;
@property(retain) HMFWiFiNetworkInfo *lastStagedWifiNetworkInfo; // @synthesize lastStagedWifiNetworkInfo=_lastStagedWifiNetworkInfo;
- (void)setWifiNetworkInfo:(id)arg1;
@property(readonly) HMFWiFiNetworkInfo *wifiNetworkInfo; // @synthesize wifiNetworkInfo=_wifiNetworkInfo;
- (void)runTransactionWithPreferredMediaUserUUID:(id)arg1 selectionType:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)handleUpdatePreferredMediaUser:(id)arg1;
- (void)handleDeleteSiriHistoryRequest:(id)arg1;
- (void)_startUpdate:(id)arg1;
- (void)_fetchAvailableUpdate:(id)arg1;
- (_Bool)_allowSoftwareUpdateChangeFromSource:(unsigned long long)arg1;
- (void)_applySoftwareUpdateModel:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)supportsSoftwareUpdate;
- (void)_updateSoftwareVersion:(id)arg1;
- (void)setSoftwareVersion:(id)arg1;
@property(readonly) HMFSoftwareVersion *softwareVersion; // @synthesize softwareVersion=_softwareVersion;
- (void)handleRoomChanged:(id)arg1;
- (void)handleRoomNameChanged:(id)arg1;
- (void)_updateSupportedStereoPairVersions:(unsigned long long)arg1;
@property unsigned long long supportedStereoPairVersions; // @synthesize supportedStereoPairVersions=_supportedStereoPairVersions;
- (void)handleHomeUserRemovedNotification:(id)arg1;
- (_Bool)supportsSettings;
- (void)pairingsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)removeUser:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)addUser:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly) _Bool supportsUserManagement;
- (void)createPairingIdentity;
- (void)setPairingIdentity:(id)arg1;
- (void)_handleTriggerPairingIdentityUpdateNotification:(id)arg1;
- (void)notifyFrameworkOfUpdatedPairingIdentity;
@property(readonly, copy) HMFPairingIdentity *pairingIdentity; // @synthesize pairingIdentity=_pairingIdentity;
- (void)_handleUpdatedName:(id)arg1;
- (id)runtimeState;
- (long long)reachableTransports;
- (void)setRemotelyReachable:(_Bool)arg1;
- (_Bool)isRemotelyReachable;
- (void)removeAdvertisement:(id)arg1;
- (void)addAdvertisement:(id)arg1;
- (void)handleDeviceIsNotReachable:(id)arg1;
- (void)handleDeviceIsReachable:(id)arg1;
- (void)startMonitoringReachability;
- (id)deviceMonitor;
- (void)notifyClientsOfUpdatedAccessoryControllableValue:(_Bool)arg1;
@property(nonatomic, getter=isDeviceReachable) _Bool deviceReachable; // @synthesize deviceReachable=_deviceReachable;
- (void)updateRechabilityFromDevicePublishingState;
- (void)registerForPublishingNotifications;
- (void)handleDeviceIsPublishingChangedNotification:(id)arg1;
- (void)handleCurrentDeviceUpdated:(id)arg1;
- (_Bool)shouldUpdateWithDevice:(id)arg1 initialConfiguration:(_Bool)arg2;
- (void)updateWithDevice:(id)arg1;
- (void)setDeviceController:(id)arg1;
@property(readonly) HMDDevice *device;
- (_Bool)isB520Accessory;
- (_Bool)supportsPersonalRequests;
- (_Bool)supportsMediaContentProfile;
- (_Bool)requiresHomeAppForManagement;
- (_Bool)supportsAnnounce;
- (_Bool)supportsCoordinationDoorbellChime;
- (_Bool)supportsDoorbellChime;
- (_Bool)supportsPreferredMediaUser;
- (_Bool)supportsThirdPartyMusic;
- (_Bool)supportsMusicAlarm;
- (_Bool)supportsCompanionInitiatedRestart;
- (_Bool)supportsMultiUser;
- (_Bool)supportsTargetControl;
- (_Bool)isCurrentAccessory;
- (void)autoConfigureTargetControllers;
- (void)_fixCloudKeyIfNeeded;
- (void)_fetchMultiUserLanguages;
- (id)_createMediaProfile;
- (void)removeAudioDestination;
- (void)createAudioDestination;
- (void)configureAudioDestinationManager;
- (void)unsetAudioDestination;
@property(readonly) HMMediaDestination *audioDestination;
- (id)committedAudioDestination;
- (void)removeAudioDestinationController;
- (void)createAudioDestinationController;
- (void)configureAudioDestinationController;
- (void)unsetAudioDestinationControllerData;
- (id)committedAudioDestinationControllerData;
@property(readonly) HMMediaDestinationControllerData *audioDestinationControllerData;
- (void)configureWithHome:(id)arg1 msgDispatcher:(id)arg2 configurationTracker:(id)arg3 initialConfiguration:(_Bool)arg4;
- (_Bool)_shouldFilterAccessoryProfile:(id)arg1;
- (void)_registerForMessages;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithDeviceController:(id)arg1 deviceIdentifierFactory:(CDUnknownBlockType)arg2;
- (id)init;
- (id)initWithTransaction:(id)arg1 home:(id)arg2;
- (void)deleteSiriHistoryForAccessoryWithUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)supportsHomeHub;
- (id)accessoryWithUUID:(id)arg1 forAppleMediaAccessoryLocalMessageHandler:(id)arg2;
- (id)assistantObject;
- (id)languageValueList;
- (id)createAppleMediaAccessoryMessengerWithIdentifier:(id)arg1 messageDispatcher:(id)arg2 router:(id)arg3 localHandler:(id)arg4;
- (void)configureAppleMediaAccessoryMessengerWithFactory:(id)arg1;
- (id)deviceForAppleMediaAccessoryMessageRouter:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

