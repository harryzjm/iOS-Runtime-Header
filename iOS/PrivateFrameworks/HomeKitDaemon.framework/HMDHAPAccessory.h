//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HomeKitDaemon/HAPAccessoryServerNotification-Protocol.h>
#import <HomeKitDaemon/HAPRelayAccessoryDelegate-Protocol.h>
#import <HomeKitDaemon/HMDAccessoryMinimumUserPrivilegeCapable-Protocol.h>
#import <HomeKitDaemon/HMDAccessoryUserManagement-Protocol.h>
#import <HomeKitDaemon/HMDServiceOwner-Protocol.h>
#import <HomeKitDaemon/HMDSiriEndpointProfileMetricsDispatcherDataSource-Protocol.h>
#import <HomeKitDaemon/HMDSiriEndpointProfileMetricsDispatcherFactory-Protocol.h>
#import <HomeKitDaemon/HMFTimerDelegate-Protocol.h>

@class HMCameraUserNotificationSettings, HMDAccessoryAdvertisement, HMDAccessoryDiagnosticsManager, HMDAccessorySymptomHandler, HMDAnalyticsHAPServiceData, HMDCameraProfileSettingsManager, HMDDataStreamController, HMDDoorbellChimeController, HMDLowPowerModeProfile, HMDMediaProfile, HMDNetworkRouterController, HMDNetworkRouterProfile, HMDNetworkRouterSatelliteProfile, HMDPendingCharacteristic, HMDService, HMDSiriEndpointProfile, HMDSiriEndpointProfileMetricsDispatcher, HMDTargetControllerManager, HMDUser, HMDWiFiManagementController, HMFConnectivityInfo, HMFPairingIdentity, HMFTimer, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSSet, NSString;
@protocol HMDDataStreamSocketController, HMDMessageRouter;

@interface HMDHAPAccessory <HMDSiriEndpointProfileMetricsDispatcherDataSource, HMDSiriEndpointProfileMetricsDispatcherFactory, HMDAccessoryMinimumUserPrivilegeCapable, HMDServiceOwner, HAPRelayAccessoryDelegate, HMFTimerDelegate, HAPAccessoryServerNotification, HMDAccessoryUserManagement>
{
    NSMutableArray *_transportInformationInstances;
    NSMutableArray *_services;
    _Bool _relayEnabled;
    _Bool _supportsTargetController;
    _Bool _keyGenerationInProgress;
    _Bool _hardwareSupport;
    _Bool _reachableViaBSP;
    _Bool _supportsAccessCode;
    _Bool _hasPostedBulletinForAccessCodeOnboarding;
    _Bool _supportsWalletKey;
    _Bool _hasPostedBulletinForWalletKeyOnboarding;
    _Bool _supportsRelay;
    unsigned char _keyGenerationType;
    _Bool _supportsThreadCommissioning;
    NSString *_relayIdentifier;
    unsigned long long _currentRelayAccessoryState;
    NSNumber *_accessoryFlags;
    NSNumber *_internalEnhancedAuthConfigNumber;
    NSNumber *_internalEnhancedAuthMethod;
    NSData *_setupHash;
    NSData *_broadcastKey;
    NSNumber *_keyUpdatedStateNumber;
    NSDate *_keyUpdatedTime;
    NSArray *_targetUUIDs;
    HMDTargetControllerManager *_targetControllerManager;
    HMDAccessorySymptomHandler *_symptomsHandler;
    NSSet *_identifiersForBridgedAccessories;
    HMDService *_primaryService;
    HMDPendingCharacteristic *_pendingPowerOn;
    HMDNetworkRouterController *_networkRouterController;
    HMFConnectivityInfo *_connectivityInfo;
    NSMutableArray *_powerOnCompletionRoutines;
    HMDCameraProfileSettingsManager *_cameraProfileSettingsManager;
    HMDWiFiManagementController *_wiFiManagementController;
    NSNumber *_wiFiTransportCapabilities;
    HMDAccessoryDiagnosticsManager *_diagnosticsManager;
    NSNumber *_sleepInterval;
    long long _communicationProtocol;
    NSNumber *_hasOnboardedForNaturalLighting;
    HMCameraUserNotificationSettings *_cameraProfileNotificationSettings;
    NSSet *_initialServiceTypeUUIDs;
    HMDHAPAccessory *_bridge;
    HMDAccessoryAdvertisement *_accessoryAdvertisement;
    HMDDoorbellChimeController *_doorbellChimeController;
    NSNumber *_internalThreadCapabilities;
    NSNumber *_internalThreadStatus;
    NSNumber *_internalThreadActive;
    unsigned long long _suspendedState;
    NSNumber *_needsOnboarding;
    unsigned long long _siriEndpointCapabilities;
    NSMutableDictionary *_accessCodeCache;
    NSString *_uniqueIdentifier;
    long long _certificationStatus;
    HMDAnalyticsHAPServiceData *_primaryHAPServiceForAnalytics;
    NSArray *_hapServicesListForAnalytics;
    unsigned long long _activationAttempts;
    unsigned long long _pairingAttempts;
    NSNumber *_backedOffStateNumber;
    HMFTimer *_accessoryDiscoveryBackoffTimer;
    HMFTimer *_accessoryKeyRefreshTimer;
    NSMutableSet *_activeSessionRestoreClients;
    HMFTimer *_sessionRestoreTimer;
    double _lastLinkChangeSessionCheckTime;
    unsigned long long _lastSessionStatus;
    HMDSiriEndpointProfileMetricsDispatcher *_siriEndpointProfileMetricsDispatcher;
    HMDUser *_cachedRemovedUser;
    NSMutableArray *_discoveredServices;
    NSData *_publicKey;
    NSString *_pairingUsername;
    HMDDataStreamController *_dataStreamController;
    NSMutableArray *_pendingReads;
    HMDLowPowerModeProfile *_lpmProfile;
}

+ (_Bool)hasMessageReceiverChildren;
+ (_Bool)supportsSecureCoding;
+ (unsigned long long)getAWDTransportTypeWithLinkType:(long long)arg1;
+ (Class)transactionClass;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool supportsThreadCommissioning; // @synthesize supportsThreadCommissioning=_supportsThreadCommissioning;
@property(readonly, nonatomic) HMDLowPowerModeProfile *lpmProfile; // @synthesize lpmProfile=_lpmProfile;
@property(retain) NSMutableArray *pendingReads; // @synthesize pendingReads=_pendingReads;
@property(retain, nonatomic) HMDDataStreamController *dataStreamController; // @synthesize dataStreamController=_dataStreamController;
@property(retain, nonatomic) NSString *pairingUsername; // @synthesize pairingUsername=_pairingUsername;
@property(retain, nonatomic) NSData *publicKey; // @synthesize publicKey=_publicKey;
@property(retain, nonatomic) NSMutableArray *discoveredServices; // @synthesize discoveredServices=_discoveredServices;
@property(retain, nonatomic) HMDUser *cachedRemovedUser; // @synthesize cachedRemovedUser=_cachedRemovedUser;
@property(retain) HMDSiriEndpointProfileMetricsDispatcher *siriEndpointProfileMetricsDispatcher; // @synthesize siriEndpointProfileMetricsDispatcher=_siriEndpointProfileMetricsDispatcher;
@property(nonatomic) unsigned long long lastSessionStatus; // @synthesize lastSessionStatus=_lastSessionStatus;
@property(nonatomic) double lastLinkChangeSessionCheckTime; // @synthesize lastLinkChangeSessionCheckTime=_lastLinkChangeSessionCheckTime;
@property(retain, nonatomic) HMFTimer *sessionRestoreTimer; // @synthesize sessionRestoreTimer=_sessionRestoreTimer;
@property(retain, nonatomic) NSMutableSet *activeSessionRestoreClients; // @synthesize activeSessionRestoreClients=_activeSessionRestoreClients;
@property unsigned char keyGenerationType; // @synthesize keyGenerationType=_keyGenerationType;
@property(retain, nonatomic) HMFTimer *accessoryKeyRefreshTimer; // @synthesize accessoryKeyRefreshTimer=_accessoryKeyRefreshTimer;
@property(retain, nonatomic) HMFTimer *accessoryDiscoveryBackoffTimer; // @synthesize accessoryDiscoveryBackoffTimer=_accessoryDiscoveryBackoffTimer;
@property(copy, nonatomic) NSNumber *backedOffStateNumber; // @synthesize backedOffStateNumber=_backedOffStateNumber;
@property(nonatomic) unsigned long long pairingAttempts; // @synthesize pairingAttempts=_pairingAttempts;
@property(nonatomic) unsigned long long activationAttempts; // @synthesize activationAttempts=_activationAttempts;
@property(nonatomic) _Bool supportsRelay; // @synthesize supportsRelay=_supportsRelay;
@property(readonly, copy, nonatomic) NSArray *hapServicesListForAnalytics; // @synthesize hapServicesListForAnalytics=_hapServicesListForAnalytics;
@property(readonly, copy, nonatomic) HMDAnalyticsHAPServiceData *primaryHAPServiceForAnalytics; // @synthesize primaryHAPServiceForAnalytics=_primaryHAPServiceForAnalytics;
@property(nonatomic) long long certificationStatus; // @synthesize certificationStatus=_certificationStatus;
@property(copy, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(nonatomic) _Bool hasPostedBulletinForWalletKeyOnboarding; // @synthesize hasPostedBulletinForWalletKeyOnboarding=_hasPostedBulletinForWalletKeyOnboarding;
@property(nonatomic) _Bool hasPostedBulletinForAccessCodeOnboarding; // @synthesize hasPostedBulletinForAccessCodeOnboarding=_hasPostedBulletinForAccessCodeOnboarding;
@property(retain) NSMutableDictionary *accessCodeCache; // @synthesize accessCodeCache=_accessCodeCache;
@property(retain, nonatomic) HMDAccessoryAdvertisement *accessoryAdvertisement; // @synthesize accessoryAdvertisement=_accessoryAdvertisement;
@property(copy, nonatomic) NSNumber *sleepInterval; // @synthesize sleepInterval=_sleepInterval;
@property(retain, nonatomic) NSMutableArray *powerOnCompletionRoutines; // @synthesize powerOnCompletionRoutines=_powerOnCompletionRoutines;
@property(retain, nonatomic) HMDPendingCharacteristic *pendingPowerOn; // @synthesize pendingPowerOn=_pendingPowerOn;
@property _Bool keyGenerationInProgress; // @synthesize keyGenerationInProgress=_keyGenerationInProgress;
@property(copy, nonatomic) NSDate *keyUpdatedTime; // @synthesize keyUpdatedTime=_keyUpdatedTime;
@property(copy, nonatomic) NSNumber *keyUpdatedStateNumber; // @synthesize keyUpdatedStateNumber=_keyUpdatedStateNumber;
@property(copy, nonatomic) NSData *broadcastKey; // @synthesize broadcastKey=_broadcastKey;
@property(retain, nonatomic) NSString *relayIdentifier; // @synthesize relayIdentifier=_relayIdentifier;
- (void)_handleUpdateAccessoryConnectionState:(id)arg1;
- (void)_handleValidatePairingAuthMethodMessage:(id)arg1;
- (void)removeSession:(long long)arg1;
- (void)addSession:(long long)arg1;
- (void)_checkSessionRestoreOnLinkStateChange;
- (void)_handleSessionRestoreTimerFired;
- (void)_updateSessionRestoreOnServer:(_Bool)arg1;
- (void)_startSessionMonitor;
- (void)_stopSessionMonitor;
- (void)_notifyBridgedAccessoryReachabilityChange:(id)arg1;
- (void)_checkBridgedAccessoryOnConfigured;
- (void)_checkSession;
- (void)_deregisterAllClientsFromSessionRestore;
- (void)deregisterFromSessionRestore:(id)arg1;
- (void)registerForSessionRestore:(id)arg1;
- (void)stopPing;
- (_Bool)startPing;
- (_Bool)isSecureSessionEstablished;
- (void)handleConnectedChanged:(id)arg1;
- (void)handleSetHasOnboardedForNaturalLighting:(id)arg1;
- (void)setCommunicationProtocolIfNeeded;
@property long long communicationProtocol; // @synthesize communicationProtocol=_communicationProtocol;
@property(nonatomic, getter=isReachableViaBSP) _Bool reachableViaBSP; // @synthesize reachableViaBSP=_reachableViaBSP;
- (void)_updateSuspendedStateMetric:(unsigned long long)arg1 newState:(unsigned long long)arg2;
@property(nonatomic) unsigned long long suspendedState; // @synthesize suspendedState=_suspendedState;
- (void)setSuspendedState:(unsigned long long)arg1 shouldNotify:(_Bool)arg2;
@property(copy) NSNumber *hasOnboardedForNaturalLighting; // @synthesize hasOnboardedForNaturalLighting=_hasOnboardedForNaturalLighting;
@property(retain, nonatomic) NSNumber *internalThreadActive; // @synthesize internalThreadActive=_internalThreadActive;
@property(retain, nonatomic) NSNumber *internalThreadStatus; // @synthesize internalThreadStatus=_internalThreadStatus;
@property(retain, nonatomic) NSNumber *internalThreadCapabilities; // @synthesize internalThreadCapabilities=_internalThreadCapabilities;
- (void)startReachabilityCheck;
- (void)stopReachabilityCheck;
@property(readonly, nonatomic) HMDCameraProfileSettingsManager *cameraProfileSettingsManager; // @synthesize cameraProfileSettingsManager=_cameraProfileSettingsManager;
- (id)cameraClipCloudZoneUUIDForRecordingService:(id)arg1;
@property(readonly, copy, nonatomic) NSNumber *hapInstanceId;
- (id)backingStoreTransactionWithName:(id)arg1;
- (id)createUpdateServiceTransationWithServiceUUID:(id)arg1;
- (void)makeServiceNameConsistent:(id)arg1 withName:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)messageReceiverChildren;
- (id)backingStoreObjects:(long long)arg1;
- (void)populateModelObject:(id)arg1 version:(long long)arg2;
- (id)modelObjectWithChangeType:(unsigned long long)arg1 version:(long long)arg2;
- (id)modelObjectWithChangeType:(unsigned long long)arg1;
- (id)transactionWithObjectChangeType:(unsigned long long)arg1;
- (void)_updateBridge:(id)arg1;
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;
- (_Bool)updateTransportInformation:(id)arg1;
- (id)retrieveUpdatedTransportInfoArray:(id)arg1;
- (id)getTransportInformationArray;
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;
- (void)readInitialRequiredCharacteristicsForAccessory:(CDUnknownBlockType)arg1;
- (id)getOrCreateServiceUpdateTransactionForKey:(id)arg1 fromDictionary:(id)arg2;
- (void)requestResource:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)anyIPServer;
- (id)primaryIPServer;
- (id)dumpSimpleState;
- (id)dumpState;
- (_Bool)supportsPersonalRequests;
- (_Bool)isNotificationEnabled;
- (_Bool)isNonClientNotificationEnabled;
- (_Bool)isNotificationEnabledForClientIdentifier:(id)arg1;
- (void)accessory:(id)arg1 didUpdateAccessoryAccessToken:(id)arg2;
- (void)accessory:(id)arg1 didUpdateAccessoryIdentifier:(id)arg2;
- (void)accessory:(id)arg1 didPairRelayWithError:(id)arg2;
- (void)accessory:(id)arg1 didActivateRelayWithError:(id)arg2;
- (void)accessory:(id)arg1 didUpdateRelayState:(unsigned long long)arg2;
- (void)accessory:(id)arg1 didUpdateRelayEnabled:(_Bool)arg2;
- (void)accessory:(id)arg1 didUpdateReachabilityState:(_Bool)arg2;
- (void)accessory:(id)arg1 didUpdateConnectionState:(_Bool)arg2;
- (void)__updateNotifyingCharacteristicStateNumber:(id)arg1;
- (void)notifyingCharacteristicStateNumberUpdated:(id)arg1;
- (void)_handleMultipleCharacteristicsUpdated:(id)arg1 message:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)handleMultipleCharacteristicsUpdated:(id)arg1 message:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_updateReachabilityMetric:(_Bool)arg1 withDuration:(id)arg2;
- (_Bool)supportsWiFiReconfiguration;
@property(copy, nonatomic) NSNumber *wiFiTransportCapabilities; // @synthesize wiFiTransportCapabilities=_wiFiTransportCapabilities;
@property(retain, nonatomic) HMDWiFiManagementController *wiFiManagementController; // @synthesize wiFiManagementController=_wiFiManagementController;
@property(retain, nonatomic) HMDDoorbellChimeController *doorbellChimeController; // @synthesize doorbellChimeController=_doorbellChimeController;
- (void)removeAdvertisement:(id)arg1;
- (void)addAdvertisement:(id)arg1;
- (void)associateWithAccessoryAdvertisement:(id)arg1;
- (void)_handleConfigureTargets:(id)arg1;
- (void)_handleKeyRefreshTimerFired;
- (void)_removeBackedoffAccessoryForStateNumber:(id)arg1;
- (void)backOffAccessoryForStateNumber:(id)arg1 backoffPeriod:(double)arg2;
- (void)_handleDiscoveryBackoffTimerFired;
- (id)characteristicsPassingTest:(CDUnknownBlockType)arg1;
- (void)handleIdentifyAccessoryMessage:(id)arg1;
- (_Bool)supportsIdentify;
- (void)_handleUpdateAuthorizationData:(id)arg1;
- (void)_handleUpdateAssociatedServiceType:(id)arg1;
- (void)_handleRenameService:(id)arg1;
- (void)_renameService:(id)arg1 name:(id)arg2 message:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)indicateNotificationFromServer:(id)arg1 notifyType:(unsigned long long)arg2 withDictionary:(id)arg3;
- (void)_submitReachabilityDelayedMetric:(id)arg1;
- (void)_submitStateNumberChangeMetric;
- (void)_doReachabilityUpdateForServer:(id)arg1;
- (id)runtimeState;
- (long long)reachableTransports;
- (void)setReachability:(_Bool)arg1 serverIdentifier:(id)arg2 linkType:(long long)arg3;
- (void)_updateReachability;
- (void)_checkRegisterForServerNotification;
- (id)findServiceWithServiceType:(id)arg1;
- (id)findCharacteristicsByTypes:(id)arg1 forServiceType:(id)arg2;
- (id)findCharacteristicsByType:(id)arg1 forServiceType:(id)arg2;
- (id)findCharacteristicType:(id)arg1 forServiceType:(id)arg2;
- (id)findCharacteristic:(id)arg1;
- (id)findCharacteristic:(id)arg1 forService:(id)arg2;
- (id)findService:(id)arg1;
- (void)_evaluateLocalOperation:(long long)arg1 state:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_updateStateForTrackedAccessory:(id)arg1 stateNumber:(id)arg2;
- (void)updateTrackedAccessoryStateNumber:(id)arg1;
- (void)getLinkQualityWithCompletion:(CDUnknownBlockType)arg1;
- (void)_retrieveStateForTrackedAccessory:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (_Bool)_containsSecureCharacteristic;
- (_Bool)_shouldTrackAccessoryWithPriority:(_Bool *)arg1;
- (void)_updateAccessoryTracking;
@property(copy, nonatomic) HMCameraUserNotificationSettings *cameraProfileNotificationSettings; // @synthesize cameraProfileNotificationSettings=_cameraProfileNotificationSettings;
- (void)_reenableNotificationsOnWatch;
- (void)notifyClientsOfUpdatedAccessoryControllableValue;
- (void)reachabilityDidChangeUnreachable:(id)arg1;
- (void)reachabilityDidChange:(id)arg1;
- (void)handlePrimaryResidentUpdateNotification:(id)arg1;
- (void)_logServerReachabilityNotification:(id)arg1;
- (void)_logServerReachabilityNotification:(_Bool)arg1 withDuration:(id)arg2 withLinkType:(id)arg3;
- (double)_getDurationAndUpdateCurrentTime:(id)arg1 currentTime:(id *)arg2;
- (void)_doPrimaryResidentUpdated;
- (void)handleResidentDeviceUpdated:(id)arg1;
- (void)_checkResidentDeviceForReachabilityPing;
- (void)_forceEnableReachabilityPingForPrimaryResident:(id)arg1;
- (void)_enableBroadcastNotifications:(_Bool)arg1 hapAccessory:(id)arg2 forCharacteristics:(id)arg3;
- (void)_setNotificationsEnabled:(_Bool)arg1 forCharacteristics:(id)arg2 hapAccessory:(id)arg3 activity:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (_Bool)_enableNotificationOnResident:(_Bool)arg1 characteristic:(id)arg2 clientIdentifier:(id)arg3 ignoreDeviceUnlockRequirement:(_Bool)arg4;
- (void)_enableNotification:(_Bool)arg1 forCharacteristics:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)enableNotification:(_Bool)arg1 forCharacteristics:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)enableNotification:(_Bool)arg1 forCharacteristicIDs:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)_enableNotification:(_Bool)arg1 matchingHAPAccessory:(id)arg2 ignoreDeviceUnlockRequirement:(_Bool)arg3 clientIdentifier:(id)arg4 forCharacteristics:(id)arg5;
- (void)enableNotification:(_Bool)arg1 ignoreDeviceUnlockRequirement:(_Bool)arg2 clientIdentifier:(id)arg3 forCharacteristics:(id)arg4;
- (void)_disableNotificationsForBundleID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)disableNotificationsForBundleID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_notifyNotificationChangesForCharacteristics:(id)arg1 errors:(id)arg2 enableNotification:(_Bool)arg3 message:(id)arg4;
- (void)_notifyCharacteristicNotificationChanges:(id)arg1 enableNotification:(_Bool)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)handleRemoteGatewayNotificationRegistration:(id)arg1 enable:(_Bool)arg2 enableTime:(id)arg3;
- (void)resetNotificationEnabledTime;
@property(readonly, getter=isClientRegisteredForNotifications) _Bool clientRegisteredForNotifications;
- (void)updateNotificationEnabled:(_Bool)arg1 forCharacteristics:(id)arg2 onBehalfOf:(id)arg3;
- (void)_readValueForCharacteristic:(id)arg1 hapAccessory:(id)arg2 requestMessage:(id)arg3;
- (void)_handleCharacteristicRead:(id)arg1;
- (void)submitCharacteristicReadErrorLogEvent:(id)arg1 message:(id)arg2 error:(id)arg3;
- (void)_parseResponseFromRemotePeer:(id)arg1 message:(id)arg2 error:(id)arg3 characteristic:(id)arg4;
- (void)_relayReadFromCharacteristic:(id)arg1 toResidentForMessage:(id)arg2 viaDevice:(id)arg3;
- (void)_relayWriteToCharacteristic:(id)arg1 toResidentForMessage:(id)arg2 viaDevice:(id)arg3;
- (void)_handleCharacteristicWrite:(id)arg1;
- (void)submitCharacteristicWriteErrorLogEvent:(id)arg1 startDate:(id)arg2 message:(id)arg3 error:(id)arg4;
- (_Bool)_handleCharacteristicError:(id)arg1 read:(_Bool)arg2 characteristic:(id)arg3 didRelayMessage:(id)arg4;
- (id)_prepareMessagePayloadForCharacteristicRemoteWrite:(id)arg1;
- (void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 hapAccessory:(id)arg3 authorizationData:(id)arg4 message:(id)arg5;
- (void)_readCharacteristicValues:(id)arg1 hapAccessory:(id)arg2 source:(unsigned long long)arg3 message:(id)arg4 queue:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)_writeCharacteristicValues:(id)arg1 hapAccessory:(id)arg2 source:(unsigned long long)arg3 message:(id)arg4 queue:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)populateHMDCharacteristicResponses:(id)arg1 hapResponses:(id)arg2 mapping:(id)arg3 overallError:(id)arg4 requests:(id)arg5;
- (id)hapCharacteristicWriteRequests:(id)arg1 hapAccessory:(id)arg2 hmdResponses:(id *)arg3 mapping:(id *)arg4;
- (void)notifyValue:(id)arg1 previousValue:(id)arg2 error:(id)arg3 forCharacteristic:(id)arg4 requestMessage:(id)arg5;
- (void)runTransactionWithPreferredMediaUserUUID:(id)arg1 selectionType:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)handleUpdatePreferredMediaUser:(id)arg1;
- (void)routeUpdatePreferredMediaUser:(id)arg1;
- (void)_handleHomeUserRemovedNotification:(id)arg1;
- (void)handleHomeUserRemovedNotification:(id)arg1;
@property(readonly) id <HMDMessageRouter> primaryResidentMessageRouter;
- (_Bool)supportsPreferredMediaUser;
- (void)encodeWithCoder:(id)arg1;
- (id)getBluetoothAddress;
- (_Bool)_shouldFilterAccessoryProfile:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)saveBluetoothAddress:(id)arg1;
- (id)_getSymptomHandler;
- (_Bool)shouldConfigureTargetController;
- (id)hmdCharacteristicForInstanceId:(id)arg1;
- (id)hmdCharacteristicFromHapCharacteristic:(id)arg1;
- (void)_readCharacteristicValues:(id)arg1 localOperationRequired:(_Bool)arg2 source:(unsigned long long)arg3 message:(id)arg4 queue:(id)arg5 completionHandler:(CDUnknownBlockType)arg6 errorBlock:(CDUnknownBlockType)arg7;
- (void)autoUpdateCachedCountDownCharacteristics:(id)arg1;
- (void)_wakeAccessoryIfNeededToReadCharacteristicValues:(id)arg1 activity:(id)arg2 readCharacteristicBlock:(CDUnknownBlockType)arg3;
- (void)readCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 message:(id)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)readCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_updatedResponseTuplesForRequests:(id)arg1 error:(id)arg2 source:(unsigned long long)arg3 suspended:(_Bool)arg4;
- (id)getFullError:(id)arg1 source:(unsigned long long)arg2 suspended:(_Bool)arg3;
- (void)writeCharacteristicValues:(id)arg1 localOperationRequired:(_Bool)arg2 source:(unsigned long long)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5 errorBlock:(CDUnknownBlockType)arg6;
- (void)_writeCharacteristicValues:(id)arg1 localOperationRequired:(_Bool)arg2 source:(unsigned long long)arg3 message:(id)arg4 queue:(id)arg5 completionHandler:(CDUnknownBlockType)arg6 errorBlock:(CDUnknownBlockType)arg7;
- (void)_writeCharacteristicValues:(id)arg1 localOperationRequired:(_Bool)arg2 source:(unsigned long long)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5 errorBlock:(CDUnknownBlockType)arg6;
- (void)_wakeAccessoryIfNeededToWriteCharacteristicValues:(id)arg1 activity:(id)arg2 writeCharacteristicBlock:(CDUnknownBlockType)arg3;
- (void)writeCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 message:(id)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)writeCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (_Bool)canWakeBasedOnCharacteristicRequests:(id)arg1;
@property(readonly) _Bool supportsUserManagement;
- (void)_handleUnreachableAccessoryToPerformOperation:(long long)arg1 operationBlock:(CDUnknownBlockType)arg2 errorBlock:(CDUnknownBlockType)arg3;
- (void)_retrieveHAPAccessoryToPerformOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4 activity:(id)arg5;
- (void)_performOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4;
- (void)performOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4;
- (_Bool)matchesHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long *)arg2;
- (_Bool)matchesHAPAccessory:(id)arg1;
- (id)matchingHAPAccessoryServerIdentifierWithLinkType:(long long)arg1;
- (id)matchingHAPAccessoryWithLinkType:(long long)arg1;
- (id)matchingHAPAccessoryWithServerIdentifier:(id)arg1;
- (id)matchingHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2;
- (id)matchingTransportInformationWithServerIdentifier:(id)arg1;
- (id)matchingTransportInformationWithServerIdentifier:(id)arg1 linkType:(long long)arg2;
- (_Bool)matchesHAPAccessoryWithServerIdentifier:(id)arg1 instanceID:(id)arg2;
- (id)matchingTransportInformation:(id)arg1;
- (void)unconfigureAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 updateReachability:(_Bool)arg3;
- (void)unconfigure;
- (void)cleanupNotificationCenterObservers;
- (void)unregisterFromAccessoryServer;
- (void)configureWithAccessory:(id)arg1 homeNotificationsEnabled:(_Bool)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)enableNotificationsWithHAPAccessory:(id)arg1 homeNotificationsEnabled:(_Bool)arg2;
- (id)configureService:(id)arg1;
- (id)getHAPAccessoryMatchingInstanceId;
- (id)getPrimaryHAPAccessories;
- (id)preferredHAPAccessoryForOperation:(long long)arg1 linkType:(long long *)arg2;
- (long long)linkSpeed;
- (unsigned long long)supportedTransports;
- (_Bool)isBLESecureSessionEstablished;
- (_Bool)isBLELinkConnected;
- (_Bool)hasBTLELink;
- (_Bool)isIPSecureSessionEstablished;
- (_Bool)hasIPLink;
- (void)_addHAPAccessory:(id)arg1;
- (void)_removeHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 completion:(CDUnknownBlockType)arg3 completionQueue:(id)arg4;
- (void)removeHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 completion:(CDUnknownBlockType)arg3 completionQueue:(id)arg4;
- (void)removeRelayUser:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)addRelayUser:(id)arg1 accessToken:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)startRelayPairingWithPairingClient:(id)arg1;
- (void)startRelayActivationWithActivationClient:(id)arg1;
- (id)relayAccessory;
- (void)_setCurrentRelayAccessoryState:(unsigned long long)arg1;
- (unsigned long long)_currentRelayAccessoryState;
@property(readonly, nonatomic) unsigned long long currentRelayAccessoryState; // @synthesize currentRelayAccessoryState=_currentRelayAccessoryState;
- (void)_updateRelayEnabled:(_Bool)arg1 notifyRelayManager:(_Bool)arg2;
@property(nonatomic, getter=isRelayEnabled) _Bool relayEnabled; // @synthesize relayEnabled=_relayEnabled;
- (void)_setRelayIdentifier:(id)arg1;
- (void)_setSupportsRelay:(_Bool)arg1;
@property(retain, nonatomic) HMDAccessoryDiagnosticsManager *diagnosticsManager; // @synthesize diagnosticsManager=_diagnosticsManager;
@property(retain, nonatomic) HMDNetworkRouterController *networkRouterController; // @synthesize networkRouterController=_networkRouterController;
- (_Bool)isCameraMotionDetectedCharacteristic:(id)arg1;
@property(readonly, copy, nonatomic) NSSet *cameraProfiles;
@property(readonly) _Bool hasCameraStreamService;
- (void)removeTransportInformationInstance:(id)arg1;
- (void)addTransportInformationInstances:(id)arg1;
- (void)addTransportInformationInstance:(id)arg1;
- (id)transportInformationInstances;
@property(retain, nonatomic) HMDHAPAccessory *bridge; // @synthesize bridge=_bridge;
- (void)removeBridgedAccessory:(id)arg1;
- (void)addBridgedAccessory:(id)arg1;
@property(copy, nonatomic) NSSet *identifiersForBridgedAccessories; // @synthesize identifiersForBridgedAccessories=_identifiersForBridgedAccessories;
- (void)updateButtonConfigurationForTarget:(id)arg1;
- (void)acknowledgeTargetControlService:(id)arg1 active:(_Bool)arg2;
- (void)autoConfigureTargetController;
- (void)_autoConfigureTargetController;
- (void)_configureTargetControllerWithCompletion:(CDUnknownBlockType)arg1;
- (void)_notifyClientsOfTargetControlSupportUpdate;
- (void)notifyClientsOfTargetControlSupportUpdate;
- (unsigned long long)targetControllerTicksPerSecond;
- (id)targetControllerButtonConfiguration;
- (void)registerForActiveIdentifierNotifications;
- (void)updateTarget:(id)arg1 name:(id)arg2 buttonConfiguration:(id)arg3;
- (void)removeTarget:(id)arg1;
- (void)addTarget:(id)arg1 buttonConfiguration:(id)arg2;
- (_Bool)supportsTargetController;
- (_Bool)_supportsMediaAccessControl;
- (void)_handleServiceRemovedTransaction:(id)arg1 message:(id)arg2;
- (void)_handleAddServiceTransaction:(id)arg1 message:(id)arg2;
- (void)_handleUpdatedServicesForProfilesAndControllers:(_Bool)arg1;
- (id)serviceWithSPIClientIdentfier:(id)arg1;
- (id)serviceWithUUID:(id)arg1;
- (void)_removeService:(id)arg1;
- (void)_addService:(id)arg1;
- (void)_updatePrimaryServiceIfNeededWithService:(id)arg1;
- (void)updatePrimaryServiceIfNeeded;
@property(readonly, nonatomic) HMDService *primaryService; // @synthesize primaryService=_primaryService;
- (_Bool)wasUpdatedWithServiceType:(id)arg1;
- (void)setInitialServiceTypeUUIDs:(id)arg1;
@property(readonly, nonatomic) NSSet *initialServiceTypeUUIDs; // @synthesize initialServiceTypeUUIDs=_initialServiceTypeUUIDs;
@property(readonly, nonatomic) NSSet *serviceTypeUUIDs;
@property(readonly, copy) NSArray *services;
@property(readonly, copy) HMFPairingIdentity *pairingIdentity;
- (void)pairingsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)removeUser:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)addUser:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)isSecuritySessionOpen;
- (void)verifyPairingWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)isPrimary;
- (void)savePublicKeyToKeychain;
- (void)updateNewPairingIdentityToKeychain:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setPairingUsername:(id)arg1 publicKey:(id)arg2;
- (void)handlePairedStateChange:(_Bool)arg1;
@property(readonly, nonatomic, getter=isPaired) _Bool paired;
- (void)timerDidFire:(id)arg1;
- (id)updateAccessoryFlagsAndNotifyClients:(id)arg1;
- (id)namesOfServicesShowingTilesInHomeApp;
- (_Bool)updateAccessoryInformationWithCharacteristicType:(id)arg1 value:(id)arg2 accessoryTransaction:(id)arg3;
- (_Bool)isReadingRequiredForBTLEAccessoryCharacteristic:(id)arg1 forceReadFWVersion:(_Bool)arg2;
- (void)handleCharacteristicsChangedNotification:(id)arg1;
- (void)__handleCharacteristicsChangedPayload:(id)arg1;
- (void)handleRoomChanged:(id)arg1;
- (void)handleRoomNameChanged:(id)arg1;
- (void)_handleRoomChangedFromOldRoomName:(id)arg1;
- (id)_messagesForUpdatedRoom:(id)arg1;
- (void)_challengeAccessoryAuthMethod;
- (void)_configNumberUpdated;
- (void)_updateAuthMethodWithServer:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_handleUpdatedName:(id)arg1;
- (void)_renameAccessory:(id)arg1 resetName:(_Bool)arg2 message:(id)arg3;
- (id)getConfiguredName;
- (id)name;
- (void)handleUpdatedPassword:(id)arg1;
- (void)handleUpdatedMinimumUserPrivilege:(long long)arg1;
- (_Bool)_serviceSupportsMinimumUserPrivilege:(id)arg1;
- (_Bool)supportsMinimumUserPrivilege;
- (_Bool)needsAirplayAccess;
- (_Bool)supportsNetworkProtection;
- (_Bool)_handleUpdatedServicesForWalletKey;
@property _Bool supportsWalletKey; // @synthesize supportsWalletKey=_supportsWalletKey;
- (_Bool)_handleUpdatedServicesForAccessCodes;
@property _Bool supportsAccessCode; // @synthesize supportsAccessCode=_supportsAccessCode;
@property(readonly) _Bool supportsCHIP;
- (_Bool)supportsMultiUser;
- (_Bool)supportsMusicAlarm;
- (_Bool)supportsAnnounce;
@property unsigned long long siriEndpointCapabilities; // @synthesize siriEndpointCapabilities=_siriEndpointCapabilities;
- (_Bool)hasBattery;
- (id)endpointIdentifier;
- (id)supportedDiagnostics;
- (_Bool)supportsDiagnosticsTransfer;
@property(retain, nonatomic) HMDAccessorySymptomHandler *symptomsHandler; // @synthesize symptomsHandler=_symptomsHandler;
- (_Bool)providesHashRouteID;
- (void)_reconcileAccessControlSetting;
- (void)updateTargetUUIDs:(id)arg1;
- (void)_saveTargetUUIDs:(id)arg1;
- (void)saveTargetUUIDs:(id)arg1;
@property(retain, nonatomic) HMDTargetControllerManager *targetControllerManager; // @synthesize targetControllerManager=_targetControllerManager;
- (void)_saveHardwareSupport:(_Bool)arg1;
- (void)saveHardwareSupport:(_Bool)arg1;
@property(nonatomic) _Bool hardwareSupport; // @synthesize hardwareSupport=_hardwareSupport;
@property(retain, nonatomic) NSArray *targetUUIDs; // @synthesize targetUUIDs=_targetUUIDs;
- (void)evaluateSymptomHandler;
@property(retain, nonatomic) NSNumber *needsOnboarding; // @synthesize needsOnboarding=_needsOnboarding;
@property(copy, nonatomic) NSData *setupHash; // @synthesize setupHash=_setupHash;
@property(retain, nonatomic) HMFConnectivityInfo *connectivityInfo; // @synthesize connectivityInfo=_connectivityInfo;
- (void)setBroadcastKey:(id)arg1 keyUpdatedStateNumber:(id)arg2 keyUpdatedTime:(id)arg3;
- (void)_updateBroadcastKey:(id)arg1 keyUpdatedStateNumber:(id)arg2 keyUpdatedTime:(double)arg3;
- (void)_handleUpdatedAuthMethod;
- (void)testSetInternalEnhancedAuthMethod:(id)arg1;
- (void)setInternalEnhancedAuthMethod:(id)arg1 configNumber:(unsigned long long)arg2;
@property(readonly, nonatomic) NSNumber *internalEnhancedAuthMethod; // @synthesize internalEnhancedAuthMethod=_internalEnhancedAuthMethod;
@property(readonly, nonatomic) NSNumber *internalEnhancedAuthConfigNumber; // @synthesize internalEnhancedAuthConfigNumber=_internalEnhancedAuthConfigNumber;
@property(readonly, nonatomic) unsigned long long enhancedAuthMethod;
@property(copy, nonatomic) NSNumber *accessoryFlags; // @synthesize accessoryFlags=_accessoryFlags;
- (void)updateAccessoryFlags:(id)arg1;
- (void)configureBulletinNotification;
- (void)setDefaultPreferredMediaUser;
- (void)setDefaultPreferredMediaUserIfNeeded;
- (void)configureWithHome:(id)arg1 msgDispatcher:(id)arg2 configurationTracker:(id)arg3 initialConfiguration:(_Bool)arg4;
- (id)transportReports;
- (_Bool)shouldEnableDaemonRelaunch;
- (void)_registerForMessages;
- (id)messageSendPolicy;
@property(readonly, nonatomic) NSString *serializedIdentifier;
@property(readonly, copy, nonatomic) NSArray *attributeDescriptions;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)dealloc;
- (void)_setWakeType;
- (_Bool)_validateConnectivityInfo:(id)arg1;
- (id)initWithTransaction:(id)arg1 home:(id)arg2;
- (id)init;
- (_Bool)_handleUpdatedServicesForWiFiManagementController;
- (void)_destroyDiagnosticsManager;
- (id)_createDiagnosticsManager:(id)arg1;
- (_Bool)_handleUpdatedServicesForDiagnosticsManager:(id)arg1;
- (void)stopScan;
- (void)_stopScan;
- (void)scanningCompleteWithAccessoryFound:(_Bool)arg1 suspended:(_Bool)arg2;
- (void)initiateScan:(CDUnknownBlockType)arg1;
- (void)initializeBTLEScan;
- (_Bool)_handleUpdatedServicesForNetworkRouterProfileAndController:(id)arg1;
- (_Bool)__createSatelliteNetworkRouterProfile:(id)arg1;
- (_Bool)__createNetworkRouterProfileAndController:(id)arg1;
- (void)postNetworkRouterProfileNotification:(id)arg1 object:(id)arg2;
- (_Bool)__removeNetworkRouterController;
- (void)__createNetworkRouterController:(id)arg1;
@property(readonly, nonatomic) HMDNetworkRouterSatelliteProfile *networkRouterSatelliteProfile;
@property(readonly, nonatomic) HMDNetworkRouterProfile *networkRouterProfile;
- (_Bool)hasAnyServiceWithTypes:(id)arg1;
- (void)updateHasPostedBulletinForWalletKeyOnboarding:(_Bool)arg1;
@property(readonly, copy) NSData *nfcReaderIdentifier;
- (id)compositeSettingsControllerManagerForSiriEndpointProfileMetricsDispatcher:(id)arg1;
- (id)profileFieldsForSiriEndpointProfileMetricsDispatcher:(id)arg1;
- (id)accessoryCategoryTypeForSiriEndpointProfileMetricsDispatcher:(id)arg1;
- (_Bool)shouldSubmitRoutineConfigurationEventForSiriEndpointProfileMetricsDispatcher:(id)arg1;
- (_Bool)_handleUpdatedServicesForDoorbellController;
- (void)writeValue:(id)arg1 toCharacteristic:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, copy) NSDictionary *assistantObject;
@property(readonly, copy) NSString *urlString;
@property(readonly) _Bool supportsSiriEndpointOnBoarding;
- (_Bool)_handleUpdatedServicesForSiriEndpointProfile:(id)arg1;
@property(readonly) _Bool hasSiriSettingsService;
@property(readonly) _Bool hasSiriEndpointService;
@property(readonly) HMDSiriEndpointProfile *siriEndpointProfile;
@property(readonly, nonatomic) _Bool supportsSiriEndpoint;
@property(readonly, nonatomic) _Bool isCertifiedForSiriEndpoint;
- (long long)computeSiriEndpointCertification;
- (void)updateLightProfilesSettings;
- (void)updateBridgedAccessoryLightProfilesSettings;
- (_Bool)_handleUpdatedServicesForLightProfiles:(id)arg1;
@property(readonly) NSSet *lightProfiles;
- (void)updateCameraProfileNotificationSettings:(id)arg1;
- (id)cameraProfileNotificationSettingsFromCoder:(id)arg1;
- (void)encodeCameraProfileNotificationSettingsWithCoder:(id)arg1;
- (_Bool)_handleUpdatedServicesForCameraProfiles:(id)arg1;
@property(readonly, getter=isCameraRecordingFeatureSupported) _Bool supportsCameraRecordingFeature;
- (void)_updateSiriAudioFormat:(id)arg1;
- (void)setSelectedSiriAudioConfiguration:(id)arg1;
- (_Bool)_resolveSupportedSiriInputType:(id)arg1;
- (_Bool)_resolveAudioAbility:(id)arg1;
- (void)getSupportedSiriAudioConfiguration:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool supportsSiri;
- (void)_handleUpdateMediaSourceDisplayOrder:(id)arg1;
@property(readonly) _Bool hasTelevisionService;
- (id)createSiriEndpointProfileMetricsDispatcherWithAccessoryUUID:(id)arg1 homeUUID:(id)arg2 logEventSubmitter:(id)arg3;
- (void)configureSiriEndpointProfileMetricsDispatcherWithFactory:(id)arg1 logEventDailyScheduler:(id)arg2;
@property(readonly, nonatomic) unsigned short metric_threadCapabilities;
- (void)_writeCredentialsForThreadNetwork:(id)arg1 activity:(id)arg2 pairingEvent:(id)arg3 metadata:(id)arg4 threadControlPointCharacteristic:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)_commissionToThreadNetwork:(id)arg1 activity:(id)arg2 pairingEvent:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)commissionToThreadNetwork:(id)arg1 pairingEvent:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_validateCurrentThreadCredentials:(id)arg1 metadata:(id)arg2;
- (void)_maybeCommissionToThreadNetwork:(id)arg1 activity:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)maybeCommissionToThreadNetwork:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_writeThreadControlPointCharacteristic:(id)arg1 value:(id)arg2 activity:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)_findThreadControlPointCharacteristicWithError:(id *)arg1;
- (void)_handleUpdatedServicesForThreadManagementWithActivity:(id)arg1;
- (void)handleUpdatedServicesForThreadManagementWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic, getter=isThreadTheCurrentlyActiveTransport) _Bool threadActiveTransport;
@property(readonly, nonatomic) unsigned short threadStatus;
@property(readonly, nonatomic) unsigned short threadCapabilities;
- (_Bool)_handleUpdatedServicesForMediaProfile:(id)arg1;
@property(readonly) _Bool hasSmartSpeakerService;
@property(readonly) HMDMediaProfile *mediaProfile;
@property(readonly) id <HMDDataStreamSocketController> dataStreamSocketController;
- (void)openBulkSendSessionForFileType:(id)arg1 reason:(id)arg2 metadata:(id)arg3 queue:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (void)sendTargetControlWhoAmIWithIdentifier:(unsigned int)arg1;
- (_Bool)bulkSendListenersRequireCharactertisticReadsSync;
- (_Bool)canAcceptBulkSendListenersSync;
- (_Bool)canAcceptBulkSendListeners;
- (void)removeDataStreamBulkSendListener:(id)arg1;
- (void)addDataStreamBulkSendListener:(id)arg1 fileType:(id)arg2;
- (void)_handleUpdatedServicesForDataStreamController:(id)arg1;
- (void)profile:(id)arg1 didUpdateWoWLANInfos:(id)arg2;
- (void)profile:(id)arg1 didUpdateAccessoryState:(unsigned long long)arg2;
- (void)_handleWakeSuspendedAccessoryMessage:(id)arg1;
- (_Bool)_validateIncomingMessage:(id)arg1;
- (void)_registerForMessages_lowPowerMode;
- (void)_wol_processReadWriteResponseForCharacteristic:(id)arg1 isRead:(_Bool)arg2 error:(id)arg3;
- (void)_wol_processDidRemoveHPAccessoryServer:(id)arg1;
- (void)_wol_updateSuspendCapableHAPAccessoryServer:(id)arg1;
- (void)_wol_runAccessoryTransaction:(id)arg1 localOnly:(_Bool)arg2;
- (void)_wakeSuspendedHAPAccessoryToPerformOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4 activity:(id)arg5;
- (_Bool)_handleUpdatedServicesForLowPowerModeProfile;
- (void)updateSuspendedStateWithWakeNumber:(id)arg1 hapAccessory:(id)arg2;
- (void)updateSuspendedStateWithConnectionState:(_Bool)arg1 hapAccessory:(id)arg2;
- (_Bool)shouldDiscoverSuspendCapableAccessoryServer:(id)arg1;
- (_Bool)canReturnCachedValueForCharacteristic:(id)arg1;
- (_Bool)canWakeUpViaWoL;
- (_Bool)canProceedWithRequests:(id)arg1 suspended:(_Bool *)arg2 error:(id *)arg3;
- (_Bool)isSuspended;
- (_Bool)supportsWoL;
- (_Bool)isPoweringOn;
- (void)cancelPowerOn;
- (void)_cancelPowerOn;
- (void)wirelessPowerOn:(CDUnknownBlockType)arg1;
- (void)_wirelessPowerOn:(CDUnknownBlockType)arg1;
- (void)powerOnComplete:(id)arg1;
- (void)wirelessResumeInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSString *privateDescription;
@property(readonly, copy) NSString *propertyDescription;
@property(readonly, copy) NSString *shortDescription;
@property(readonly) Class superclass;

@end

