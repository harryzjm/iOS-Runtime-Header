//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class HMEMessageDatagramClient, HMFMessageDispatcher, NSNotificationCenter, NSString, NSUUID;
@protocol HMDRemoteEventRouterClientDataSource, HMMLogEventSubmitting, OS_dispatch_queue, OS_os_log;

__attribute__((visibility("hidden")))
@interface HMDRemoteEventRouterClient : NSObject
{
    NSObject<OS_os_log> *_logger;
    _Bool _isPrimaryResident;
    struct os_unfair_lock_s _lock;
    _Bool _isConnected;
    _Bool _isNetworkAvailable;
    HMFMessageDispatcher *_messageDispatcher;
    NSString *_requestMessageName;
    NSString *_updateMessageName;
    id <HMMLogEventSubmitting> _logEventSubmitter;
    NSUUID *_identifier;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSNotificationCenter *_notificationCenter;
    id <HMDRemoteEventRouterClientDataSource> _dataSource;
    HMEMessageDatagramClient *_eventRouterClient;
}

+ (id)logCategory;
+ (id)routerClientWithQueue:(id)arg1 storeReadHandle:(id)arg2 storeWriteHandle:(id)arg3 logCategory:(const char *)arg4;
+ (id)routerClientWithQueue:(id)arg1 storeReadHandle:(id)arg2 storeWriteHandle:(id)arg3 retryIntervalProvider:(id)arg4 logCategory:(const char *)arg5;
- (void).cxx_destruct;
@property(readonly) HMEMessageDatagramClient *eventRouterClient; // @synthesize eventRouterClient=_eventRouterClient;
@property(readonly) __weak id <HMDRemoteEventRouterClientDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(readonly) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, copy) NSUUID *identifier; // @synthesize identifier=_identifier;
@property(readonly) __weak id <HMMLogEventSubmitting> logEventSubmitter; // @synthesize logEventSubmitter=_logEventSubmitter;
@property(nonatomic) _Bool isNetworkAvailable; // @synthesize isNetworkAvailable=_isNetworkAvailable;
@property(nonatomic) _Bool isConnected; // @synthesize isConnected=_isConnected;
@property(readonly, copy) NSString *updateMessageName; // @synthesize updateMessageName=_updateMessageName;
@property(readonly, copy) NSString *requestMessageName; // @synthesize requestMessageName=_requestMessageName;
@property(readonly) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
- (id)dumpStateDescription;
- (void)didChangeFetchAvailableCondition:(_Bool)arg1;
- (void)didChangeHasForegroundClient:(_Bool)arg1;
- (void)networkAvailabilityDidChange:(_Bool)arg1;
- (id)eventRouter;
- (void)configureIsPrimaryResident:(_Bool)arg1 networkAvailable:(_Bool)arg2 additionalPolicies:(id)arg3;
- (CDUnknownBlockType)responseHandlerForMessageIdentifier:(id)arg1 serverIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendMessageWithPayloadMessage:(id)arg1 messageType:(long long)arg2 destination:(id)arg3 serverIdentifier:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)sendMessageWithPayloadMessage:(id)arg1 client:(id)arg2 messageType:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)clientDidDisconnect:(id)arg1;
- (void)clientDidConnect:(id)arg1 serverIdentifier:(id)arg2;
- (void)client:(id)arg1 fetchWithFilters:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendDisconnectForClient:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendKeepAliveForClient:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)client:(id)arg1 sendConnectWithAddedFilters:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)client:(id)arg1 sendChangeRegistrationsWithAddedFilters:(id)arg2 removedFilters:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)sendChangeRegistrationsMessageWithAddedFilters:(id)arg1 removedFilters:(id)arg2 client:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)sendChangeRegistrationsMessageWithAddedFilters:(id)arg1 removedFilters:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)client:(id)arg1 isConnectionTerminatingError:(id)arg2;
- (id)client:(id)arg1 forwardingTopicsForTopics:(id)arg2;
- (id)client:(id)arg1 upstreamTopicsForTopic:(id)arg2;
- (_Bool)clientIsEnabled:(id)arg1;
- (id)_underlyingMessageDataFromFragmentMessageData:(id)arg1 error:(id *)arg2;
- (void)_handleCachedEventMessage:(id)arg1 fromServer:(id)arg2 events:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_handleEventUpdateMessage:(id)arg1 fromServer:(id)arg2 events:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_handleUpdatedEventsRequest:(id)arg1 originalMessage:(id)arg2;
- (void)_handleUpdateMessage:(id)arg1;
- (void)handlePrimaryResidentConfirmedDeviceIdentifierChangeNotification:(id)arg1;
- (void)_registerForMessages:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)logIdentifier;
@property(readonly, nonatomic) unsigned long long messageTransportRestriction;
@property(readonly) _Bool isPrimaryResident;
- (id)initWithMessageTargetUUID:(id)arg1 queue:(id)arg2 dataSource:(id)arg3 messageDispatcher:(id)arg4 notificationCenter:(id)arg5 requestMessageName:(id)arg6 updateMessageName:(id)arg7 logCategory:(const char *)arg8 logEventSubmitter:(id)arg9 eventRouterClientFactory:(CDUnknownBlockType)arg10;
- (id)initWithMessageTargetUUID:(id)arg1 queue:(id)arg2 dataSource:(id)arg3 messageDispatcher:(id)arg4 notificationCenter:(id)arg5 requestMessageName:(id)arg6 updateMessageName:(id)arg7 storeReadHandle:(id)arg8 storeWriteHandle:(id)arg9 retryIntervalProvider:(id)arg10 logCategory:(const char *)arg11;
- (id)initWithMessageTargetUUID:(id)arg1 queue:(id)arg2 dataSource:(id)arg3 messageDispatcher:(id)arg4 notificationCenter:(id)arg5 requestMessageName:(id)arg6 updateMessageName:(id)arg7 storeReadHandle:(id)arg8 storeWriteHandle:(id)arg9 logCategory:(const char *)arg10;
- (id)initWithMessageTargetUUID:(id)arg1 queue:(id)arg2 dataSource:(id)arg3 messageDispatcher:(id)arg4 notificationCenter:(id)arg5 requestMessageName:(id)arg6 updateMessageName:(id)arg7 storeReadHandle:(id)arg8 storeWriteHandle:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

