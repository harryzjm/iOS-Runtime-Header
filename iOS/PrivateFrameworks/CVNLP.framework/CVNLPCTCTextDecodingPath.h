//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "CVNLPTextDecodingPath.h"

@class CVNLPLanguageResourceBundle, CVNLPLexiconCursors, NSString;

@interface CVNLPCTCTextDecodingPath : CVNLPTextDecodingPath
{
    vector_3b74075b _tokenString;
    vector_3b74075b _histWordTokenIDs;
    unsigned long long _beginningCurrentWord;
    struct vector<double, std::allocator<double>> _cumulativeTokenLogProbabilities;
    struct vector<double, std::allocator<double>> _tokenBoundaryLogProbabilities;
    struct vector<unsigned long, std::allocator<unsigned long>> _tokenStringSegmentationPositions;
    struct vector<unsigned long, std::allocator<unsigned long>> _tokenMaxActivations;
    struct vector<unsigned long, std::allocator<unsigned long>> _tokenCommitCharacterLengths;
    _Bool _hasContext;
    double _normalizedTotalLogProbability;
    NSString *_latestExpandedSymbolIncludingPseudospace;
    _Bool _hasExpanded;
    _Bool _hasProblematicMixedScriptWords;
    _Bool _hasCalculatedHasProblematicMixedScriptWords;
    int _lastCodeUnitType;
    _Bool _optimizingAlignment;
    double _blankLogProbability;
    double _nonBlankLogProbability;
    double _historyLexiconLogProbability;
    double _activeWordLexiconLogProbability;
    double _languageResourceLogProbability;
    CVNLPLexiconCursors *_cursors;
    struct CVNLPLanguageModelWithState *_characterLMState;
    CVNLPLanguageResourceBundle *_languageResourceBundle;
    CDUnknownBlockType _scoringFunction;
}

+ (id)_getQueue;
+ (void)applyWordLanguageModelProbabilityToPath:(id)arg1 stemmedFromPath:(id)arg2 isCommittingToken:(_Bool)arg3;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) CDUnknownBlockType scoringFunction; // @synthesize scoringFunction=_scoringFunction;
@property(readonly, retain, nonatomic) CVNLPLanguageResourceBundle *languageResourceBundle; // @synthesize languageResourceBundle=_languageResourceBundle;
@property(nonatomic) struct CVNLPLanguageModelWithState *characterLMState; // @synthesize characterLMState=_characterLMState;
@property(retain, nonatomic) CVNLPLexiconCursors *cursors; // @synthesize cursors=_cursors;
@property(readonly) _Bool optimizingAlignment; // @synthesize optimizingAlignment=_optimizingAlignment;
@property(readonly) double languageResourceLogProbability; // @synthesize languageResourceLogProbability=_languageResourceLogProbability;
@property double activeWordLexiconLogProbability; // @synthesize activeWordLexiconLogProbability=_activeWordLexiconLogProbability;
@property double historyLexiconLogProbability; // @synthesize historyLexiconLogProbability=_historyLexiconLogProbability;
@property double nonBlankLogProbability; // @synthesize nonBlankLogProbability=_nonBlankLogProbability;
@property double blankLogProbability; // @synthesize blankLogProbability=_blankLogProbability;
- (float)_wordLanguageModelLogProbabilityForString:(id)arg1 originalWordRanges:(id)arg2 originalWordIDs:(vector_3b74075b)arg3 wordRanges:(id)arg4 wordIDs:(vector_3b74075b)arg5;
- (void)_updateLexiconLogProbabilityForString:(id)arg1 stemmingFromPath:(id)arg2;
- (void)_updateCharacterLanguageModelLogProbabilityForString:(id)arg1 stemmingFromPath:(id)arg2 normalizedCodepoint:(unsigned int)arg3;
- (id)pathByExtendingWithString:(id)arg1 extendedPathString:(id)arg2 blankLogProb:(double)arg3 nonBlankLogProb:(double)arg4 timestep:(long long)arg5 commitAction:(long long)arg6 symbolLogProb:(double)arg7;
- (id)childPathWithBlankLogProb:(double)arg1;
- (void)updateLastTokenWithMaxActivation:(long long)arg1 totalLogProbability:(double)arg2 tokenBoundaryLogProbability:(double)arg3;
- (void)merge:(id)arg1 logProbCumulator:(CDUnknownBlockType)arg2;
- (long long)compare:(id)arg1;
- (id)debugDescription;
- (id)description;
- (id)tokensWithTimestep:(long long)arg1 isFinalTimestep:(_Bool)arg2;
- (void)commitTokenAtTimestep:(long long)arg1 currentSymbolLogProbability:(double)arg2 commitAction:(long long)arg3 string:(id)arg4 stemmingFromPath:(id)arg5;
- (unsigned long long)_currentTokenStringLength;
@property(readonly, nonatomic) _Bool hasExpanded;
@property(readonly, nonatomic) NSString *latestExpandedSymbol;
@property(readonly, nonatomic) NSString *latestExpandedSymbolIncludingPseudospace;
@property(readonly) double normalizedActivationLogProbability;
- (double)scoreForTokenIndex:(long long)arg1;
@property double lastTokenBoundaryLogProbability;
- (_Bool)hasProblematicMixedScriptWords;
- (double)lexiconScore;
@property(readonly) double normalizedTotalLogProbability;
- (double)modelLogProbability;
- (long long)tokenCount;
- (long long)pseudoSpaceCount;
- (long long)characterCount;
- (void)setPseudoSpaceCount:(long long)arg1;
- (void)setCharacterCount:(long long)arg1;
- (void)setWordLanguageModelLogProbability:(double)arg1;
- (void)setCharacterLanguageModelLogProbability:(double)arg1;
- (void)dealloc;
- (id)initWithLanguageResourceBundle:(id)arg1 scoringFunction:(CDUnknownBlockType)arg2 initialCharacterLMState:(struct CVNLPLanguageModelWithState *)arg3 characterTokenIDs:(vector_3b74075b)arg4 wordTokenIDs:(vector_3b74075b)arg5 optimizingAlignment:(_Bool)arg6 hasContext:(_Bool)arg7;

@end

