//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString, SOADSiteDiscovery, SOKerberosHelper, SOKeychainHelper;

@interface SOKerberosAuthentication : NSObject
{
    _Bool _siteDiscoveryInProgress;
    NSString *_realm;
    SOKerberosHelper *_kerberosHelper;
    SOKeychainHelper *_keychainHelper;
    SOADSiteDiscovery *_siteDiscovery;
}

+ (void)savePacValues:(id)arg1 atLogin:(_Bool)arg2;
+ (void)saveValuesForPlugins:(id)arg1;
- (void).cxx_destruct;
@property(retain) SOADSiteDiscovery *siteDiscovery; // @synthesize siteDiscovery=_siteDiscovery;
@property(retain) SOKeychainHelper *keychainHelper; // @synthesize keychainHelper=_keychainHelper;
@property(retain) SOKerberosHelper *kerberosHelper; // @synthesize kerberosHelper=_kerberosHelper;
@property _Bool siteDiscoveryInProgress; // @synthesize siteDiscoveryInProgress=_siteDiscoveryInProgress;
@property(retain, nonatomic) NSString *realm; // @synthesize realm=_realm;
- (void)triggerVPNIfNeededUsingRealm:(id)arg1 bundleIdentifier:(id)arg2 auditToken:(id)arg3;
- (unsigned long long)mapErrorToKnownError:(id)arg1;
- (_Bool)refreshPacValuesWithContext:(id)arg1 credential:(struct gss_cred_id_t_desc_struct *)arg2 atLogin:(_Bool)arg3;
- (_Bool)refreshPacValuesWithContext:(id)arg1 atLogin:(_Bool)arg2 error:(id *)arg3;
- (_Bool)changePasswordWithContext:(id)arg1 withError:(id *)arg2;
- (unsigned long long)findExistingCredentialUsingContext:(id)arg1 returningCredential:(struct gss_cred_id_t_desc_struct **)arg2 orError:(id *)arg3;
- (unsigned long long)createNewCredentialUsingContext:(id)arg1 returningCredential:(struct gss_cred_id_t_desc_struct **)arg2 orError:(id *)arg3;
- (void)_determineSiteCodeUsingDispatchGroup:(id)arg1 bundleIdentifier:(id)arg2 auditTokenData:(id)arg3 networkFingerprint:(id)arg4 requireTLSForLDAP:(_Bool)arg5;
- (void)determineSiteCodeUsingContext:(id)arg1;
- (id)retrieveCachedSiteCodeFromCacheForBundleIdentifier:(id)arg1 networkFingerprint:(id)arg2;
- (void)setSiteCodeUsingContext:(id)arg1;
- (unsigned long long)attemptKerberosWithContext:(id)arg1 returningToken:(id *)arg2 orError:(id *)arg3;
- (id)initWithRealm:(id)arg1;

@end

