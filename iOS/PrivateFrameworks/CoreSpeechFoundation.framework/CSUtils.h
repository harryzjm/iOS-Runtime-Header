//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface CSUtils : NSObject
{
}

+ (_Bool)deviceRequirePowerAssertionHeld;
+ (_Bool)isAttentiveSiriEnabled;
+ (_Bool)supportsUnderstandingOnDevice;
+ (_Bool)supportsANE;
+ (_Bool)supportsVoiceTriggerFides;
+ (_Bool)supportHandsFree;
+ (_Bool)supportNonInterruptibleSiri;
+ (_Bool)supportsSiriLiminal;
+ (_Bool)supportsSpeakerRecognitionAssets;
+ (id)timeStampWithSaltGrain;
+ (id)deviceHwRevision;
+ (id)deviceBuildVersion;
+ (id)deviceUserAssignedName;
+ (double)systemUpTime;
+ (id)deviceIdentifier;
+ (id)deviceProductVersion;
+ (id)deviceProductType;
+ (id)getSerialQueue:(id)arg1 qualityOfService:(unsigned int)arg2;
+ (id)getFixedHighPrioritySerialQueueWithLabel:(id)arg1 priority:(int)arg2;
+ (id)getFixedPrioritySerialQueueWithLabel:(id)arg1 fixedPriority:(int)arg2;
+ (id)rootQueueWithFixedPriority:(int)arg1;
+ (_Bool)supportZeroFilter:(unsigned long long)arg1;
+ (_Bool)supportBeepCanceller:(unsigned long long)arg1;
+ (_Bool)supportCircularBuffer;
+ (_Bool)shouldDeinterleaveAudioOnCS;
+ (_Bool)supportBluetoothDeviceVoiceTrigger;
+ (_Bool)supportRemoraVoiceTrigger;
+ (_Bool)supportJarvisVoiceTrigger;
+ (_Bool)supportHearstVoiceTrigger;
+ (_Bool)hasRemoteCoreSpeech;
+ (_Bool)supportAcousticProgressiveChecker;
+ (_Bool)supportMyriadLightHouse;
+ (_Bool)supportLazySessionActivation;
+ (_Bool)shouldDownloadVTAssetsOnDaemon;
+ (_Bool)supportLanguageDetector;
+ (_Bool)supportSessionActivateDelay;
+ (_Bool)shouldDelayPhaticForMyriadDecision;
+ (_Bool)supportPhatic;
+ (_Bool)supportPremiumModel;
+ (_Bool)supportContinuousAudioFingerprint;
+ (_Bool)supportAdBlocker;
+ (_Bool)isIOSDeviceSupportingBargeIn;
+ (_Bool)supportPremiumWatchAssets;
+ (_Bool)supportCompactPlus;
+ (_Bool)supportRaiseToSpeak;
+ (_Bool)supportTTS;
+ (_Bool)supportSAT;
+ (_Bool)supportSmartVolume;
+ (_Bool)supportEndpointerWhileHostAsleep;
+ (_Bool)supportHybridEndpointer;
+ (_Bool)supportCSTwoShotDecision;
+ (_Bool)supportSelfTriggerSuppression:(unsigned long long)arg1 refChannelIdx:(unsigned long long)arg2;
+ (_Bool)supportOpportunisticZLL;
+ (_Bool)supportPremiumAssets;
+ (_Bool)supportKeywordDetector;
+ (_Bool)supportContinuousVoiceTrigger;
+ (_Bool)shouldRunVTOnCS;

@end

