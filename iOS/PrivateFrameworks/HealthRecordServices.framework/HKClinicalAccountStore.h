//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <HealthRecordServices/HKClinicalAccountStoreClientInterface-Protocol.h>
#import <HealthRecordServices/_HKXPCExportable-Protocol.h>

@class HKObserverSet, HKTaskServerProxyProvider, NSString;

@interface HKClinicalAccountStore : NSObject <HKClinicalAccountStoreClientInterface, _HKXPCExportable>
{
    struct os_unfair_lock_s _lock;
    HKTaskServerProxyProvider *_proxyProvider;
    HKObserverSet *_accountStateChangeObservers;
    CDUnknownBlockType _unitTesting_didCallReestablishProxyConnectionIfObserversArePresent;
}

+ (id)taskIdentifier;
- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType unitTesting_didCallReestablishProxyConnectionIfObserversArePresent; // @synthesize unitTesting_didCallReestablishProxyConnectionIfObserversArePresent=_unitTesting_didCallReestablishProxyConnectionIfObserversArePresent;
- (void)connectionInvalidated;
- (id)remoteInterface;
- (id)exportedInterface;
- (void)_getSynchronousServerProxyWithHandler:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)_fetchServerProxyWithHandler:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)_executeCheapCallOnPluginServerProxy:(id)arg1;
- (void)_establishProxyConnection;
- (void)_reestablishProxyConnectionIfObserversArePresentWithPluginServerProxy:(id)arg1;
- (void)_establishProxyConnectionIfNoObserversArePresent;
- (void)clientRemote_accountDidChange:(id)arg1 changeType:(long long)arg2;
- (void)createStaticAccountWithTitle:(id)arg1 subtitle:(id)arg2 description:(id)arg3 countryCode:(id)arg4 fhirVersion:(id)arg5 onlyIfNeededForSimulatedGatewayID:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (void)removeAccountStateChangeListener:(id)arg1;
- (void)addAccountStateChangeListener:(id)arg1;
- (void)updateClinicalSharingStatusForAccountWithIdentifier:(id)arg1 firstSharedDate:(id)arg2 lastSharedDate:(id)arg3 userStatus:(id)arg4 multiDeviceStatus:(id)arg5 primaryDeviceName:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (void)refreshAccountConnectionInformationForAccountsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateAccountCredentialStateForAccountWithIdentifier:(id)arg1 state:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)replaceAccountWithNewAccountForAccountWithIdentifier:(id)arg1 usingCredentialWithPersistentID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)pruneAuthenticationDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)persistEphemeralAccount:(id)arg1 triggerIngestion:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)endLoginSessionWithState:(id)arg1 code:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)beginReloginSessionForAccount:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)beginInitialLoginSessionForGateway:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)supportsClinicalSharing;
- (_Bool)hasHealthRecordsAccount;
- (void)invalidateCredentialForAccountWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)deleteAccountWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchAccountWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)accountWithIdentifier:(id)arg1 error:(id *)arg2;
- (void)fetchAccountForSource:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchAccountsForGateways:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchAllAccountsWithCompletion:(CDUnknownBlockType)arg1;
- (id)allAccountsWithError:(id *)arg1;
- (id)initWithHealthStore:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

