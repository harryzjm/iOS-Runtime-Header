//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <VoiceServices/NSSecureCoding-Protocol.h>

@class NSString;

@interface VSInstrumentMetrics : NSObject <NSSecureCoding>
{
    _Bool _isWarmStart;
    _Bool _isServerTTS;
    _Bool _isServerStreamTTS;
    _Bool _isServerTimeout;
    _Bool _isServerTTSRacing;
    _Bool _canUseServerTTS;
    _Bool _neuralAlignmentStall;
    _Bool _neuralAudioClick;
    _Bool _neuralFallback;
    _Bool _isSpeechRequest;
    _Bool _isCacheHitFromDisk;
    _Bool _isCacheHitFromMemory;
    NSString *_utterance;
    NSString *_voiceAssetKey;
    NSString *_voiceResourceAssetKey;
    NSString *_audioOutputRoute;
    NSString *_clientBundleIdentifier;
    NSString *_experimentIdentifier;
    long long _requestCreatedTimestamp;
    long long _eagerRequestCreatedTimestampDiffs;
    long long _synthesisBeginTimestamp;
    long long _synthesisEndTimestamp;
    long long _speechBeginTimestamp;
    long long _speechEndTimestamp;
    long long _audioStartTimestampDiffs;
    long long _serverFirstPacketTimestamp;
    long long _serverLastPacketTimestamp;
    double _serverStreamedAudioDuration;
    double _audioDuration;
    long long _promptCount;
    long long _errorCode;
    long long _sourceOfTTS;
}

+ (id)stringOfSourceOfTTS:(long long)arg1;
+ (_Bool)supportsSecureCoding;
+ (id)descriptionFormatter;
- (void).cxx_destruct;
@property _Bool isCacheHitFromMemory; // @synthesize isCacheHitFromMemory=_isCacheHitFromMemory;
@property _Bool isCacheHitFromDisk; // @synthesize isCacheHitFromDisk=_isCacheHitFromDisk;
@property _Bool isSpeechRequest; // @synthesize isSpeechRequest=_isSpeechRequest;
@property long long sourceOfTTS; // @synthesize sourceOfTTS=_sourceOfTTS;
@property long long errorCode; // @synthesize errorCode=_errorCode;
@property long long promptCount; // @synthesize promptCount=_promptCount;
@property _Bool neuralFallback; // @synthesize neuralFallback=_neuralFallback;
@property _Bool neuralAudioClick; // @synthesize neuralAudioClick=_neuralAudioClick;
@property _Bool neuralAlignmentStall; // @synthesize neuralAlignmentStall=_neuralAlignmentStall;
@property _Bool canUseServerTTS; // @synthesize canUseServerTTS=_canUseServerTTS;
@property _Bool isServerTTSRacing; // @synthesize isServerTTSRacing=_isServerTTSRacing;
@property _Bool isServerTimeout; // @synthesize isServerTimeout=_isServerTimeout;
@property _Bool isServerStreamTTS; // @synthesize isServerStreamTTS=_isServerStreamTTS;
@property _Bool isServerTTS; // @synthesize isServerTTS=_isServerTTS;
@property _Bool isWarmStart; // @synthesize isWarmStart=_isWarmStart;
@property double audioDuration; // @synthesize audioDuration=_audioDuration;
@property double serverStreamedAudioDuration; // @synthesize serverStreamedAudioDuration=_serverStreamedAudioDuration;
@property long long serverLastPacketTimestamp; // @synthesize serverLastPacketTimestamp=_serverLastPacketTimestamp;
@property long long serverFirstPacketTimestamp; // @synthesize serverFirstPacketTimestamp=_serverFirstPacketTimestamp;
@property long long audioStartTimestampDiffs; // @synthesize audioStartTimestampDiffs=_audioStartTimestampDiffs;
@property long long speechEndTimestamp; // @synthesize speechEndTimestamp=_speechEndTimestamp;
@property long long speechBeginTimestamp; // @synthesize speechBeginTimestamp=_speechBeginTimestamp;
@property long long synthesisEndTimestamp; // @synthesize synthesisEndTimestamp=_synthesisEndTimestamp;
@property long long synthesisBeginTimestamp; // @synthesize synthesisBeginTimestamp=_synthesisBeginTimestamp;
@property long long eagerRequestCreatedTimestampDiffs; // @synthesize eagerRequestCreatedTimestampDiffs=_eagerRequestCreatedTimestampDiffs;
@property long long requestCreatedTimestamp; // @synthesize requestCreatedTimestamp=_requestCreatedTimestamp;
@property(copy) NSString *experimentIdentifier; // @synthesize experimentIdentifier=_experimentIdentifier;
@property(copy) NSString *clientBundleIdentifier; // @synthesize clientBundleIdentifier=_clientBundleIdentifier;
@property(copy) NSString *audioOutputRoute; // @synthesize audioOutputRoute=_audioOutputRoute;
@property(copy) NSString *voiceResourceAssetKey; // @synthesize voiceResourceAssetKey=_voiceResourceAssetKey;
@property(copy) NSString *voiceAssetKey; // @synthesize voiceAssetKey=_voiceAssetKey;
@property(copy) NSString *utterance; // @synthesize utterance=_utterance;
- (id)dictionaryMetrics;
- (double)serverStreamLastPacketLatency;
- (double)serverStreamFirstPacketLatency;
- (double)cappedRealTimeFactor;
- (double)realTimeFactor;
- (double)eagerRequestTimeGap;
- (_Bool)isSynthesisCached;
- (double)ttsSynthesisLatency;
- (double)audioQueueLatency;
- (double)timeToPlaybackLatency;
- (double)timeToSpeakLatency;
@property(readonly) long long speechEstimatedOutputBeginTimestamp;
- (double)_clockFactor;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;

@end

