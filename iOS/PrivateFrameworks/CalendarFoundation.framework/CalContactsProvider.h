//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CalendarFoundation/CalContactsProviderProtocol-Protocol.h>

@class CNContact, CNContactStore, CNReputationStore, NSArray, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface CalContactsProvider : NSObject <CalContactsProviderProtocol>
{
    CNContact *_meContact;
    CNContactStore *_store;
    CNReputationStore *_reputationStore;
    NSObject<OS_dispatch_queue> *_syncQueue;
    NSObject<OS_dispatch_queue> *_contactStoreWorkQueue;
    NSString *_testMeContactIdentifer;
    NSMutableSet *_delegates;
    NSArray *_unitTestEmails;
    NSArray *_loadedMyEmailAddresses;
}

+ (id)birthdayStringForContactName:(id)arg1 eventDate:(id)arg2 birthDate:(id)arg3 lunarCalendar:(id)arg4;
+ (_Bool)isCalendarIslamic:(id)arg1;
+ (_Bool)birthdayIsYearless:(id)arg1;
+ (_Bool)shouldPermitOrganizerPhoneNumberFromJunkChecks:(id)arg1 inReputationStore:(id)arg2;
+ (_Bool)shouldPermitOrganizerEmailFromJunkChecks:(id)arg1 inReputationStore:(id)arg2;
+ (id)reputationForHandle:(id)arg1 inStore:(id)arg2;
+ (id)defaultProvider;
- (void).cxx_destruct;
@property(retain) NSArray *loadedMyEmailAddresses; // @synthesize loadedMyEmailAddresses=_loadedMyEmailAddresses;
@property(retain) NSArray *unitTestEmails; // @synthesize unitTestEmails=_unitTestEmails;
@property(retain) NSMutableSet *delegates; // @synthesize delegates=_delegates;
@property(retain) NSString *testMeContactIdentifer; // @synthesize testMeContactIdentifer=_testMeContactIdentifer;
@property(retain) NSObject<OS_dispatch_queue> *contactStoreWorkQueue; // @synthesize contactStoreWorkQueue=_contactStoreWorkQueue;
@property(retain) NSObject<OS_dispatch_queue> *syncQueue; // @synthesize syncQueue=_syncQueue;
@property(retain) CNReputationStore *reputationStore; // @synthesize reputationStore=_reputationStore;
@property(retain) CNContactStore *store; // @synthesize store=_store;
- (_Bool)shouldPermitOrganizerPhoneNumberFromJunkChecks:(id)arg1;
- (_Bool)shouldPermitOrganizerEmailFromJunkChecks:(id)arg1;
- (_Bool)matchesOneOfMyPhoneNumbers:(id)arg1;
- (id)myPhoneNumbers;
- (_Bool)urlMatchesOneOfMyEmails:(id)arg1;
- (_Bool)matchesOneOfMyEmails:(id)arg1;
- (id)cachedEmailAddresses;
- (id)myEmailAddresses;
- (id)cachedEmailAddress;
- (id)cachedEmailAddressArray;
- (id)myEmailAddress;
- (id)myAddressForLabel:(id)arg1;
- (id)myWorkAddress;
- (id)myHomeAddress;
- (id)myFullName;
- (id)myNameWithStyle:(long long)arg1;
- (id)myShortDisplayName;
- (_Bool)contactIdentifierIsMe:(id)arg1;
- (void)donateEncodedLikenessString:(id)arg1 forEmailAddress:(id)arg2;
- (id)myAvatarEncodedString;
- (id)_fullNameForFirstContactMatchingPredicate:(id)arg1;
- (id)fullNameForFirstContactMatchingPhoneNumber:(id)arg1;
- (id)fullNameForFirstContactMatchingEmailAddress:(id)arg1;
- (id)contactsFromContactIdentifiers:(id)arg1 withKeys:(id)arg2;
- (id)unifiedContactMatchingName:(id)arg1 email:(id)arg2 url:(id)arg3 keysToFetch:(id)arg4;
- (id)unifiedContactMatchingString:(id)arg1 keysToFetch:(id)arg2 matchType:(long long *)arg3;
- (id)unifiedContactWithIdentifier:(id)arg1;
- (id)unifiedContactWithIdentifier:(id)arg1 keysToFetch:(id)arg2;
- (id)unifiedContactWithName:(id)arg1;
- (id)unifiedContactWithPhoneNumber:(id)arg1;
- (id)unifiedContactWithEmailAddress:(id)arg1;
- (id)unifiedContactsMatchingPredicate:(id)arg1 keysToFetch:(id)arg2;
- (id)unifiedMeContact;
- (void)setTestMeContactIdentifier:(id)arg1;
- (id)_fetchedUnifiedMeContact;
- (id)_meWithKeys:(id)arg1;
- (void)_setLastHistoryToken:(id)arg1;
- (id)_lastHistoryToken;
- (void)_syncContacts;
- (void)meCardChanged:(id)arg1;
- (void)contactsChanged:(id)arg1;
- (id)contactStore;
- (void)setMeCardEmailsForUnitTesting:(id)arg1;
@property(retain) CNContact *meContact;
- (void)deregisterForContactChangeNotifications:(id)arg1;
- (void)registerForContactChangeNotifications:(id)arg1;
- (id)initWithStore:(id)arg1;
- (id)init;

@end

