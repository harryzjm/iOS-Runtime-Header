//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSOperation.h>

#import <NotesUI/ICAttachmentThumbnailOperation-Protocol.h>

@class ICAppearanceInfo, ICThumbnailDataCache, NSMutableArray, NSString, NSURL, UIImage;

@interface ICAttachmentThumbnailPostProcessingOperation : NSOperation <ICAttachmentThumbnailOperation>
{
    _Bool _showAsFileIcon;
    _Bool _isMovie;
    UIImage *_image;
    double _scale;
    ICAppearanceInfo *_appearanceInfo;
    ICThumbnailDataCache *_cache;
    NSString *_cacheKey;
    CDUnknownBlockType _fallbackBlock;
    CDUnknownBlockType _processingBlock;
    NSMutableArray *_completionBlocks;
    NSURL *_mediaURL;
    unsigned long long _imageScaling;
    struct CGSize _minSize;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool isMovie; // @synthesize isMovie=_isMovie;
@property(nonatomic) _Bool showAsFileIcon; // @synthesize showAsFileIcon=_showAsFileIcon;
@property(nonatomic) unsigned long long imageScaling; // @synthesize imageScaling=_imageScaling;
@property(retain, nonatomic) NSURL *mediaURL; // @synthesize mediaURL=_mediaURL;
@property(retain, nonatomic) NSMutableArray *completionBlocks; // @synthesize completionBlocks=_completionBlocks;
@property(copy, nonatomic) CDUnknownBlockType processingBlock; // @synthesize processingBlock=_processingBlock;
@property(copy, nonatomic) CDUnknownBlockType fallbackBlock; // @synthesize fallbackBlock=_fallbackBlock;
@property(retain, nonatomic) NSString *cacheKey; // @synthesize cacheKey=_cacheKey;
@property(retain, nonatomic) ICThumbnailDataCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) ICAppearanceInfo *appearanceInfo; // @synthesize appearanceInfo=_appearanceInfo;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) struct CGSize minSize; // @synthesize minSize=_minSize;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void)main;
- (void)addCompletionBlock:(CDUnknownBlockType)arg1;
- (_Bool)isMatchingOperationForCacheKey:(id)arg1 cache:(id)arg2;
- (id)initWithSize:(struct CGSize)arg1 scale:(double)arg2 appearanceInfo:(id)arg3 cache:(id)arg4 cacheKey:(id)arg5 processingBlock:(CDUnknownBlockType)arg6 completionBlocks:(id)arg7 fallbackBlock:(CDUnknownBlockType)arg8;

@end

