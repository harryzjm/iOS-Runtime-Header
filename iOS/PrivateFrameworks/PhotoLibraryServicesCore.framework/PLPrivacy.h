//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class PLAssetsdPrivacySupportClient;
@protocol OS_dispatch_queue;

@interface PLPrivacy : NSObject
{
    NSObject<OS_dispatch_queue> *_isolationQueue;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    long long _authRightFullAccess;
    long long _authRightAddOnly;
    PLAssetsdPrivacySupportClient *_privacySupportClient;
    _Bool _hasHandledLimitedLibraryReprompt;
    _Bool _limitedLibrarySupported;
}

+ (id)_logDictionaryFromPhotosPickerClientLogFile:(id)arg1;
+ (_Bool)_isLimitedLibrarySupportedInClient;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property(nonatomic, getter=isLimitedLibrarySupported) _Bool limitedLibrarySupported; // @synthesize limitedLibrarySupported=_limitedLibrarySupported;
@property _Bool hasHandledLimitedLibraryReprompt; // @synthesize hasHandledLimitedLibraryReprompt=_hasHandledLimitedLibraryReprompt;
- (id)photosPickerPresentedLibraryLogForClient:(id)arg1;
- (id)photosPickerPresentedLibraryLogsByClient;
- (void)logPhotosPickerPresentedLibraryForClient:(id)arg1;
- (void)logPhotosAccessWithSelfAuditToken;
- (void)logPhotosAccessWithPhotoPickerClientIdentification:(id)arg1;
- (void)logPhotosAccessWithClientAuthorization:(id)arg1;
- (void)requestLimitedLibraryPromptForApplicationIdentifier:(id)arg1;
- (void)presentAsyncPromptForLimitedLibraryPickerIfNeeded;
- (long long)photosAccessAllowedWithScope:(long long)arg1 auditToken:(CDStruct_4c969caf)arg2 clientAuthorization:(id)arg3;
- (long long)photosAccessAllowedWithScope:(long long)arg1;
- (long long)checkPhotosAccessAllowedWithScope:(long long)arg1;
- (void)checkPhotosAccessAllowedWithScope:(long long)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_isPhotosAccessAllowedWithScope:(long long)arg1 promptIfUnknown:(_Bool)arg2 synchronous:(_Bool)arg3 resultHandler:(CDUnknownBlockType)arg4;
- (void)_checkAuthStatusForPhotosAccessScope:(long long)arg1 promptIfUnknown:(_Bool)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (long long)_authStatusForScope:(long long)arg1;
- (void)_setAuthStatus:(long long)arg1 scope:(long long)arg2;
- (void)_resolvePreflightStatusForScope:(long long)arg1;
- (id)init;

@end

