//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface PLAssetsdCloudInternalClient
{
}

- (void)markResourcesPurgeableWithUrgency:(long long)arg1 assetUuids:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (unsigned long long)getResetSyncStatusWithError:(id *)arg1;
- (void)queryParticipantsWithEmails:(id)arg1 phoneNumbers:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)forceSyncMomentShare:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)acceptShare:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchShareFromShareURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)publishShare:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)overrideSystemBudgetsForSyncSession:(_Bool)arg1 systemBudgets:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;
- (void)getSystemBudgetsWithReply:(CDUnknownBlockType)arg1;
- (void)getNotUploadedCount:(CDUnknownBlockType)arg1;
- (void)getCurrentTransferProgress:(CDUnknownBlockType)arg1;
- (void)rampingRequestForResourceType:(unsigned long long)arg1 numRequested:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;
- (void)synchronouslySetCloudPhotoLibraryPauseState:(_Bool)arg1 reason:(short)arg2;
- (void)setCloudPhotoLibraryPauseState:(_Bool)arg1 reason:(short)arg2;
- (void)setCloudPhotoLibraryEnabledStateSync:(_Bool)arg1;
- (void)setCloudPhotoLibraryEnabledState:(_Bool)arg1;
- (void)syncCloudPhotoLibrary;
- (_Bool)shouldAutoEnableiCPLOnOSXWithError:(id *)arg1;
- (_Bool)isReadyForAnalysis;
- (_Bool)isReadyForCloudPhotoLibrary;
- (void)setPersonInfoDictionary:(id)arg1 forPersonID:(id)arg2;
- (id)personInfoDictionaryForPersonID:(id)arg1 error:(id *)arg2;
- (id)emailAddressForKey:(long long)arg1 error:(id *)arg2;
- (long long)keyForEmailAddress:(id)arg1 error:(id *)arg2;
- (unsigned long long)cloudSharingSpaceManagementRequestWithType:(unsigned long long)arg1 optionalBytesToPurge:(unsigned long long)arg2 error:(id *)arg3;
- (void)updateSharedAlbumsCachedServerConfigurationLimits;
- (void)enablePhotostreamsWithStreamID:(id)arg1;
- (void)createPhotostreamAlbumWithStreamID:(id)arg1;

@end

