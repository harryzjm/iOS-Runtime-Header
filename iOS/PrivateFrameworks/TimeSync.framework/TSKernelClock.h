//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class IOKConnection, IOKInterestNotification, IOKNotificationPort, IOKService;

@interface TSKernelClock
{
    IOKService *_service;
    IOKConnection *_connection;
    IOKNotificationPort *_notificationPort;
    IOKInterestNotification *_interestNotification;
    struct os_unfair_lock_s _serviceLock;
}

+ (id)clockNameForClockIdentifier:(unsigned long long)arg1;
+ (id)diagnosticInfoForClockIdentifier:(unsigned long long)arg1;
+ (id)diagnosticInfoForService:(id)arg1;
+ (id)serviceForClockIdentifier:(unsigned long long)arg1;
+ (id)diagnosticDescriptionForService:(id)arg1 withIndent:(id)arg2;
+ (id)iokitMatchingDictionaryForClockIdentifier:(unsigned long long)arg1;
+ (id)availableKernelClockIdentifiers;
- (void).cxx_destruct;
- (id)diagnosticDescriptionWithIndent:(id)arg1;
- (void)dealloc;
- (id)clockName;
- (void)_handleInterestNotification:(unsigned int)arg1 withArgument:(void *)arg2;
- (_Bool)deregisterAsyncCallback;
- (_Bool)registerAsyncCallback;
- (void)_handleNotification:(unsigned int)arg1 withArgs:(unsigned long long *)arg2 ofCount:(unsigned int)arg3;
- (void)_handleNotification:(unsigned int)arg1 withArg1:(unsigned long long)arg2 andArg2:(unsigned long long)arg3;
@property(readonly, nonatomic) IOKConnection *connection;
@property(readonly, nonatomic) IOKService *service;
- (_Bool)getTimeSyncTimeRateRatioNumerator:(unsigned long long *)arg1 denominator:(unsigned long long *)arg2 timeSyncAnchor:(unsigned long long *)arg3 andDomainAnchor:(unsigned long long *)arg4 withError:(id *)arg5;
- (unsigned long long)convertFromDomainIntervalToTimeSyncTimeInterval:(unsigned long long)arg1;
- (unsigned long long)convertFromTimeSyncTimeIntervalToDomainInterval:(unsigned long long)arg1;
- (_Bool)convertFromDomainTime:(unsigned long long *)arg1 toTimeSyncTime:(unsigned long long *)arg2 withCount:(unsigned int)arg3;
- (_Bool)convertFromTimeSyncTime:(unsigned long long *)arg1 toDomainTime:(unsigned long long *)arg2 withCount:(unsigned int)arg3;
- (unsigned long long)convertFromDomainToTimeSyncTime:(unsigned long long)arg1;
- (unsigned long long)convertFromTimeSyncToDomainTime:(unsigned long long)arg1;
- (_Bool)getMachAbsoluteRateRatioNumerator:(unsigned long long *)arg1 denominator:(unsigned long long *)arg2 machAnchor:(unsigned long long *)arg3 andDomainAnchor:(unsigned long long *)arg4 withError:(id *)arg5;
- (double)hostRateRatio;
- (int)_lockState;
- (unsigned long long)convertFromDomainIntervalToMachAbsoluteInterval:(unsigned long long)arg1;
- (unsigned long long)convertFromMachAbsoluteIntervalToDomainInterval:(unsigned long long)arg1;
- (_Bool)convertFromDomainTime:(unsigned long long *)arg1 toMachAbsoluteTime:(unsigned long long *)arg2 withCount:(unsigned int)arg3;
- (_Bool)convertFromMachAbsoluteTime:(unsigned long long *)arg1 toDomainTime:(unsigned long long *)arg2 withCount:(unsigned int)arg3;
- (unsigned long long)convertFromDomainToMachAbsoluteTime:(unsigned long long)arg1;
- (unsigned long long)convertFromMachAbsoluteToDomainTime:(unsigned long long)arg1;
- (id)initWithClockIdentifier:(unsigned long long)arg1;

@end

