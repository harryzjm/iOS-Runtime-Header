//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@protocol MTLComputePipelineState, MTLDevice, MTLSamplerState;

@interface PTRaytracingUtils : NSObject
{
    id <MTLComputePipelineState> _interpolateLumaRadius;
    id <MTLComputePipelineState> _interpolateLumaRadiusToDestYUV;
    id <MTLComputePipelineState> _interpolateLumaRadiusToDestRGBA;
    id <MTLComputePipelineState> _focusEdgeMask;
    id <MTLComputePipelineState> _interpolateRGBRadiusToDestYUV[9];
    id <MTLComputePipelineState> _interpolateRGBRadiusToDestRGBA[9];
    id <MTLComputePipelineState> _interpolateRGBRadiusToDestYUVFromSource[9];
    id <MTLComputePipelineState> _interpolateRGBRadiusToDestRGBAFromSource[9];
    id <MTLComputePipelineState> _centerDisparityOnFocus;
    id <MTLComputePipelineState> _sobelEdgeDetector;
    id <MTLComputePipelineState> _edgeDilation;
    id <MTLDevice> _device;
    id <MTLSamplerState> _sNBE;
    id <MTLSamplerState> _sNLE;
}

+ (struct PTNoiseValues)calculateVarReadNoise:(id)arg1 colorSize:(struct CGSize)arg2;
+ (float)frameWidth;
+ (float)focalLength;
+ (struct PTFocusEdge)createFocusEdge;
+ (struct PTFocus)createFocusObject:(id)arg1 coverageOverscan:(float)arg2 anamorphicFactor:(float)arg3 raytracingRadiusLocal:(float)arg4 rayCount:(int)arg5 colorSize:(_Bool)arg6 doMacroApertureLimit: /* Error: Ran out of types for this method. */;
+ (struct PTFocus)createFocusObject:(id)arg1;
+ (float)cocRadiusNormalized:(float)arg1 disparity:(float)arg2 fNumber:(float)arg3 focalLength:(float)arg4;
+ (id)createRandomUChars:(id)arg1 rayCount:(int)arg2;
+ (id)createRandomValues:(id)arg1;
+     // Error parsing type: v28@0:8^{PTRandomDisk=[94{Half2=  }]i }16i24, name: initEquidistPoints:samplePatternCircles:
- (void).cxx_destruct;
- (int)detectDilatedEdges:(id)arg1 inDisparity:(id)arg2 tempEdges:(id)arg3 outEdges:(id)arg4 focusObject:(struct PTFocus)arg5 disparityDiffMinMax:(id)arg6;
- (void)centerDisparityOnFocus:(id)arg1 inDisparity:(id)arg2 outDisparity:(id)arg3 focusObject:(struct PTFocus)arg4;
- (void)focusEdgeMask:(id)arg1 inDisparityDiff:(id)arg2 focusObject:(struct PTFocus)arg3 focusEdge:(struct PTFocusEdge)arg4 outFocusEdgeMask:(id)arg5;
- (void)interpolateRGBRadiusToDest:(id)arg1 renderRequest:(id)arg2 inRGBA:(id)arg3 inRGBRadius:(id)arg4 inRandomGauss:(id)arg5 bicubicSampling:(_Bool)arg6;
- (void)interpolateRGBRadiusUsingSourceToDest:(id)arg1 renderRequest:(id)arg2 inRGBRadius:(id)arg3 inRandomGauss:(id)arg4 bicubicSampling:(_Bool)arg5;
- (void)interpolateLumaRadiusToDest:(id)arg1 renderRequest:(id)arg2 inLumaSource:(id)arg3 inYuvRadius:(id)arg4;
- (void)interpolateLumaRadius:(id)arg1 renderRequest:(id)arg2 inLumaSource:(id)arg3 inLumaRadius:(id)arg4 outLuma:(id)arg5;
- (id)sNLE;
- (id)sNBE;
- (id)initWithDevice:(id)arg1 library:(id)arg2 pipelineLibrary:(id)arg3;

@end

