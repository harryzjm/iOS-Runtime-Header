//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE;

@interface PTGlobalRenderingMetadataVersion1
{
    float _defaultAperture;
    float _minAperture;
    float _maxAperture;
    float _highlightBoostFactor;
    float _highlightChromaFactor;
    float _focalLength35mm;
    unsigned int _conversionGain;
    unsigned int _readNoise1x;
    unsigned int _readNoise8x;
    CDStruct_79c71658 _rawSensorSize;
    struct CGRect _sensorCropRect;
    CDStruct_14d5dc5e _extrinsicsMatrix;
    MISSING_TYPE *_visCropFactor;
    unsigned int _sensorID;
    unsigned int _renderingVersion;
}

@property(nonatomic) unsigned int renderingVersion; // @synthesize renderingVersion=_renderingVersion;
@property(nonatomic) unsigned int sensorID; // @synthesize sensorID=_sensorID;
@property(nonatomic) MISSING_TYPE *visCropFactor; // @synthesize visCropFactor=_visCropFactor;
@property(nonatomic) unsigned int readNoise8x; // @synthesize readNoise8x=_readNoise8x;
@property(nonatomic) unsigned int readNoise1x; // @synthesize readNoise1x=_readNoise1x;
@property(nonatomic) unsigned int conversionGain; // @synthesize conversionGain=_conversionGain;
@property(nonatomic) CDStruct_14d5dc5e extrinsicsMatrix; // @synthesize extrinsicsMatrix=_extrinsicsMatrix;
@property(nonatomic) float focalLength35mm; // @synthesize focalLength35mm=_focalLength35mm;
@property(nonatomic) CDStruct_79c71658 rawSensorSize; // @synthesize rawSensorSize=_rawSensorSize;
@property(nonatomic) struct CGRect sensorCropRect; // @synthesize sensorCropRect=_sensorCropRect;
@property(nonatomic) float highlightChromaFactor; // @synthesize highlightChromaFactor=_highlightChromaFactor;
@property(nonatomic) float highlightBoostFactor; // @synthesize highlightBoostFactor=_highlightBoostFactor;
@property(nonatomic) float maxAperture; // @synthesize maxAperture=_maxAperture;
@property(nonatomic) float minAperture; // @synthesize minAperture=_minAperture;
@property(nonatomic) float defaultAperture; // @synthesize defaultAperture=_defaultAperture;
- (void)applyToRenderRequest:(id)arg1;
- (void)applyToRenderState:(id)arg1;
- (_Bool)writeToData:(id)arg1 withOptions:(id)arg2;
- (unsigned int)sizeOfSerializedObjectWithOptions:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithMinorVersion:(unsigned int)arg1;

@end

