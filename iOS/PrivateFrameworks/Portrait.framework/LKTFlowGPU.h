//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE;
@protocol MTLBuffer, MTLComputePipelineState, MTLDevice, MTLTexture;

@interface LKTFlowGPU : NSObject
{
    id <MTLDevice> _device;
    id <MTLComputePipelineState> _computePipelines[12];
    unsigned long long _maxThreadExecutionWidth;
    struct CGSize _ref_pyr_size[10];
    struct CGSize _aux_pyr_size[10];
    id <MTLTexture> _I_tex[2][10];
    id <MTLTexture> _I_u32_alias_tex[2][10];
    id <MTLTexture> _G0_tex[10];
    id <MTLTexture> _G1_tex[10];
    id <MTLTexture> _C0_tex[10];
    id <MTLTexture> _C1_tex[10];
    id <MTLBuffer> _Adiagb_buf[2];
    id <MTLBuffer> _Ixy_buf[2];
    id <MTLBuffer> _idt_buf;
    id <MTLTexture> _w_tex[10];
    id <MTLTexture> _uv_fwd_tex[2][10];
    id <MTLTexture> _uv_bwd_tex[2][10];
    id <MTLTexture> _uv_fwd_u32_alias_tex[2][10];
    id <MTLTexture> _uv_bwd_u32_alias_tex[2][10];
    int _current_frame_index;
    int _streamFrameCount;
    _Bool _indexUpdated[2];
    id <MTLTexture> _uv_fwd_tex_user_ref;
    id <MTLTexture> _uv_bwd_tex_user_ref;
    id <MTLBuffer> _kpt_buf;
    _Bool _isValid;
    _Bool _needConversionBGRA2YUVA;
    _Bool _useNonLocalRegularization;
    _Bool _isBidirectional;
    _Bool _isInverse;
    int _nscales;
    int _nwarpings;
    int _nlreg_radius;
    int _nlreg_padding;
    float _nlreg_sigma_l;
    float _nlreg_sigma_c;
    float _nlreg_sigma_w;
    struct CGSize _ref_size;
    struct CGSize _aux_size;
}

+ (void)_computeScalingFactor:(id)arg1 dst_tex:(id)arg2 scale_xy_inv:(MISSING_TYPE **)arg3 coeff:(float *)arg4;
- (void).cxx_destruct;
@property(nonatomic) _Bool isInverse; // @synthesize isInverse=_isInverse;
@property(nonatomic) _Bool isBidirectional; // @synthesize isBidirectional=_isBidirectional;
@property(nonatomic) float nlreg_sigma_w; // @synthesize nlreg_sigma_w=_nlreg_sigma_w;
@property(nonatomic) float nlreg_sigma_c; // @synthesize nlreg_sigma_c=_nlreg_sigma_c;
@property(nonatomic) float nlreg_sigma_l; // @synthesize nlreg_sigma_l=_nlreg_sigma_l;
@property(nonatomic) int nlreg_padding; // @synthesize nlreg_padding=_nlreg_padding;
@property(nonatomic) int nlreg_radius; // @synthesize nlreg_radius=_nlreg_radius;
@property(nonatomic) _Bool useNonLocalRegularization; // @synthesize useNonLocalRegularization=_useNonLocalRegularization;
@property(nonatomic) int nwarpings; // @synthesize nwarpings=_nwarpings;
@property(readonly, nonatomic) int streamFrameCount; // @synthesize streamFrameCount=_streamFrameCount;
@property(readonly, nonatomic) int nscales; // @synthesize nscales=_nscales;
@property(readonly, nonatomic) struct CGSize aux_size; // @synthesize aux_size=_aux_size;
@property(readonly, nonatomic) struct CGSize ref_size; // @synthesize ref_size=_ref_size;
@property(nonatomic) _Bool needConversionBGRA2YUVA; // @synthesize needConversionBGRA2YUVA=_needConversionBGRA2YUVA;
@property(readonly, nonatomic) _Bool isValid; // @synthesize isValid=_isValid;
- (int)_doNLRegularizationWithCommandBuffer:(id)arg1 in_uv_tex:(id)arg2 join_tex:(id)arg3 w_tex:(id)arg4 out_uv_tex:(id)arg5;
- (int)_enqueueKeypointsFromFlowWithCommandBuffer:(id)arg1 in_uv_fwd_tex:(id)arg2 in_uv_bwd_tex:(id)arg3 out_kpt_buf:(id)arg4 block_size:(int)arg5 bidirectional_error:(float)arg6 out_num_keypoints:(unsigned short *)arg7;
- (int)_enqueueFlowConsistencyWithCommandBuffer:(id)arg1 in_uv0_tex:(id)arg2 in_uv1_tex:(id)arg3 out_uv_tex:(id)arg4;
- (int)_doSolverWithCommandBuffer:(id)arg1 scale:(int)arg2 in_uv_tex:(id)arg3 in_G0_tex:(id)arg4 in_G1_tex:(id)arg5 in_C0_tex:(id)arg6 in_C1_tex:(id)arg7 out_uv_tex:(id)arg8 out_w_tex:(id)arg9;
- (int)_computeFeaturesDerivativesWithCommandBuffer:(id)arg1 in_tex:(id)arg2 out_tex:(id)arg3;
- (int)_computeFeaturesWithCommandBuffer:(id)arg1 in_tex:(id)arg2 out_tex:(id)arg3;
- (int)_downscale2XWithCommandBuffer:(id)arg1 in_tex:(id)arg2 out_tex:(id)arg3;
- (int)_zeroFlowWithCommandBuffer:(id)arg1 uv_tex:(id)arg2;
- (int)_createImagePyramidWithCommandBuffer:(id)arg1 in_tex:(id)arg2 I_idx:(int)arg3;
- (int)_computeOpticalFlowBidirectional:(id)arg1;
- (int)_computeOpticalFlow:(id)arg1 computeFeatureI0:(_Bool)arg2 computeFeatureI1:(_Bool)arg3;
- (int)_setupBuffer;
- (void)_setupPipelines;
- (void)_initMemory:(int)arg1 height:(int)arg2 nscales:(int)arg3;
- (void)_setDefaultParameters;
- (int)computeKeypointsFromTexForwardFlow:(id)arg1 backwardFlow:(id)arg2 bidirectionalError:(float)arg3 blockSize:(int)arg4 outNumKeypoints:(unsigned short *)arg5 commandBuffer:(id)arg6;
- (int)estimateFlowStreamTex:(id)arg1 commandBuffer:(id)arg2;
- (int)estimateFlowStreamTex:(id)arg1 index:(int)arg2 doOpticalFlow:(_Bool)arg3 commandBuffer:(id)arg4;
- (int)estimateFlowFromTexReference:(id)arg1 target:(id)arg2 commandBuffer:(id)arg3;
- (int)setOutputTexUVForward:(id)arg1 backward:(id)arg2;
- (int)setOutputTexUV:(id)arg1;
- (void)setPreset:(long long)arg1;
- (id)newBufferWithPixelFormat:(unsigned long long)arg1 width:(int)arg2 data:(const void *)arg3;
@property(readonly, nonatomic) id <MTLBuffer> keypoints;
- (void)reset;
- (id)initWithDevice:(id)arg1 width:(int)arg2 height:(int)arg3 nscales:(int)arg4;

@end

