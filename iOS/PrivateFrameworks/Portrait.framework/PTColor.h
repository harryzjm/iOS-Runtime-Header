//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@protocol MTLComputePipelineState, MTLDeviceSPI, MTLLibrary;

@interface PTColor : NSObject
{
    id <MTLDeviceSPI> _device;
    id <MTLLibrary> _defaultLibrary;
    id <MTLComputePipelineState> _convertRGB[9];
    id <MTLComputePipelineState> _convertYUV[2][9];
    id <MTLComputePipelineState> _convertYUVPyramid[2][9];
    id <MTLComputePipelineState> _convertRGBToYUV[9];
    id <MTLComputePipelineState> _convertYUVPyramidFromRGB[9];
    id <MTLComputePipelineState> _convertYUVToRGB[9];
    id <MTLComputePipelineState> _convertRGBPyramid[9];
    id <MTLComputePipelineState> _convertRGBPyramidFromYUV[9];
}

+ (int)getColorMatrix:(id)arg1;
+ (int)getColorTransferFunction:(id)arg1 linearToEncoded:(_Bool)arg2;
+ (CDStruct_14d5dc5e)colorMatrixAndBiasFor:(int)arg1 toRGB:(_Bool)arg2 fullRange:(_Bool)arg3 colorYCbCrDepth:(int)arg4;
- (void).cxx_destruct;
- (int)convertYUVLinearToDestination:(id)arg1 renderRequest:(id)arg2 inLuma:(id)arg3 inChroma:(id)arg4;
- (int)convertYUVLinearFromSource:(id)arg1 renderRequest:(id)arg2 outLuma:(id)arg3 outChroma:(id)arg4;
- (int)convertRGBLinearToDestination:(id)arg1 renderRequest:(id)arg2 inRGBA:(id)arg3;
- (int)convertRGBLinearFromSource:(id)arg1 renderRequest:(id)arg2 outRGBA:(id)arg3;
- (int)convertYUVPyramidFromSource:(id)arg1 renderRequest:(id)arg2 lumaPyramidArray:(id)arg3 chromaPyramidArray:(id)arg4 outDownscaleX2RGBA:(id)arg5;
- (int)convertRGBPyramidFromSource:(id)arg1 renderRequest:(id)arg2 rgbaPyramidArray:(id)arg3 skipLevel0:(_Bool)arg4;
- (int)convertRGBPyramidFromSource:(id)arg1 renderRequest:(id)arg2 rgbaPyramidArray:(id)arg3;
- (int)convertRGBPyramidFromYUV:(id)arg1 inLuma:(id)arg2 inChroma:(id)arg3 rgbaPyramidArray:(id)arg4 colorTransferFunction:(int)arg5 colorYCbCrMatrix:(int)arg6 colorYCbCrFullRangeIn:(_Bool)arg7 colorYCbCrDepthIn:(int)arg8 skipLevel0:(_Bool)arg9;
- (int)convertRGBPyramidFromYUV:(id)arg1 inLuma:(id)arg2 inChroma:(id)arg3 rgbaPyramidArray:(id)arg4 colorTransferFunction:(int)arg5 colorYCbCrMatrix:(int)arg6 colorYCbCrFullRangeIn:(_Bool)arg7 colorYCbCrDepthIn:(int)arg8;
- (int)convertRGBPyramid:(id)arg1 inRGBA:(id)arg2 rgbaPyramidArray:(id)arg3 colorTransferFunction:(int)arg4 skipLevel0:(_Bool)arg5;
- (int)convertRGBPyramid:(id)arg1 inRGBA:(id)arg2 rgbaPyramidArray:(id)arg3 colorTransferFunction:(int)arg4;
- (int)convertYUVPyramidFromRGB:(id)arg1 inRGBA:(id)arg2 lumaPyramidArray:(id)arg3 chromaPyramidArray:(id)arg4 outDownscaleX2RGBA:(id)arg5 colorTransferFunction:(int)arg6 colorYCbCrMatrix:(int)arg7 colorYCbCrFullRange:(_Bool)arg8 colorYCbCrDepthOut:(int)arg9;
- (int)convertYUVPyramid:(id)arg1 inLuma:(id)arg2 inChroma:(id)arg3 lumaPyramidArray:(id)arg4 chromaPyramidArray:(id)arg5 outDownscaleX2RGBA:(id)arg6 colorTransferFunction:(int)arg7 colorYCbCrMatrix:(int)arg8 colorYCbCrFullRange:(_Bool)arg9 colorYCbCrDepthIn:(int)arg10 colorYCbCrDepthOut:(int)arg11;
- (int)convertYUVtoRGB:(id)arg1 inLuma:(id)arg2 inChroma:(id)arg3 outRGBA:(id)arg4 colorTransferFunction:(int)arg5 colorYCbCrMatrix:(int)arg6 colorYCbCrFullRange:(_Bool)arg7 colorYCbCrDepthIn:(int)arg8;
- (int)convertRGBtoYUV:(id)arg1 inRGBA:(id)arg2 outLuma:(id)arg3 outChroma:(id)arg4 colorTransferFunction:(int)arg5 colorYCbCrMatrix:(int)arg6 colorYCbCrFullRange:(_Bool)arg7 colorYCbCrDepthOut:(int)arg8;
- (int)convertYUV:(id)arg1 inLuma:(id)arg2 inChroma:(id)arg3 outLuma:(id)arg4 outChroma:(id)arg5 colorTransferFunction:(int)arg6 colorYCbCrMatrix:(int)arg7 colorYCbCrFullRange:(_Bool)arg8 colorYCbCrDepthIn:(int)arg9 colorYCbCrDepthOut:(int)arg10;
- (int)convertRGB:(id)arg1 inRGBA:(id)arg2 outRGBA:(id)arg3 colorTransferFunction:(int)arg4;
- (int)convertRGB:(id)arg1 inRGBA:(id)arg2 outRGBA:(id)arg3 colorTransferFunction:(int)arg4 rotateCCW:(_Bool)arg5;
- (id)initWithDevice:(id)arg1 library:(id)arg2 pipelineLibrary:(id)arg3;

@end

