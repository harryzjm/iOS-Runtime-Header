//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreCDP/AAFAnalyticsTransport-Protocol.h>

@class ACAccount, CDPContext, CDPFollowUpContext, NSArray, NSDate, NSDictionary, NSString;
@protocol CDPAuthProviderInternal, CDPStateUIProviderInternal;

@protocol CDPDaemonProtocol <AAFAnalyticsTransport>
- (oneway void)hasSOSActiveDeviceStateChanged:(_Bool)arg1 withAltDSID:(NSString *)arg2;
- (oneway void)isOTEnabledForContext:(CDPContext *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)generateEscrowRecordStatusReportForContext:(CDPContext *)arg1 usingCache:(_Bool)arg2 withCompletion:(void (^)(CDPEscrowRecordReport *, NSError *))arg3;
- (oneway void)updateLastSilentEscrowRecordRepairAttemptDate:(NSDate *)arg1 context:(CDPContext *)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (oneway void)performSilentEscrowRecordRepairWithContext:(CDPContext *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (oneway void)startSilentEscrowRecordRepairWithContext:(CDPContext *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (oneway void)shouldPerformSilentEscrowRecordRepairWithContext:(CDPContext *)arg1 usingCache:(_Bool)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)fetchTermsAcceptanceForAccount:(ACAccount *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;
- (void)saveTermsAcceptance:(NSDictionary *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)pcsKeysForServices:(NSArray *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;
- (oneway void)updateWebAccessStatus:(unsigned long long)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)webAccessStatusWithCompletion:(void (^)(unsigned long long, NSError *))arg1;
- (oneway void)updateWalrusStatus:(unsigned long long)arg1 completion:(void (^)(CDPCombinedWalrusStatus *, NSError *))arg2;
- (oneway void)broadcastWalrusStateChange;
- (oneway void)repairWalrusWithCompletion:(void (^)(NSError *))arg1;
- (oneway void)walrusStatusWithContext:(CDPContext *)arg1 completion:(void (^)(unsigned long long, NSError *))arg2;
- (oneway void)deviceEscrowRecordRecoverableWithContext:(CDPContext *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)fetchEscrowRecordDevicesWithContext:(CDPContext *)arg1 usingCache:(_Bool)arg2 completion:(void (^)(NSArray *, NSError *))arg3;
- (void)postFollowUpWithContext:(CDPFollowUpContext *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)clearFollowUpWithContext:(CDPFollowUpContext *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)performRecoveryWithContext:(CDPContext *)arg1 uiProvider:(id <CDPStateUIProviderInternal>)arg2 authProvider:(id <CDPAuthProviderInternal>)arg3 completion:(void (^)(NSDictionary *, NSError *))arg4;
- (void)removeNonViewAwarePeersFromCircleWithContext:(CDPContext *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)setUserVisibleKeychainSyncEnabled:(_Bool)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;
- (void)isUserVisibleKeychainSyncEnabledWithCompletion:(void (^)(_Bool))arg1;
- (void)hasLocalSecretWithCompletion:(void (^)(_Bool))arg1;
- (void)isICDPEnabledForDSID:(NSString *)arg1 checkWithServer:(_Bool)arg2 completion:(void (^)(_Bool))arg3;
- (oneway void)verifyRecoveryKeyObservingSystemsHaveMatchingStateWithContext:(CDPContext *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (oneway void)isRecoveryKeyAvailableWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)generateRandomRecoveryKeyWithContext:(CDPContext *)arg1 completion:(void (^)(NSString *, NSError *))arg2;
- (void)deleteRecoveryKeyWithContext:(CDPContext *)arg1 uiProvider:(id <CDPStateUIProviderInternal>)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)generateNewRecoveryKeyWithContext:(CDPContext *)arg1 uiProvider:(id <CDPStateUIProviderInternal>)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)finishCyrusFlowAfterTermsAgreementWithContext:(CDPContext *)arg1 uiProvider:(id <CDPStateUIProviderInternal>)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)verifyRecoveryKeyWithContext:(CDPContext *)arg1 uiProvider:(id <CDPStateUIProviderInternal>)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)finishOfflineLocalSecretChangeWithContext:(CDPContext *)arg1 uiProvider:(id <CDPStateUIProviderInternal>)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)attemptToEscrowPreRecord:(NSString *)arg1 context:(CDPContext *)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)localSecretChangedTo:(NSString *)arg1 secretType:(unsigned long long)arg2 context:(CDPContext *)arg3 uiProvider:(id <CDPStateUIProviderInternal>)arg4 completion:(void (^)(_Bool, NSError *))arg5;
- (void)recoverSquirrelWithContext:(CDPContext *)arg1 uiProvider:(id <CDPStateUIProviderInternal>)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)recoverAndSynchronizeSquirrelWithContext:(CDPContext *)arg1 uiProvider:(id <CDPStateUIProviderInternal>)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)shouldPerformAuthenticatedRepairForContext:(CDPContext *)arg1 forceFetch:(_Bool)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)shouldPerformRepairForContext:(CDPContext *)arg1 forceFetch:(_Bool)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)repairCloudDataProtectionStateWithContext:(CDPContext *)arg1 uiProvider:(id <CDPStateUIProviderInternal>)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)startCircleApplicationApprovalServerWithContext:(CDPContext *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)handleCloudDataProtectionStateWithContext:(CDPContext *)arg1 uiProvider:(id <CDPStateUIProviderInternal>)arg2 completion:(void (^)(_Bool, _Bool, NSError *))arg3;
@end

