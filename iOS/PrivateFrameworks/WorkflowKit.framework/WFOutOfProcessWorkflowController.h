//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <WorkflowKit/WFOutOfProcessWorkflowControllerHost-Protocol.h>
#import <WorkflowKit/WFTimerHandler-Protocol.h>

@class NSExtension, NSString, NSUUID, WFActionUserInterfaceListener, WFDialogAttribution, WFTimer, WFWorkflowReference, WFWorkflowRunningContext;
@protocol WFOutOfProcessWorkflowControllerDelegate, WFUserInterfaceHost;

@interface WFOutOfProcessWorkflowController : NSObject <WFOutOfProcessWorkflowControllerHost, WFTimerHandler>
{
    id <WFOutOfProcessWorkflowControllerDelegate> _delegate;
    long long _presentationMode;
    WFWorkflowRunningContext *_runningContext;
    long long _environment;
    NSExtension *_extension;
    NSUUID *_extensionRequestIdentifier;
    id <WFUserInterfaceHost> _userInterfaceHost;
    WFActionUserInterfaceListener *_actionInterfaceListener;
    WFWorkflowReference *_workflowReference;
    long long _state;
    NSString *_currentWorkflowName;
    WFDialogAttribution *_currentDialogAttribution;
    WFTimer *_timer;
}

- (void).cxx_destruct;
@property(retain, nonatomic) WFTimer *timer; // @synthesize timer=_timer;
@property(copy, nonatomic) WFDialogAttribution *currentDialogAttribution; // @synthesize currentDialogAttribution=_currentDialogAttribution;
@property(copy, nonatomic) NSString *currentWorkflowName; // @synthesize currentWorkflowName=_currentWorkflowName;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) WFWorkflowReference *workflowReference; // @synthesize workflowReference=_workflowReference;
@property(retain, nonatomic) WFActionUserInterfaceListener *actionInterfaceListener; // @synthesize actionInterfaceListener=_actionInterfaceListener;
@property(retain, nonatomic) id <WFUserInterfaceHost> userInterfaceHost; // @synthesize userInterfaceHost=_userInterfaceHost;
@property(retain, nonatomic) NSUUID *extensionRequestIdentifier; // @synthesize extensionRequestIdentifier=_extensionRequestIdentifier;
@property(retain, nonatomic) NSExtension *extension; // @synthesize extension=_extension;
@property(readonly, nonatomic) long long environment; // @synthesize environment=_environment;
@property(readonly, copy, nonatomic) WFWorkflowRunningContext *runningContext; // @synthesize runningContext=_runningContext;
@property(nonatomic) long long presentationMode; // @synthesize presentationMode=_presentationMode;
@property(nonatomic) __weak id <WFOutOfProcessWorkflowControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)timerShouldStart:(id)arg1;
- (void)timerDidFire:(id)arg1;
- (void)pauseWorkflowAndWriteStateToDisk;
- (void)workflowDidFinishRunningWithError:(id)arg1 cancelled:(_Bool)arg2 reference:(id)arg3;
- (void)workflowDidStartFromWorkflowReference:(id)arg1 attribution:(id)arg2;
- (void)reportFinishToDelegateWithError:(id)arg1 cancelled:(_Bool)arg2 reference:(id)arg3 dialogAttribution:(id)arg4;
- (void)stopExtension;
- (void)handleXPCConnectionInterruption;
- (void)findExtensionInterface:(CDUnknownBlockType)arg1 error:(out id *)arg2;
- (id)extensionInterface;
- (id)extensionContext;
- (void)handleIncomingFileForRemoteExecutionWithURL:(id)arg1 withIdentifier:(id)arg2;
@property(readonly, nonatomic, getter=isRunning) _Bool running;
- (void)stop;
- (_Bool)resumeRunningWithError:(out id *)arg1;
- (_Bool)runActionWithRunRequestData:(id)arg1 error:(out id *)arg2;
- (_Bool)runWorkflowWithRequest:(id)arg1 error:(out id *)arg2;
- (void)reset;
- (void)dealloc;
- (id)initWithEnvironment:(long long)arg1 runningContext:(id)arg2 presentationMode:(long long)arg3;
- (void)populateSleepWorkflowsFromWorkflowReferences:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)createSleepWorkflow:(id)arg1 completion:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

