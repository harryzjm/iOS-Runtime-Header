//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MediaRemote/NSCopying-Protocol.h>

@class MRContentItemMetadataAudioFormat, MRContentItemMetadataAudioRoute, NSArray, NSData, NSDate, NSDictionary, NSString, NSURL, _MRContentItemMetadataProtobuf;

@interface MRContentItemMetadata : NSObject <NSCopying>
{
    _Bool _container;
    _Bool _hasContainer;
    _Bool _playable;
    _Bool _hasPlayable;
    _Bool _explicitItem;
    _Bool _hasExplicitItem;
    _Bool _streamingContent;
    _Bool _hasStreamingContent;
    _Bool _currentlyPlaying;
    _Bool _hasCurrentlyPlaying;
    _Bool _alwaysLive;
    _Bool _hasAlwaysLive;
    _Bool _sharable;
    _Bool _hasSharable;
    _Bool _liked;
    _Bool _hasLiked;
    _Bool _inWishList;
    _Bool _hasInWishList;
    _Bool _advertisement;
    _Bool _hasAdvertisement;
    _Bool _steerable;
    _Bool _hasSteerable;
    _Bool _loading;
    _Bool _hasLoading;
    _Bool _artworkAvailable;
    _Bool _hasArtworkAvailable;
    _Bool _infoAvailable;
    _Bool _hasInfoAvailable;
    _Bool _languageOptionsAvailable;
    _Bool _hasLanguageOptionsAvailable;
    _Bool _lyricsAvailable;
    _Bool _hasLyricsAvailable;
    _Bool _hasPlaybackProgress;
    _Bool _hasPlaybackRate;
    _Bool _hasDefaultPlaybackRate;
    _Bool _hasDownloadProgress;
    _Bool _hasPlaylistType;
    _Bool _hasRadioStationType;
    _Bool _hasEditingStyleFlags;
    _Bool _hasMediaType;
    _Bool _hasMediaSubType;
    _Bool _hasEpisodeType;
    _Bool _hasPlayCount;
    _Bool _hasNumberOfSections;
    _Bool _hasChapterCount;
    _Bool _hasTotalDiscCount;
    _Bool _hasTotalTrackCount;
    _Bool _hasDownloadState;
    _Bool _hasArtworkDataWidthDeprecated;
    _Bool _hasArtworkDataHeightDeprecated;
    _Bool _hasDuration;
    _Bool _hasStartTime;
    _Bool _hasElapsedTime;
    _Bool _hasElapsedTimeTimestamp;
    _Bool _hasInferredTimestamp;
    _Bool _hasSeasonNumber;
    _Bool _hasEpisodeNumber;
    _Bool _hasDiscNumber;
    _Bool _hasTrackNumber;
    _Bool _hasRadioStationIdentifier;
    _Bool _hasITunesStoreIdentifier;
    _Bool _hasITunesStoreSubscriptionIdentifier;
    _Bool _hasITunesStoreArtistIdentifier;
    _Bool _hasITunesStoreAlbumIdentifier;
    _Bool _hasLegacyUniqueIdentifier;
    _Bool _hasSongTraits;
    _Bool _hasAlbumTraits;
    _Bool _hasPlaylistTraits;
    _Bool _hasActiveFormatJustification;
    _Bool _hasFormatTierPreference;
    float _playbackProgress;
    float _playbackRate;
    float _defaultPlaybackRate;
    float _downloadProgress;
    long long _playlistType;
    long long _radioStationType;
    long long _editingStyleFlags;
    long long _mediaType;
    long long _mediaSubType;
    long long _episodeType;
    long long _playCount;
    long long _numberOfSections;
    long long _chapterCount;
    long long _totalDiscCount;
    long long _totalTrackCount;
    long long _downloadState;
    long long _artworkDataWidthDeprecated;
    long long _artworkDataHeightDeprecated;
    double _duration;
    double _startTime;
    double _elapsedTime;
    double _elapsedTimeTimestamp;
    double _inferredTimestamp;
    long long _seasonNumber;
    long long _episodeNumber;
    long long _discNumber;
    long long _trackNumber;
    long long _radioStationIdentifier;
    long long _iTunesStoreIdentifier;
    long long _iTunesStoreSubscriptionIdentifier;
    long long _iTunesStoreArtistIdentifier;
    long long _iTunesStoreAlbumIdentifier;
    long long _legacyUniqueIdentifier;
    NSData *_purchaseInfoData;
    NSDictionary *_appMetrics;
    NSDictionary *_nowPlayingInfo;
    NSDictionary *_userInfo;
    NSDictionary *_deviceSpecificUserInfo;
    NSDictionary *_collectionInfo;
    NSDate *_releaseDate;
    NSDate *_currentPlaybackDate;
    NSString *_title;
    NSString *_subtitle;
    NSString *_albumName;
    NSString *_trackArtistName;
    NSString *_albumArtistName;
    NSString *_directorName;
    NSString *_localizedContentRating;
    NSString *_collectionIdentifier;
    NSString *_profileIdentifier;
    NSURL *_assetURL;
    NSString *_composer;
    NSString *_genre;
    NSString *_contentIdentifier;
    NSString *_radioStationName;
    NSString *_radioStationString;
    NSString *_seriesName;
    NSURL *_lyricsURL;
    NSString *_serviceIdentifier;
    NSString *_brandIdentifier;
    NSString *_localizedDurationString;
    NSString *_artworkIdentifier;
    NSString *_artworkMIMEType;
    NSURL *_artworkURL;
    NSURL *_artworkFileURL;
    NSArray *_artworkURLTemplates;
    NSString *_albumYear;
    unsigned long long _songTraits;
    unsigned long long _albumTraits;
    unsigned long long _playlistTraits;
    MRContentItemMetadataAudioFormat *_preferredFormat;
    MRContentItemMetadataAudioFormat *_activeFormat;
    long long _activeFormatJustification;
    unsigned long long _formatTierPreference;
    MRContentItemMetadataAudioRoute *_audioRoute;
    NSArray *_alternativeFormats;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSArray *alternativeFormats; // @synthesize alternativeFormats=_alternativeFormats;
@property(copy, nonatomic) MRContentItemMetadataAudioRoute *audioRoute; // @synthesize audioRoute=_audioRoute;
@property(nonatomic) _Bool hasFormatTierPreference; // @synthesize hasFormatTierPreference=_hasFormatTierPreference;
@property(nonatomic) unsigned long long formatTierPreference; // @synthesize formatTierPreference=_formatTierPreference;
@property(nonatomic) _Bool hasActiveFormatJustification; // @synthesize hasActiveFormatJustification=_hasActiveFormatJustification;
@property(nonatomic) long long activeFormatJustification; // @synthesize activeFormatJustification=_activeFormatJustification;
@property(copy, nonatomic) MRContentItemMetadataAudioFormat *activeFormat; // @synthesize activeFormat=_activeFormat;
@property(copy, nonatomic) MRContentItemMetadataAudioFormat *preferredFormat; // @synthesize preferredFormat=_preferredFormat;
@property(nonatomic) _Bool hasPlaylistTraits; // @synthesize hasPlaylistTraits=_hasPlaylistTraits;
@property(nonatomic) unsigned long long playlistTraits; // @synthesize playlistTraits=_playlistTraits;
@property(nonatomic) _Bool hasAlbumTraits; // @synthesize hasAlbumTraits=_hasAlbumTraits;
@property(nonatomic) unsigned long long albumTraits; // @synthesize albumTraits=_albumTraits;
@property(nonatomic) _Bool hasSongTraits; // @synthesize hasSongTraits=_hasSongTraits;
@property(nonatomic) unsigned long long songTraits; // @synthesize songTraits=_songTraits;
@property(copy, nonatomic) NSString *albumYear; // @synthesize albumYear=_albumYear;
@property(copy, nonatomic) NSArray *artworkURLTemplates; // @synthesize artworkURLTemplates=_artworkURLTemplates;
@property(copy, nonatomic) NSURL *artworkFileURL; // @synthesize artworkFileURL=_artworkFileURL;
@property(copy, nonatomic) NSURL *artworkURL; // @synthesize artworkURL=_artworkURL;
@property(copy, nonatomic) NSString *artworkMIMEType; // @synthesize artworkMIMEType=_artworkMIMEType;
@property(copy, nonatomic) NSString *artworkIdentifier; // @synthesize artworkIdentifier=_artworkIdentifier;
@property(copy, nonatomic) NSString *localizedDurationString; // @synthesize localizedDurationString=_localizedDurationString;
@property(copy, nonatomic) NSString *brandIdentifier; // @synthesize brandIdentifier=_brandIdentifier;
@property(copy, nonatomic) NSString *serviceIdentifier; // @synthesize serviceIdentifier=_serviceIdentifier;
@property(copy, nonatomic) NSURL *lyricsURL; // @synthesize lyricsURL=_lyricsURL;
@property(copy, nonatomic) NSString *seriesName; // @synthesize seriesName=_seriesName;
@property(copy, nonatomic) NSString *radioStationString; // @synthesize radioStationString=_radioStationString;
@property(copy, nonatomic) NSString *radioStationName; // @synthesize radioStationName=_radioStationName;
@property(copy, nonatomic) NSString *contentIdentifier; // @synthesize contentIdentifier=_contentIdentifier;
@property(copy, nonatomic) NSString *genre; // @synthesize genre=_genre;
@property(copy, nonatomic) NSString *composer; // @synthesize composer=_composer;
@property(copy, nonatomic) NSURL *assetURL; // @synthesize assetURL=_assetURL;
@property(copy, nonatomic) NSString *profileIdentifier; // @synthesize profileIdentifier=_profileIdentifier;
@property(copy, nonatomic) NSString *collectionIdentifier; // @synthesize collectionIdentifier=_collectionIdentifier;
@property(copy, nonatomic) NSString *localizedContentRating; // @synthesize localizedContentRating=_localizedContentRating;
@property(copy, nonatomic) NSString *directorName; // @synthesize directorName=_directorName;
@property(copy, nonatomic) NSString *albumArtistName; // @synthesize albumArtistName=_albumArtistName;
@property(copy, nonatomic) NSString *trackArtistName; // @synthesize trackArtistName=_trackArtistName;
@property(copy, nonatomic) NSString *albumName; // @synthesize albumName=_albumName;
@property(copy, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSDate *currentPlaybackDate; // @synthesize currentPlaybackDate=_currentPlaybackDate;
@property(copy, nonatomic) NSDate *releaseDate; // @synthesize releaseDate=_releaseDate;
@property(copy, nonatomic) NSDictionary *collectionInfo; // @synthesize collectionInfo=_collectionInfo;
@property(copy, nonatomic) NSDictionary *deviceSpecificUserInfo; // @synthesize deviceSpecificUserInfo=_deviceSpecificUserInfo;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(copy, nonatomic) NSDictionary *nowPlayingInfo; // @synthesize nowPlayingInfo=_nowPlayingInfo;
@property(copy, nonatomic) NSDictionary *appMetrics; // @synthesize appMetrics=_appMetrics;
@property(copy, nonatomic) NSData *purchaseInfoData; // @synthesize purchaseInfoData=_purchaseInfoData;
@property(nonatomic) _Bool hasLegacyUniqueIdentifier; // @synthesize hasLegacyUniqueIdentifier=_hasLegacyUniqueIdentifier;
@property(nonatomic) long long legacyUniqueIdentifier; // @synthesize legacyUniqueIdentifier=_legacyUniqueIdentifier;
@property(nonatomic) _Bool hasITunesStoreAlbumIdentifier; // @synthesize hasITunesStoreAlbumIdentifier=_hasITunesStoreAlbumIdentifier;
@property(nonatomic) long long iTunesStoreAlbumIdentifier; // @synthesize iTunesStoreAlbumIdentifier=_iTunesStoreAlbumIdentifier;
@property(nonatomic) _Bool hasITunesStoreArtistIdentifier; // @synthesize hasITunesStoreArtistIdentifier=_hasITunesStoreArtistIdentifier;
@property(nonatomic) long long iTunesStoreArtistIdentifier; // @synthesize iTunesStoreArtistIdentifier=_iTunesStoreArtistIdentifier;
@property(nonatomic) _Bool hasITunesStoreSubscriptionIdentifier; // @synthesize hasITunesStoreSubscriptionIdentifier=_hasITunesStoreSubscriptionIdentifier;
@property(nonatomic) long long iTunesStoreSubscriptionIdentifier; // @synthesize iTunesStoreSubscriptionIdentifier=_iTunesStoreSubscriptionIdentifier;
@property(nonatomic) _Bool hasITunesStoreIdentifier; // @synthesize hasITunesStoreIdentifier=_hasITunesStoreIdentifier;
@property(nonatomic) long long iTunesStoreIdentifier; // @synthesize iTunesStoreIdentifier=_iTunesStoreIdentifier;
@property(nonatomic) _Bool hasRadioStationIdentifier; // @synthesize hasRadioStationIdentifier=_hasRadioStationIdentifier;
@property(nonatomic) long long radioStationIdentifier; // @synthesize radioStationIdentifier=_radioStationIdentifier;
@property(nonatomic) _Bool hasTrackNumber; // @synthesize hasTrackNumber=_hasTrackNumber;
@property(nonatomic) long long trackNumber; // @synthesize trackNumber=_trackNumber;
@property(nonatomic) _Bool hasDiscNumber; // @synthesize hasDiscNumber=_hasDiscNumber;
@property(nonatomic) long long discNumber; // @synthesize discNumber=_discNumber;
@property(nonatomic) _Bool hasEpisodeNumber; // @synthesize hasEpisodeNumber=_hasEpisodeNumber;
@property(nonatomic) long long episodeNumber; // @synthesize episodeNumber=_episodeNumber;
@property(nonatomic) _Bool hasSeasonNumber; // @synthesize hasSeasonNumber=_hasSeasonNumber;
@property(nonatomic) long long seasonNumber; // @synthesize seasonNumber=_seasonNumber;
@property(nonatomic) _Bool hasInferredTimestamp; // @synthesize hasInferredTimestamp=_hasInferredTimestamp;
@property(nonatomic) double inferredTimestamp; // @synthesize inferredTimestamp=_inferredTimestamp;
@property(nonatomic) _Bool hasElapsedTimeTimestamp; // @synthesize hasElapsedTimeTimestamp=_hasElapsedTimeTimestamp;
@property(nonatomic) double elapsedTimeTimestamp; // @synthesize elapsedTimeTimestamp=_elapsedTimeTimestamp;
@property(nonatomic) _Bool hasElapsedTime; // @synthesize hasElapsedTime=_hasElapsedTime;
@property(nonatomic) double elapsedTime; // @synthesize elapsedTime=_elapsedTime;
@property(nonatomic) _Bool hasStartTime; // @synthesize hasStartTime=_hasStartTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) _Bool hasDuration; // @synthesize hasDuration=_hasDuration;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) _Bool hasArtworkDataHeightDeprecated; // @synthesize hasArtworkDataHeightDeprecated=_hasArtworkDataHeightDeprecated;
@property(readonly, nonatomic) long long artworkDataHeightDeprecated; // @synthesize artworkDataHeightDeprecated=_artworkDataHeightDeprecated;
@property(readonly, nonatomic) _Bool hasArtworkDataWidthDeprecated; // @synthesize hasArtworkDataWidthDeprecated=_hasArtworkDataWidthDeprecated;
@property(readonly, nonatomic) long long artworkDataWidthDeprecated; // @synthesize artworkDataWidthDeprecated=_artworkDataWidthDeprecated;
@property(nonatomic) _Bool hasDownloadState; // @synthesize hasDownloadState=_hasDownloadState;
@property(nonatomic) long long downloadState; // @synthesize downloadState=_downloadState;
@property(nonatomic) _Bool hasTotalTrackCount; // @synthesize hasTotalTrackCount=_hasTotalTrackCount;
@property(nonatomic) long long totalTrackCount; // @synthesize totalTrackCount=_totalTrackCount;
@property(nonatomic) _Bool hasTotalDiscCount; // @synthesize hasTotalDiscCount=_hasTotalDiscCount;
@property(nonatomic) long long totalDiscCount; // @synthesize totalDiscCount=_totalDiscCount;
@property(nonatomic) _Bool hasChapterCount; // @synthesize hasChapterCount=_hasChapterCount;
@property(nonatomic) long long chapterCount; // @synthesize chapterCount=_chapterCount;
@property(nonatomic) _Bool hasNumberOfSections; // @synthesize hasNumberOfSections=_hasNumberOfSections;
@property(nonatomic) long long numberOfSections; // @synthesize numberOfSections=_numberOfSections;
@property(nonatomic) _Bool hasPlayCount; // @synthesize hasPlayCount=_hasPlayCount;
@property(nonatomic) long long playCount; // @synthesize playCount=_playCount;
@property(nonatomic) _Bool hasEpisodeType; // @synthesize hasEpisodeType=_hasEpisodeType;
@property(nonatomic) long long episodeType; // @synthesize episodeType=_episodeType;
@property(nonatomic) _Bool hasMediaSubType; // @synthesize hasMediaSubType=_hasMediaSubType;
@property(nonatomic) long long mediaSubType; // @synthesize mediaSubType=_mediaSubType;
@property(nonatomic) _Bool hasMediaType; // @synthesize hasMediaType=_hasMediaType;
@property(nonatomic) long long mediaType; // @synthesize mediaType=_mediaType;
@property(nonatomic) _Bool hasEditingStyleFlags; // @synthesize hasEditingStyleFlags=_hasEditingStyleFlags;
@property(nonatomic) long long editingStyleFlags; // @synthesize editingStyleFlags=_editingStyleFlags;
@property(nonatomic) _Bool hasRadioStationType; // @synthesize hasRadioStationType=_hasRadioStationType;
@property(nonatomic) long long radioStationType; // @synthesize radioStationType=_radioStationType;
@property(nonatomic) _Bool hasPlaylistType; // @synthesize hasPlaylistType=_hasPlaylistType;
@property(nonatomic) long long playlistType; // @synthesize playlistType=_playlistType;
@property(nonatomic) _Bool hasDownloadProgress; // @synthesize hasDownloadProgress=_hasDownloadProgress;
@property(nonatomic) float downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(nonatomic) _Bool hasDefaultPlaybackRate; // @synthesize hasDefaultPlaybackRate=_hasDefaultPlaybackRate;
@property(nonatomic) float defaultPlaybackRate; // @synthesize defaultPlaybackRate=_defaultPlaybackRate;
@property(nonatomic) _Bool hasPlaybackRate; // @synthesize hasPlaybackRate=_hasPlaybackRate;
@property(nonatomic) float playbackRate; // @synthesize playbackRate=_playbackRate;
@property(nonatomic) _Bool hasPlaybackProgress; // @synthesize hasPlaybackProgress=_hasPlaybackProgress;
@property(nonatomic) float playbackProgress; // @synthesize playbackProgress=_playbackProgress;
@property(nonatomic) _Bool hasLyricsAvailable; // @synthesize hasLyricsAvailable=_hasLyricsAvailable;
@property(nonatomic) _Bool lyricsAvailable; // @synthesize lyricsAvailable=_lyricsAvailable;
@property(nonatomic) _Bool hasLanguageOptionsAvailable; // @synthesize hasLanguageOptionsAvailable=_hasLanguageOptionsAvailable;
@property(nonatomic) _Bool languageOptionsAvailable; // @synthesize languageOptionsAvailable=_languageOptionsAvailable;
@property(nonatomic) _Bool hasInfoAvailable; // @synthesize hasInfoAvailable=_hasInfoAvailable;
@property(nonatomic) _Bool infoAvailable; // @synthesize infoAvailable=_infoAvailable;
@property(nonatomic) _Bool hasArtworkAvailable; // @synthesize hasArtworkAvailable=_hasArtworkAvailable;
@property(nonatomic) _Bool artworkAvailable; // @synthesize artworkAvailable=_artworkAvailable;
@property(nonatomic) _Bool hasLoading; // @synthesize hasLoading=_hasLoading;
@property(nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(nonatomic) _Bool hasSteerable; // @synthesize hasSteerable=_hasSteerable;
@property(nonatomic, getter=isSteerable) _Bool steerable; // @synthesize steerable=_steerable;
@property(nonatomic) _Bool hasAdvertisement; // @synthesize hasAdvertisement=_hasAdvertisement;
@property(nonatomic, getter=isAdvertisement) _Bool advertisement; // @synthesize advertisement=_advertisement;
@property(nonatomic) _Bool hasInWishList; // @synthesize hasInWishList=_hasInWishList;
@property(nonatomic, getter=isInWishList) _Bool inWishList; // @synthesize inWishList=_inWishList;
@property(nonatomic) _Bool hasLiked; // @synthesize hasLiked=_hasLiked;
@property(nonatomic, getter=isLiked) _Bool liked; // @synthesize liked=_liked;
@property(nonatomic) _Bool hasSharable; // @synthesize hasSharable=_hasSharable;
@property(nonatomic, getter=isSharable) _Bool sharable; // @synthesize sharable=_sharable;
@property(nonatomic) _Bool hasAlwaysLive; // @synthesize hasAlwaysLive=_hasAlwaysLive;
@property(nonatomic, getter=isAlwaysLive) _Bool alwaysLive; // @synthesize alwaysLive=_alwaysLive;
@property(nonatomic) _Bool hasCurrentlyPlaying; // @synthesize hasCurrentlyPlaying=_hasCurrentlyPlaying;
@property(nonatomic, getter=isCurrentlyPlaying) _Bool currentlyPlaying; // @synthesize currentlyPlaying=_currentlyPlaying;
@property(nonatomic) _Bool hasStreamingContent; // @synthesize hasStreamingContent=_hasStreamingContent;
@property(nonatomic, getter=isStreamingContent) _Bool streamingContent; // @synthesize streamingContent=_streamingContent;
@property(nonatomic) _Bool hasExplicitItem; // @synthesize hasExplicitItem=_hasExplicitItem;
@property(nonatomic, getter=isExplicitItem) _Bool explicitItem; // @synthesize explicitItem=_explicitItem;
@property(nonatomic) _Bool hasPlayable; // @synthesize hasPlayable=_hasPlayable;
@property(nonatomic, getter=isPlayable) _Bool playable; // @synthesize playable=_playable;
@property(nonatomic) _Bool hasContainer; // @synthesize hasContainer=_hasContainer;
@property(nonatomic, getter=isContainer) _Bool container; // @synthesize container=_container;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (void)mergeFrom:(id)arg1;
- (double)calculatedPlaybackPositionFromDate:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)setArtworkDataHeightDeprecated:(long long)arg1;
- (void)setArtworkDataWidthDeprecated:(long long)arg1;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
@property(readonly, nonatomic) _Bool hasLoadingPlaceholderTitle;
@property(readonly, nonatomic) double calculatedPlaybackPosition;
@property(readonly, copy, nonatomic) NSData *data;
@property(readonly, nonatomic) _MRContentItemMetadataProtobuf *protobuf;
- (id)initWithData:(id)arg1;
- (id)initWithProtobuf:(id)arg1;

@end

