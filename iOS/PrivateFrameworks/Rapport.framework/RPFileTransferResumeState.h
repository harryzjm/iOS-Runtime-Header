//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface RPFileTransferResumeState : NSObject
{
    NSMutableDictionary *_stateInfo;
    _Bool _isPlaceholder;
    _Bool _needsFlushing;
    struct LogCategory *_ucat;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSString *_outputPath;
    NSString *_stateFilePath;
    NSObject<OS_dispatch_source> *_flushTimer;
    double _flushInterval;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool needsFlushing; // @synthesize needsFlushing=_needsFlushing;
@property(nonatomic) double flushInterval; // @synthesize flushInterval=_flushInterval;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *flushTimer; // @synthesize flushTimer=_flushTimer;
@property(retain, nonatomic) NSString *stateFilePath; // @synthesize stateFilePath=_stateFilePath;
@property(retain, nonatomic) NSString *outputPath; // @synthesize outputPath=_outputPath;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(nonatomic) struct LogCategory *ucat; // @synthesize ucat=_ucat;
@property(nonatomic) _Bool isPlaceholder; // @synthesize isPlaceholder=_isPlaceholder;
- (_Bool)removeAllActiveAndFinishedFileItems;
- (_Bool)removeUnusableOutputFileItems;
- (_Bool)removeUnusableSourceFileItems;
- (_Bool)removeStateFile;
- (_Bool)loadStateFile;
- (_Bool)flushStateFile;
- (_Bool)scheduleStateFileFlush;
- (_Bool)removeFinishedFile:(id)arg1;
- (_Bool)addFinishedFile:(id)arg1;
- (id)finishedFileWithFileName:(id)arg1;
- (_Bool)removeActiveFile:(id)arg1;
- (_Bool)addActiveFile:(id)arg1;
- (id)activeFileWithFileName:(id)arg1;
- (id)finishedFiles;
- (id)activeFiles;
- (_Bool)isEmpty;
- (id)dictionaryRepresentation;
- (id)version;
- (void)invalidate;
- (void)dealloc;
- (id)initWithDictionaryRepresentation:(id)arg1 error:(id *)arg2;
- (id)initWithDispatchQueue:(id)arg1;
- (id)init;

@end

