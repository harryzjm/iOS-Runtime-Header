//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Home/HFCameraTimelapsePosterFrameGeneratorDelegate-Protocol.h>
#import <Home/HFCameraTimelapseVideoDownloaderDelegate-Protocol.h>

@class HFCameraImageCache, HFCameraPosterFrameRequests, HFCameraTimelapsePosterFrameGenerator;
@protocol HFCameraTimelapseClipInfoProvider, OS_dispatch_queue;

@interface HFCameraPosterFrameProvider : NSObject <HFCameraTimelapseVideoDownloaderDelegate, HFCameraTimelapsePosterFrameGeneratorDelegate>
{
    HFCameraImageCache *_imageCache;
    NSObject<OS_dispatch_queue> *_bookkeepingQueue;
    HFCameraPosterFrameRequests *_posterFrameRequests;
    HFCameraTimelapsePosterFrameGenerator *_posterFrameGenerator;
    id <HFCameraTimelapseClipInfoProvider> _timelapseClipInfoProvider;
    struct CGSize _posterFrameSize;
}

- (void).cxx_destruct;
@property(nonatomic) __weak id <HFCameraTimelapseClipInfoProvider> timelapseClipInfoProvider; // @synthesize timelapseClipInfoProvider=_timelapseClipInfoProvider;
@property(retain, nonatomic) HFCameraTimelapsePosterFrameGenerator *posterFrameGenerator; // @synthesize posterFrameGenerator=_posterFrameGenerator;
@property(retain, nonatomic) HFCameraPosterFrameRequests *posterFrameRequests; // @synthesize posterFrameRequests=_posterFrameRequests;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *bookkeepingQueue; // @synthesize bookkeepingQueue=_bookkeepingQueue;
@property(nonatomic) __weak HFCameraImageCache *imageCache; // @synthesize imageCache=_imageCache;
@property(nonatomic) struct CGSize posterFrameSize; // @synthesize posterFrameSize=_posterFrameSize;
- (void)_updateDelegate:(id)arg1 withPosterFrame:(id)arg2 atOffset:(double)arg3 ForHighQualityClip:(id)arg4;
- (void)failedToGeneratePosterFrameForHighQualityClip:(id)arg1 atOffset:(double)arg2;
- (void)failedToFindTimelapseClipForHighQualityClip:(id)arg1;
- (void)didGeneratePosterFrame:(id)arg1 forHighQualityClip:(id)arg2 atOffset:(double)arg3 withTimelapseOffset:(double)arg4;
- (void)failedToDownloadVideoFileForTimelapseClip:(id)arg1;
- (void)foundVideoFileForTimelapseClip:(id)arg1 atLocation:(id)arg2;
- (void)didDownloadVideoFileForTimelapseClip:(id)arg1 atLocation:(id)arg2;
- (void)_requestTimelapsePosterFrameGenerationForTimelapseClip:(id)arg1;
- (id)_timelapseClipForHighQualityClip:(id)arg1;
- (void)_requestTimelapseFileForDelegate:(id)arg1 forHighQualityClip:(id)arg2 atOffset:(double)arg3;
- (void)_generateImageForDelegate:(id)arg1 forHighQualityClip:(id)arg2 atOffset:(double)arg3;
- (void)_checkImageCacheForDelegate:(id)arg1 forHighQualityClip:(id)arg2 atOffset:(double)arg3;
- (void)getPosterFrameForDelegate:(id)arg1 forHighQualityClip:(id)arg2 atOffset:(double)arg3;
- (id)initWithImageCache:(id)arg1 andTimelapseClipInfoProvider:(id)arg2;

@end

