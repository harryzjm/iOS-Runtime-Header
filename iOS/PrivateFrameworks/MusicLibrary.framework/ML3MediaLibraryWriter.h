//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, NSOperationQueue, NSTimer;
@protocol ML3MediaLibraryWriterDelegate, OS_dispatch_queue;

@interface ML3MediaLibraryWriter : NSObject
{
    NSTimer *_watchdogTimer;
    _Bool _suspended;
    id <ML3MediaLibraryWriterDelegate> _delegate;
    double _transactionTimeout;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSMutableDictionary *_transactionMap;
    NSOperationQueue *_databaseOperationQueue;
    NSOperationQueue *_databaseOperationSerialQueue;
}

+ (id)writerErrorWithCode:(long long)arg1 description:(id)arg2;
+ (id)writerErrorWithCode:(long long)arg1 description:(id)arg2 userInfo:(id)arg3;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSOperationQueue *databaseOperationSerialQueue; // @synthesize databaseOperationSerialQueue=_databaseOperationSerialQueue;
@property(readonly, nonatomic) NSOperationQueue *databaseOperationQueue; // @synthesize databaseOperationQueue=_databaseOperationQueue;
@property(readonly, nonatomic) NSMutableDictionary *transactionMap; // @synthesize transactionMap=_transactionMap;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(nonatomic, getter=isSuspended) _Bool suspended; // @synthesize suspended=_suspended;
@property(nonatomic) double transactionTimeout; // @synthesize transactionTimeout=_transactionTimeout;
@property(nonatomic) __weak id <ML3MediaLibraryWriterDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_watchdogTimerFired:(id)arg1;
- (_Bool)_shouldWatchdogTransaction:(id)arg1;
- (void)_tearDownWatchdogTimer;
- (void)_setupWatchdogTimer;
- (void)_destroyTransactionForIdentifier:(id)arg1 forceRelinquishConnection:(_Bool)arg2;
- (void)_destroyTransaction:(id)arg1 forceRelinquishConnection:(_Bool)arg2;
- (id)_createNewTransactionForLibrary:(id)arg1 fromClient:(id)arg2 readOnly:(_Bool)arg3;
- (id)_allDatabaseOperations;
- (void)_unregisterTransaction:(id)arg1;
- (void)_registerTransaction:(id)arg1;
- (id)_transactionForIdentifier:(id)arg1;
- (void)reset;
- (void)cancelAllActiveDatabaseOperationsAndWaitUntilFinished:(_Bool)arg1;
- (void)cancelAllActiveTransactions;
- (void)cancelActiveTransactionForClient:(id)arg1;
- (void)performDatabaseOperation:(unsigned long long)arg1 onLibrary:(id)arg2 withAttributes:(id)arg3 options:(id)arg4 fromClient:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (_Bool)endTransaction:(id)arg1 shouldCommit:(_Bool)arg2 error:(id *)arg3;
- (id)executeUntrustedQuery:(id)arg1 withParameters:(id)arg2 options:(id)arg3 onTransaction:(id)arg4 error:(id *)arg5;
- (id)executeQuery:(id)arg1 withParameters:(id)arg2 options:(id)arg3 onTransaction:(id)arg4 error:(id *)arg5;
- (_Bool)executeUntrustedUpdate:(id)arg1 withParameters:(id)arg2 onTransaction:(id)arg3 error:(id *)arg4;
- (_Bool)executeUpdate:(id)arg1 withParameters:(id)arg2 onTransaction:(id)arg3 error:(id *)arg4;
- (id)beginTransactionForLibrary:(id)arg1 withClient:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (id)description;
- (void)dealloc;
- (id)init;

@end

