//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <NanoTimeKitCompanion/NTKCircularAnalogDialColorPalette-Protocol.h>
#import <NanoTimeKitCompanion/NTKOlympusColorPalette-Protocol.h>

@class NSString, UIColor;

@interface NTKOlympusColorPalette <NTKOlympusColorPalette, NTKCircularAnalogDialColorPalette>
{
    _Bool _useSmallFont;
    unsigned long long _style;
    unsigned long long _dial;
}

@property(nonatomic) _Bool useSmallFont; // @synthesize useSmallFont=_useSmallFont;
@property(nonatomic) unsigned long long dial; // @synthesize dial=_dial;
@property(nonatomic) unsigned long long style; // @synthesize style=_style;
- (id)tritium_secondaryOutlineTextColor;
- (id)tritium_primaryOutlineTextColor;
- (id)tritium_secondaryTextColor;
- (id)tritium_primaryTextColor;
- (id)tritium_secondaryBackgroundColor;
- (id)tritium_primaryBackgroundColor;
- (id)_customBlack;
- (id)colorForCircularTicksForMinute:(unsigned long long)arg1;
- (id)colorForCircularTicksForHour:(unsigned long long)arg1;
- (double)colorBrightness:(id)arg1;
@property(readonly, nonatomic) UIColor *secondaryLogoColor;
@property(readonly, nonatomic) UIColor *secondaryOutlineTextColor;
@property(readonly, nonatomic) UIColor *secondaryTextColor;
@property(readonly, nonatomic) UIColor *secondaryBackgroundColor;
- (id)_circularDialFillColor;
- (id)_circularDialSubtickColor;
- (id)_circularDialTickColor;
- (id)_bezelComplicationColor;
- (id)_largeHandsColor;
- (id)_cornerComplicationsAccentColor;
- (id)_secondHandForColorName:(id)arg1;
- (id)_secondHandColor;
- (id)_logo;
- (id)_primaryLogoColor;
- (id)_primaryOutlineTextColor;
- (id)_primaryBackgroundColor;
- (id)_darker;
- (id)_digits;
- (id)_primaryTextColor;
- (id)mainColor;
@property(readonly, nonatomic) _Bool isMulticolorPalette;
- (id)identifier;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) UIColor *bezelComplicationColor; // @dynamic bezelComplicationColor;
@property(readonly, nonatomic) UIColor *black; // @dynamic black;
@property(readonly, nonatomic) UIColor *circularDialFillColor; // @dynamic circularDialFillColor;
@property(readonly, nonatomic) UIColor *circularDialSubtickColor; // @dynamic circularDialSubtickColor;
@property(readonly, nonatomic) UIColor *circularDialTickColor; // @dynamic circularDialTickColor;
@property(readonly, nonatomic) UIColor *cornerComplicationsAccentColor; // @dynamic cornerComplicationsAccentColor;
@property(readonly, nonatomic) UIColor *customBlack; // @dynamic customBlack;
@property(readonly, nonatomic) UIColor *darker; // @dynamic darker;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) UIColor *digits; // @dynamic digits;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) UIColor *largeHandsColor; // @dynamic largeHandsColor;
@property(readonly, nonatomic) UIColor *logo; // @dynamic logo;
@property(readonly, nonatomic) UIColor *orangeLogo; // @dynamic orangeLogo;
@property(readonly, nonatomic) UIColor *primaryBackgroundColor; // @dynamic primaryBackgroundColor;
@property(readonly, nonatomic) UIColor *primaryColor;
@property(readonly, nonatomic) UIColor *primaryLogoColor; // @dynamic primaryLogoColor;
@property(readonly, nonatomic) UIColor *primaryOutlineTextColor; // @dynamic primaryOutlineTextColor;
@property(readonly, nonatomic) UIColor *primaryShiftedColor;
@property(readonly, nonatomic) UIColor *primaryTextColor; // @dynamic primaryTextColor;
@property(readonly, nonatomic) UIColor *secondHandColor; // @dynamic secondHandColor;
@property(readonly, nonatomic) UIColor *secondaryColor;
@property(readonly, nonatomic) UIColor *secondaryShiftedColor;
@property(readonly, nonatomic) UIColor *softBlack; // @dynamic softBlack;
@property(readonly, nonatomic) UIColor *softerBlack; // @dynamic softerBlack;
@property(readonly) Class superclass;
@property(readonly, nonatomic) UIColor *swatch;
@property(readonly, nonatomic) UIColor *ticks; // @dynamic ticks;

@end

