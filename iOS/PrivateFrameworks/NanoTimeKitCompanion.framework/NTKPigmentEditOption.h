//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <NanoTimeKitCompanion/NSCopying-Protocol.h>
#import <NanoTimeKitCompanion/NSSecureCoding-Protocol.h>
#import <NanoTimeKitCompanion/NTKPigmentEditOptionConvertible-Protocol.h>

@class NSBundle, NSNumber, NSString;

@interface NTKPigmentEditOption <NSCopying, NTKPigmentEditOptionConvertible, NSSecureCoding>
{
    NSString *_localizedName;
    NSString *_localizedCollectionName;
    _Bool _isSensitiveUI;
    _Bool _isAddable;
    _Bool _supportsSlider;
    _Bool _fromStore;
    _Bool _sortedByHue;
    _Bool _loadedBundleFromClass;
    struct os_unfair_lock_s _lock;
    NSString *_optionName;
    NSString *_collectionName;
    double _colorFraction;
    NSNumber *_desiredPosition;
    NSBundle *_mainBundle;
    NSString *_bundlePrincipalClassName;
    NSBundle *_sourceBundle;
    NSString *_alternativeLocalizedStringTableName;
    NSString *_fullname;
    NSString *_effectiveOptionName;
    NSString *_effectiveCollectionName;
}

+ (id)legacyOptionWithPigmentEditOption:(id)arg1 forDevice:(id)arg2;
+ (id)duotoneNameWithName:(id)arg1 otherName:(id)arg2;
+ (_Bool)supportsSecureCoding;
+ (id)multitoneColorNames:(id)arg1;
+ (_Bool)hasInlineCollectionInOptionName:(id)arg1;
+ (id)fullnameWithCollectionName:(id)arg1 optionName:(id)arg2;
+ (_Bool)isMultitoneOptionWithOptionName:(id)arg1;
+ (void)effectiveNamesFromName:(id)arg1 effectiveCollectionName:(inout id *)arg2 effectiveOptionName:(inout id *)arg3;
+ (void)parserIdentifier:(id)arg1 collectionName:(id *)arg2 optionName:(id *)arg3 colorFraction:(double *)arg4 separator:(id)arg5;
+ (void)parseFullname:(id)arg1 collectionName:(inout id *)arg2 optionName:(inout id *)arg3 fraction:(double *)arg4;
+ (id)multitonePigmentAtIndex:(unsigned long long)arg1 forColorName:(id)arg2 groupName:(id)arg3;
+ (double)defaultFraction;
- (void).cxx_destruct;
@property(nonatomic) struct os_unfair_lock_s lock; // @synthesize lock=_lock;
@property(retain, nonatomic) NSString *effectiveCollectionName; // @synthesize effectiveCollectionName=_effectiveCollectionName;
@property(retain, nonatomic) NSString *effectiveOptionName; // @synthesize effectiveOptionName=_effectiveOptionName;
@property(retain, nonatomic) NSString *fullname; // @synthesize fullname=_fullname;
@property(retain, nonatomic) NSString *alternativeLocalizedStringTableName; // @synthesize alternativeLocalizedStringTableName=_alternativeLocalizedStringTableName;
@property(nonatomic) _Bool loadedBundleFromClass; // @synthesize loadedBundleFromClass=_loadedBundleFromClass;
@property(retain, nonatomic) NSBundle *sourceBundle; // @synthesize sourceBundle=_sourceBundle;
@property(retain, nonatomic) NSString *bundlePrincipalClassName; // @synthesize bundlePrincipalClassName=_bundlePrincipalClassName;
@property(readonly, nonatomic) NSBundle *mainBundle; // @synthesize mainBundle=_mainBundle;
@property(copy, nonatomic) NSNumber *desiredPosition; // @synthesize desiredPosition=_desiredPosition;
@property(nonatomic) _Bool sortedByHue; // @synthesize sortedByHue=_sortedByHue;
@property(nonatomic, getter=isFromStore) _Bool fromStore; // @synthesize fromStore=_fromStore;
@property(readonly, nonatomic) double colorFraction; // @synthesize colorFraction=_colorFraction;
@property(nonatomic) _Bool supportsSlider; // @synthesize supportsSlider=_supportsSlider;
@property(nonatomic) _Bool isAddable; // @synthesize isAddable=_isAddable;
@property(nonatomic) _Bool isSensitiveUI; // @synthesize isSensitiveUI=_isSensitiveUI;
@property(readonly, nonatomic) NSString *collectionName; // @synthesize collectionName=_collectionName;
@property(readonly, nonatomic) NSString *optionName; // @synthesize optionName=_optionName;
- (long long)swatchStyle;
- (id)pigmentEditOption;
- (id)copyWithCollectionOverride:(id)arg1;
- (id)copyWithColorFraction:(double)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualIgnoringFraction:(id)arg1;
- (_Bool)isEquivalentToOption:(id)arg1;
- (id)_resolveBundleWithBundlePrincipalClassName:(id)arg1;
- (id)localizedNameForKey:(id)arg1 table:(id)arg2;
- (_Bool)isMultitoneOption;
- (id)localizedNameForKey:(id)arg1 fromTable:(id)arg2 separatorString:(id)arg3;
- (id)localizedCollectionName;
- (id)localizedNameForKey:(id)arg1;
- (id)localizedName;
- (id)localizationTableNames;
- (id)protoBuffer;
- (id)initWithProtoBuffer:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isValidOption;
- (id)json;
- (id)JSONObjectRepresentationForFace:(id)arg1;
- (id)JSONObjectRepresentation;
- (id)dailySnapshotKey;
@property(readonly, nonatomic) NSString *identifier;
- (id)multitoneNamesWithoutCollection;
- (void)extractEffectiveCollectionName:(inout id *)arg1 effectiveOptionName:(inout id *)arg2;
- (void)loadEffectiveNames;
- (id)_buildFullname;
- (id)fullnameIncludingFraction;
- (_Bool)isWhiteColor;
- (_Bool)isMultiColor;
- (_Bool)isRainbowColor;
- (_Bool)isPrideOption;
@property(readonly, nonatomic) _Bool isVisible;
- (id)initWithJSONObjectRepresentation:(id)arg1 forDevice:(id)arg2;
- (id)initWithOptionName:(id)arg1 collectionName:(id)arg2 colorFraction:(double)arg3;
- (id)initWithOptionName:(id)arg1 collectionName:(id)arg2;
- (id)initWithFullname:(id)arg1;
- (id)initWithDevice:(id)arg1;
- (id)legacyJSONRepresentationForFace:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

