//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ClockKitUI/CLKUIQuad.h>

@class CLKDevice, MISSING_TYPE, MTLRenderPassDescriptor, NSOrderedSet, NTKAltitudeColorCurve, NTKPromise, NTKSiderealCachedMTLTexture, NTKSiderealData;
@protocol MTLBuffer, MTLCommandBuffer, MTLDevice, MTLTexture;

@interface NTKSiderealBackgroundQuad : CLKUIQuad
{
    CLKDevice *_clkDevice;
    id <MTLDevice> _device;
    NTKPromise *_mtlSolidPipelineState;
    NTKPromise *_mtlGradientPipelineState;
    NTKPromise *_mtlGlowPipelineState;
    NTKPromise *_mtlSpritePipelineState;
    NTKPromise *_mtlBlurPipelineState;
    NTKPromise *_mtlCompositePipelineState;
    id <MTLCommandBuffer> _gradientLoadingBuffer;
    id <MTLTexture> _gradientTex;
    id <MTLBuffer> _mtlIndexBuffer;
    id <MTLBuffer> _mtlSectorDescriptorBuffers[3];
    unsigned short _currentBufferIndex;
    id <MTLCommandBuffer> _textureLoadingBuffer;
    NTKSiderealCachedMTLTexture *_dialTex;
    NTKSiderealCachedMTLTexture *_waypointTex;
    NTKSiderealCachedMTLTexture *_gnomonTexture;
    NTKSiderealCachedMTLTexture *_dayGnomonTexture;
    NTKSiderealCachedMTLTexture *_dayDiskBloomTexture;
    NTKSiderealCachedMTLTexture *_dayDiskTexture;
    NTKSiderealCachedMTLTexture *_nightGnomonTexture;
    NTKSiderealCachedMTLTexture *_nightDiskTexture;
    NTKSiderealCachedMTLTexture *_nightRingTexture;
    struct CGSize _size;
    NSOrderedSet *_sectors;
    double _dayProgress;
    NTKAltitudeColorCurve *_civilTwilightCurve;
    NTKAltitudeColorCurve *_nauticalTwilightCurve;
    NTKAltitudeColorCurve *_astronomicalTwilightCurve;
    NTKAltitudeColorCurve *_nightColorCurve;
    NTKAltitudeColorCurve *_bloomColorCurve;
    MISSING_TYPE *_ticksColor_dim;
    MISSING_TYPE *_ticksColor_bright;
    MISSING_TYPE *_waypointsColor;
    NTKSiderealData *_currentData;
    double _glowStartAngle;
    double _glowEndAngle;
    float _diameter;
    float _orbitDiameter;
    MTLRenderPassDescriptor *_offscreenPassDescriptor;
    MTLRenderPassDescriptor *_verticalBlurPassDescriptor;
    MTLRenderPassDescriptor *_horizontalBlurPassDescriptor;
    id <MTLTexture> _offscreenBuffer;
    id <MTLTexture> _verticalBlurBuffer;
    id <MTLTexture> _horizontalBlurBuffer;
    float _blurOrbitRadius;
    float _blurRadius;
    _Bool _useXR;
    _Bool _isConstantSun;
    _Bool _shouldDrawGlowPath;
    float _litProgress;
    float _backgroundDimming;
    float _blurScale;
    float _sunsetFilter;
    unsigned long long _renderingMode;
    id <MTLTexture> _dayMask;
    id <MTLTexture> _nightMask;
}

- (void).cxx_destruct;
@property(retain, nonatomic) id <MTLTexture> nightMask; // @synthesize nightMask=_nightMask;
@property(retain, nonatomic) id <MTLTexture> dayMask; // @synthesize dayMask=_dayMask;
@property(nonatomic) unsigned long long renderingMode; // @synthesize renderingMode=_renderingMode;
@property(nonatomic) float sunsetFilter; // @synthesize sunsetFilter=_sunsetFilter;
@property(nonatomic) _Bool shouldDrawGlowPath; // @synthesize shouldDrawGlowPath=_shouldDrawGlowPath;
@property(nonatomic) float blurScale; // @synthesize blurScale=_blurScale;
@property(nonatomic) float backgroundDimming; // @synthesize backgroundDimming=_backgroundDimming;
@property(nonatomic) float litProgress; // @synthesize litProgress=_litProgress;
- (id)_currentBuffer;
- (void)renderForDisplayWithEncoder:(id)arg1;
- (void)performOffscreenPassesWithCommandBuffer:(id)arg1;
- (_Bool)prepareForTime:(double)arg1;
- (int)numSlicesForAngle:(double)arg1;
- (void)setSectors:(id)arg1;
- (void)setSolarDayProgress:(double)arg1;
- (void)loadGradientTexture;
- (void)updateWaypointImage:(id)arg1;
- (void)setupForQuadView:(id)arg1;
- (void)setGlowViewStartAngle:(double)arg1 endAngle:(double)arg2;
- (void)siderealDataChanged:(id)arg1;
- (id)initWithDevice:(id)arg1 orbitDiameter:(double)arg2 timeOrbitRadius:(double)arg3 timeRadius:(double)arg4 dialImage:(id)arg5 waypointImage:(id)arg6 gnomonImage:(id)arg7 dayGnomonImage:(id)arg8 dayDiskBloomImage:(id)arg9 dayDiscImage:(id)arg10 nightGnomonImage:(id)arg11 nightDiscImage:(id)arg12 nightRingImage:(id)arg13 initialData:(id)arg14 useXR:(_Bool)arg15;

@end

