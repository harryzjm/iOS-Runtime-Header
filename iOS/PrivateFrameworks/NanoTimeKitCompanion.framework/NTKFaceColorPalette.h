//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NanoTimeKitCompanion/NSCopying-Protocol.h>
#import <NanoTimeKitCompanion/NSObject-Protocol.h>
#import <NanoTimeKitCompanion/NTKFaceColorPalette-Protocol.h>
#import <NanoTimeKitCompanion/NTKFaceColorPaletteConfigurationDelegate-Protocol.h>
#import <NanoTimeKitCompanion/NTKFaceColorPaletteKeyColors-Protocol.h>

@class NSBundle, NSCache, NSMutableArray, NSString, NTKFaceColorPaletteConfiguration, NTKInterpolatedColorPalette, NTKPigmentEditOption, UIColor;

@interface NTKFaceColorPalette : NSObject <NSObject, NSCopying, NTKFaceColorPalette, NTKFaceColorPaletteConfigurationDelegate, NTKFaceColorPaletteKeyColors>
{
    _Bool _tritium;
    NTKFaceColorPaletteConfiguration *_configuration;
    NSCache *_swatchImageCache;
    NSString *_faceSpecificNamespace;
    NSMutableArray *_bundleList;
    NSCache *_colorCache;
    NSBundle *_domainBundle;
    NTKInterpolatedColorPalette *_interpolatedTritiumPalette;
    NSString *_identifier;
    NTKFaceColorPalette *_tritiumPalette;
}

+ (_Bool)resolveInstanceMethod:(SEL)arg1;
+ (id)colorWithName:(id)arg1 inDomain:(id)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) NTKFaceColorPalette *tritiumPalette; // @synthesize tritiumPalette=_tritiumPalette;
@property(retain, nonatomic) NTKInterpolatedColorPalette *interpolatedTritiumPalette; // @synthesize interpolatedTritiumPalette=_interpolatedTritiumPalette;
@property(retain, nonatomic) NSBundle *domainBundle; // @synthesize domainBundle=_domainBundle;
@property(retain, nonatomic) NSCache *colorCache; // @synthesize colorCache=_colorCache;
@property(retain, nonatomic) NSMutableArray *bundleList; // @synthesize bundleList=_bundleList;
@property(copy, nonatomic) NSString *faceSpecificNamespace; // @synthesize faceSpecificNamespace=_faceSpecificNamespace;
@property(readonly, nonatomic, getter=isTritium) _Bool tritium;
@property(retain, nonatomic) NSCache *swatchImageCache; // @synthesize swatchImageCache=_swatchImageCache;
@property(retain, nonatomic) NTKFaceColorPaletteConfiguration *configuration; // @synthesize configuration=_configuration;
- (_Bool)isEqual:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)swatchPrimaryColor;
- (id)swatchImageForSize:(struct CGSize)arg1;
@property(readonly, nonatomic) UIColor *swatch;
- (id)_secondaryShiftedColor;
- (id)_secondaryColor;
- (id)_primaryShiftedColor;
- (id)entryNameForKey:(id)arg1;
- (id)_loadColorFromAssetCatalogForKey:(id)arg1 namespace:(id)arg2 collectionName:(id)arg3 bundle:(id)arg4 colorFraction:(double)arg5 ignoringOptionAndCollection:(_Bool)arg6 inspector:(id)arg7;
- (id)_notFoundColor;
- (id)valueForKey:(id)arg1;
- (id)identifier;
- (id)multitoneColorNames;
- (id)paletteAtIndex:(unsigned long long)arg1;
- (_Bool)isCompositePalette;
- (id)primaryColorWithFraction:(double)arg1;
- (_Bool)hasPrimaryColorRange;
- (_Bool)isUnityColor;
- (_Bool)isBlackColor;
- (_Bool)isWhiteColor;
- (_Bool)isRainbowColor;
- (_Bool)isMulticolor;
- (_Bool)isNotFoundColor:(id)arg1;
- (_Bool)isEvergreenCollection;
- (void)resetColorCache;
@property(retain, nonatomic) NTKPigmentEditOption *pigmentEditOption;
- (void)configurationDidChange:(id)arg1;
- (void)executeWithOption:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)tritiumPaletteWithProgress:(double)arg1;
- (id)copyWithOption:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)colorBundleContentChanged;
- (id)initWithDomainName:(id)arg1 inBundle:(id)arg2;
- (id)initWithFaceClass:(Class)arg1;
- (id)init;
- (_Bool)isSiriColor;
- (_Bool)isVictory;
- (_Bool)isZeus;
- (_Bool)isWhite;
- (id)_unityMiddleColor;
- (id)_unitySwatchImageForSize:(struct CGSize)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) UIColor *primaryColor; // @dynamic primaryColor;
@property(readonly, nonatomic) UIColor *primaryShiftedColor; // @dynamic primaryShiftedColor;
@property(readonly, nonatomic) UIColor *secondaryColor; // @dynamic secondaryColor;
@property(readonly, nonatomic) UIColor *secondaryShiftedColor; // @dynamic secondaryShiftedColor;
@property(readonly) Class superclass;

@end

