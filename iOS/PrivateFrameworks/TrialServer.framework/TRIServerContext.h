//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class TRIActivationEventDatabase, TRIClient, TRIContentTracker, TRIDatabase, TRIExperimentDatabase, TRIExperimentHistoryDatabase, TRIKVStore, TRIMLRuntimeEvaluationHistoryDatabase, TRINamespaceDatabase, TRIRolloutDatabase, TRISQLiteCKDatabase, TRISQLiteCKDatabaseFailureInjectionDelegate, TRITaskDatabase;
@protocol TRIPaths, TRIPushServiceConnectionMultiplexing, TRITaskQueuing, TRIXPCActivityManagementProtocol;

@interface TRIServerContext : NSObject
{
    _Bool _useCKNative;
    id <TRIPaths> _paths;
    TRIExperimentDatabase *_experimentDatabase;
    TRIActivationEventDatabase *_activationEventDatabase;
    TRIExperimentHistoryDatabase *_experimentHistoryDatabase;
    TRINamespaceDatabase *_namespaceDatabase;
    TRIRolloutDatabase *_rolloutDatabase;
    TRIMLRuntimeEvaluationHistoryDatabase *_evaluationHistoryDatabase;
    TRITaskDatabase *_taskDatabase;
    TRIClient *_client;
    TRIKVStore *_keyValueStore;
    TRIContentTracker *_contentTracker;
    TRISQLiteCKDatabase *_fakeCKDatabase;
    TRISQLiteCKDatabaseFailureInjectionDelegate *_failureInjectionDelegate;
    id <TRIXPCActivityManagementProtocol> _xpcActivityManager;
    TRIDatabase *_underlyingDatabase;
    id <TRITaskQueuing> _taskQueue;
    id <TRIPushServiceConnectionMultiplexing> _pushServiceMuxer;
}

- (void).cxx_destruct;
@property(retain, nonatomic) id <TRIPushServiceConnectionMultiplexing> pushServiceMuxer; // @synthesize pushServiceMuxer=_pushServiceMuxer;
@property(retain, nonatomic) id <TRITaskQueuing> taskQueue; // @synthesize taskQueue=_taskQueue;
@property(readonly, nonatomic) TRIDatabase *underlyingDatabase; // @synthesize underlyingDatabase=_underlyingDatabase;
@property(nonatomic) _Bool useCKNative; // @synthesize useCKNative=_useCKNative;
@property(readonly, nonatomic) __weak id <TRIXPCActivityManagementProtocol> xpcActivityManager; // @synthesize xpcActivityManager=_xpcActivityManager;
@property(retain, nonatomic) TRISQLiteCKDatabaseFailureInjectionDelegate *failureInjectionDelegate; // @synthesize failureInjectionDelegate=_failureInjectionDelegate;
@property(retain) TRISQLiteCKDatabase *fakeCKDatabase; // @synthesize fakeCKDatabase=_fakeCKDatabase;
@property(readonly, nonatomic) TRIContentTracker *contentTracker; // @synthesize contentTracker=_contentTracker;
@property(readonly, nonatomic) TRIKVStore *keyValueStore; // @synthesize keyValueStore=_keyValueStore;
@property(readonly, nonatomic) TRIClient *client; // @synthesize client=_client;
@property(readonly, nonatomic) TRITaskDatabase *taskDatabase; // @synthesize taskDatabase=_taskDatabase;
@property(readonly, nonatomic) TRIMLRuntimeEvaluationHistoryDatabase *evaluationHistoryDatabase; // @synthesize evaluationHistoryDatabase=_evaluationHistoryDatabase;
@property(readonly, nonatomic) TRIRolloutDatabase *rolloutDatabase; // @synthesize rolloutDatabase=_rolloutDatabase;
@property(readonly, nonatomic) TRINamespaceDatabase *namespaceDatabase; // @synthesize namespaceDatabase=_namespaceDatabase;
@property(readonly, nonatomic) TRIExperimentHistoryDatabase *experimentHistoryDatabase; // @synthesize experimentHistoryDatabase=_experimentHistoryDatabase;
@property(readonly, nonatomic) TRIActivationEventDatabase *activationEventDatabase; // @synthesize activationEventDatabase=_activationEventDatabase;
@property(readonly, nonatomic) TRIExperimentDatabase *experimentDatabase; // @synthesize experimentDatabase=_experimentDatabase;
@property(readonly, nonatomic) id <TRIPaths> paths; // @synthesize paths=_paths;
- (id)ensureFakeCKDatabase;
- (void)setXpcActivityManager:(id)arg1;
- (id)initWithPaths:(id)arg1 client:(id)arg2 storageManagement:(id)arg3 xpcActivityManagement:(id)arg4;
- (id)initWithPaths:(id)arg1 client:(id)arg2 storageManagement:(id)arg3;
- (void)_logInitErrorWithClient:(id)arg1 message:(id)arg2;
- (void)logErrorMetric:(id)arg1;
- (id)init;

@end

