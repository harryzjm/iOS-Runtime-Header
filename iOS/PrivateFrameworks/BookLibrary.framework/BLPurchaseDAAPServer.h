//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class BKPurchaseDAAPBackoff, BUBag, NSDate, NSMutableSet, NSNumber;
@protocol BLPurchaseDAAPServerDelegate, OS_dispatch_queue;

@interface BLPurchaseDAAPServer : NSObject
{
    NSDate *_lastPolledAt;
    NSDate *_DAAPReconnectAt;
    _Bool _clientExpired;
    long long _requestReasonCode;
    NSMutableSet *_setupCompletionHandlers;
    BKPurchaseDAAPBackoff *_backoff;
    BUBag *_bag;
    NSObject<OS_dispatch_queue> *_updateItemsQueue;
    NSObject<OS_dispatch_queue> *_backoffQueue;
    _Bool _isServerSetup;
    _Bool _isServerSetupPending;
    _Bool _primaryAccount;
    NSNumber *_sessionID;
    NSNumber *_dsid;
    NSNumber *_bagDatabaseID;
    id <BLPurchaseDAAPServerDelegate> _delegate;
}

+ (id)sharedSession;
- (void).cxx_destruct;
@property(nonatomic) __weak id <BLPurchaseDAAPServerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSNumber *bagDatabaseID; // @synthesize bagDatabaseID=_bagDatabaseID;
@property(readonly, nonatomic, getter=isPrimaryAccount) _Bool primaryAccount; // @synthesize primaryAccount=_primaryAccount;
@property(retain, nonatomic) NSNumber *dsid; // @synthesize dsid=_dsid;
@property(retain, nonatomic, setter=_setSessionID:) NSNumber *sessionID; // @synthesize sessionID=_sessionID;
@property(nonatomic) _Bool isServerSetupPending; // @synthesize isServerSetupPending=_isServerSetupPending;
@property(nonatomic) _Bool isServerSetup; // @synthesize isServerSetup=_isServerSetup;
- (void)_fetchItemsWithLocalVersion:(id)arg1 serverVersion:(id)arg2 reason:(long long)arg3 tokenPairs:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)_dataForItemsRequestWithLocalVersion:(id)arg1 serverVersion:(id)arg2 tokenPairs:(id)arg3;
- (id)additionalAudiobookInfoKeys;
- (id)daapMetaDataFilterString;
- (id)daapQueryFilterString;
- (void)_fetchDatabaseWithReason:(long long)arg1 localServerRevision:(id)arg2 latestVersion:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_pollLatestRevisionWithReason:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_loginWithReason:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_configureWithReason:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setDAAPReconnectToTimeIntervalSinceNow:(double)arg1;
- (_Bool)_canMakeDAAPRequest;
- (void)handleClientExpired;
- (id)_processResponse:(id)arg1;
- (void)_preProcessResponse:(id)arg1 error:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)_shouldMakeRequest:(CDUnknownBlockType)arg1;
- (void)_sendSetupConfigurationHandlersWithSuccess:(_Bool)arg1;
- (void)_sendHandlers:(id)arg1 success:(_Bool)arg2;
- (id)_updatePersistentItems:(id)arg1 moc:(id)arg2 database:(id)arg3 error:(id *)arg4;
- (id)_updatePersistentDatabase:(id)arg1 server:(id)arg2 moc:(id)arg3 error:(id *)arg4;
- (id)_updatePersistentServerRevision:(id)arg1 moc:(id)arg2 error:(id *)arg3;
- (_Bool)_updatePersistentServerRevision:(id)arg1 database:(id)arg2 items:(id)arg3 error:(id *)arg4;
- (id)_localServerDatabaseRevisionInMoc:(id)arg1;
- (_Bool)_saveInMoc:(id)arg1 error:(id *)arg2;
- (void)contextDidSave:(id)arg1;
- (void)dealloc;
- (id)initWithDSID:(id)arg1 delegate:(id)arg2;
- (void)fetchAllItemsPolitely:(_Bool)arg1 reason:(long long)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setupWithReason:(long long)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)hideItemsWithStoreIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_updateVersionAfterHideRequest:(id)arg1;
- (id)_dataForHideItemsRequestWithStoreIDs:(id)arg1;
- (void)updateItemImageURLsIgnoringCache:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_dataForArtRequest:(_Bool)arg1;
- (void)serverParametersWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)resetWithQueue:(id)arg1;
- (void)forcedRefreshFrequencyWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)databaseIDWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)pollingFrequencyWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)appRefreshesOnLaunchWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)timeIntervalFromDAAPBagKey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)valueForDAAPBagKey:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

