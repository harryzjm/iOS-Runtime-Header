//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <VoiceShortcuts/VCUserNotificationManagerDelegate-Protocol.h>
#import <VoiceShortcuts/WFOutOfProcessWorkflowControllerDelegate-Protocol.h>

@class NSMutableDictionary, NSString, VCDaemonXPCEventHandler, VCUserNotificationManager, WFDatabase, WFOutOfProcessWorkflowController, WFWorkflowRunEvent;
@protocol OS_dispatch_queue, VCDatabaseProvider, _CDUserContext;

@interface VCCoreDuetListener : NSObject <VCUserNotificationManagerDelegate, WFOutOfProcessWorkflowControllerDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;
    id <_CDUserContext> _userContext;
    id <VCDatabaseProvider> _databaseProvider;
    VCUserNotificationManager *_notificationManager;
    VCDaemonXPCEventHandler *_eventHandler;
    NSMutableDictionary *_registrations;
    NSMutableDictionary *_pendingEventInfoByTriggerID;
    WFOutOfProcessWorkflowController *_workflowController;
    WFWorkflowRunEvent *_inProgressRunEvent;
}

@property(retain, nonatomic) WFWorkflowRunEvent *inProgressRunEvent; // @synthesize inProgressRunEvent=_inProgressRunEvent;
@property(retain, nonatomic) WFOutOfProcessWorkflowController *workflowController; // @synthesize workflowController=_workflowController;
@property(readonly, nonatomic) NSMutableDictionary *pendingEventInfoByTriggerID; // @synthesize pendingEventInfoByTriggerID=_pendingEventInfoByTriggerID;
@property(readonly, nonatomic) NSMutableDictionary *registrations; // @synthesize registrations=_registrations;
@property(readonly, nonatomic) VCDaemonXPCEventHandler *eventHandler; // @synthesize eventHandler=_eventHandler;
@property(readonly, nonatomic) VCUserNotificationManager *notificationManager; // @synthesize notificationManager=_notificationManager;
@property(readonly, nonatomic) id <VCDatabaseProvider> databaseProvider; // @synthesize databaseProvider=_databaseProvider;
@property(readonly, nonatomic) id <_CDUserContext> userContext; // @synthesize userContext=_userContext;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (void)logMetricForTrigger:(id)arg1;
- (void)deleteTriggerWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkTriggerStateWithKeyPath:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkTriggerStateWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getConfiguredTriggerDescriptionsWithCompletion:(CDUnknownBlockType)arg1;
- (void)fireTriggerWithIdentifier:(id)arg1 force:(_Bool)arg2 eventInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)registerTriggerWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)registerAllTriggersWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)shouldRunTrigger:(id)arg1 forEvent:(id)arg2;
- (void)outOfProcessWorkflowController:(id)arg1 didFinishWithError:(id)arg2 cancelled:(_Bool)arg3;
- (void)notificationManager:(id)arg1 didDismissTriggerWithIdentifier:(id)arg2;
- (void)notificationManager:(id)arg1 receivedConfirmationToRunTriggerWithIdentifier:(id)arg2;
- (void)logPowerLogEventForTrigger:(id)arg1 workflowReference:(id)arg2;
- (_Bool)startRunningWorkflow:(id)arg1 forTrigger:(id)arg2 eventInfo:(id)arg3 error:(out id *)arg4;
- (void)queue_fireTriggerWithIdentifier:(id)arg1 force:(_Bool)arg2 eventInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchCurrentSunriseSunsetTimes;
- (void)handleSunriseSunsetChanged;
- (void)registerSunriseSunsetCallbackIfNeeded;
- (void)unregisterCallbackForIdentifier:(id)arg1;
- (void)registerCallback:(id)arg1 withIdentifier:(id)arg2;
- (_Bool)isCallbackRegisteredWithIdentifier:(id)arg1;
- (void)handleCallbackForTriggerWithIdentifier:(id)arg1 info:(id)arg2;
- (_Bool)registerTrigger:(id)arg1 error:(id *)arg2;
- (_Bool)queue_registerAllTriggers:(id *)arg1;
- (id)queue_configuredTriggerForIdentifier:(id)arg1 workflowReference:(id *)arg2 error:(out id *)arg3;
@property(readonly, nonatomic) WFDatabase *database;
- (void)deviceDidUnlockForFirstTime;
- (void)dealloc;
- (id)initWithDatabaseProvider:(id)arg1 eventHandler:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

