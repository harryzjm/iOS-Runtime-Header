//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, VCDaemonXPCEventHandler, VCTriggerEventQueue;
@protocol OS_dispatch_queue, WFDatabaseProvider, _CDUserContext;

@interface VCCoreDuetListener : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    id <_CDUserContext> _userContext;
    id <WFDatabaseProvider> _databaseProvider;
    VCDaemonXPCEventHandler *_eventHandler;
    VCTriggerEventQueue *_eventQueue;
    NSMutableDictionary *_registrations;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableDictionary *registrations; // @synthesize registrations=_registrations;
@property(retain, nonatomic) VCTriggerEventQueue *eventQueue; // @synthesize eventQueue=_eventQueue;
@property(readonly, nonatomic) VCDaemonXPCEventHandler *eventHandler; // @synthesize eventHandler=_eventHandler;
@property(readonly, nonatomic) id <WFDatabaseProvider> databaseProvider; // @synthesize databaseProvider=_databaseProvider;
@property(readonly, nonatomic) id <_CDUserContext> userContext; // @synthesize userContext=_userContext;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void)checkTriggerStateWithKeyPath:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkTriggerStateWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fireTriggerWithIdentifier:(id)arg1 force:(_Bool)arg2 eventInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)queue_fireTriggerWithIdentifier:(id)arg1 force:(_Bool)arg2 eventInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)handleSunriseSunsetChanged;
- (void)registerSunriseSunsetCallbackIfNeeded;
- (void)queue_unregisterCallbackForIdentifier:(id)arg1;
- (void)registerCallback:(id)arg1 withIdentifier:(id)arg2;
- (_Bool)isCallbackRegisteredWithIdentifier:(id)arg1;
- (void)handleCallbackForTriggerWithIdentifier:(id)arg1 info:(id)arg2;
- (void)unregisterConfiguredTriggerWithIdentifier:(id)arg1;
- (_Bool)registerTrigger:(id)arg1 error:(id *)arg2;
- (void)registerConfiguredTrigger:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)databaseWithError:(id *)arg1;
- (id)initWithDatabaseProvider:(id)arg1 eventQueue:(id)arg2;

@end

