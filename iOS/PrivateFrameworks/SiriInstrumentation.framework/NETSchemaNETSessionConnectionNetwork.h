//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSData, NSString;

@interface NETSchemaNETSessionConnectionNetwork
{
    NSString *_carrierName;
    int _connectionMethod;
    NSString *_primarySubflowInterfaceName;
    _Bool _isCaptive;
    double _rssi;
    double _snr;
    unsigned int _attempCount;
    unsigned long long _firstByteTime;
    unsigned long long _startToDNSResolution;
    unsigned long long _dnsResolutionTime;
    int _tlsVersion;
    unsigned long long _tlsHandshakeTime;
    unsigned long long _connectionEstablishmentTime;
    unsigned long long _connectionStartToEstablishmentTime;
    unsigned long long _connectionStartToTLSHandshake;
    struct {
        unsigned int connectionMethod:1;
        unsigned int isCaptive:1;
        unsigned int rssi:1;
        unsigned int snr:1;
        unsigned int attempCount:1;
        unsigned int firstByteTime:1;
        unsigned int startToDNSResolution:1;
        unsigned int dnsResolutionTime:1;
        unsigned int tlsVersion:1;
        unsigned int tlsHandshakeTime:1;
        unsigned int connectionEstablishmentTime:1;
        unsigned int connectionStartToEstablishmentTime:1;
        unsigned int connectionStartToTLSHandshake:1;
    } _has;
    _Bool _hasCarrierName;
    _Bool _hasPrimarySubflowInterfaceName;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool hasPrimarySubflowInterfaceName; // @synthesize hasPrimarySubflowInterfaceName=_hasPrimarySubflowInterfaceName;
@property(nonatomic) _Bool hasCarrierName; // @synthesize hasCarrierName=_hasCarrierName;
@property(nonatomic) unsigned long long connectionStartToTLSHandshake; // @synthesize connectionStartToTLSHandshake=_connectionStartToTLSHandshake;
@property(nonatomic) unsigned long long connectionStartToEstablishmentTime; // @synthesize connectionStartToEstablishmentTime=_connectionStartToEstablishmentTime;
@property(nonatomic) unsigned long long connectionEstablishmentTime; // @synthesize connectionEstablishmentTime=_connectionEstablishmentTime;
@property(nonatomic) unsigned long long tlsHandshakeTime; // @synthesize tlsHandshakeTime=_tlsHandshakeTime;
@property(nonatomic) int tlsVersion; // @synthesize tlsVersion=_tlsVersion;
@property(nonatomic) unsigned long long dnsResolutionTime; // @synthesize dnsResolutionTime=_dnsResolutionTime;
@property(nonatomic) unsigned long long startToDNSResolution; // @synthesize startToDNSResolution=_startToDNSResolution;
@property(nonatomic) unsigned long long firstByteTime; // @synthesize firstByteTime=_firstByteTime;
@property(nonatomic) unsigned int attempCount; // @synthesize attempCount=_attempCount;
@property(nonatomic) double snr; // @synthesize snr=_snr;
@property(nonatomic) double rssi; // @synthesize rssi=_rssi;
@property(nonatomic) _Bool isCaptive; // @synthesize isCaptive=_isCaptive;
@property(copy, nonatomic) NSString *primarySubflowInterfaceName; // @synthesize primarySubflowInterfaceName=_primarySubflowInterfaceName;
@property(nonatomic) int connectionMethod; // @synthesize connectionMethod=_connectionMethod;
@property(copy, nonatomic) NSString *carrierName; // @synthesize carrierName=_carrierName;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
@property(readonly, nonatomic) NSData *jsonData;
- (id)dictionaryRepresentation;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
@property(nonatomic) _Bool hasConnectionStartToTLSHandshake;
@property(nonatomic) _Bool hasConnectionStartToEstablishmentTime;
@property(nonatomic) _Bool hasConnectionEstablishmentTime;
@property(nonatomic) _Bool hasTlsHandshakeTime;
@property(nonatomic) _Bool hasTlsVersion;
@property(nonatomic) _Bool hasDnsResolutionTime;
@property(nonatomic) _Bool hasStartToDNSResolution;
@property(nonatomic) _Bool hasFirstByteTime;
@property(nonatomic) _Bool hasAttempCount;
@property(nonatomic) _Bool hasSnr;
@property(nonatomic) _Bool hasRssi;
@property(nonatomic) _Bool hasIsCaptive;
@property(nonatomic) _Bool hasConnectionMethod;

@end

