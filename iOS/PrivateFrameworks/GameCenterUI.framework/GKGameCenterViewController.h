//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UINavigationController.h>

#import <GameCenterUI/GKExtensionParentViewControllerProtocol-Protocol.h>
#import <GameCenterUI/UIViewControllerAnimatedTransitioning-Protocol.h>
#import <GameCenterUI/UIViewControllerTransitioningDelegate-Protocol.h>

@class GKDashboardHostViewController, GKGame, GKLeaderboard, NSString, UIAlertController;
@protocol GKGameCenterControllerDelegate;

@interface GKGameCenterViewController : UINavigationController <GKExtensionParentViewControllerProtocol, UIViewControllerAnimatedTransitioning, UIViewControllerTransitioningDelegate>
{
    _Bool _isArcade;
    _Bool _presenting;
    int _actualHostPID;
    id <GKGameCenterControllerDelegate> _gameCenterDelegate;
    long long _viewState;
    NSString *_leaderboardIdentifier;
    long long _leaderboardTimeScope;
    long long _leaderboardPlayerScope;
    GKDashboardHostViewController *_remoteViewController;
    GKLeaderboard *_leaderboard;
    NSString *_achievementIdentifier;
    NSString *_playerIdentifier;
    UIAlertController *_alertController;
    GKGame *_actualGame;
}

+ (_Bool)accessInstanceVariablesDirectly;
+ (_Bool)_preventsAppearanceProxyCustomization;
- (void).cxx_destruct;
@property(nonatomic) int actualHostPID; // @synthesize actualHostPID=_actualHostPID;
@property(retain, nonatomic) GKGame *actualGame; // @synthesize actualGame=_actualGame;
@property(nonatomic, getter=isPresenting) _Bool presenting; // @synthesize presenting=_presenting;
@property(nonatomic) _Bool isArcade; // @synthesize isArcade=_isArcade;
@property(retain, nonatomic) UIAlertController *alertController; // @synthesize alertController=_alertController;
@property(retain, nonatomic) NSString *playerIdentifier; // @synthesize playerIdentifier=_playerIdentifier;
@property(retain, nonatomic) NSString *achievementIdentifier; // @synthesize achievementIdentifier=_achievementIdentifier;
@property(retain, nonatomic) GKLeaderboard *leaderboard; // @synthesize leaderboard=_leaderboard;
@property(retain, nonatomic) GKDashboardHostViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(nonatomic) __weak id <GKGameCenterControllerDelegate> gameCenterDelegate; // @synthesize gameCenterDelegate=_gameCenterDelegate;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
@property(retain, nonatomic) NSString *leaderboardCategory; // @dynamic leaderboardCategory;
@property(nonatomic) long long leaderboardPlayerScope; // @synthesize leaderboardPlayerScope=_leaderboardPlayerScope;
@property(nonatomic) long long leaderboardTimeScope; // @synthesize leaderboardTimeScope=_leaderboardTimeScope;
@property(retain, nonatomic) NSString *leaderboardIdentifier; // @synthesize leaderboardIdentifier=_leaderboardIdentifier;
@property(nonatomic) long long viewState; // @synthesize viewState=_viewState;
- (_Bool)shouldShowQuitForTurnBasedMatch;
- (_Bool)shouldShowPlayForTurnBasedMatch;
- (_Bool)shouldShowPlayForChallenge;
- (void)extensionDidFinishWithError:(id)arg1;
- (void)checkArcadeStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)_setupRemoteViewController;
- (void)_setupChildViewController;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (void)animationEnded:(_Bool)arg1;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)dealloc;
- (id)initWithPlayerID:(id)arg1 withFriendsList:(_Bool)arg2;
- (id)initWithAchievementID:(id)arg1;
- (id)initWithLeaderboard:(id)arg1 playerScope:(long long)arg2;
- (id)initWithLeaderboardID:(id)arg1 playerScope:(long long)arg2 timeScope:(long long)arg3;
- (id)initWithState:(long long)arg1;
- (id)init;
- (void)notifyDelegateOnWillFinish;
- (void)setLeaderboardPlayerScopeFromExtension:(long long)arg1;
- (void)setLeaderboardTimeScopeFromExtension:(long long)arg1;
- (void)setLeaderboardIdentifierFromExtension:(id)arg1;
- (void)setViewStateFromExtension:(long long)arg1;
- (id)initWithGame:(id)arg1 hostPID:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

