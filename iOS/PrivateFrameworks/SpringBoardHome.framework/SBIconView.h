//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

#import <SpringBoardHome/SBCloseBoxViewDelegate-Protocol.h>
#import <SpringBoardHome/SBHFocusProxyable-Protocol.h>
#import <SpringBoardHome/SBHIconViewConfigurationInteractionDelegate-Protocol.h>
#import <SpringBoardHome/SBIconAccessoryInfoProvider-Protocol.h>
#import <SpringBoardHome/SBIconObserver-Protocol.h>
#import <SpringBoardHome/SBIconViewCustomImageViewControllerObserving-Protocol.h>
#import <SpringBoardHome/SBReusableView-Protocol.h>
#import <SpringBoardHome/SBSHardwareButtonEventConsuming-Protocol.h>
#import <SpringBoardHome/UIContextMenuInteractionDelegate-Protocol.h>
#import <SpringBoardHome/UIDragInteractionDelegate-Protocol.h>
#import <SpringBoardHome/UIGestureRecognizerDelegate-Protocol.h>
#import <SpringBoardHome/UIPointerInteractionDelegate-Protocol.h>
#import <SpringBoardHome/_UISettingsKeyObserver-Protocol.h>

@class NSArray, NSCountedSet, NSDate, NSHashTable, NSMutableArray, NSObject, NSString, NSURL, SBCloseBoxView, SBFolderIcon, SBFolderIconImageCache, SBHIconEditingSettings, SBHIconImageCache, SBHRecentsDocumentExtensionProvider, SBIcon, SBIconFocusEffectPlatterView, SBIconImageCrossfadeView, SBIconImageView, UIColor, UIContextMenuInteraction, UIDragInteraction, UIFocusEffect, UIFont, UIImage, UILabel, UILongPressGestureRecognizer, UIPointerInteraction, UITapGestureRecognizer, UIViewController, UIViewPropertyAnimator, _UILegibilitySettings, _UIStatesFeedbackGenerator;
@protocol BSInvalidatable, OS_os_activity, SBHIconViewConfigurationInteraction, SBIconAccessoryView, SBIconContinuityInfo, SBIconLabelAccessoryView, SBIconLabelView, SBIconListLayout, SBIconListLayoutProvider, SBIconViewActionDelegate, SBIconViewCustomImageViewControlling, SBIconViewDelegate, SBIconViewSnapshotProviding, UIDragSession, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer;

@interface SBIconView : UIView <UIPointerInteractionDelegate, _UISettingsKeyObserver, UIGestureRecognizerDelegate, UIDragInteractionDelegate, SBCloseBoxViewDelegate, UIContextMenuInteractionDelegate, SBSHardwareButtonEventConsuming, SBHIconViewConfigurationInteractionDelegate, SBIconViewCustomImageViewControllerObserving, SBHFocusProxyable, SBIconObserver, SBReusableView, SBIconAccessoryInfoProvider>
{
    SBIcon *_icon;
    NSString *_iconLocation;
    SBIconImageView *_iconImageView;
    SBIconImageCrossfadeView *_crossfadeView;
    UIView *_snapshotContainerView;
    UIView *_temporarySnapshotContainerViewForDragPreview;
    UIView<SBIconAccessoryView> *_accessoryView;
    SBCloseBoxView *_closeBox;
    UIView<SBIconLabelView> *_labelView;
    UIView<SBIconLabelAccessoryView> *_labelAccessoryView;
    UIView *_dropGlow;
    SBIconFocusEffectPlatterView *_focusEffectPlatterView;
    UIView<UIFocusItem> *_focusProxyView;
    SBHIconEditingSettings *_iconEditingSettings;
    UILabel *_iconIndexLabel;
    id <SBIconViewSnapshotProviding> _snapshotProvider;
    unsigned int _drawsLabel:1;
    unsigned int _isEditing:1;
    unsigned int _discardClose:2;
    unsigned int _pauseReasons:3;
    unsigned int _isGrabbed:1;
    unsigned int _isOverlapping:1;
    unsigned int _isFocused:1;
    unsigned int _refusesRecipientStatus:1;
    unsigned int _highlighted:1;
    unsigned int _launchDisabled:1;
    unsigned int _suppressesDisabledPresentation:1;
    unsigned int _iconWasTappedWhenDisabled:1;
    unsigned int _isJittering:1;
    unsigned int _allowJitter:1;
    unsigned int _allowCloseBox:1;
    unsigned int _touchDownInIcon:1;
    unsigned int _hideLabel:1;
    unsigned int _hideLabelAccessoryView:1;
    unsigned int _iconContentScalingEnabled:1;
    unsigned int _forcingIconContentScalingEnabled:1;
    unsigned int _startsDragMoreQuickly:1;
    unsigned int _isDragging:1;
    unsigned int _isDragLifted:1;
    unsigned int _folderIconFrozen:1;
    unsigned int _showingCloseBox:1;
    unsigned int _allowsAccessoryView:1;
    unsigned int _allowsProgressState:1;
    unsigned int _showingAccessoryView:1;
    unsigned int _allowsLabelArea:1;
    unsigned int _allowsPassthroughHitTesting:1;
    unsigned int _showsDropGlow:1;
    unsigned int _hasSetIconImageInfo:1;
    unsigned int _showsSquareCorners:1;
    unsigned int _disableContextMenuInteraction:1;
    unsigned int _disallowsBlockedForScreenTimeExpiration:1;
    unsigned int _reallyHasPopover:2;
    unsigned int _imageLoadingBehavior:2;
    unsigned int _disallowCursorInteraction:1;
    unsigned int _customIconImageViewHitTestingDisabled:1;
    unsigned int _labelStyle:2;
    unsigned int _allIconElementsButLabelHidden:1;
    unsigned int _displaysIconStatusInLabel:1;
    unsigned int _userVisibilityStatus:2;
    unsigned int _wantsFocusProxyView:1;
    double _iconContentScale;
    UIView *_scalingContainer;
    struct CGRect _visibleImageRect;
    struct UIEdgeInsets _cursorHitTestPadding;
    NSHashTable *_observers;
    NSCountedSet *_forbidEditingModeReasons;
    NSCountedSet *_forbidAccessoryReasons;
    struct SBIconImageInfo _iconImageInfo;
    UIFont *_labelFont;
    SBHRecentsDocumentExtensionProvider *_recentsDocumentExtensionProvider;
    _UIStatesFeedbackGenerator *_feedbackGenerator;
    NSMutableArray *_performAfterContextMenuBlocks;
    NSHashTable *_droppingAssertions;
    NSHashTable *_contextMenuInteractionConfigurations;
    NSHashTable *_dismissingContextMenuInteractionConfigurations;
    NSObject<OS_os_activity> *_iconContextMenuActivity;
    struct os_activity_scope_state_s _iconContextMenuActivityState;
    NSCountedSet *_activePointerRegions;
    unsigned long long _fetchedSupportedMedusaKeyboardShortcuts;
    _Bool _lastContextMenuInteractionFailedToLoad;
    _Bool _enabled;
    _Bool _paused;
    _Bool _showsImageAndLabelDuringDrop;
    _Bool _iconImageSizeMatchesBoundsSize;
    id <SBIconViewDelegate> _delegate;
    id <SBIconViewActionDelegate> _overrideActionDelegate;
    _UILegibilitySettings *_legibilitySettings;
    double _iconImageAlpha;
    double _iconAccessoryAlpha;
    double _iconLabelAlpha;
    NSArray *_applicationShortcutItems;
    double _editingAnimationStrength;
    NSDate *_lastTouchDownDate;
    id <SBIconContinuityInfo> _continuityInfo;
    unsigned long long _customIconImageViewControllerPriority;
    UIViewController<SBIconViewCustomImageViewControlling> *_customIconImageViewController;
    id <SBIconListLayoutProvider> _listLayoutProvider;
    SBHIconImageCache *_iconImageCache;
    SBFolderIconImageCache *_folderIconImageCache;
    SBFolderIcon *_folderIcon;
    UIView *_folderIconBackgroundView;
    UIColor *_accessibilityTintColor;
    unsigned long long _debugIconIndex;
    UIDragInteraction *_dragInteraction;
    id <UIDragSession> _liftingDragSession;
    UITapGestureRecognizer *_tapGestureRecognizer;
    UIViewPropertyAnimator *_accessoryViewAnimator;
    long long _displayedLabelAccessoryType;
    UILongPressGestureRecognizer *_editingModeGestureRecognizer;
    UIContextMenuInteraction *_contextMenuInteraction;
    id <BSInvalidatable> _homeButtonPressConsumingAssertion;
    id <SBHIconViewConfigurationInteraction> _currentConfigurationInteraction;
    id <SBHIconViewConfigurationInteraction> _currentStackConfigurationInteraction;
    UIPointerInteraction *_iconViewCursorInteraction;
    UIPointerInteraction *_closeBoxCursorInteraction;
    UIPointerInteraction *_accessoryViewCursorInteraction;
    UIViewPropertyAnimator *_closeBoxAnimator;
    NSArray *_fetchedApplicationShortcutItems;
    struct SBIconApproximateLayoutPosition _approximateLayoutPosition;
}

+ (long long)closeBoxTypeForView:(id)arg1;
+ (Class)_closeBoxClassForType:(long long)arg1;
+ (id)componentBackgroundViewOfType:(long long)arg1 compatibleWithTraitCollection:(id)arg2 initialWeighting:(double)arg3;
+ (long long)defaultWidgetBackgroundRecipe;
+ (id)groupNameBaseForComponentBackgroundViewOfType:(long long)arg1;
+ (id)componentBackgroundViewOfType:(long long)arg1;
+ (id)componentBackgroundView;
+ (double)_defaultDragInteractionLiftDelay;
+ (_Bool)supportsCursorInteraction;
+ (_Bool)supportsTapGesture;
+ (_Bool)supportsDragInteraction;
+ (id)dragContextForDragItem:(id)arg1;
+ (id)draggedItemBundleIdentifiersInDrag:(id)arg1;
+ (id)_jitterRotationAnimationWithAmount:(double)arg1;
+ (id)_jitterRotationAnimationWithStrength:(double)arg1;
+ (id)_jitterYTranslationAnimationWithAmount:(double)arg1;
+ (id)_jitterYTranslationAnimationWithStrength:(double)arg1;
+ (id)_jitterXTranslationAnimationWithAmount:(double)arg1;
+ (id)_jitterXTranslationAnimationWithStrength:(double)arg1;
+ (Class)defaultViewClassForAccessoryType:(long long)arg1;
+ (_Bool)_alwaysShowsAccessoryOfType:(long long)arg1;
+ (id)defaultLegibilitySettings;
+ (void)configureLabelImageParametersBuilder:(id)arg1 forIcon:(id)arg2 location:(id)arg3;
+ (struct CGSize)maxLabelSizeForListLayout:(id)arg1 iconImageSize:(struct CGSize)arg2 contentSizeCategory:(id)arg3 options:(unsigned long long)arg4;
+ (struct CGSize)maxLabelSizeForListLayout:(id)arg1 contentSizeCategory:(id)arg2 options:(unsigned long long)arg3;
+ (id)labelConfigurationForListLayout:(id)arg1 contentSizeCategory:(id)arg2 options:(unsigned long long)arg3;
+ (struct CGSize)maxLabelSizeForIconImageSize:(struct CGSize)arg1 contentSizeCategory:(id)arg2 options:(unsigned long long)arg3;
+ (struct CGSize)maxLabelSizeForIconImageSize:(struct CGSize)arg1;
+ (double)defaultMaxLabelHeight;
+ (double)defaultMaxLabelWidthDeltaForContentSizeCategory:(id)arg1;
+ (double)_labelHeight;
+ (struct CGPoint)defaultIconImageCenterForIconImageSize:(struct CGSize)arg1;
+ (struct CGSize)defaultIconViewSizeForIconImageSize:(struct CGSize)arg1 configurationOptions:(unsigned long long)arg2;
+ (Class)defaultViewClassForLabelAccessoryType:(long long)arg1;
+ (double)labelAccessoryViewAdditionalRightMarginForType:(long long)arg1;
+ (double)labelAccessoryViewBaseRightMargin;
+ (_Bool)allowsLabelAccessoryView;
+ (id)applicationShortcutService;
+ (_Bool)showsPopovers;
+ (_Bool)supportsPreviewInteraction;
+ (_Bool)_shouldAlwaysHaveContentContainerView;
+ (double)iconLiftAlpha;
+ (long long)continuityBadgeTypeForNSString:(id)arg1;
+ (long long)continuityBadgeTypeForContinuityInfo:(id)arg1;
+ (unsigned long long)defaultImageLoadingBehavior;
+ (_Bool)isIconTapGestureRecognizer:(id)arg1;
+ (id)applicationIconSplitViewMenu;
+ (id)applicationIconMultitaskingMenu;
+ (void)setDebugContinuityBadgeType:(id)arg1;
+ (long long)debugContinuityBadgeType;
+ (void)activateShortcut:(id)arg1 withBundleIdentifier:(id)arg2 forIconView:(id)arg3;
+ (Class)contentContainerViewClass;
+ (struct CGSize)defaultIconViewSize;
+ (double)defaultIconImageCornerRadius;
+ (double)defaultIconImageScale;
+ (struct CGSize)defaultIconImageSize;
+ (id)defaultIconLocation;
- (void).cxx_destruct;
@property(copy, nonatomic) NSArray *fetchedApplicationShortcutItems; // @synthesize fetchedApplicationShortcutItems=_fetchedApplicationShortcutItems;
@property(retain, nonatomic) UIViewPropertyAnimator *closeBoxAnimator; // @synthesize closeBoxAnimator=_closeBoxAnimator;
@property(readonly, nonatomic) UIPointerInteraction *accessoryViewCursorInteraction; // @synthesize accessoryViewCursorInteraction=_accessoryViewCursorInteraction;
@property(readonly, nonatomic) UIPointerInteraction *closeBoxCursorInteraction; // @synthesize closeBoxCursorInteraction=_closeBoxCursorInteraction;
@property(readonly, nonatomic) UIPointerInteraction *iconViewCursorInteraction; // @synthesize iconViewCursorInteraction=_iconViewCursorInteraction;
@property(retain, nonatomic) id <SBHIconViewConfigurationInteraction> currentStackConfigurationInteraction; // @synthesize currentStackConfigurationInteraction=_currentStackConfigurationInteraction;
@property(retain, nonatomic) id <SBHIconViewConfigurationInteraction> currentConfigurationInteraction; // @synthesize currentConfigurationInteraction=_currentConfigurationInteraction;
@property(retain, nonatomic) id <BSInvalidatable> homeButtonPressConsumingAssertion; // @synthesize homeButtonPressConsumingAssertion=_homeButtonPressConsumingAssertion;
@property(readonly, nonatomic) UIContextMenuInteraction *contextMenuInteraction; // @synthesize contextMenuInteraction=_contextMenuInteraction;
@property(readonly, nonatomic) UILongPressGestureRecognizer *editingModeGestureRecognizer; // @synthesize editingModeGestureRecognizer=_editingModeGestureRecognizer;
@property(readonly, nonatomic) long long displayedLabelAccessoryType; // @synthesize displayedLabelAccessoryType=_displayedLabelAccessoryType;
@property(retain, nonatomic) UIViewPropertyAnimator *accessoryViewAnimator; // @synthesize accessoryViewAnimator=_accessoryViewAnimator;
@property(readonly, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(nonatomic) __weak id <UIDragSession> liftingDragSession; // @synthesize liftingDragSession=_liftingDragSession;
@property(readonly, nonatomic) UIDragInteraction *dragInteraction; // @synthesize dragInteraction=_dragInteraction;
@property(readonly, nonatomic) UIView *focusProxyView; // @synthesize focusProxyView=_focusProxyView;
@property(nonatomic) struct SBIconApproximateLayoutPosition approximateLayoutPosition; // @synthesize approximateLayoutPosition=_approximateLayoutPosition;
@property(nonatomic) _Bool iconImageSizeMatchesBoundsSize; // @synthesize iconImageSizeMatchesBoundsSize=_iconImageSizeMatchesBoundsSize;
@property(nonatomic) unsigned long long debugIconIndex; // @synthesize debugIconIndex=_debugIconIndex;
@property(retain, nonatomic) UIColor *accessibilityTintColor; // @synthesize accessibilityTintColor=_accessibilityTintColor;
@property(retain, nonatomic) UIView *folderIconBackgroundView; // @synthesize folderIconBackgroundView=_folderIconBackgroundView;
@property(retain, nonatomic) SBFolderIcon *folderIcon; // @synthesize folderIcon=_folderIcon;
@property(retain, nonatomic) SBFolderIconImageCache *folderIconImageCache; // @synthesize folderIconImageCache=_folderIconImageCache;
@property(retain, nonatomic) SBHIconImageCache *iconImageCache; // @synthesize iconImageCache=_iconImageCache;
@property(retain, nonatomic) id <SBIconListLayoutProvider> listLayoutProvider; // @synthesize listLayoutProvider=_listLayoutProvider;
@property(readonly, nonatomic) UIViewController<SBIconViewCustomImageViewControlling> *customIconImageViewController; // @synthesize customIconImageViewController=_customIconImageViewController;
@property(nonatomic) unsigned long long customIconImageViewControllerPriority; // @synthesize customIconImageViewControllerPriority=_customIconImageViewControllerPriority;
@property(retain, nonatomic) id <SBIconContinuityInfo> continuityInfo; // @synthesize continuityInfo=_continuityInfo;
@property(retain, nonatomic) UIFont *labelFont; // @synthesize labelFont=_labelFont;
@property(nonatomic) _Bool showsImageAndLabelDuringDrop; // @synthesize showsImageAndLabelDuringDrop=_showsImageAndLabelDuringDrop;
@property(copy, nonatomic) NSDate *lastTouchDownDate; // @synthesize lastTouchDownDate=_lastTouchDownDate;
@property(nonatomic) struct UIEdgeInsets cursorHitTestPadding; // @synthesize cursorHitTestPadding=_cursorHitTestPadding;
@property(nonatomic) double editingAnimationStrength; // @synthesize editingAnimationStrength=_editingAnimationStrength;
@property(nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=_paused;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(copy, nonatomic) NSArray *applicationShortcutItems; // @synthesize applicationShortcutItems=_applicationShortcutItems;
@property(nonatomic) double iconLabelAlpha; // @synthesize iconLabelAlpha=_iconLabelAlpha;
@property(nonatomic) double iconAccessoryAlpha; // @synthesize iconAccessoryAlpha=_iconAccessoryAlpha;
@property(nonatomic) double iconImageAlpha; // @synthesize iconImageAlpha=_iconImageAlpha;
@property(retain, nonatomic) _UILegibilitySettings *legibilitySettings; // @synthesize legibilitySettings=_legibilitySettings;
@property(nonatomic) __weak id <SBIconViewActionDelegate> overrideActionDelegate; // @synthesize overrideActionDelegate=_overrideActionDelegate;
@property(nonatomic) _Bool lastContextMenuInteractionFailedToLoad; // @synthesize lastContextMenuInteractionFailedToLoad=_lastContextMenuInteractionFailedToLoad;
@property(copy, nonatomic) NSString *location; // @synthesize location=_iconLocation;
@property(nonatomic) __weak id <SBIconViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool wantsFocusProxyView;
- (void)setupFocusEffectPlatterView;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (_Bool)canBecomeFirstResponder;
- (_Bool)focusProxyCanBecomeFocused;
@property(readonly, nonatomic) _Bool canBecomeFocused;
- (_Bool)_selfOrCustomViewCanBecomeFocused;
- (void)endForbiddingAccessoryWithReason:(id)arg1 animated:(_Bool)arg2;
- (void)startForbiddingAccessoryWithReason:(id)arg1 animated:(_Bool)arg2;
- (void)endForbiddingEditingModeWithReason:(id)arg1;
- (void)startForbiddingEditingModeWithReason:(id)arg1;
- (void)customImageViewControllerWantsLabelHiddenDidChange:(id)arg1;
- (void)iconImageDidUpdate:(id)arg1;
- (void)iconLaunchEnabledDidChange:(id)arg1;
- (void)iconAccessoriesDidUpdate:(id)arg1;
- (id)succinctDescriptionBuilder;
- (id)succinctDescription;
- (id)pauseReasonsDescriptions;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
@property(readonly, copy) NSString *description;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)cleanupAfterFloatyFolderCrossfade;
- (void)setFloatyFolderCrossfadeFraction:(double)arg1;
- (void)prepareToCrossfadeWithFloatyFolderView:(id)arg1 allowFolderInteraction:(_Bool)arg2;
- (id)prepareForIconDrop;
- (void)setBackgroundAndIconGridImageAlpha:(double)arg1;
- (void)setIconGridImageAlpha:(double)arg1;
@property(readonly, nonatomic, getter=isAnimatingScrolling) _Bool animatingScrolling;
- (void)scrollToGapOrTopIfFullOfPage:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)scrollToTopOfPage:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)scrollToFirstGapAnimated:(_Bool)arg1;
- (void)scrollToTopOfFirstPageAnimated:(_Bool)arg1;
- (struct CGRect)visibleImageRelativeFrameForMiniIconAtIndex:(unsigned long long)arg1;
- (struct CGRect)frameForMiniIconAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long lastVisibleMiniIconIndex;
@property(readonly, nonatomic) unsigned long long centerVisibleMiniIconIndex;
@property(readonly, nonatomic) unsigned long long firstVisibleMiniIconIndex;
@property(readonly, nonatomic) unsigned long long visibleMiniIconListIndex;
@property(readonly, nonatomic) unsigned long long visibleMiniIconCount;
@property(nonatomic, getter=isFolderIconFrozen) _Bool folderIconFrozen;
- (_Bool)_isFolderIconFreezingSupported;
@property(nonatomic) unsigned long long folderBackgroundStyle;
- (id)_folderIconImageView;
@property(readonly, copy, nonatomic) NSString *representedFolderIconLocation;
- (id)folder;
- (_Bool)isFolderIcon;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)_refreshAccessoryViewNotification:(id)arg1;
- (void)_boldTextStatusDidChange:(id)arg1;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (void)_backgroundContrastDidChange:(id)arg1;
- (void)_updateProgressAnimated:(_Bool)arg1;
@property(readonly, nonatomic) long long progressState;
@property(nonatomic) _Bool allowsProgressState;
- (void)configureMatchingIconView:(id)arg1;
- (void)_removeUnknownSubviews;
- (void)prepareForReuse;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (_Bool)_delegateTapAllowed;
- (void)_delegateTouchEnded:(_Bool)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(nonatomic) _Bool allowsBlockedForScreenTimeExpiration;
- (void)_closeBoxTapGestureChanged:(id)arg1;
- (void)_setShowingCloseBox:(_Bool)arg1;
- (_Bool)_isShowingCloseBox;
- (void)_checkAndRemoveCloseBoxAfterAnimation;
- (void)_animateCloseBoxWithAnimation:(long long)arg1 animationBlock:(CDUnknownBlockType)arg2;
- (void)_updateCloseBoxWithAnimation:(long long)arg1;
- (void)_updateCloseBoxAnimated:(_Bool)arg1;
- (void)_createCloseBoxIfNecessary;
- (long long)_closeBoxType;
- (void)setAllowsCloseBox:(_Bool)arg1 withAnimation:(long long)arg2;
@property(nonatomic) _Bool allowsCloseBox;
@property(readonly, nonatomic) _Bool canShowCloseBox;
@property(readonly, nonatomic) _Bool shouldShowCloseBox;
- (void)pointerInteraction:(id)arg1 willExitRegion:(id)arg2 animator:(id)arg3;
- (void)pointerInteraction:(id)arg1 willEnterRegion:(id)arg2 animator:(id)arg3;
@property(readonly, nonatomic) _Bool isCursorActive;
- (void)_updateCursorInteractionsEnabled;
- (id)_pointerStyleForLibraryAdditionalItemsIndicatorIcon;
- (id)_pointerStyleForWidgetIcon;
- (id)_pointerStyleForAppIcon;
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;
- (id)newComponentBackgroundViewOfType:(long long)arg1;
- (void)_setTemporarySnapshotViewForDragPreview:(id)arg1;
- (void)_updateDragInteractionLiftDelay;
@property(readonly, nonatomic) double dragInteractionLiftDelay;
- (void)_applyEditingStateAnimated:(_Bool)arg1;
@property(nonatomic, getter=isEditing) _Bool editing;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)pressesChanged:(id)arg1 withEvent:(id)arg2;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)closeBoxShouldTrack:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)consumeSinglePressUpForButtonKind:(long long)arg1;
- (void)editingModeGestureRecognizerDidFire:(id)arg1;
- (void)_handleTap;
- (void)performTap;
- (void)tapGestureDidChange:(id)arg1;
- (void)setTouchDownInIcon:(_Bool)arg1;
@property(readonly, nonatomic, getter=isTouchDownInIcon) _Bool touchDownInIcon;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)didMoveToWindow;
- (_Bool)_dragInteraction:(id)arg1 competingGestureRecognizerShouldDelayLift:(id)arg2;
- (_Bool)_dragInteraction:(id)arg1 shouldDelayCompetingGestureRecognizer:(id)arg2;
- (_Bool)_dragInteraction:(id)arg1 canExcludeCompetingGestureRecognizer:(id)arg2;
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;
- (void)dragSessionWillBegin:(id)arg1;
- (void)dragSession:(id)arg1 willEndWithOperation:(unsigned long long)arg2;
- (void)dragSession:(id)arg1 didEndWithOperation:(unsigned long long)arg2;
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 willEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (void)dragInteraction:(id)arg1 session:(id)arg2 willAddItems:(id)arg3 forInteraction:(id)arg4;
- (id)dragInteraction:(id)arg1 itemsForAddingToSession:(id)arg2 withTouchAtPoint:(struct CGPoint)arg3;
- (id)dragInteraction:(id)arg1 sessionForAddingItems:(id)arg2 withTouchAtPoint:(struct CGPoint)arg3;
- (_Bool)dragInteraction:(id)arg1 sessionIsRestrictedToDraggingApplication:(id)arg2;
- (void)_dragInteraction:(id)arg1 liftAnimationDidChangeDirection:(long long)arg2;
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (void)purgeCachedEditingViewData;
- (void)_applyIconEditingSettings;
- (unsigned long long)supportedIconGridSizeClasses;
- (id)matchingIconViewByAddingConfigurationOptions:(unsigned long long)arg1 removingConfigurationOptions:(unsigned long long)arg2;
- (id)matchingIconViewWithConfigurationOptions:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool shouldTapGestureRecognizeAlongsideDragInteractionGestures;
@property(readonly, nonatomic) _Bool canBeginDrags;
- (id)dragDelegate;
- (void)cancelDragLift;
- (void)cancelDrag;
- (void)cleanUpAfterDropAnimation;
- (_Bool)_isCursorInteractionEnabled;
- (id)dragItems;
- (id)dragPreviewForItem:(id)arg1 session:(id)arg2;
- (id)draggingLaunchURL;
- (id)draggingLaunchActions;
- (long long)draggingStartLocation;
@property(readonly, getter=isCrossfadingImageWithView) _Bool crossfadingImageWithView;
- (void)cleanupAfterCrossfade;
- (void)setCrossfadeViewFadeFraction:(double)arg1;
- (void)setIconFadeFraction:(double)arg1;
- (void)setMorphFraction:(double)arg1;
- (void)setCrossfadeCornerRadius:(double)arg1;
- (void)setCrossfadeFraction:(double)arg1;
- (void)prepareToCrossfadeImageWithView:(id)arg1 anchorPoint:(struct CGPoint)arg2 options:(unsigned long long)arg3;
- (void)prepareToCrossfadeImageWithView:(id)arg1 options:(unsigned long long)arg2;
- (void)_configureViewAsFolderIconImageView:(id)arg1;
- (struct CGPoint)_focusEffectCenter;
- (struct CGRect)_focusEffectBoundsForFocused:(_Bool)arg1 withFocusOutset:(double)arg2;
- (struct CGRect)_focusEffectBounds;
- (void)setShowsFocusEffect:(_Bool)arg1;
- (void)setShowsDropGlow:(_Bool)arg1 animator:(id)arg2;
@property(readonly, nonatomic) _Bool showsDropGlow;
- (void)iconInteractedWhenDisabled;
@property(nonatomic, getter=isOverlapping) _Bool overlapping;
@property(readonly, nonatomic) UIView *dropContainerView;
@property(readonly, nonatomic, getter=isDropping) _Bool dropping;
- (void)removeDroppingAssertion:(id)arg1;
- (id)markAsDropping;
@property(nonatomic, getter=isGrabbed) _Bool grabbed;
- (_Bool)isTimedOut;
- (_Bool)canReceiveGrabbedIcon:(id)arg1;
@property(nonatomic) _Bool refusesRecipientStatus;
- (void)removeAllIconAnimations;
@property(nonatomic) _Bool allowsEditingAnimation;
- (void)_removeJitter;
- (void)_addJitter;
- (void)_updateJitter;
- (void)_recursivelyUpdateBackdropMaskFrames;
- (void)_recursiveNotifyInteractionTintColorDidChangeForReasons:(unsigned long long)arg1;
- (id)tintColor;
- (void)_notifyObserversSizeDidChange;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setDragging:(_Bool)arg1 updateImmediately:(_Bool)arg2;
- (void)setDragging:(_Bool)arg1;
- (_Bool)isDragging;
@property(nonatomic, getter=isHighlighted) _Bool highlighted;
@property(readonly, nonatomic) _Bool allowsTapWhileEditing;
- (void)_updateBrightness;
- (double)effectiveBrightness;
- (_Bool)pointMostlyInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)_automationID;
- (void)_accessoryViewTapGestureChanged:(id)arg1;
- (id)badgeString;
- (struct CGSize)accessorySize;
- (void)updateParallaxSettings;
- (void)_destroyAccessoryView:(id)arg1;
- (void)_destroyAccessoryView;
- (void)_createAccessoryViewIfNecessary;
- (void)_updateAccessoryViewAnimated:(_Bool)arg1;
- (void)_setShowingAccessoryView:(_Bool)arg1;
- (_Bool)_isShowingAccessoryView;
@property(readonly, nonatomic) long long currentAccessoryType;
@property(nonatomic) _Bool allowsAccessoryView;
@property(readonly, nonatomic) _Bool canShowAccessoryView;
@property(readonly, nonatomic) _Bool shouldShowAccessoryView;
- (_Bool)_debugContinuity;
- (void)setCustomIconImageViewController:(id)arg1;
- (long long)_widgetBackgroundMaterialForDataSource:(id)arg1;
- (void)updateCustomIconImageViewController;
- (void)_updateConfigurationForIconImageView:(id)arg1;
- (void)iconImageViewDidEndAsynchronousImageLoadForIcon:(id)arg1;
- (void)iconImageViewWillBeginAsynchronousImageLoadForIcon:(id)arg1;
- (void)_configureIconImageView:(id)arg1;
- (void)_destroyIconImageView;
- (id)_makeIconImageView;
- (void)_insertIconImageView:(id)arg1;
- (void)_updateIconImageViewAnimated:(_Bool)arg1;
@property(readonly, nonatomic) Class expectedIconImageViewClass;
- (void)_updateLabelArea;
- (void)_updateLabelAccessoryView;
@property(readonly, nonatomic) long long currentLabelAccessoryType;
@property(readonly, nonatomic) _Bool shouldShowLabelAccessoryView;
- (void)_configureLabelAccessoryViewForType:(long long)arg1;
- (id)_legibilitySettingsWithStyle:(long long)arg1 primaryColor:(id)arg2;
- (id)_legibilitySettingsWithPrimaryColor:(id)arg1;
- (id)_legibilitySettingsWithParameters:(id)arg1;
@property(readonly, nonatomic) double baselineOffsetFromBottom;
@property(readonly, nonatomic) double lastLineBaseline;
@property(readonly, nonatomic) double firstLineBaseline;
@property(nonatomic) _Bool displaysIconStatusInLabel;
@property(nonatomic) long long labelStyle;
- (id)labelImageWithParameters:(id)arg1;
- (void)_updateLabel;
- (_Bool)_shouldShowLabel;
- (id)_labelImageParameters;
- (void)configureLabelImageParametersBuilder:(id)arg1;
- (id)displayedLabelFont;
- (_Bool)isLabelTextBold;
@property(readonly, nonatomic) UIView<SBIconLabelView> *labelView;
@property(readonly, nonatomic) struct CGSize maxLabelSize;
- (id)labelConfiguration;
@property(nonatomic) unsigned long long userVisibilityStatus;
@property(nonatomic) _Bool allIconElementsButLabelHidden;
- (id)_labelImage;
- (id)_iconImageView;
- (struct CGPoint)_centerForCloseBox;
- (struct CGPoint)_centerForAccessoryView;
- (struct CGRect)_frameForLabelAccessoryViewWithLabelFrame:(struct CGRect)arg1 labelImage:(id)arg2 labelImageParameters:(id)arg3 imageFrame:(struct CGRect)arg4;
- (struct CGRect)_frameForLabelHighlight;
- (struct CGRect)_frameForLabel;
- (struct CGRect)_frameForVisibleImage;
- (double)_labelBaselineOffsetFromImage;
- (double)_labelVerticalOffset;
- (struct CGRect)_frameForImageView;
- (void)layoutSubviews;
@property(readonly, nonatomic) double labelAccessoryTotalWidth;
@property(readonly, nonatomic) _Bool allowsLabelAccessoryView;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)_handleActivateAppExposeKeyShortcut:(id)arg1;
- (void)_handleMakeSplitRightKeyShortcut:(id)arg1;
- (void)_handleMakeSplitLeftKeyShortcut:(id)arg1;
- (void)_handleMakeFullscreenKeyShortcut:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)_fetchSupportedMedusaShortcutActionsIfAppropriate;
- (id)_medusaAppShortcutService;
- (void)_fetchApplicationShortcutItemsIfAppropriate;
@property(readonly, copy, nonatomic) NSArray *effectiveApplicationShortcutItems;
- (void)dismissContextMenuWithCompletion:(CDUnknownBlockType)arg1;
- (void)earlyTerminateContextMenuDismissAnimation;
- (_Bool)shouldActivateApplicationShortcutItem:(id)arg1 atIndex:(unsigned long long)arg2;
@property(readonly, copy, nonatomic) NSString *applicationBundleIdentifierForShortcuts;
@property(readonly, copy, nonatomic) NSURL *applicationBundleURLForShortcuts;
- (void)contextMenuInteraction:(id)arg1 willPerformPreviewActionForMenuWithConfiguration:(id)arg2 animator:(id)arg3;
- (void)_contextMenuConfigurationDidDismiss:(id)arg1;
- (void)_contextMenuConfigurationWillDismiss:(id)arg1;
- (void)_contextMenuConfigurationDidPresent:(id)arg1;
- (void)_contextMenuConfigurationWillPresent:(id)arg1 forInteraction:(id)arg2;
- (void)contextMenuInteraction:(id)arg1 willEndForConfiguration:(id)arg2 animator:(id)arg3;
- (void)contextMenuInteraction:(id)arg1 willDisplayMenuForConfiguration:(id)arg2 animator:(id)arg3;
- (id)_contextMenuInteraction:(id)arg1 previewForIconWithConfigurationOptions:(unsigned long long)arg2 highlighted:(_Bool)arg3;
- (id)contextMenuInteraction:(id)arg1 previewForDismissingMenuWithConfiguration:(id)arg2;
- (id)contextMenuInteraction:(id)arg1 previewForHighlightingMenuWithConfiguration:(id)arg2;
- (_Bool)_contextMenuInteractionShouldAllowDragAfterDismiss:(id)arg1;
- (id)_contextMenuInteraction:(id)arg1 styleForMenuWithConfiguration:(id)arg2;
- (id)_contextMenuInteraction:(id)arg1 overrideSuggestedActionsForConfiguration:(id)arg2;
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint)arg2;
- (id)shortcutsDelegate;
- (id)recentsDocumentExtensionProvider;
- (_Bool)_hasPopover;
- (id)representativeIconViewForModalInteractions;
- (id)newCaptureOnlyBackgroundView;
@property(readonly, copy, nonatomic) NSString *backgroundViewGroupNameBase;
- (id)reuseDelegate;
- (void)configurationInteractionDidEnd:(id)arg1;
- (void)configurationInteractionWillEnd:(id)arg1;
- (void)configurationInteractionDidCommit:(id)arg1;
- (void)configurationInteractionDidBegin:(id)arg1;
- (void)configurationInteractionWillBegin:(id)arg1;
- (id)referenceIconViewForConfigurationInteraction:(id)arg1;
- (id)sourceIconViewForConfigurationInteraction:(id)arg1;
- (id)homeScreenContentViewForConfigurationInteraction:(id)arg1;
- (struct CGRect)contentBoundingRectForConfigurationInteraction:(id)arg1;
- (id)containerViewControllerForConfigurationInteraction:(id)arg1;
- (void)dismissConfigurationCardImmediately;
- (void)dismissConfigurationCard;
- (void)popConfigurationCard;
- (void)dismissStackConfigurationCardImmediately;
- (void)dismissStackConfigurationCard;
- (void)popStackConfigurationCard;
- (void)presentStackConfigurationCard;
- (void)presentConfigurationCard;
@property(readonly, nonatomic, getter=isShowingStackConfigurationCard) _Bool showingStackConfigurationCard;
@property(readonly, nonatomic) _Bool supportsStackConfigurationCard;
@property(readonly, nonatomic, getter=isShowingConfigurationCard) _Bool showingConfigurationCard;
@property(readonly, nonatomic) _Bool supportsConfigurationCard;
- (id)configurationUIDelegate;
- (id)_visiblyActiveDataSource;
- (void)_handleAddWidgetRequest:(id)arg1;
- (void)_unregisterForAddWidgetRequests;
- (void)_registerForAddWidgetRequestsIfNecessary;
- (void)_invalidateHomeButtonPressConsumingAssertion;
- (void)_acquireHomeButtonPressConsumingAssertionIfNecessary;
- (void)_toggleGroupBlendingIfNecessary;
- (_Bool)_shouldEnableGroupBlending;
- (void)setDragLifted:(_Bool)arg1;
- (_Bool)isDragLifted;
- (double)_additionalLiftScale;
- (void)_applyIconContentScale:(double)arg1;
- (void)_updateIconContentScale;
- (void)_disableContentContainerView;
- (void)_enableContentContainerView;
- (void)_toggleContentContainerViewIfNecessary;
- (_Bool)_shouldHaveContentContainerView;
- (void)_setForcingIconContentScalingEnabled:(_Bool)arg1;
- (_Bool)_isForcingIconContentScalingEnabled;
@property(nonatomic, getter=isIconContentScalingEnabled) _Bool iconContentScalingEnabled;
@property(nonatomic) double iconContentScale;
@property(readonly, nonatomic) UIView *contentContainerView;
@property(nonatomic, getter=isLabelAccessoryHidden) _Bool labelAccessoryHidden;
@property(nonatomic, getter=isLabelHidden) _Bool labelHidden;
- (void)_updateLaunchDisabled;
- (void)_updateCustomIconImageViewController:(_Bool)arg1;
- (void)_updateAllComponentAlphasAnimated:(_Bool)arg1;
- (void)_updateAllComponentAlphas;
- (void)_applyOverallAlpha:(double)arg1;
- (double)effectiveOverallAlpha;
- (void)_applyIconLabelAlpha:(double)arg1;
- (_Bool)_hideIconLabelForContextMenu;
- (_Bool)_hideIconLabelForCustomIconImageViewController;
- (double)effectiveIconLabelAlpha;
- (void)_applyIconAccessoryAlpha:(double)arg1;
- (double)effectiveIconAccessoryAlpha;
- (void)_applyIconImageAlpha:(double)arg1;
@property(readonly, nonatomic) double effectiveIconImageAlpha;
- (void)setIconImageAndAccessoryAlpha:(double)arg1;
@property(readonly, nonatomic) struct CGSize iconImageVisibleSize;
@property(readonly, nonatomic) struct CGPoint iconImageCenter;
@property(readonly, nonatomic) struct CGRect iconImageFrame;
- (id)currentImageView;
@property(readonly, nonatomic) UIView *iconImageSnapshotView;
@property(readonly, nonatomic) UIImage *iconImageSnapshot;
@property(readonly, nonatomic) long long continuityBadgeType;
- (void)performAfterContextMenusDismissUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic, getter=isShowingContextMenu) _Bool showingContextMenu;
- (_Bool)isContextMenuInteractionActive;
- (void)setContinuityInfo:(id)arg1 animated:(_Bool)arg2;
@property(nonatomic) unsigned long long imageLoadingBehavior;
@property(nonatomic) unsigned long long configurationOptions;
- (id)behaviorDelegate;
- (id)actionDelegate;
- (id)effectiveListLayoutProvider;
- (void)setLocation:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) SBIcon *icon;
- (double)_continuousCornerRadius;
@property(nonatomic) _Bool showsSquareCorners;
- (void)setIcon:(id)arg1 animated:(_Bool)arg2;
- (void)setPaused:(_Bool)arg1 forReason:(unsigned long long)arg2;
- (_Bool)disallowCursorInteraction;
- (void)setDisallowCursorInteraction:(_Bool)arg1;
@property(nonatomic) _Bool startsDragMoreQuickly;
- (void)setUserInteractionEnabled:(_Bool)arg1;
- (void)addGesturesAndInteractionsIfNecessary;
- (void)_updateCustomIconImageViewControllerHitTesting;
@property(nonatomic, getter=isCustomIconImageViewHitTestingDisabled) _Bool customIconImageViewHitTestingDisabled;
@property(nonatomic) _Bool allowsPassthroughHitTesting;
@property(nonatomic) _Bool allowsLabelArea;
- (void)configureForLabelAllowed:(_Bool)arg1;
- (void)_updateFrameToIconViewSize;
- (void)setBoundsSizeFromIconImageSize:(struct CGSize)arg1;
- (struct CGSize)iconViewSizeForIconImageSize:(struct CGSize)arg1;
@property(readonly, nonatomic) struct CGSize iconViewSize;
- (double)iconImageCornerRadius;
@property(readonly, nonatomic) struct CGSize iconImageSize;
@property(nonatomic) struct SBIconImageInfo iconImageInfo;
- (void)_updateAfterManualIconImageInfoChange;
- (void)clearIconImageInfo;
- (id)badgeParallaxSettings;
- (id)contentSizeCategory;
@property(readonly, nonatomic) id <SBIconListLayout> listLayout;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithConfigurationOptions:(unsigned long long)arg1 listLayoutProvider:(id)arg2;
- (id)initWithConfigurationOptions:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy, nonatomic) UIFocusEffect *focusEffect;
@property(readonly, copy, nonatomic) NSString *focusGroupIdentifier;
@property(readonly, nonatomic) long long focusGroupPriority;
@property(readonly, nonatomic) id <UIFocusItemContainer> focusItemContainer;
@property(readonly, nonatomic) struct CGRect frame;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isTransparentFocusItem;
@property(readonly, nonatomic) __weak id <UIFocusEnvironment> parentFocusEnvironment;
@property(readonly, copy, nonatomic) NSArray *preferredFocusEnvironments;
@property(readonly, nonatomic) __weak UIView *preferredFocusedView;
@property(readonly) Class superclass;

@end

