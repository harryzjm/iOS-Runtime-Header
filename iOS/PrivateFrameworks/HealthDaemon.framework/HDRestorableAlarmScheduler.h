//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDDatabaseProtectedDataObserver-Protocol.h>
#import <HealthDaemon/HDDiagnosticObject-Protocol.h>
#import <HealthDaemon/HDHealthDaemonReadyObserver-Protocol.h>

@class HDProfile, HDXPCAlarm, NSDate, NSMapTable, NSString;
@protocol OS_dispatch_queue;

@interface HDRestorableAlarmScheduler : NSObject <HDDiagnosticObject, HDDatabaseProtectedDataObserver, HDHealthDaemonReadyObserver>
{
    HDProfile *_profile;
    NSObject<OS_dispatch_queue> *_queue;
    int _significantTimeChangeNotificationToken;
    NSMapTable *_clients;
    _Bool _hasInitializedSystemScheduler;
    _Bool _maintenanceOperationQueued;
    _Bool _needsMaintenanceNotifyAndSchedule;
    _Bool _needsLockStateUpdates;
    _Bool _isDeviceOnWrist;
    _Bool _isRegisteredForOnWristUpdates;
    _Bool _isRegisteredForLockStateUpdates;
    HDXPCAlarm *_systemScheduler;
    NSDate *__unitTest_currentDate;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isRegisteredForLockStateUpdates; // @synthesize isRegisteredForLockStateUpdates=_isRegisteredForLockStateUpdates;
@property(readonly, nonatomic) _Bool isRegisteredForOnWristUpdates; // @synthesize isRegisteredForOnWristUpdates=_isRegisteredForOnWristUpdates;
@property(copy, nonatomic) NSDate *_unitTest_currentDate; // @synthesize _unitTest_currentDate=__unitTest_currentDate;
@property(readonly, nonatomic) HDXPCAlarm *systemScheduler; // @synthesize systemScheduler=_systemScheduler;
- (id)diagnosticDescription;
@property(readonly, copy) NSString *description;
- (_Bool)_enumerateAllAlarmEventsWithError:(id *)arg1 enumerationHandler:(CDUnknownBlockType)arg2;
- (void)checkForDueEventsImmediatelyWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)_performWriteTransactionAndFireEventsWithError:(id *)arg1 block:(CDUnknownBlockType)arg2;
- (id)scheduledEventsForClientIdentifier:(id)arg1 error:(id *)arg2;
- (_Bool)replaceAllScheduledEventsWithClientIdentifier:(id)arg1 newEvents:(id)arg2 error:(id *)arg3;
- (_Bool)removeAllEventsWithClientIdentifier:(id)arg1 error:(id *)arg2;
- (_Bool)removeEvents:(id)arg1 error:(id *)arg2;
- (_Bool)scheduleEvents:(id)arg1 error:(id *)arg2;
- (void)removeAlarm:(id)arg1;
- (void)addAlarm:(id)arg1;
- (void)_queue_registerForWristStateUpdates:(_Bool)arg1;
- (_Bool)_queue_notifyClientsOfDueEventsAndScheduleNextFireDateWithError:(id *)arg1;
- (void)_queue_processDueEventsWithCompletion:(CDUnknownBlockType)arg1;
- (void)_queue_fetchCurrentWristStateWithCompletion:(CDUnknownBlockType)arg1;
- (id)_currentDate;
- (void)_queue_beginReceivingSystemEventsIfNecessary;
- (void)_queue_runMaintenanceNotifyAndScheduleWithReason:(id)arg1;
- (void)_queue_enqueueMaintenanceNotifyAndScheduleWithReason:(id)arg1;
- (void)_queue_updateProtectedDataObserverStateIfRequired;
- (void)_queue_registerForLockStateUpdates:(_Bool)arg1;
- (void)_queue_setNeedsMaintenanceNotifyAndSchedule:(_Bool)arg1;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(_Bool)arg2;
- (void)_queue_significantTimeChangeDidOccur;
- (void)_stopObservingSignificantTimeChangeNotification;
- (void)_startObservingSignificantTimeChangeNotification;
- (void)daemonReady:(id)arg1;
- (void)dealloc;
- (id)initWithProfile:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

