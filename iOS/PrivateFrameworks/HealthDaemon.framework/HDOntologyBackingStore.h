//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDAssertionObserver-Protocol.h>
#import <HealthDaemon/HDContentProtectionObserver-Protocol.h>
#import <HealthDaemon/HDDatabaseProtectedDataObserver-Protocol.h>
#import <HealthDaemon/HDHealthDaemonReadyObserver-Protocol.h>
#import <HealthDaemon/HDHealthRecordsAccountExistenceObserver-Protocol.h>
#import <HealthDaemon/HDOntologyAssetAvailabilityObserver-Protocol.h>
#import <HealthDaemon/HDProfileManagerObserver-Protocol.h>
#import <HealthDaemon/HDProtectedResourceStore-Protocol.h>
#import <HealthDaemon/HDProtectedResourceStoreProvider-Protocol.h>

@class HDAssertionManager, HDDaemon, HDSimpleGraphDatabase, HKObserverSet, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface HDOntologyBackingStore : NSObject <HDContentProtectionObserver, HDHealthDaemonReadyObserver, HDHealthRecordsAccountExistenceObserver, HDOntologyAssetAvailabilityObserver, HDProtectedResourceStoreProvider, HDProtectedResourceStore, HDAssertionObserver, HDProfileManagerObserver, HDDatabaseProtectedDataObserver>
{
    _Atomic _Bool _invalidated;
    NSURL *_ontologyURL;
    NSString *_threadLocalTransactionKey;
    HKObserverSet *_observers;
    NSObject<OS_dispatch_queue> *_observationQueue;
    _Atomic _Bool _isDatabaseOpen;
    _Atomic _Bool _isObservingAssetAvailability;
    struct os_unfair_lock_s _availabilityLock;
    _Bool _available;
    struct os_unfair_lock_s _databaseLock;
    HDSimpleGraphDatabase *_graphDatabase;
    NSObject<OS_dispatch_queue> *_protectedResourceAssertionQueue;
    HDAssertionManager *_protectedResourceAssertionManager;
    HDDaemon *_daemon;
}

+ (id)unitTesting_ontologyBackingStoreForDaemon:(id)arg1 baseURL:(id)arg2;
+ (id)unitTesting_ontologyURLWithBaseURL:(id)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) __weak HDDaemon *daemon; // @synthesize daemon=_daemon;
- (void)assetProvider:(id)arg1 didChangeAvailability:(long long)arg2;
- (void)profileListDidChange;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(_Bool)arg2;
- (void)accountExistenceNotifier:(id)arg1 didChangeHealthRecordAccountExistence:(_Bool)arg2;
- (void)contentProtectionStateChanged:(long long)arg1 previousState:(long long)arg2;
- (void)assertionManager:(id)arg1 assertionInvalidated:(id)arg2;
- (void)checkInProtectedResource:(id)arg1;
- (id)checkOutProtectedResourceWithAssertion:(id)arg1 transaction:(id)arg2 error:(id *)arg3;
- (id)requestProtectedResourceAccessAssertionForOwnerIdentifier:(id)arg1 error:(id *)arg2;
@property(readonly, copy, nonatomic) NSString *protectedResourceIdentifier;
- (id)protectedResourceStoreForProfile:(id)arg1;
- (void)daemonReady:(id)arg1;
- (_Bool)forceImportOntologyAssetWithURL:(id)arg1 error:(id *)arg2;
- (void)obliterateWithReason:(id)arg1;
- (void)invalidate;
- (void)close;
@property(readonly, nonatomic, getter=isAvailable) _Bool available;
- (void)registerOntologyDatabase:(id)arg1;
- (_Bool)performOntologyTransactionForWrite:(_Bool)arg1 profile:(id)arg2 databaseTransaction:(id)arg3 error:(id *)arg4 transactionHandler:(CDUnknownBlockType)arg5;
- (id)_initWithDaemon:(id)arg1 baseURL:(id)arg2;
- (id)initWithDaemon:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

