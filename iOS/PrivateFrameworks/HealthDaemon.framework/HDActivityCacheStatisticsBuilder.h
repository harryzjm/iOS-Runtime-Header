//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class HKQuantity, NSNumber, NSString;
@protocol HDActivityCacheStatisticsBuilderSourceOrderDelegate;

@interface HDActivityCacheStatisticsBuilder : NSObject
{
    struct vector<HDActivityCacheStatisticsBuilderWorkoutSample, std::allocator<HDActivityCacheStatisticsBuilderWorkoutSample>> _workouts;
    struct vector<HDActivityCacheStatisticsBuilderStandHourSample, std::allocator<HDActivityCacheStatisticsBuilderStandHourSample>> _standHourSamples;
    vector_0fd01da3 _activationLogSamples;
    HKQuantity *_lastActiveEnergyValue;
    NSNumber *_lastMoveMinuteValue;
    HKQuantity *_lastDistanceWalkingValue;
    NSNumber *_lastFlightsClimbedValue;
    NSNumber *_lastStepCountValue;
    NSNumber *_lastPushCountValue;
    NSNumber *_lastStandHourValue;
    NSNumber *_lastExerciseMinuteValue;
    double _deepBreathingDurationValue;
    vector_0fd01da3 _activeSourcesList;
    struct map<_HKDataTypeCode, std::map<long long, _HDActivityCacheSourceTotal>, std::less<_HKDataTypeCode>, std::allocator<std::pair<const _HKDataTypeCode, std::map<long long, _HDActivityCacheSourceTotal>>>> _sourceTotalsByIntervalIndexByTypeCode;
    double _builderStartTime;
    double _builderEndTime;
    NSString *_loggingName;
    double _intervalDuration;
    id <HDActivityCacheStatisticsBuilderSourceOrderDelegate> _sourceOrderDelegate;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) __weak id <HDActivityCacheStatisticsBuilderSourceOrderDelegate> sourceOrderDelegate; // @synthesize sourceOrderDelegate=_sourceOrderDelegate;
@property(nonatomic) double intervalDuration; // @synthesize intervalDuration=_intervalDuration;
- (id)workoutSamplesWithSourceManager:(id)arg1;
- (id)createStandStatisticsWithCalendar:(id)arg1;
- (id)createExerciseStatisticsWithIntervalComponents:(id)arg1 calendar:(id)arg2;
- (id)createMoveMinuteStatisticsWithIntervalComponents:(id)arg1 calendar:(id)arg2;
- (id)createMoveStatisticsWithIntervalComponents:(id)arg1 calendar:(id)arg2;
- (id)createStatisticsCollectionWithType:(id)arg1 intervalComponents:(id)arg2 calendar:(id)arg3;
- (void)addDeepBreathingSessionDuration:(double)arg1;
- (void)addWorkoutSample:(struct HDActivityCacheStatisticsBuilderSample)arg1 typeCode:(long long)arg2;
- (void)addDeviceSamples:(const void *)arg1 typeCode:(long long)arg2;
- (void)addDeviceSample:(struct HDActivityCacheStatisticsBuilderSample)arg1 typeCode:(long long)arg2;
- (void)addActivationLogSamples:(const void *)arg1;
- (void)addStandHourSamples:(const void *)arg1;
- (void)addWorkouts:(const void *)arg1;
- (double)deepBreathingDurationValue;
- (long long)exerciseMinuteValue;
- (long long)standHourValue;
- (long long)pushCountValue;
- (long long)stepCountValue;
- (long long)flightsClimbedValue;
- (id)distanceWalkingValue;
- (long long)moveMinuteValue;
- (id)activeEnergyValue;
- (id)init;
- (id)initWithDateInterval:(id)arg1 loggingName:(id)arg2;

@end

