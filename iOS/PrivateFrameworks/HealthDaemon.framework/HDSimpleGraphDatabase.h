//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class HDSQLiteDatabase, NSURL;

@interface HDSimpleGraphDatabase : NSObject
{
    HDSQLiteDatabase *_database;
    NSURL *_URL;
    CDUnknownBlockType _unitTesting_didCreateDatabaseConnectionHandler;
}

+ (CDUnknownBlockType)unitTesting_didInitGraphDatabaseHandler;
+ (void)setUnitTesting_didInitGraphDatabaseHandler:(CDUnknownBlockType)arg1;
+ (id)graphDatabaseWithURL:(id)arg1 error:(id *)arg2;
- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType unitTesting_didCreateDatabaseConnectionHandler; // @synthesize unitTesting_didCreateDatabaseConnectionHandler=_unitTesting_didCreateDatabaseConnectionHandler;
@property(readonly, copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (_Bool)unitTesting_removeRelationshipWithID:(long long)arg1 subjectNodeID:(long long)arg2 objectNodeID:(long long)arg3 error:(id *)arg4;
- (_Bool)unitTesting_addRelationshipTypeWithName:(id)arg1 nameID:(long long)arg2 error:(id *)arg3;
- (id)unitTesting_countOfNodesWithRelationshipID:(long long)arg1 error:(id *)arg2;
- (id)unitTesting_countOfNodesWithError:(id *)arg1;
@property(retain, nonatomic) HDSQLiteDatabase *unitTesting_underlyingDatabase;
- (_Bool)foreignKeysEnable:(_Bool)arg1 error:(id *)arg2;
- (_Bool)insertRawRelationshipWithRowID:(long long)arg1 subjectID:(long long)arg2 nameID:(long long)arg3 objectID:(long long)arg4 error:(id *)arg5;
- (_Bool)insertRawAttributeWithRowID:(long long)arg1 nodeID:(long long)arg2 keyID:(long long)arg3 value:(id)arg4 valueTypeID:(long long)arg5 error:(id *)arg6;
- (_Bool)insertRawOntologyValueWithRowID:(long long)arg1 value:(id)arg2 table:(id)arg3 error:(id *)arg4;
- (id)metadataValueForKey:(id)arg1 error:(id *)arg2;
- (_Bool)setMetadataValue:(id)arg1 forKey:(id)arg2 error:(id *)arg3;
- (_Bool)enumerateAttributesForNodeWithID:(long long)arg1 error:(id *)arg2 enumerationHandler:(CDUnknownBlockType)arg3;
- (_Bool)addAttributeWithID:(long long)arg1 value:(id)arg2 nodeID:(long long)arg3 error:(id *)arg4;
- (_Bool)enumerateRelationshipsForNodeWithID:(long long)arg1 fetchType:(long long)arg2 error:(id *)arg3 enumerationHandler:(CDUnknownBlockType)arg4;
- (_Bool)enumerateRelationshipsForPredicate:(id)arg1 error:(id *)arg2 enumerationHandler:(CDUnknownBlockType)arg3;
- (_Bool)addRelationshipWithID:(long long)arg1 subjectNodeID:(long long)arg2 objectNodeID:(long long)arg3 error:(id *)arg4;
- (_Bool)deleteNodesWithIDs:(id)arg1 error:(id *)arg2;
- (_Bool)deleteNodeWithID:(long long)arg1 error:(id *)arg2;
- (_Bool)enumerateNodesForPredicate:(id)arg1 error:(id *)arg2 enumerationHandler:(CDUnknownBlockType)arg3;
- (_Bool)enumerateNodesContainingAttributeWithID:(long long)arg1 value:(id)arg2 error:(id *)arg3 enumerationHandler:(CDUnknownBlockType)arg4;
- (_Bool)enumerateNodesWithIDs:(id)arg1 error:(id *)arg2 enumerationHandler:(CDUnknownBlockType)arg3;
- (id)nodeForID:(long long)arg1 error:(id *)arg2;
- (id)firstNodeWithName:(id)arg1 error:(id *)arg2;
- (id)insertNodeWithName:(id)arg1 error:(id *)arg2;
- (void)onCommit:(CDUnknownBlockType)arg1 orRollback:(CDUnknownBlockType)arg2;
- (_Bool)performTransactionWithError:(id *)arg1 write:(_Bool)arg2 block:(CDUnknownBlockType)arg3;
- (_Bool)deleteWithError:(id *)arg1;
- (void)close;
- (id)schemaVersionWithError:(id *)arg1;
- (id)description;
- (void)dealloc;
@property(readonly, nonatomic, getter=isOpen) _Bool open;
- (id)init;

@end

