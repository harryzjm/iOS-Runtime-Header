//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface HDEurotasData
{
    _Bool _hasHeartRate;
    _Bool _hasActiveEnergy;
    _Bool _hasTotalEnergy;
    _Bool _hasAverageHeartRate;
    unsigned short _heartRate;
    unsigned short _activeEnergy;
    unsigned short _totalEnergy;
    unsigned short _averageHeartRate;
}

+ (id)uuid;
@property(readonly, nonatomic) unsigned short averageHeartRate; // @synthesize averageHeartRate=_averageHeartRate;
@property(readonly, nonatomic) _Bool hasAverageHeartRate; // @synthesize hasAverageHeartRate=_hasAverageHeartRate;
@property(readonly, nonatomic) unsigned short totalEnergy; // @synthesize totalEnergy=_totalEnergy;
@property(readonly, nonatomic) _Bool hasTotalEnergy; // @synthesize hasTotalEnergy=_hasTotalEnergy;
@property(readonly, nonatomic) unsigned short activeEnergy; // @synthesize activeEnergy=_activeEnergy;
@property(readonly, nonatomic) _Bool hasActiveEnergy; // @synthesize hasActiveEnergy=_hasActiveEnergy;
@property(readonly, nonatomic) unsigned short heartRate; // @synthesize heartRate=_heartRate;
@property(readonly, nonatomic) _Bool hasHeartRate; // @synthesize hasHeartRate=_hasHeartRate;
- (_Bool)_appendUInt16Value:(unsigned short)arg1 type:(unsigned char)arg2 toData:(char **)arg3 before:(const char *)arg4;
- (void)addAverageHeartRate:(unsigned short)arg1;
- (void)addTotalEnergy:(unsigned short)arg1;
- (void)addActiveEnergy:(unsigned short)arg1;
- (void)addHeartRate:(unsigned short)arg1;
- (id)getBinaryValueWithError:(id *)arg1;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)initForWriting;

@end

