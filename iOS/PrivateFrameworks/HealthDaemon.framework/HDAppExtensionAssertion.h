//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class HDProfile, NSMutableDictionary, NSString;
@protocol HDAppExtensionAssertionDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface HDAppExtensionAssertion : NSObject
{
    _Bool _unitTest_timersWithShortTimeout;
    _Bool _pendingAssertion;
    _Bool _invalidated;
    struct os_unfair_lock_s _lock;
    id <HDAppExtensionAssertionDelegate> _delegate;
    NSString *_bundleIdentifier;
    CDUnknownBlockType _unitTest_errorCountDidIncrement;
    CDUnknownBlockType _unitTest_extensionWillTimeout;
    HDProfile *_profile;
    NSMutableDictionary *_pendingAssertionCompletions;
    NSMutableDictionary *_pendingDataTypeCodesToAnchors;
    NSObject<OS_dispatch_source> *_timeoutTimer;
    NSObject<OS_dispatch_source> *_graceTimer;
    NSObject<OS_dispatch_queue> *_queue;
    double _lastAssertionAttempt;
    long long _connectionErrorCount;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool unitTest_timersWithShortTimeout; // @synthesize unitTest_timersWithShortTimeout=_unitTest_timersWithShortTimeout;
@property(copy, nonatomic) CDUnknownBlockType unitTest_extensionWillTimeout; // @synthesize unitTest_extensionWillTimeout=_unitTest_extensionWillTimeout;
@property(copy, nonatomic) CDUnknownBlockType unitTest_errorCountDidIncrement; // @synthesize unitTest_errorCountDidIncrement=_unitTest_errorCountDidIncrement;
@property(readonly, copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(nonatomic) __weak id <HDAppExtensionAssertionDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)_unitTest_invalidated;
- (double)_unitTest_lastAssertionAttempt;
- (long long)_unitTest_connectionErrorCount;
- (id)_unitTest_pendingDataTypeCodesToAnchors;
- (unsigned long long)_unitTest_pendingAssertionCompletionsCount;
@property(readonly, nonatomic) double nextAssertionAttempt;
@property(readonly, nonatomic) _Bool shouldAssert;
- (void)invalidateForDataType:(long long)arg1 anchor:(id)arg2;
- (void)assertAndUpdateWithCompletion:(CDUnknownBlockType)arg1;
- (void)extendForDataType:(long long)arg1 anchor:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)initWithBundleIdentifier:(id)arg1 profile:(id)arg2 queue:(id)arg3;
- (id)init;

@end

