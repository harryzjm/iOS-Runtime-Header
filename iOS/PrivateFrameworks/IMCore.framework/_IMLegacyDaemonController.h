//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IMDaemonListener, IMDaemonQueryController, IMLocalObject, IMRemoteObject, NSArray, NSLock, NSMutableArray, NSMutableDictionary, NSProtocolChecker, NSRecursiveLock, NSString;
@protocol IMDaemonProtocol, OS_dispatch_queue;

@interface _IMLegacyDaemonController : NSObject
{
    _Bool _requestingConnection;
    _Bool __blocksConnectionAtResume;
    _Bool _hasCheckedForDaemon;
    _Bool _preventReconnect;
    _Bool _inBlockingConnect;
    _Bool _acquiringDaemonConnection;
    _Bool _hasBeenSuspended;
    _Bool __autoReconnect;
    unsigned int _gMyFZListenerCapabilities;
    unsigned int _cachedCapabilities;
    unsigned int _lastUpdatedCapabilities;
    unsigned int __capabilities;
    IMDaemonListener *_daemonListener;
    NSString *_listenerID;
    id <IMDaemonProtocol> _replyingRemoteDaemon;
    id <IMDaemonProtocol> _synchronousReplyingRemoteDaemon;
    IMDaemonQueryController *_queryController;
    NSArray *__servicesToAllow;
    NSArray *__servicesToDeny;
    id _delegate;
    IMRemoteObject<IMDaemonProtocol> *_remoteObject;
    NSMutableDictionary *_listenerMap;
    IMLocalObject *_localObject;
    NSMutableArray *_services;
    NSProtocolChecker *_protocol;
    NSObject<OS_dispatch_queue> *_listenerLockQueue;
    struct os_unfair_recursive_lock_s _remoteDaemonLock;
    NSObject<OS_dispatch_queue> *_localObjectLockQueue;
    NSObject<OS_dispatch_queue> *_daemonConnectionQueue;
    NSRecursiveLock *_connectionLock;
    struct __CFRunLoopSource *_runLoopSource;
    NSLock *_blockingLock;
    NSObject<OS_dispatch_queue> *_remoteMessageQueue;
}

+ (void)_setApplicationWillTerminate;
+ (void)_blockUntilSendQueueIsEmpty;
+ (_Bool)_applicationWillTerminate;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *remoteMessageQueue; // @synthesize remoteMessageQueue=_remoteMessageQueue;
@property(setter=_setAutoReconnect:) _Bool _autoReconnect; // @synthesize _autoReconnect=__autoReconnect;
@property(setter=__setCapabilities:) unsigned int _capabilities; // @synthesize _capabilities=__capabilities;
@property(nonatomic) unsigned int lastUpdatedCapabilities; // @synthesize lastUpdatedCapabilities=_lastUpdatedCapabilities;
@property(nonatomic) unsigned int cachedCapabilities; // @synthesize cachedCapabilities=_cachedCapabilities;
@property(nonatomic) unsigned int gMyFZListenerCapabilities; // @synthesize gMyFZListenerCapabilities=_gMyFZListenerCapabilities;
@property(nonatomic) _Bool hasBeenSuspended; // @synthesize hasBeenSuspended=_hasBeenSuspended;
@property(nonatomic) _Bool acquiringDaemonConnection; // @synthesize acquiringDaemonConnection=_acquiringDaemonConnection;
@property(nonatomic) _Bool inBlockingConnect; // @synthesize inBlockingConnect=_inBlockingConnect;
@property(nonatomic) _Bool preventReconnect; // @synthesize preventReconnect=_preventReconnect;
@property(nonatomic) _Bool hasCheckedForDaemon; // @synthesize hasCheckedForDaemon=_hasCheckedForDaemon;
@property(retain, nonatomic) NSLock *blockingLock; // @synthesize blockingLock=_blockingLock;
@property(nonatomic) struct __CFRunLoopSource *runLoopSource; // @synthesize runLoopSource=_runLoopSource;
@property(retain, nonatomic) NSRecursiveLock *connectionLock; // @synthesize connectionLock=_connectionLock;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *daemonConnectionQueue; // @synthesize daemonConnectionQueue=_daemonConnectionQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *localObjectLockQueue; // @synthesize localObjectLockQueue=_localObjectLockQueue;
@property(nonatomic) struct os_unfair_recursive_lock_s remoteDaemonLock; // @synthesize remoteDaemonLock=_remoteDaemonLock;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *listenerLockQueue; // @synthesize listenerLockQueue=_listenerLockQueue;
@property(retain, nonatomic) NSProtocolChecker *protocol; // @synthesize protocol=_protocol;
@property(retain, nonatomic) NSMutableArray *services; // @synthesize services=_services;
@property(retain, nonatomic) IMLocalObject *localObject; // @synthesize localObject=_localObject;
@property(retain, nonatomic) NSMutableDictionary *listenerMap; // @synthesize listenerMap=_listenerMap;
@property(retain, nonatomic) IMRemoteObject<IMDaemonProtocol> *remoteObject; // @synthesize remoteObject=_remoteObject;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
@property(nonatomic, setter=_setBlocksConnectionAtResume:) _Bool _blocksConnectionAtResume; // @synthesize _blocksConnectionAtResume=__blocksConnectionAtResume;
@property(retain, setter=_setServicesToDeny:) NSArray *_servicesToDeny; // @synthesize _servicesToDeny=__servicesToDeny;
@property(retain, setter=_setServicesToAllow:) NSArray *_servicesToAllow; // @synthesize _servicesToAllow=__servicesToAllow;
@property(readonly, nonatomic) IMDaemonQueryController *queryController; // @synthesize queryController=_queryController;
@property(readonly, nonatomic) id <IMDaemonProtocol> synchronousReplyingRemoteDaemon; // @synthesize synchronousReplyingRemoteDaemon=_synchronousReplyingRemoteDaemon;
@property(readonly, nonatomic) id <IMDaemonProtocol> replyingRemoteDaemon; // @synthesize replyingRemoteDaemon=_replyingRemoteDaemon;
@property(readonly, nonatomic, getter=isRequestingConnection) _Bool requestingConnection; // @synthesize requestingConnection=_requestingConnection;
@property(retain, nonatomic, setter=_setListenerID:) NSString *listenerID; // @synthesize listenerID=_listenerID;
@property(retain, nonatomic) IMDaemonListener *listener; // @synthesize listener=_daemonListener;
- (void)systemApplicationDidResume;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidEnterBackground;
- (void)systemApplicationDidSuspend;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)consumeQueryContext:(id)arg1;
- (void)unsetQueryContext:(id)arg1;
- (void)setQueryContext:(id)arg1;
- (void)sendQueryWithReply:(_Bool)arg1 query:(CDUnknownBlockType)arg2;
- (void)setDaemonLogsOutWithoutStatusListeners:(_Bool)arg1;
- (void)setDaemonTerminatesWithoutListeners:(_Bool)arg1;
- (void)listener:(id)arg1 setValue:(id)arg2 ofPersistentProperty:(id)arg3;
- (void)listener:(id)arg1 setValue:(id)arg2 ofProperty:(id)arg3;
- (void)remoteObjectDiedNotification:(id)arg1;
- (void)localObjectDiedNotification:(id)arg1;
- (void)_setCapabilities:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int capabilities;
- (void)listener:(id)arg1 setListenerCapabilities:(unsigned int)arg2;
- (void)_remoteObjectCleanup;
- (void)_localObjectCleanup;
- (_Bool)localObjectExists;
- (_Bool)remoteObjectExists;
- (_Bool)__isRemoteObjectValid;
- (_Bool)__isLocalObjectValidOnQueue:(id)arg1;
- (void)_noteSetupComplete;
- (void)blockUntilConnected;
- (double)_connectionTimeout;
@property(readonly, nonatomic, getter=isConnected) _Bool connected;
@property(readonly, nonatomic) _Bool isConnecting;
- (_Bool)_acquiringDaemonConnection;
- (id)_remoteObject;
- (unsigned long long)processCapabilities;
- (_Bool)setCapabilities:(unsigned int)arg1 forListenerID:(id)arg2;
- (unsigned int)capabilitiesForListenerID:(id)arg1;
- (_Bool)removeListenerID:(id)arg1;
- (_Bool)hasListenerForID:(id)arg1;
- (_Bool)addListenerID:(id)arg1 capabilities:(unsigned int)arg2;
- (void)_listenerSetUpdated;
@property(readonly, nonatomic) id <IMDaemonProtocol> synchronousRemoteDaemon;
@property(readonly, nonatomic) id <IMDaemonProtocol> remoteDaemon;
- (_Bool)connectToDaemonWithLaunch:(_Bool)arg1 capabilities:(unsigned int)arg2 blockUntilConnected:(_Bool)arg3;
- (_Bool)connectToDaemon;
- (_Bool)connectToDaemonWithLaunch:(_Bool)arg1;
- (void)_connectToDaemonWithLaunch:(_Bool)arg1 capabilities:(unsigned int)arg2;
- (void)disconnectFromDaemon;
- (void)_disconnectFromDaemonWithForce:(_Bool)arg1;
- (void)disconnectFromDaemonWithForce:(_Bool)arg1;
- (void)killDaemon;
- (void)_blockUntilSendQueueIsEmpty;
- (_Bool)_makeConnectionWithLaunch:(_Bool)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_handleDaemonException:(id)arg1;
- (void)_agentDidLaunchNotification:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

