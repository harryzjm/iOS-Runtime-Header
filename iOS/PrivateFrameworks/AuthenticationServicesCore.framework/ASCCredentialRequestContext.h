//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AuthenticationServicesCore/NSSecureCoding-Protocol.h>

@class AKAuthorizationRequest, ASCPublicKeyCredentialCreationOptions, NSArray, NSData, NSNumber, NSString;

@interface ASCCredentialRequestContext : NSObject <NSSecureCoding>
{
    _Bool _shouldPlatformCredentialsRequireUserVerification;
    _Bool _isClientLinkedOnOrAfterIOS15Aligned;
    unsigned long long _requestTypes;
    NSString *_relyingPartyIdentifier;
    NSData *_platformCredentialChallenge;
    NSData *_securityKeyCredentialChallenge;
    ASCPublicKeyCredentialCreationOptions *_platformKeyCredentialCreationOptions;
    ASCPublicKeyCredentialCreationOptions *_securityKeyCredentialCreationOptions;
    NSArray *_platformAllowedCredentials;
    NSArray *_securityKeyAllowedCredentials;
    AKAuthorizationRequest *_appleIDAuthorizationRequest;
    NSString *_proxiedAppName;
    NSString *_proxiedAppIdentifier;
    NSString *_proxiedBundleIdentifier;
    NSString *_proxiedTeamIdentifier;
    NSArray *_proxiedAssociatedDomains;
    NSData *_proxiedIconData;
    NSNumber *_proxiedIconScale;
    NSString *_proxiedOriginDeviceName;
}

+ (_Bool)supportsSecureCoding;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isClientLinkedOnOrAfterIOS15Aligned; // @synthesize isClientLinkedOnOrAfterIOS15Aligned=_isClientLinkedOnOrAfterIOS15Aligned;
@property(copy, nonatomic) NSString *proxiedOriginDeviceName; // @synthesize proxiedOriginDeviceName=_proxiedOriginDeviceName;
@property(copy, nonatomic) NSNumber *proxiedIconScale; // @synthesize proxiedIconScale=_proxiedIconScale;
@property(copy, nonatomic) NSData *proxiedIconData; // @synthesize proxiedIconData=_proxiedIconData;
@property(copy, nonatomic) NSArray *proxiedAssociatedDomains; // @synthesize proxiedAssociatedDomains=_proxiedAssociatedDomains;
@property(copy, nonatomic) NSString *proxiedTeamIdentifier; // @synthesize proxiedTeamIdentifier=_proxiedTeamIdentifier;
@property(copy, nonatomic) NSString *proxiedBundleIdentifier; // @synthesize proxiedBundleIdentifier=_proxiedBundleIdentifier;
@property(copy, nonatomic) NSString *proxiedAppIdentifier; // @synthesize proxiedAppIdentifier=_proxiedAppIdentifier;
@property(copy, nonatomic) NSString *proxiedAppName; // @synthesize proxiedAppName=_proxiedAppName;
@property(retain, nonatomic) AKAuthorizationRequest *appleIDAuthorizationRequest; // @synthesize appleIDAuthorizationRequest=_appleIDAuthorizationRequest;
@property(retain, nonatomic) NSArray *securityKeyAllowedCredentials; // @synthesize securityKeyAllowedCredentials=_securityKeyAllowedCredentials;
@property(retain, nonatomic) NSArray *platformAllowedCredentials; // @synthesize platformAllowedCredentials=_platformAllowedCredentials;
@property(nonatomic) _Bool shouldPlatformCredentialsRequireUserVerification; // @synthesize shouldPlatformCredentialsRequireUserVerification=_shouldPlatformCredentialsRequireUserVerification;
@property(retain, nonatomic) ASCPublicKeyCredentialCreationOptions *securityKeyCredentialCreationOptions; // @synthesize securityKeyCredentialCreationOptions=_securityKeyCredentialCreationOptions;
@property(retain, nonatomic) ASCPublicKeyCredentialCreationOptions *platformKeyCredentialCreationOptions; // @synthesize platformKeyCredentialCreationOptions=_platformKeyCredentialCreationOptions;
@property(retain, nonatomic) NSData *securityKeyCredentialChallenge; // @synthesize securityKeyCredentialChallenge=_securityKeyCredentialChallenge;
@property(retain, nonatomic) NSData *platformCredentialChallenge; // @synthesize platformCredentialChallenge=_platformCredentialChallenge;
@property(copy, nonatomic) NSString *relyingPartyIdentifier; // @synthesize relyingPartyIdentifier=_relyingPartyIdentifier;
@property(readonly, nonatomic) unsigned long long requestTypes; // @synthesize requestTypes=_requestTypes;
- (unsigned long long)_filteredRequestTypesForTypes:(unsigned long long)arg1;
- (void)sanitizeIfNecessary;
@property(readonly, nonatomic) _Bool isProxiedRequest;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithRequestTypes:(unsigned long long)arg1;

@end

