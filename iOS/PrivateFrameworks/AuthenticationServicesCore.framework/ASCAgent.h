//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AuthenticationServicesCore/ASCAgentProtocol-Protocol.h>
#import <AuthenticationServicesCore/ASCAuthorizationPresenterDelegate-Protocol.h>
#import <AuthenticationServicesCore/ASPublicKeyCredentialManagerDelegate-Protocol.h>

@class ASCAuthorizationPresenter, ASCAuthorizationTrafficController, ASCCredentialRequestContext, ASPublicKeyCredentialManager, NSArray, NSString, NSXPCConnection;

@interface ASCAgent : NSObject <ASPublicKeyCredentialManagerDelegate, ASCAuthorizationPresenterDelegate, ASCAgentProtocol>
{
    ASCAuthorizationTrafficController *_authorizationTrafficController;
    _Bool _existingAppleIDCredentialAvailableForLogIn;
    NSArray *_passwordCredentials;
    NSXPCConnection *_connection;
    ASCCredentialRequestContext *_requestContext;
    NSString *_clientApplicationIdentifier;
    ASCAuthorizationPresenter *_requestPresenter;
    CDUnknownBlockType _authorizationCompletionHandler;
    ASPublicKeyCredentialManager *_publicKeyCredentialManager;
    NSArray *_platformLoginChoices;
    NSArray *_securityKeyLoginChoices;
    CDUnknownBlockType _didLoadPlatformCredentialsCallback;
    CDUnknownBlockType _userEnteredPINCallback;
    CDUnknownBlockType _pinResultCallback;
}

- (void).cxx_destruct;
- (void)dealloc;
- (void)_authorizationCompletedWithCredential:(id)arg1 error:(id)arg2;
- (void)didCompleteAssertionWithCredential:(id)arg1 error:(id)arg2;
- (void)didCompleteRegistrationWithCredential:(id)arg1 error:(id)arg2;
- (void)didReceiveError:(long long)arg1;
- (void)requestPINWithRemainingRetries:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)didFetchSecurityKeyLoginChoices:(id)arg1;
- (void)didFetchPlatformLoginChoices:(id)arg1;
- (void)authorizationPresenter:(id)arg1 validateUserEnteredPIN:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_credentialRequestedForSecurityKeyLoginChoice:(id)arg1;
- (void)_credentialRequestedForPlatformLoginChoice:(id)arg1 authenticatedContext:(id)arg2;
- (void)_credentialRequestedForPasswordLoginChoice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)authorizationPresenter:(id)arg1 credentialRequestedForLoginChoice:(id)arg2 authenticatedContext:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (_Bool)_isClientWithApplicationIdentifier:(id)arg1 properlyEntitledForRequestContext:(id)arg2 error:(id *)arg3;
- (void)_performAuthKitAuthorizationValidation;
- (id)_bundleIDfromAppID:(id)arg1;
- (_Bool)_clientIsPrivateAuthKit;
- (_Bool)_clientIsInternalAuthKit;
- (_Bool)_clientHasAuthKitDeveloperEntitlement;
- (_Bool)_clientIsAuthKitOwner;
- (_Bool)_clientHasNecessaryAuthKitEntitlements;
- (_Bool)_hasAnyCredentialsAvailableForRequestTypes:(unsigned long long)arg1;
- (_Bool)_hasSignInOptionsForRequestTypes:(unsigned long long)arg1;
- (void)_presentAuthorizationRequestWithContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)_allAvailableLoginChoicesForRequestContext:(id)arg1;
- (void)_configureLoginChoicesForPresentationContext:(id)arg1 withRequestContext:(id)arg2;
- (void)_configurePublicKeyCredentialsWithAssertionOptions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_configurePasswordCredentialsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)getShouldUseAlternateCredentialStoreWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)clearAllPlatformPublicKeyCredentialsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)_isAuthenticationConfiguredForPlatformPublicKeyRequestWithError:(id *)arg1;
- (void)_configureAppleIDCredentialwithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)userSelectedLoginChoice:(id)arg1 authenticatedContext:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)performAuthorizationRequestsForContext:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)initWithTrafficController:(id)arg1 connection:(id)arg2 publicKeyCredentialManager:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

