//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <KnowledgeGraphKit/KGNode-Protocol.h>
#import <KnowledgeGraphKit/MAElement-Protocol.h>
#import <KnowledgeGraphKit/NSCopying-Protocol.h>

@class MAGraphReference, NSArray, NSDictionary, NSString;
@protocol MAGraphProxy, MANodeImplementationProtocol;

@interface MANode : NSObject <MAElement, NSCopying, KGNode>
{
    unsigned long long _identifier;
    MAGraphReference *_graphReference;
    id <MANodeImplementationProtocol> _implementation;
}

- (void).cxx_destruct;
@property(retain, nonatomic) id <MANodeImplementationProtocol> implementation; // @synthesize implementation=_implementation;
@property(retain, nonatomic) MAGraphReference *graphReference; // @synthesize graphReference=_graphReference;
@property(nonatomic) unsigned long long identifier; // @synthesize identifier=_identifier;
- (unsigned long long)memoryFootprint:(id)arg1;
- (id)associatedNodesForRemoval;
- (id)visualStringWithName:(id)arg1 andPropertyKeys:(id)arg2;
- (id)visualStringWithName:(id)arg1;
- (id)visualString;
- (id)resolvedNode;
- (void)setShouldStoreResolvedNode;
- (id)shortestPathToNode:(id)arg1 directed:(_Bool)arg2;
- (void)enumerateSiblingNodesThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateSiblingNodesThroughEdgesWithDomains:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateNeighborEdgesAndNodesThroughEdgesWithDomains:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateNeighborNodesThroughEdgesWithDomains:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)siblingNodesThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)anyNeighborNodeThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)neighborNodesThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)neighborNodesThroughInEdges;
- (id)neighborNodesThroughOutEdges;
- (id)neighborNodes;
- (id)anyNeighborNodeThroughEdgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 domain:(unsigned short)arg3;
- (id)neighborNodesThroughEdgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 domain:(unsigned short)arg3;
- (id)neighborNodesWithLabel:(id)arg1 domain:(unsigned short)arg2;
- (_Bool)hasEdge:(id)arg1 isIn:(_Bool *)arg2;
- (void)enumerateNeighborNodesThroughInEdgesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateNeighborEdgesAndNodesThroughInEdgesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateNeighborNodesThroughOutEdgesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateNeighborEdgesAndNodesThroughOutEdgesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateEdgesInDomains:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateNeighborEdgesAndNodesThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateNeighborNodesThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateNeighborNodesThroughEdgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 inDomain:(unsigned short)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateNeighborNodesThroughEdgesOfType:(unsigned long long)arg1 matchingFilter:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateNeighborEdgesAndNodesThroughEdgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 inDomain:(unsigned short)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateNeighborNodesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateNeighborEdgesAndNodesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateNeighborNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateEdgesWithDomains:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateOutEdgesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateInEdgesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateEdgesOfType:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateEdgesUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)hasEdgeWithLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)anyEdgeWithLabel:(id)arg1 domain:(unsigned short)arg2;
- (unsigned long long)countOfEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)edgesForLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)allEdges;
- (id)anyEdgeOfType:(unsigned long long)arg1 withLabel:(id)arg2 domain:(unsigned short)arg3;
- (id)edgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 domain:(unsigned short)arg3;
- (void)enumerateEdgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 domain:(unsigned short)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (id)anyEdgeWithNode:(id)arg1;
- (id)anyEdgeFromNode:(id)arg1;
- (id)anyEdgeTowardNode:(id)arg1;
- (id)edgesWithNode:(id)arg1;
- (id)edgesFromNode:(id)arg1;
- (id)edgesTowardNode:(id)arg1;
- (id)anyEdgeOfType:(unsigned long long)arg1 withNode:(id)arg2;
- (id)edgesOfType:(unsigned long long)arg1 withNode:(id)arg2;
- (void)enumerateEdgesOfType:(unsigned long long)arg1 withNode:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (_Bool)hasEdgeWithNode:(id)arg1;
- (_Bool)hasEdgeFromNode:(id)arg1;
- (_Bool)hasEdgeTowardNode:(id)arg1;
- (unsigned long long)outEdgesCount;
- (unsigned long long)inEdgesCount;
- (unsigned long long)edgesCount;
- (_Bool)isUnique;
- (_Bool)isOrphan;
- (id)changingPropertiesWithProperties:(id)arg1;
- (id)propertyDictionary;
- (id)propertyKeys;
- (unsigned long long)propertiesCount;
- (_Bool)hasProperties;
- (void)enumeratePropertiesUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)isIdentifiedByProperties:(id)arg1;
- (id)propertyForKey:(id)arg1 kindOfClass:(Class)arg2;
- (id)propertyForKey:(id)arg1;
- (_Bool)hasProperties:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (_Bool)matchesNode:(id)arg1 includingProperties:(_Bool)arg2;
- (_Bool)isEqualToNode:(id)arg1;
- (_Bool)isSameNodeAsNode:(id)arg1;
- (_Bool)hasEqualPropertiesToNode:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)resolveIdentifier:(unsigned long long)arg1;
@property(readonly, copy, nonatomic) NSDictionary *properties;
@property(readonly, copy, nonatomic) NSArray *labels;
- (id)initWithIdentifier:(unsigned long long)arg1 labels:(id)arg2 weight:(float)arg3 properties:(id)arg4;
- (id)shortDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) id <MAGraphProxy> graph;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4;
- (id)init;
- (_Bool)conformsToNodeSchema:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) unsigned short domain; // @dynamic domain;
@property(readonly, copy, nonatomic) NSString *label; // @dynamic label;
@property(readonly) Class superclass;
@property(readonly, nonatomic) float weight; // @dynamic weight;

@end

