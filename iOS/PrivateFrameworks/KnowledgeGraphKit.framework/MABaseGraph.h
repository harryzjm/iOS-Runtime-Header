//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <KnowledgeGraphKit/MALegacyNodeAndEdgeQueryProtocol-Protocol.h>
#import <KnowledgeGraphKit/MANodeAndEdgeQueryProtocol-Protocol.h>
#import <KnowledgeGraphKit/NSXMLParserDelegate-Protocol.h>

@class MAGraphReference, MAGraphSpecification, NSString, NSUUID;

@interface MABaseGraph : NSObject <NSXMLParserDelegate, MANodeAndEdgeQueryProtocol, MALegacyNodeAndEdgeQueryProtocol>
{
    MAGraphSpecification *_specification;
}

+ (id)defaultSpecification;
+ (id)graph;
+ (void)initialize;
+ (_Bool)destroyPersistentStoreAtURL:(id)arg1 error:(id *)arg2;
+ (_Bool)migratePersistentStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
+ (_Bool)copyPersistentStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
+ (id)persistentStoreURLWithPath:(id)arg1 andName:(id)arg2;
+ (id)persistentStoreFileExtension;
+ (id)graphWithDefinitions:(id)arg1 constraints:(id)arg2 error:(id *)arg3;
+ (_Bool)populateGraph:(id)arg1 withDefinitions:(id)arg2 constraints:(id)arg3 error:(id *)arg4;
+ (id)graphWithVisualString:(id)arg1 error:(id *)arg2;
+ (_Bool)scanMatchString:(id)arg1 definitions:(id *)arg2 constraints:(id *)arg3 forCreation:(_Bool)arg4 error:(id *)arg5;
+ (id)visualStringWithFormat:(id)arg1 elements:(id)arg2;
+ (_Bool)scanGraphElementOptionsString:(id)arg1 minimum:(unsigned long long *)arg2 maximum:(unsigned long long *)arg3 error:(id *)arg4;
+ (id)scanGraphConstraintString:(id)arg1 error:(id *)arg2;
+ (_Bool)scanGraphElementString:(id)arg1 type:(unsigned long long *)arg2 optionalName:(id *)arg3 label:(id *)arg4 optionalDomains:(id *)arg5 optionalProperties:(id *)arg6 error:(id *)arg7;
+ (id)graphJSONURLWithPath:(id)arg1 andName:(id)arg2;
+ (id)graphMLURLWithPath:(id)arg1 andName:(id)arg2;
+ (id)graphWithMergedGraphs:(id)arg1 strictNodes:(_Bool)arg2 strictEdges:(_Bool)arg3;
- (void).cxx_destruct;
@property(readonly) MAGraphSpecification *specification; // @synthesize specification=_specification;
- (id)adjacencyWithSources:(id)arg1 relation:(id)arg2;
- (id)nodeIdentifiersOfEdgeIdentifiers:(id)arg1 ofType:(unsigned long long)arg2;
- (id)edgeIdentifiersOfType:(unsigned long long)arg1 betweenNodesForIdentifiers:(id)arg2 andNodesForIdentifiers:(id)arg3 matchingFilter:(id)arg4;
- (id)edgeIdentifiersOfType:(unsigned long long)arg1 onNodesForIdentifiers:(id)arg2 matchingFilter:(id)arg3;
- (id)nodeIdentifiersRelatedToSourceNodeIdentifiers:(id)arg1 relation:(id)arg2;
- (id)adjacencyWithEndNodeIdentifiers:(id)arg1 edgeFilter:(id)arg2 edgeType:(unsigned long long)arg3;
- (id)adjacencyWithStartNodeIdentifiers:(id)arg1 edgeFilter:(id)arg2 edgeType:(unsigned long long)arg3;
- (id)sourcesByTargetWithEdgeIdentifiers:(id)arg1;
- (id)targetsBySourceWithEdgeIdentifiers:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)memoryFootprint:(id)arg1;
- (void)enumerateUnsignedIntegerPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateDoublePropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateStringPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateIntegerPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateUnsignedIntegerPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateDoublePropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateStringPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateIntegerPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)abstractEdges;
- (id)allEdges;
- (void)enumerateEdgesWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateEdgesInDomain:(unsigned short)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateEdgesMatchingFilter:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateEdgesWithIdentifiers:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)edgesCountForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (unsigned long long)edgesCountForLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)edgesDomains;
- (id)edgesLabels;
- (unsigned long long)edgesCountForLabel:(id)arg1;
- (unsigned long long)edgesCount;
- (id)addUniqueEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;
- (id)edgesForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (id)edgesForLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)edgesForLabel:(id)arg1;
- (unsigned long long)numberOfEdgesMatchingFilter:(id)arg1;
- (id)anyEdgeMatchingFilter:(id)arg1;
- (id)edgeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2;
- (id)edgeIdentifiersMatchingFilter:(id)arg1;
- (id)edgesForIdentifiers:(id)arg1;
- (id)edgeForIdentifier:(unsigned long long)arg1;
- (void)legacyRemoveEdges:(id)arg1;
- (id)addEdgeFromBase:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3;
- (id)addEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;
- (id)addEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3;
- (_Bool)edgesStoreWeakReferencesToNodes;
- (id)graphNode;
- (id)orphanNodes;
- (_Bool)findAndResolveUniqueEdge:(id)arg1;
- (void)addUniqueNode:(id)arg1 didInsert:(_Bool *)arg2;
- (_Bool)findAndResolveUniqueNode:(id)arg1;
- (id)neighborNodeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeType:(unsigned long long)arg2 edgeFilter:(id)arg3;
- (id)allNodes;
- (void)enumerateNodesWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateNodesInDomain:(unsigned short)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateNodesMatchingFilter:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateNodesWithIdentifiers:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)nodesDomains;
- (id)nodesLabels;
- (unsigned long long)nodesCount;
- (id)addUniquelyIdentifiedNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4 didCreate:(_Bool *)arg5;
- (id)addUniqueNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4 didCreate:(_Bool *)arg5;
- (unsigned long long)nodesCountForDomain:(unsigned short)arg1;
- (id)nodesForDomain:(unsigned short)arg1 properties:(id)arg2;
- (id)nodesForDomain:(unsigned short)arg1;
- (unsigned long long)nodesCountForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (unsigned long long)numberOfNodesMatchingFilter:(id)arg1;
- (id)nodesForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (id)anyNodeForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (id)anyNodeMatchingFilter:(id)arg1;
- (unsigned long long)nodesCountForLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)anyNodeForLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)nodesForLabel:(id)arg1 domain:(unsigned short)arg2;
- (unsigned long long)nodesCountForLabel:(id)arg1;
- (id)anyNodeForLabel:(id)arg1;
- (id)nodesForLabel:(id)arg1;
- (id)nodeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2;
- (id)nodeIdentifiersMatchingFilter:(id)arg1;
- (id)nodesForIdentifiers:(id)arg1;
- (id)nodeForIdentifier:(unsigned long long)arg1;
- (void)legacyRemoveNodes:(id)arg1;
- (id)addNodeFromBase:(id)arg1;
- (id)addNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4;
- (id)addNodeWithLabel:(id)arg1;
- (Class)nodeClass;
- (void)executeGraphChangeRequest:(id)arg1;
- (void)invalidateMemoryCaches;
@property(readonly, nonatomic) _Bool usesClassCDataProtection;
@property(readonly, nonatomic) _Bool usesClassBDataProtection;
@property(readonly, nonatomic) _Bool usesClassADataProtection;
@property(readonly, nonatomic) _Bool isReadOnly;
- (void)rollbackBatch;
- (void)leaveBatch;
- (void)enterBatch;
@property(readonly, nonatomic) NSUUID *identifier;
@property(nonatomic) unsigned long long version;
@property(readonly) MAGraphReference *graphReference;
- (void)dealloc;
- (id)init;
- (id)initWithPersistenceOptions:(long long)arg1;
- (id)initWithSpecification:(id)arg1;
- (void)waitUntilQuiescentUsingBlock:(CDUnknownBlockType)arg1;
- (void)readUsingBlock:(CDUnknownBlockType)arg1;
- (void)writeUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)hasPendingWrite;
- (_Bool)hasPendingRead;
- (void)persistWeight:(float)arg1 forEdgeWithIdentifier:(unsigned long long)arg2;
- (void)persistWeight:(float)arg1 forNodeWithIdentifier:(unsigned long long)arg2;
- (void)removeModelPropertiesForEdgeWithIdentifier:(unsigned long long)arg1;
- (void)removeModelPropertyForKey:(id)arg1 forEdgeWithIdentifier:(unsigned long long)arg2;
- (void)persistModelProperties:(id)arg1 forEdgeWithIdentifier:(unsigned long long)arg2 clobberExisting:(_Bool)arg3;
- (void)persistModelProperty:(id)arg1 forKey:(id)arg2 forEdgeWithIdentifier:(unsigned long long)arg3;
- (void)removeModelPropertiesForNodeWithIdentifier:(unsigned long long)arg1;
- (void)removeModelPropertyForKey:(id)arg1 forNodeWithIdentifier:(unsigned long long)arg2;
- (void)persistModelProperties:(id)arg1 forNodeWithIdentifier:(unsigned long long)arg2 clobberExisting:(_Bool)arg3;
- (void)persistModelProperty:(id)arg1 forKey:(id)arg2 forNodeWithIdentifier:(unsigned long long)arg3;
- (_Bool)copyPersistentStoreToURL:(id)arg1 error:(id *)arg2;
- (_Bool)migratePersistentStoreToURL:(id)arg1 error:(id *)arg2;
- (id)databaseURL;
- (void)closePersistentStore;
- (_Bool)savePersistentStore;
- (void)savePersistentStoreWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithPersistentStoreURL:(id)arg1 options:(long long)arg2 progressReporter:(id)arg3;
- (id)initWithPersistentStoreURL:(id)arg1 options:(long long)arg2;
- (id)initWithSpecification:(id)arg1 persistenceStoreURL:(id)arg2 progressReporter:(id)arg3;
- (void)unloadDomains:(id)arg1;
- (void)loadDomains:(id)arg1;
- (id)edgeFromFetchedRowWithIdentifier:(int)arg1 domain:(short)arg2 label:(id)arg3 weight:(float)arg4 properties:(id)arg5 sourceNodeIdentifier:(int)arg6 targetNodeIdentifier:(int)arg7;
- (id)nodeFromFetchedRowWithIdentifier:(int)arg1 domain:(short)arg2 label:(id)arg3 weight:(float)arg4 properties:(id)arg5;
- (_Bool)compareWithPersistedState;
@property(readonly, nonatomic) _Bool _shouldFail;
- (id)matchWithVisualString:(id)arg1 error:(id *)arg2;
- (id)matchWithVisualFormat:(id)arg1 elements:(id)arg2 error:(id *)arg3;
- (id)selectBestRootNodeForPath:(id)arg1 withDefinitions:(id)arg2;
- (_Bool)_matchNode:(id)arg1 usingAbstractNode:(id)arg2 fromEdge:(id)arg3 atIteration:(unsigned long long)arg4 withDefinitions:(id)arg5 constraints:(id)arg6 unusedConstraints:(id)arg7 andSubGraph:(id)arg8 matchingNodeQueue:(id)arg9;
- (id)_constraintAbstractEdgesFromAbstractNode:(id)arg1 inConstraints:(id *)arg2;
- (_Bool)updateGraphWithVisualString:(id)arg1;
- (id)matchWithDefinitions:(id)arg1 constraints:(id)arg2 error:(id *)arg3;
- (_Bool)writeGraphJSONToURL:(id)arg1 error:(id *)arg2;
- (id)_graphJSONDictionary;
- (id)initWithGraphJSONURL:(id)arg1;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)initWithGraphMLURL:(id)arg1;
- (_Bool)writeDataToURL:(id)arg1 error:(id *)arg2;
- (id)_graphDictionary;
- (id)initWithDataURL:(id)arg1;
- (id)initWithSpecification:(id)arg1 dataURL:(id)arg2;
- (void)breadthFirstSearchFromNode:(id)arg1 directed:(_Bool)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)depthFirstSearchFromNode:(id)arg1 directed:(_Bool)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)shortestPathFromNode:(id)arg1 toNode:(id)arg2 directed:(_Bool)arg3;
- (void)mergeWithGraph:(id)arg1 strictNodes:(_Bool)arg2 strictEdges:(_Bool)arg3 saveToDatabase:(_Bool)arg4 createdNodes:(out id *)arg5 createdEdges:(out id *)arg6;
- (void)mergeWithGraph:(id)arg1 strictNodes:(_Bool)arg2 strictEdges:(_Bool)arg3 createdNodes:(out id *)arg4 createdEdges:(out id *)arg5;
- (id)mergeWithGraph:(id)arg1 strictNodes:(_Bool)arg2 strictEdges:(_Bool)arg3 saveToDatabase:(_Bool)arg4;
- (id)mergeWithGraph:(id)arg1 strictNodes:(_Bool)arg2 strictEdges:(_Bool)arg3;
- (id)schema:(id)arg1;
- (_Bool)conformsToGraphSchema:(id)arg1;
- (id)edgeSchemeWithLabel:(id)arg1 domain:(unsigned short)arg2 sourceNode:(id)arg3 targetNode:(id)arg4;
- (id)nodeSchemeWithLabel:(id)arg1 domain:(unsigned short)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

