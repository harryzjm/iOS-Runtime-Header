//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class KGStoredGraph, NSMutableDictionary;

@interface MAGraph
{
    KGStoredGraph *_graph;
    NSMutableDictionary *_labelByDomain;
    NSMutableDictionary *_domainByLabel;
}

+ (_Bool)destroyPersistentStoreAtURL:(id)arg1 error:(id *)arg2;
+ (_Bool)migratePersistentStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
+ (_Bool)copyPersistentStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
+ (id)persistentStoreURLWithPath:(id)arg1 andName:(id)arg2;
+ (id)persistentStoreFileExtension;
- (void).cxx_destruct;
@property(readonly, nonatomic) KGStoredGraph *graph; // @synthesize graph=_graph;
- (void)waitUntilQuiescentUsingBlock:(CDUnknownBlockType)arg1;
- (void)readUsingBlock:(CDUnknownBlockType)arg1;
- (void)writeUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)hasPendingWrite;
- (_Bool)hasPendingRead;
- (id)nodeIdentifiersOfEdgeIdentifiers:(id)arg1 ofType:(unsigned long long)arg2;
- (id)edgeIdentifiersOfType:(unsigned long long)arg1 betweenNodesForIdentifiers:(id)arg2 andNodesForIdentifiers:(id)arg3 matchingFilter:(id)arg4;
- (id)edgeIdentifiersOfType:(unsigned long long)arg1 onNodesForIdentifiers:(id)arg2 matchingFilter:(id)arg3;
- (id)edgeIdentifiersOfType:(unsigned long long)arg1 sourceNodeIdentifier:(unsigned long long)arg2 targetNodeIdentifier:(unsigned long long)arg3;
- (unsigned long long)memoryFootprint:(id)arg1;
- (id)sourcesByTargetWithEdgeIdentifiers:(id)arg1;
- (id)targetsBySourceWithEdgeIdentifiers:(id)arg1;
- (void)enumerateUnsignedIntegerPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateDoublePropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateStringPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateIntegerPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateUnsignedIntegerPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateDoublePropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateStringPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateIntegerPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)abstractEdges;
- (id)allEdges;
- (void)enumerateEdgesWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateEdgesInDomain:(unsigned short)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateEdgesMatchingFilter:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateEdgesWithIdentifiers:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)edgesCountForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (unsigned long long)edgesCountForLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)edgesDomains;
- (id)edgesLabels;
- (unsigned long long)edgesCountForLabel:(id)arg1;
- (unsigned long long)edgesCount;
- (id)addUniqueEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;
- (id)_anyEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;
- (id)edgesForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (id)_edgeIdentifiersWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (id)edgesForLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)edgesForLabel:(id)arg1;
- (unsigned long long)numberOfEdgesMatchingFilter:(id)arg1;
- (id)edgeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2;
- (id)edgeIdentifiersMatchingFilter:(id)arg1;
- (id)edgesForIdentifiers:(id)arg1;
- (id)edgeForIdentifier:(unsigned long long)arg1;
- (void)legacyRemoveEdges:(id)arg1;
- (id)addEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;
- (id)_addEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;
- (_Bool)edgesStoreWeakReferencesToNodes;
- (id)orphanNodes;
- (id)neighborNodeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeType:(unsigned long long)arg2 edgeFilter:(id)arg3;
- (id)allNodes;
- (void)enumerateNodesWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateNodesInDomain:(unsigned short)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateNodesMatchingFilter:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateNodesWithIdentifiers:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)nodesDomains;
- (id)nodesLabels;
- (unsigned long long)nodesCount;
- (unsigned long long)nodesCountForDomain:(unsigned short)arg1;
- (id)nodesForDomain:(unsigned short)arg1 properties:(id)arg2;
- (id)nodesForDomain:(unsigned short)arg1;
- (unsigned long long)nodesCountForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (unsigned long long)numberOfNodesMatchingFilter:(id)arg1;
- (id)nodesForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (id)anyNodeForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (id)anyNodeMatchingFilter:(id)arg1;
- (id)_nodeIdentifiersWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (unsigned long long)nodesCountForLabel:(id)arg1;
- (id)anyNodeForLabel:(id)arg1;
- (id)nodesForLabel:(id)arg1;
- (id)nodeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2;
- (id)nodeIdentifiersMatchingFilter:(id)arg1;
- (id)nodesForIdentifiers:(id)arg1;
- (id)nodeForIdentifier:(unsigned long long)arg1;
- (void)legacyRemoveNodes:(id)arg1;
- (id)addUniquelyIdentifiedNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4 didCreate:(_Bool *)arg5;
- (id)addUniqueNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4 didCreate:(_Bool *)arg5;
- (id)addNodeFromBase:(id)arg1;
- (id)addNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4;
- (id)addNodeWithLabel:(id)arg1;
- (id)_addNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4;
- (Class)nodeClass;
- (void)executeGraphChangeRequest:(id)arg1;
- (void)invalidateMemoryCaches;
- (void)rollbackBatch;
- (void)leaveBatch;
- (void)enterBatch;
- (id)identifier;
- (void)setVersion:(unsigned long long)arg1;
- (unsigned long long)version;
- (id)description;
- (void)labelAndDomainFromLabels:(id)arg1 outLabel:(id *)arg2 outDomain:(unsigned short *)arg3;
- (id)labelsForLabel:(id)arg1 domain:(unsigned short)arg2;
- (id)initWithSpecification:(id)arg1;
- (void)mergeWithGraph:(id)arg1 strictNodes:(_Bool)arg2 strictEdges:(_Bool)arg3 saveToDatabase:(_Bool)arg4 createdNodes:(out id *)arg5 createdEdges:(out id *)arg6;
- (void)persistWeight:(float)arg1 forEdgeWithIdentifier:(unsigned long long)arg2;
- (void)persistWeight:(float)arg1 forNodeWithIdentifier:(unsigned long long)arg2;
- (void)removeModelPropertiesForEdgeWithIdentifier:(unsigned long long)arg1;
- (void)removeModelPropertyForKey:(id)arg1 forEdgeWithIdentifier:(unsigned long long)arg2;
- (void)persistModelProperties:(id)arg1 forEdgeWithIdentifier:(unsigned long long)arg2 clobberExisting:(_Bool)arg3;
- (void)persistModelProperty:(id)arg1 forKey:(id)arg2 forEdgeWithIdentifier:(unsigned long long)arg3;
- (void)removeModelPropertiesForNodeWithIdentifier:(unsigned long long)arg1;
- (void)removeModelPropertyForKey:(id)arg1 forNodeWithIdentifier:(unsigned long long)arg2;
- (void)persistModelProperties:(id)arg1 forNodeWithIdentifier:(unsigned long long)arg2 clobberExisting:(_Bool)arg3;
- (void)persistModelProperty:(id)arg1 forKey:(id)arg2 forNodeWithIdentifier:(unsigned long long)arg3;
- (_Bool)compareWithPersistedState;
- (_Bool)copyPersistentStoreToURL:(id)arg1 error:(id *)arg2;
- (void)closePersistentStore;
- (_Bool)migratePersistentStoreToURL:(id)arg1 error:(id *)arg2;
- (_Bool)savePersistentStore;
- (void)savePersistentStoreWithCompletion:(CDUnknownBlockType)arg1;
- (void)unloadDomains:(id)arg1;
- (void)unloadEdge:(id)arg1;
- (void)loadDomains:(id)arg1;
- (id)databaseURL;
- (id)initWithSpecification:(id)arg1 persistenceStoreURL:(id)arg2 progressReporter:(id)arg3;
- (id)_instantiateGraphWithStoreAtURL:(id)arg1;
- (id)edgeFromFetchedRowWithIdentifier:(int)arg1 domain:(short)arg2 label:(id)arg3 weight:(float)arg4 properties:(id)arg5 sourceNodeIdentifier:(int)arg6 targetNodeIdentifier:(int)arg7;
- (id)nodeFromFetchedRowWithIdentifier:(int)arg1 domain:(short)arg2 label:(id)arg3 weight:(float)arg4 properties:(id)arg5;
- (id)initWithGraphJSONURL:(id)arg1;
- (id)initWithGraphMLURL:(id)arg1;
- (id)initWithSpecification:(id)arg1 dataURL:(id)arg2;
- (void)_loadWithGraphDictionary:(id)arg1;

@end

