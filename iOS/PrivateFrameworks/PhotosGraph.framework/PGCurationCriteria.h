//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class PGCurationContentOrAestheticScoreTrait, PGCurationCropScoreTrait, PGCurationIndexSetTrait, PGCurationPartOfDayTrait, PGCurationSetTrait;

@interface PGCurationCriteria : NSObject
{
    _Bool _filterUtilityAssets;
    double _minimumAssetsRatio;
    PGCurationIndexSetTrait *_compulsoryScenesTrait;
    PGCurationIndexSetTrait *_scenesTrait;
    PGCurationPartOfDayTrait *_partOfDayTrait;
    unsigned long long _faceFilter;
    PGCurationSetTrait *_peopleTrait;
    PGCurationSetTrait *_socialGroupTrait;
    PGCurationContentOrAestheticScoreTrait *_contentOrAestheticScoreTrait;
    PGCurationCropScoreTrait *_cropScoreTrait;
    unsigned long long _client;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long client; // @synthesize client=_client;
@property(nonatomic) _Bool filterUtilityAssets; // @synthesize filterUtilityAssets=_filterUtilityAssets;
@property(retain, nonatomic) PGCurationCropScoreTrait *cropScoreTrait; // @synthesize cropScoreTrait=_cropScoreTrait;
@property(retain, nonatomic) PGCurationContentOrAestheticScoreTrait *contentOrAestheticScoreTrait; // @synthesize contentOrAestheticScoreTrait=_contentOrAestheticScoreTrait;
@property(retain, nonatomic) PGCurationSetTrait *socialGroupTrait; // @synthesize socialGroupTrait=_socialGroupTrait;
@property(retain, nonatomic) PGCurationSetTrait *peopleTrait; // @synthesize peopleTrait=_peopleTrait;
@property(nonatomic) unsigned long long faceFilter; // @synthesize faceFilter=_faceFilter;
@property(retain, nonatomic) PGCurationPartOfDayTrait *partOfDayTrait; // @synthesize partOfDayTrait=_partOfDayTrait;
@property(retain, nonatomic) PGCurationIndexSetTrait *scenesTrait; // @synthesize scenesTrait=_scenesTrait;
@property(retain, nonatomic) PGCurationIndexSetTrait *compulsoryScenesTrait; // @synthesize compulsoryScenesTrait=_compulsoryScenesTrait;
@property(nonatomic) double minimumAssetsRatio; // @synthesize minimumAssetsRatio=_minimumAssetsRatio;
- (id)peopleTraitStringWithGraph:(id)arg1;
- (id)niceDescriptionWithGraph:(id)arg1;
- (double)_scoreForSceneClassifications:(id)arg1 withScenesTrait:(id)arg2 traitFailed:(_Bool *)arg3;
- (_Bool)_passesForItem:(id)arg1 score:(double *)arg2 graph:(id)arg3 reasonString:(id *)arg4;
- (_Bool)passesForItem:(id)arg1 score:(double *)arg2 graph:(id)arg3 reasonString:(id *)arg4;
- (_Bool)passesForItem:(id)arg1 score:(double *)arg2;
- (id)passingAssetsInAssets:(id)arg1;
- (_Bool)isPassingForAsset:(id)arg1 score:(double *)arg2;
- (id)initWithMinimumAssetsRatio:(double)arg1 client:(unsigned long long)arg2;

@end

