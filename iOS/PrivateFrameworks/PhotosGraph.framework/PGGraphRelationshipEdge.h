//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSString;

@interface PGGraphRelationshipEdge
{
    unsigned int _numberOfMomentsAtHome:32;
    unsigned int _numberOfLoveEmojisExchanged:32;
    unsigned int _hasParentContactName:1;
    unsigned int _hasSameFamilyNameAsMePerson:1;
    unsigned int _hasAnniversaryDate:1;
    unsigned int _isTopTwoPersonsSocialGroup:1;
    unsigned int _isTopPerson:1;
    unsigned int _isPersonAgeDifferentThanMeNode:1;
    unsigned int _isPersonOldEnoughToBeParentOrGrandparent:1;
    _Bool _isPersonYoungEnoughToBeMeNodeChild;
    float _confidence;
    NSString *_relationship;
    double _familyHolidayAttendanceRate;
    double _friendNightOutAttendanceRate;
    double _partnerTripAttendanceRate;
    double _friendsAndFamilyTripAttendanceRate;
    double _weekendAppearanceRatio;
    double _momentsAtWorkAppearanceRate;
    double _calendarAttendanceRatio;
}

+ (id)vipFilter;
+ (id)acquaintanceFilter;
+ (id)coworkerSocialGroupFilter;
+ (id)coworkerFilter;
+ (id)friendFilter;
+ (id)childFilter;
+ (id)familySocialGroupFilter;
+ (id)familyFilter;
+ (id)parentFilter;
+ (id)sonFilter;
+ (id)daughterFilter;
+ (id)sisterFilter;
+ (id)brotherFilter;
+ (id)motherFilter;
+ (id)fatherFilter;
+ (id)partnerFilter;
+ (id)filter;
- (void).cxx_destruct;
@property(readonly) _Bool isPersonYoungEnoughToBeMeNodeChild; // @synthesize isPersonYoungEnoughToBeMeNodeChild=_isPersonYoungEnoughToBeMeNodeChild;
@property(readonly) _Bool isPersonOldEnoughToBeParentOrGrandparent; // @synthesize isPersonOldEnoughToBeParentOrGrandparent=_isPersonOldEnoughToBeParentOrGrandparent;
@property(readonly) _Bool isPersonAgeDifferentThanMeNode; // @synthesize isPersonAgeDifferentThanMeNode=_isPersonAgeDifferentThanMeNode;
@property(readonly) double calendarAttendanceRatio; // @synthesize calendarAttendanceRatio=_calendarAttendanceRatio;
@property(readonly) double momentsAtWorkAppearanceRate; // @synthesize momentsAtWorkAppearanceRate=_momentsAtWorkAppearanceRate;
@property(readonly) double weekendAppearanceRatio; // @synthesize weekendAppearanceRatio=_weekendAppearanceRatio;
@property(readonly) double friendsAndFamilyTripAttendanceRate; // @synthesize friendsAndFamilyTripAttendanceRate=_friendsAndFamilyTripAttendanceRate;
@property(readonly) double partnerTripAttendanceRate; // @synthesize partnerTripAttendanceRate=_partnerTripAttendanceRate;
@property(readonly) double friendNightOutAttendanceRate; // @synthesize friendNightOutAttendanceRate=_friendNightOutAttendanceRate;
@property(readonly) _Bool isTopPerson; // @synthesize isTopPerson=_isTopPerson;
@property(readonly) unsigned long long numberOfLoveEmojisExchanged; // @synthesize numberOfLoveEmojisExchanged=_numberOfLoveEmojisExchanged;
@property(readonly) _Bool isTopTwoPersonsSocialGroup; // @synthesize isTopTwoPersonsSocialGroup=_isTopTwoPersonsSocialGroup;
@property(readonly) _Bool hasAnniversaryDate; // @synthesize hasAnniversaryDate=_hasAnniversaryDate;
@property(readonly) unsigned long long numberOfMomentsAtHome; // @synthesize numberOfMomentsAtHome=_numberOfMomentsAtHome;
@property(readonly) _Bool hasSameFamilyNameAsMePerson; // @synthesize hasSameFamilyNameAsMePerson=_hasSameFamilyNameAsMePerson;
@property(readonly) _Bool hasParentContactName; // @synthesize hasParentContactName=_hasParentContactName;
@property(readonly) double familyHolidayAttendanceRate; // @synthesize familyHolidayAttendanceRate=_familyHolidayAttendanceRate;
@property(readonly) float confidence; // @synthesize confidence=_confidence;
@property(readonly) NSString *relationship; // @synthesize relationship=_relationship;
- (id)_readableStringForProperty:(id)arg1;
@property(readonly) unsigned long long status;
- (float)weight;
- (unsigned short)domain;
- (id)label;
- (id)edgeDescription;
- (id)propertyDictionary;
- (_Bool)hasProperties:(id)arg1;
- (void)setLocalProperties:(id)arg1;
- (id)initWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5;
- (id)initWithRelationship:(id)arg1 fromPersonNode:(id)arg2 toPersonNode:(id)arg3 withConfidence:(float)arg4;

@end

