//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MABinaryAdjacency, PGGraph;

@interface PGGraphLocationHelper : NSObject
{
    PGGraph *_graph;
    struct os_unfair_lock_s _locationHelperLock;
    MABinaryAdjacency *_countryAdjacency;
    MABinaryAdjacency *_stateAdjacency;
    MABinaryAdjacency *_countyAdjacency;
    MABinaryAdjacency *_cityAdjacency;
    MABinaryAdjacency *_districtAdjacency;
    MABinaryAdjacency *_streetAdjacency;
    MABinaryAdjacency *_numberAdjacency;
}

+ (id)inefficientLocationHelper;
- (void).cxx_destruct;
- (id)_validLocationNodeForLocationNode:(id)arg1 withLocationMask:(unsigned long long)arg2;
- (struct CLLocationCoordinate2D)_approximateCoordinateForLocationNode:(id)arg1;
- (id)_commonNodeForLocationNode:(id)arg1 andLocationNode:(id)arg2;
- (id)_mostVisitedLocationNodeForLocationNodes:(id)arg1;
- (_Bool)_locationNodesRepresentSameCity:(id)arg1;
- (id)commonLocationNodeForRelevantLocationNodes:(id)arg1 locationMask:(unsigned long long)arg2;
- (id)densestCloseLocationNodeFromLocationNode:(id)arg1 withDateInterval:(id)arg2 locationMask:(unsigned long long)arg3;
- (_Bool)locationIsInSupersetCategoryForLocationNode:(id)arg1;
- (id)relevantAddressNodesForMomentNodes:(id)arg1 applyDensestCloseLocationNode:(_Bool)arg2;
- (id)relevantLocationNodesForMomentNodes:(id)arg1 applyDensestCloseLocationNode:(_Bool)arg2;
- (id)countyNodeFromCityNode:(id)arg1;
- (id)countryNodeFromAddressNode:(id)arg1;
- (id)cityNodeFromAddressNode:(id)arg1;
- (id)districtNodeFromAddressNode:(id)arg1;
- (id)_closestLocationNodeFromLocationNode:(id)arg1 withDimension:(unsigned long long)arg2 remapMatchingDimensionBlock:(CDUnknownBlockType)arg3 reverse:(_Bool)arg4;
- (id)_parentLocationNodeWithDimension:(unsigned long long)arg1 ofLocationNode:(id)arg2;
- (id)closestLocationNodeFromLocationNode:(id)arg1 withDimension:(unsigned long long)arg2 reverse:(_Bool)arg3;
- (id)closestLocationNodeFromLocationNode:(id)arg1 withDimension:(unsigned long long)arg2 remapMatchingDimensionBlock:(CDUnknownBlockType)arg3;
- (id)numberAdjacency;
- (id)streetAdjacency;
- (id)districtAdjacency;
- (id)cityAdjacency;
- (id)countyAdjacency;
- (id)stateAdjacency;
- (id)countryAdjacency;
- (id)initWithGraph:(id)arg1;

@end

