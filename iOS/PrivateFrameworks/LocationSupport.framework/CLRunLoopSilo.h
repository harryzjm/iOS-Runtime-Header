//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CLRunLoopSiloThread;

@interface CLRunLoopSilo
{
    CLRunLoopSiloThread *_siloThread;
    _Bool _useCLPermissiveTimer;
}

- (void).cxx_destruct;
- (void)heartBeat:(id)arg1;
- (id)debugDescription;
- (void)afterInterval:(double)arg1 async:(CDUnknownBlockType)arg2;
- (void)sync:(CDUnknownBlockType)arg1;
- (void)async:(CDUnknownBlockType)arg1;
- (id)newTimer;
- (double)currentLatchedAbsoluteTimestamp;
- (_Bool)isSuspended;
- (void)resume;
- (void)suspend;
- (void)assertOutside;
- (void)assertInside;
- (_Bool)inPermissiveMode;
- (id)getTimeCoercibleVariantInstance;
- (id)runloop;
- (id)initWithUnderlyingRunLoop:(struct __CFRunLoop *)arg1;
- (id)initWithCurrentRunLoopAndIdentifier:(id)arg1 bePermissive:(_Bool)arg2;
- (id)initWithCurrentRunLoopAndIdentifier:(id)arg1;
- (id)initWithIdentifier:(id)arg1;

@end

