//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSIndexSet, NSMutableIndexSet, SFUnifiedBarItem, SFUnifiedTabBarItemArrangement, SFUnifiedTabBarMetrics, UIScrollView;

__attribute__((visibility("hidden")))
@interface SFUnifiedTabBarLayout : NSObject
{
    UIScrollView *_scrollView;
    _Bool _flipped;
    struct CGRect _visibleRectOverride;
    struct CGSize _lastLayoutSize;
    struct CGPoint _lastLayoutMidpoint;
    struct CGPoint _lastLayoutContentOffset;
    double _activeItemWidth;
    double _itemWidth;
    double _squishedActiveItemWidth;
    double _leadingItemOffset;
    double _pinnedItemsWidth;
    _Bool _standalone;
    double _itemSpacing;
    double _transitioningItemScale;
    double _scrollSlowingInset;
    NSMutableIndexSet *_visibleItemIndexes;
    NSMutableIndexSet *_occludedItemIndexes;
    _Bool _expandedItemIsCentered;
    double _offsetForCenteringExpandedItem;
    double _activeItemWidthWhenNotExpanded;
    _Bool _contentIsCentered;
    SFUnifiedTabBarItemArrangement *_itemArrangement;
    SFUnifiedTabBarMetrics *_barMetrics;
    SFUnifiedBarItem *_hoveringItem;
    struct CGPoint _midpointForCenteredContent;
    struct CGSize _contentSize;
}

+ (unsigned long long)pinnedItemLimitForItemArrangement:(id)arg1 tabBarWidth:(double)arg2 barMetrics:(id)arg3;
- (void).cxx_destruct;
@property(retain, nonatomic) SFUnifiedBarItem *hoveringItem; // @synthesize hoveringItem=_hoveringItem;
@property(readonly, nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
@property(readonly, nonatomic) _Bool contentIsCentered; // @synthesize contentIsCentered=_contentIsCentered;
@property(nonatomic) struct CGPoint midpointForCenteredContent; // @synthesize midpointForCenteredContent=_midpointForCenteredContent;
@property(retain, nonatomic) SFUnifiedTabBarMetrics *barMetrics; // @synthesize barMetrics=_barMetrics;
@property(readonly, nonatomic) SFUnifiedTabBarItemArrangement *itemArrangement; // @synthesize itemArrangement=_itemArrangement;
- (struct CGPoint)_midpointForCenteredContentInScrollView;
- (double)_maximumActiveItemWidthForCenteringExpandedItem;
@property(readonly, nonatomic) _Bool horizontalSpaceIsExtremelyConstrained;
@property(readonly, nonatomic) _Bool centersActiveItemWhenExpanded;
- (double)_insetToRevealNextItem;
- (double)_minimumHorizontalOffsetForOccludedItems;
- (double)_maximumItemSpacing;
- (double)_minimumItemSpacing;
- (double)_effectiveMinimumActiveItemWidth;
- (struct UIEdgeInsets)_insetsForActiveItemPinnableArea;
- (struct CGRect)_contentArea;
- (struct CGRect)_activeItemPinnableArea;
- (struct CGRect)_unpinnedItemSafeArea;
@property(readonly, nonatomic) struct CGRect _safeArea;
- (id)itemsVisibleInRect:(struct CGRect)arg1;
- (id)indexesOfItemsVisibleInRect:(struct CGRect)arg1;
- (void)setItemAtIndex:(unsigned long long)arg1 isOccluded:(_Bool)arg2;
- (void)setItemAtIndex:(unsigned long long)arg1 isVisible:(_Bool)arg2;
@property(readonly, nonatomic) NSArray *visibleItems;
@property(readonly, nonatomic) NSIndexSet *visibleItemIndexes;
- (_Bool)_itemAtIndexIsPinned:(unsigned long long)arg1;
- (_Bool)_activeItemIsPinned;
@property(readonly, nonatomic) struct UIEdgeInsets autoScrollTouchInsets;
@property(readonly, nonatomic) struct CGRect pinnedItemDropArea;
@property(readonly, nonatomic) double pinnedItemsSeparatorOpacity;
@property(readonly, nonatomic) struct CGRect pinnedItemsSeparatorFrame;
@property(readonly, nonatomic) _Bool isCurrentlyScrollable;
- (struct UIEdgeInsets)_insetsForScrollingToItemAtIndex:(unsigned long long)arg1;
- (struct CGPoint)_contentOffsetForScrollingToRegionWithMinX:(double)arg1 maxX:(double)arg2 insets:(struct UIEdgeInsets)arg3;
- (struct CGPoint)contentOffsetForScrollingToDroppingItems;
- (struct CGPoint)contentOffsetForScrollingToItemAtIndex:(unsigned long long)arg1;
- (id)itemAtPoint:(struct CGPoint)arg1;
- (unsigned long long)_indexOfItemClosestToPoint:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)itemClosestToPoint:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (struct CGRect)frameForPreviewingItem:(id)arg1 pinned:(_Bool)arg2;
- (struct CGRect)frameForItem:(id)arg1;
@property(readonly, nonatomic) unsigned long long maximumNumberOfVisibleItems;
@property(readonly, nonatomic) unsigned long long indexOfCenterItem;
- (double)_zPositionForItem:(id)arg1;
- (double)_spacingBeforeItem:(id)arg1;
- (double)_spacingAfterItem:(id)arg1;
- (double)_widthForItem:(id)arg1;
- (double)_offsetForItemAtIndex:(unsigned long long)arg1 inItems:(id)arg2;
- (double)_offsetForPinnedItemAtIndex:(unsigned long long)arg1;
- (double)_offsetForItemAtIndex:(unsigned long long)arg1;
- (CDStruct_c9ef18f1)_scrollSlowingLayoutInfoForItemAtIndex:(unsigned long long)arg1 withLayoutInfo:(CDStruct_c9ef18f1)arg2 activeItemFrame:(struct CGRect)arg3;
- (struct CGRect)_slideFrame:(struct CGRect)arg1 forItemAtIndex:(unsigned long long)arg2 pinnedActiveItemOffset:(double)arg3;
- (double)_distanceToEdgeForItemAtIndex:(unsigned long long)arg1 withFrame:(struct CGRect)arg2 activeItemFrame:(struct CGRect)arg3 occludedEdge:(unsigned long long *)arg4;
- (struct CGRect)_adjustedActiveItemFrame:(struct CGRect)arg1 pinActiveItem:(_Bool)arg2 squishActiveItem:(_Bool)arg3 centerExpandedItem:(_Bool)arg4;
- (double)_pinnedActiveItemOffsetSquishingActiveItem:(_Bool)arg1 activeItemFrame:(struct CGRect *)arg2;
- (struct CGRect)_frameForItem:(id)arg1 withOffset:(double)arg2 pinActiveItem:(_Bool)arg3 squishActiveItem:(_Bool)arg4 centerExpandedItem:(_Bool)arg5;
- (struct CGRect)_unpinnedFrameForItemAtIndex:(unsigned long long)arg1;
- (void)_enumerateFramesForItemsAtIndexes:(id)arg1 pinActiveItem:(_Bool)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateFinalLayoutForDisappearingItemsAtIndexes:(id)arg1 withDistanceScrolled:(double)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateInitialLayoutForAppearingItemsAtIndexes:(id)arg1 withDistanceToScroll:(double)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateLayoutForItemsAtIndexes:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_determineOffsetForCenteringExpandedItem;
- (void)_updateSquishedActiveItemWidth;
- (void)_updateContentSize;
- (void)_updateItemWidths;
- (void)updateItemSizes;
- (void)updateItemSizesIfNeeded;
@property(readonly, nonatomic) _Bool activeItemIsSquished;
- (id)initWithItemArrangement:(id)arg1 configuration:(id)arg2;

@end

