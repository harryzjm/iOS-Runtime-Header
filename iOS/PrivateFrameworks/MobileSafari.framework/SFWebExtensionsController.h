//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <SafariSharedUI/WBSWebExtensionsController.h>

@class NSMutableDictionary, NSMutableOrderedSet, NSObject, NSString, SFWebExtension, WKProcessPool, _SFDialogController;
@protocol OS_dispatch_queue, SFWebExtensionsControllerDelegate, WBSUserDefaultObservation, _SFNavigationIntentHandling;

@interface SFWebExtensionsController : WBSWebExtensionsController
{
    _SFDialogController *_dialogController;
    NSMutableOrderedSet *_queueOfExtensionsToShowInPermissionBanner;
    id <WBSUserDefaultObservation> _stubUnsupportedAPIsUserDefaultObserver;
    NSObject<OS_dispatch_queue> *_blocklistQueue;
    WKProcessPool *_processPool;
    NSString *_applicationNameForUserAgent;
    id <_SFNavigationIntentHandling> _navigationIntentHandler;
    NSMutableDictionary *_tabIDToTabPositionForTabsInTransit;
}

+ (id)contentBlockerStore;
+ (void)_createWebExtensionContentBlockerDirectoryWithURL:(id)arg1;
+ (id)extensionIdentifierToBaseURIMapBundleParameterKey;
+ (id)_composedIdentifierForStateOfExtensionWithBundleIdentifier:(id)arg1 developerIdentifier:(id)arg2;
+ (id)_extensionDefaults;
+ (id)_skipLoadingEnabledExtensionsAtLaunchPreferenceKey;
+ (Class)_extensionDataClass;
+ (id)sharedController;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *tabIDToTabPositionForTabsInTransit; // @synthesize tabIDToTabPositionForTabsInTransit=_tabIDToTabPositionForTabsInTransit;
@property(nonatomic) __weak id <_SFNavigationIntentHandling> navigationIntentHandler; // @synthesize navigationIntentHandler=_navigationIntentHandler;
@property(retain, nonatomic) NSString *applicationNameForUserAgent; // @synthesize applicationNameForUserAgent=_applicationNameForUserAgent;
@property(retain, nonatomic) WKProcessPool *processPool; // @synthesize processPool=_processPool;
- (void)_didDiscoverExtensionCount:(int)arg1;
@property(readonly, nonatomic) _Bool parentalControlsAreEnabledForExtensions;
- (void)_showPromptForExtensionDisabledBecauseItDoesNotSupportThisVersionOfSafariWithMessage:(id)arg1 extensionIdentifier:(id)arg2;
- (id)_safariShortVersion;
- (void)_showAccessRequestAlertForExtension:(id)arg1 domains:(id)arg2 callingAPIName:(id)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)_notifyObserversContentBlockerListDidChange;
- (void)removeContentBlockerForExtension:(id)arg1;
- (void)compileDeclarativeNetRequestExtension:(id)arg1 rules:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_clearNewTabPreferenceIfNecessaryForRemovedExtensionWithComposedIdentifier:(id)arg1;
- (void)didDeactivateWindow;
- (id)lastFocusedWindow;
- (id)_allWindows;
- (void)_updateWindow:(id)arg1 updateInfo:(id)arg2;
- (id)_windowForWindowID:(id)arg1 webView:(id)arg2 extension:(id)arg3;
- (void)fireAttachmentEventsForTabsWithPreviousTabPositions:(id)arg1;
- (void)fireOnMovedEventForTabsWithPreviousTabPositions:(id)arg1 currentTabsPositions:(id)arg2;
- (void)fireAppropriateTabMovementEventForTabState:(id)arg1;
- (_Bool)_canSendMessageFromWebView:(id)arg1;
- (void)_captureVisibleTab:(id)arg1 format:(id)arg2 quality:(double)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_findTabInAnyWindowWithID:(double)arg1;
- (void)_relateParentTab:(id)arg1 toTab:(id)arg2;
- (void)_unpinTab:(id)arg1;
- (void)_pinTab:(id)arg1;
- (id)_duplicateTab:(id)arg1;
- (void)_createNewTabInWindow:(id)arg1 tabIndex:(id)arg2 url:(id)arg3 makeActive:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)_tabForWebView:(id)arg1;
- (id)_tabForTabID:(id)arg1 webView:(id)arg2 extension:(id)arg3;
- (unsigned long long)toolbarItemIdealPointSize;
- (void)_updateWebExtensionDataMapForExtension:(id)arg1;
- (id)_developerIdentifierForExtension:(id)arg1;
- (_Bool)extensionsEnabled;
@property(readonly, nonatomic) NSString *recentlyInstalledExtensionCountString;
- (id)_commandShortcutConflictAlertForExtension:(id)arg1 conflict:(id)arg2 okAction:(CDUnknownBlockType)arg3;
- (void)_reportCommandShortcutConflictsForExtension:(id)arg1 conflicts:(id)arg2 presentingViewController:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)reportCommandShortcutConflictsIfNecessaryForExtension:(id)arg1 presentingViewController:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)hasUpdatedToolbarItemBadgeTextInTabWithIdentifier:(id)arg1;
- (void)didViewToolbarItemBadgesInTabWithIdentifier:(id)arg1;
@property(readonly, nonatomic) SFWebExtension *currentExtensionForPermissionBanner;
- (void)hidePermissionBannerForExtension:(id)arg1;
- (void)showPermissionBannerForExtension:(id)arg1;
- (void)_extensionWithComposedIdentifier:(id)arg1 wasEnabledOrDisabledByExtensionSettings:(_Bool)arg2;
- (void)_updateExtensionsStateAfterExtensionSettingsWereUpdatedExternally:(id)arg1 shouldUpdateExtensionPermissionsAndEnabledState:(_Bool)arg2;
- (void)extensionSettingsWereUpdatedExternallyFromSettingsApp:(_Bool)arg1;
- (_Bool)_isExtensionBlockedByBlocklist:(id)arg1 developerIdentifier:(id)arg2;

// Remaining properties
@property(nonatomic) __weak id <SFWebExtensionsControllerDelegate> delegate; // @dynamic delegate;

@end

