//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MobileSafari/PKScribbleInteractionDelegate-Protocol.h>
#import <MobileSafari/PKScribbleInteractionElementSource-Protocol.h>
#import <MobileSafari/_SFFluidProgressViewDelegate-Protocol.h>

@class NSArray, NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSTimer, SFBadgeContainerView, SFMoreMenuButton, SFNavigationBarToggleButton, SFUnifiedTabBarItemAccessoryButtonArrangement, SFUnifiedTabBarItemAvailabilityAction, SFUnifiedTabBarItemTitleContainerView, UIButton, UIImage, UITextField, _SFFluidProgressView;
@protocol SFUnifiedTabBarItemViewDelegate;

@interface SFUnifiedTabBarItemView <_SFFluidProgressViewDelegate, PKScribbleInteractionDelegate, PKScribbleInteractionElementSource>
{
    SFUnifiedTabBarItemTitleContainerView *_titleContainer;
    UIButton *_closeButton;
    SFBadgeContainerView *_moreMenuButtonContainer;
    SFMoreMenuButton *_moreMenuButton;
    SFMoreMenuButton *_menuButton;
    SFNavigationBarToggleButton *_formatMenuButton;
    SFMoreMenuButton *_downloadProgressView;
    UIButton *_mediaStateMuteButton;
    UIButton *_voiceSearchButton;
    UIButton *_reloadButton;
    NSTimer *_reloadButtonExpirationTimer;
    UIButton *_stopButton;
    _Bool _showsStopReloadButton;
    _Bool _showingProgress;
    _Bool _titleContainerMasked;
    SFUnifiedTabBarItemAccessoryButtonArrangement *_accessoryButtonArrangement;
    double _leadingButtonsWidth;
    double _trailingButtonsWidth;
    NSTimer *_accessoryButtonUpdateTimer;
    _Bool _trailingButtonsHidden;
    UIButton *_firstExtensionButton;
    SFBadgeContainerView *_firstExtensionButtonContainer;
    UIButton *_secondExtensionButton;
    SFBadgeContainerView *_secondExtensionButtonContainer;
    UIButton *_multipleExtensionsButton;
    SFBadgeContainerView *_multipleExtensionsButtonContainer;
    UIButton *_closeButtonForHover;
    SFUnifiedTabBarItemAvailabilityAction *_currentAvailabilityLabelAction;
    NSMutableArray *_pendingAvailabilityLabelActions;
    NSTimer *_availabilityLabelTimer;
    NSMutableSet *_visibleAvailabilityButtonTypes;
    NSMutableDictionary *_availabilityButtons;
    NSMutableDictionary *_availabilityButtonTimers;
    _Bool _showsVoiceSearchButton;
    _Bool _showsTranslationIcon;
    _Bool _stopReloadButtonShowsStop;
    _Bool _hasUnviewedDownloads;
    _Bool _active;
    _Bool _showsCloseButton;
    _Bool _hidesIconWhenActive;
    _Bool _showsSquishedAccessoryViews;
    id <SFUnifiedTabBarItemViewDelegate> _delegate;
    NSDate *_lastReloadDate;
    unsigned long long _mediaStateIcon;
    _SFFluidProgressView *_progressView;
    long long _accessoryButtonLayout;
    SFUnifiedTabBarItemTitleContainerView *_squishedTitleContainer;
    NSArray *_extensionButtons;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSArray *extensionButtons; // @synthesize extensionButtons=_extensionButtons;
@property(nonatomic) _Bool showsSquishedAccessoryViews; // @synthesize showsSquishedAccessoryViews=_showsSquishedAccessoryViews;
@property(nonatomic) __weak SFUnifiedTabBarItemTitleContainerView *squishedTitleContainer; // @synthesize squishedTitleContainer=_squishedTitleContainer;
@property(nonatomic) long long accessoryButtonLayout; // @synthesize accessoryButtonLayout=_accessoryButtonLayout;
@property(nonatomic) _Bool hidesIconWhenActive; // @synthesize hidesIconWhenActive=_hidesIconWhenActive;
@property(nonatomic) _Bool showsCloseButton; // @synthesize showsCloseButton=_showsCloseButton;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
@property(retain, nonatomic) _SFFluidProgressView *progressView; // @synthesize progressView=_progressView;
@property(nonatomic) _Bool hasUnviewedDownloads; // @synthesize hasUnviewedDownloads=_hasUnviewedDownloads;
@property(nonatomic) unsigned long long mediaStateIcon; // @synthesize mediaStateIcon=_mediaStateIcon;
@property(retain, nonatomic) NSDate *lastReloadDate; // @synthesize lastReloadDate=_lastReloadDate;
@property(nonatomic) _Bool stopReloadButtonShowsStop; // @synthesize stopReloadButtonShowsStop=_stopReloadButtonShowsStop;
@property(nonatomic) _Bool showsTranslationIcon; // @synthesize showsTranslationIcon=_showsTranslationIcon;
@property(nonatomic) _Bool showsVoiceSearchButton; // @synthesize showsVoiceSearchButton=_showsVoiceSearchButton;
@property __weak id <SFUnifiedTabBarItemViewDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)canBecomeFocused;
- (id)pointerRegionIdentifierForInteractionLocation:(struct CGPoint)arg1;
- (void)_updateCloseButtonForHoverPosition;
- (_Bool)_commandPressed;
- (_Bool)_showsCloseButtonOnHover;
- (void)setHovering:(_Bool)arg1;
- (void)_hover:(id)arg1;
- (void)_scribbleInteraction:(id)arg1 focusElement:(id)arg2 initialFocusSelectionReferencePoint:(struct CGPoint)arg3 completion:(CDUnknownBlockType)arg4;
- (struct CGRect)_scribbleInteraction:(id)arg1 frameForElement:(id)arg2;
- (void)_scribbleInteraction:(id)arg1 requestElementsInRect:(struct CGRect)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_scribbleInteraction:(id)arg1 didFinishWritingInElement:(id)arg2;
- (void)_scribbleInteraction:(id)arg1 willBeginWritingInElement:(id)arg2;
- (_Bool)_scribbleInteraction:(id)arg1 focusWillTransformElement:(id)arg2;
- (_Bool)_scribbleInteraction:(id)arg1 shouldBeginAtLocation:(struct CGPoint)arg2;
- (_Bool)_scribbleInteractionIsEnabled:(id)arg1;
- (void)fluidProgressViewDidShowProgress:(id)arg1;
- (void)fluidProgressViewWillShowProgress:(id)arg1;
- (double)_squishedInsetToHideCloseButton;
- (void)_layOutTitleContainerMask;
- (void)_setTitleContainerMasked:(_Bool)arg1;
- (void)setSquishedInset:(double)arg1;
- (void)_startTimerForAvailabilityButtonOfType:(long long)arg1;
- (void)_dismissAvailabilityButtons:(id)arg1 animated:(_Bool)arg2;
- (void)_dismissAvailabilityButtonOfType:(long long)arg1 animated:(_Bool)arg2;
- (void)_dismissAvailabilityButtonsAnimated:(_Bool)arg1;
- (void)_dismissExpiredAvailabilityButtons;
- (void)_presentAvailabilityButtonWithAction:(id)arg1;
- (void)dismissTranslationAvailabilityButton;
- (void)dismissReaderAvailabilityButton;
- (void)endTransitioningSearchField;
- (void)beginTransitioningSearchField;
- (_Bool)_availabilityButtonsReplaceFormatMenuButton;
- (void)_stopAvailabilityLabelTimer;
- (void)_startAvailabilityLabelTimerWithDuration:(double)arg1;
- (void)_cancelAvailabilityLabelsAnimated:(_Bool)arg1;
- (void)_dismissAvailabilityLabelAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_presentAvailabilityLabel;
- (void)_showNextAvailabilityLabel;
- (void)_addPendingAvailabilityLabelAction:(id)arg1;
- (void)_requestAvailabilityLabelWithAction:(id)arg1;
- (id)test_reloadButtonExpirationTimer;
- (void)_stopReloadButtonExpirationTimer;
- (void)_startReloadButtonExpirationTimer;
- (_Bool)_coalescingAccessoryButtonUpdates;
- (void)_stopAccessoryButtonUpdateTimer;
- (void)_temporarilyCoalesceAccessoryButtonUpdates;
- (id)_accessoryButtonConfigurationWithImage:(id)arg1 scale:(long long)arg2;
- (id)_makeAccessoryButtonWithImage:(id)arg1 action:(SEL)arg2;
- (id)_makeAccessoryButtonWithImage:(id)arg1 scale:(long long)arg2 action:(SEL)arg3;
- (double)_insetForAccessoryButtonOfType:(long long)arg1;
- (double)_widthForAccessoryButtonOfType:(long long)arg1;
- (id)_viewForAccessoryButtonOfType:(long long)arg1;
- (_Bool)_showsAccessoryButtonOfType:(long long)arg1;
- (void)_setTrailingButtonsHidden:(_Bool)arg1;
- (void)_setIndexes:(id)arg1 ofAccessoryButtonTypes:(id)arg2 visible:(_Bool)arg3 animated:(_Bool)arg4;
- (double)_layOutIndexes:(id)arg1 ofAccessoryButtonTypes:(id)arg2 alongEdge:(long long)arg3 usingPresentationSize:(_Bool)arg4;
- (void)_layOutAccessoryButtons;
- (void)_updateAccessoryButtonsAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_updateAccessoryButtons;
- (void)_updateAccessoryButtonsWithAnimatedLayout;
- (void)updateAccessibilityIdentifier;
- (void)_searchFieldDidChange:(id)arg1;
- (void)_updateFormatMenuButtonAccessories;
- (_Bool)_showsFormatMenuButtonAccessories;
- (void)_updateFormatMenuButtonImage;
- (void)_updateMediaStateMuteButtonColor;
- (void)_updateMenuButtonColor;
- (void)_updateProgressViewColor;
- (void)_updateShowsProgressView;
- (void)_extensionButtonTapped:(id)arg1;
- (void)_mediaStateMuteButtonTapped;
- (void)_translationButtonTapped;
- (void)_readerButtonTapped;
- (void)_voiceSearchButtonTapped;
- (void)_stopButtonTapped;
- (void)_reloadButtonTapped;
- (void)_menuButtonClicked;
- (void)_menuButtonReceivedTouchDown;
- (void)_menuButtonTapped;
- (void)_closeButtonTapped;
@property(readonly, nonatomic) NSArray *squishedAccessoryViews;
- (void)setBarTheme:(id)arg1;
@property(nonatomic) _Bool showsBadgeOnExtensionsButton;
@property(nonatomic) _Bool showsBadgeOnMenuButton;
- (void)setDownloadProgress:(double)arg1 animated:(_Bool)arg2;
@property(nonatomic) long long contentAlignment;
@property(nonatomic) _Bool showsSearchField;
@property(retain, nonatomic) UITextField *searchField;
- (_Bool)_alwaysShowsStopReloadButton;
@property(nonatomic) _Bool showsStopReloadButton;
- (void)dismissAvailabilityOverlays;
- (void)_requestAvailabilityOverlayWithAction:(id)arg1;
- (void)showTranslationAvailabilityOverlay;
- (void)showReaderAvailabilityOverlay;
@property(nonatomic) _Bool menuButtonSelected;
@property(readonly, nonatomic) UIButton *menuButton;
@property(nonatomic) _Bool hasFocusedSensitiveFieldOnCurrentPage;
@property(nonatomic) _Bool showsNotSecureAnnotation;
@property(nonatomic) _Bool showsLockIcon;
@property(nonatomic) _Bool showsSearchIcon;
@property(nonatomic) unsigned long long startIndexOfTitleInTextWhenExpanded;
@property(copy, nonatomic) NSString *textWhenExpanded;
@property(copy, nonatomic) NSString *titleWhenActive;
@property(copy, nonatomic) NSString *title;
- (_Bool)_showsIcon;
@property(retain, nonatomic) UIImage *icon;
- (void)prepareForReuse;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

