//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDictionary;

@interface FCFeedPersonalizedItemScoreProfile : NSObject
{
    double _featureCtr;
    double _subscribedChannelCtr;
    double _paidNonpaidSubscriptionCtr;
    double _autoSubscribeCtr;
    double _computedGlobalScoreCoefficient;
    double _userFeedbackScore;
    double _userConversionScore;
    double _personalizationScore;
    double _firstPassPersonalizationScore;
    double _agedPersonalizationScore;
    double _diversifiedPersonalizationScore;
    double _bundlePaidMultiplier;
    double _bundleFreeMultiplier;
    double _featuredMultiplier;
    double _audioMultiplier;
    double _evergreenMultiplier;
    double _seenPenalty;
    double _readPenalty;
    double _sparseTagsPenalty;
    double _nicheContentMultiplier;
    NSDictionary *_nicheContentScores;
    NSDictionary *_cohortMemberships;
    NSDictionary *_articleCohortMemberships;
    NSDictionary *_conversionCohortMemberships;
    unsigned long long _groupingReason;
    unsigned long long _scoringType;
}

- (void).cxx_destruct;
@property(nonatomic) unsigned long long scoringType; // @synthesize scoringType=_scoringType;
@property(nonatomic) unsigned long long groupingReason; // @synthesize groupingReason=_groupingReason;
@property(retain, nonatomic) NSDictionary *conversionCohortMemberships; // @synthesize conversionCohortMemberships=_conversionCohortMemberships;
@property(retain, nonatomic) NSDictionary *articleCohortMemberships; // @synthesize articleCohortMemberships=_articleCohortMemberships;
@property(retain, nonatomic) NSDictionary *cohortMemberships; // @synthesize cohortMemberships=_cohortMemberships;
@property(retain, nonatomic) NSDictionary *nicheContentScores; // @synthesize nicheContentScores=_nicheContentScores;
@property(nonatomic) double nicheContentMultiplier; // @synthesize nicheContentMultiplier=_nicheContentMultiplier;
@property(nonatomic) double sparseTagsPenalty; // @synthesize sparseTagsPenalty=_sparseTagsPenalty;
@property(nonatomic) double readPenalty; // @synthesize readPenalty=_readPenalty;
@property(nonatomic) double seenPenalty; // @synthesize seenPenalty=_seenPenalty;
@property(nonatomic) double evergreenMultiplier; // @synthesize evergreenMultiplier=_evergreenMultiplier;
@property(nonatomic) double audioMultiplier; // @synthesize audioMultiplier=_audioMultiplier;
@property(nonatomic) double featuredMultiplier; // @synthesize featuredMultiplier=_featuredMultiplier;
@property(nonatomic) double bundleFreeMultiplier; // @synthesize bundleFreeMultiplier=_bundleFreeMultiplier;
@property(nonatomic) double bundlePaidMultiplier; // @synthesize bundlePaidMultiplier=_bundlePaidMultiplier;
@property(nonatomic) double diversifiedPersonalizationScore; // @synthesize diversifiedPersonalizationScore=_diversifiedPersonalizationScore;
@property(nonatomic) double agedPersonalizationScore; // @synthesize agedPersonalizationScore=_agedPersonalizationScore;
@property(nonatomic) double firstPassPersonalizationScore; // @synthesize firstPassPersonalizationScore=_firstPassPersonalizationScore;
@property(nonatomic) double personalizationScore; // @synthesize personalizationScore=_personalizationScore;
@property(nonatomic) double userConversionScore; // @synthesize userConversionScore=_userConversionScore;
@property(nonatomic) double userFeedbackScore; // @synthesize userFeedbackScore=_userFeedbackScore;
@property(nonatomic) double computedGlobalScoreCoefficient; // @synthesize computedGlobalScoreCoefficient=_computedGlobalScoreCoefficient;
@property(nonatomic) double autoSubscribeCtr; // @synthesize autoSubscribeCtr=_autoSubscribeCtr;
@property(nonatomic) double paidNonpaidSubscriptionCtr; // @synthesize paidNonpaidSubscriptionCtr=_paidNonpaidSubscriptionCtr;
@property(nonatomic) double subscribedChannelCtr; // @synthesize subscribedChannelCtr=_subscribedChannelCtr;
@property(nonatomic) double featureCtr; // @synthesize featureCtr=_featureCtr;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

