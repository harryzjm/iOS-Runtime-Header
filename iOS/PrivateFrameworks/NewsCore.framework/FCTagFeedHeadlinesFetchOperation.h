//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class FCCloudContext, FCFeedDescriptor, FCFeedRange, NSArray, NSDate, NSSet;
@protocol FCCoreConfiguration, FCFeedPersonalizing;

@interface FCTagFeedHeadlinesFetchOperation
{
    _Bool _fetchOrdinaryItemsFromCache;
    _Bool _resultFinished;
    CDUnknownBlockType _fetchCompletionHandler;
    NSDate *_topOfFeedDate;
    FCFeedRange *_freeFeedRange;
    FCFeedRange *_paidFeedRange;
    long long _maxFetchCount;
    NSArray *_precedingAdjacentHeadlines;
    NSArray *_followingAdjacentHeadlines;
    NSSet *_shownArticleIDs;
    NSSet *_shownClusterIDs;
    id <FCCoreConfiguration> _configuration;
    FCCloudContext *_cloudContext;
    FCFeedDescriptor *_feedDescriptor;
    id <FCFeedPersonalizing> _personalizer;
    NSArray *_resultOrdinaryHeadlines;
    NSArray *_resultPinnedHeadlines;
    FCFeedRange *_resultFetchedFreeRange;
    FCFeedRange *_resultFetchedPaidRange;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSSet *shownClusterIDs; // @synthesize shownClusterIDs=_shownClusterIDs;
@property(copy, nonatomic) NSSet *shownArticleIDs; // @synthesize shownArticleIDs=_shownArticleIDs;
@property(copy, nonatomic) NSArray *followingAdjacentHeadlines; // @synthesize followingAdjacentHeadlines=_followingAdjacentHeadlines;
@property(copy, nonatomic) NSArray *precedingAdjacentHeadlines; // @synthesize precedingAdjacentHeadlines=_precedingAdjacentHeadlines;
@property(nonatomic) long long maxFetchCount; // @synthesize maxFetchCount=_maxFetchCount;
@property(copy, nonatomic) FCFeedRange *paidFeedRange; // @synthesize paidFeedRange=_paidFeedRange;
@property(copy, nonatomic) FCFeedRange *freeFeedRange; // @synthesize freeFeedRange=_freeFeedRange;
@property(copy, nonatomic) NSDate *topOfFeedDate; // @synthesize topOfFeedDate=_topOfFeedDate;
@property(copy, nonatomic) CDUnknownBlockType fetchCompletionHandler; // @synthesize fetchCompletionHandler=_fetchCompletionHandler;
- (void)resetForRetry;
- (_Bool)canRetryWithError:(id)arg1 retryAfter:(id *)arg2;
- (unsigned long long)maxRetries;
- (void)operationWillFinishWithError:(id)arg1;
- (void)performOperation;
- (id)initWithConfiguration:(id)arg1 cloudContext:(id)arg2 feedDescriptor:(id)arg3 personalizer:(id)arg4;

@end

