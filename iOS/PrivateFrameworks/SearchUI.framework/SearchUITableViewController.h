//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <SearchUI/SearchUIFeedbackDelegateInternal-Protocol.h>
#import <SearchUI/SearchUITableViewTesting-Protocol.h>

@class NSString, SearchUIPeekDelegate, SearchUITableModel, SearchUITableView, TLKTableViewScrollTester, UIContextMenuInteraction;
@protocol SFFeedbackListener, SearchUIResultsViewDelegate;

@interface SearchUITableViewController <SearchUITableViewTesting, SearchUIFeedbackDelegateInternal>
{
    _Bool _shouldUseInsetRoundedSections;
    _Bool _shouldUseStandardSectionInsets;
    CDUnknownBlockType tableViewWillUpdateHandler;
    CDUnknownBlockType tableViewDidUpdateHandler;
    CDUnknownBlockType cellWillDisplayHandler;
    id <SFFeedbackListener> _feedbackListener;
    id <SearchUIResultsViewDelegate> _resultsViewDelegate;
    SearchUITableModel *_tableModel;
    SearchUIPeekDelegate *_peekDelegate;
    UIContextMenuInteraction *_contextInteraction;
    long long _preferredPunchoutIndex;
    SearchUITableModel *_stateRestoredTableModel;
    TLKTableViewScrollTester *_scrollTester;
    struct CGPoint _stateRestoredScrollPoint;
}

+ (void)applySeparatorStyleToCell:(id)arg1 forCurrentRowModel:(id)arg2 nextRowModel:(id)arg3;
@property(retain, nonatomic) TLKTableViewScrollTester *scrollTester; // @synthesize scrollTester=_scrollTester;
@property(nonatomic) struct CGPoint stateRestoredScrollPoint; // @synthesize stateRestoredScrollPoint=_stateRestoredScrollPoint;
@property(retain, nonatomic) SearchUITableModel *stateRestoredTableModel; // @synthesize stateRestoredTableModel=_stateRestoredTableModel;
@property(nonatomic) long long preferredPunchoutIndex; // @synthesize preferredPunchoutIndex=_preferredPunchoutIndex;
@property(retain, nonatomic) UIContextMenuInteraction *contextInteraction; // @synthesize contextInteraction=_contextInteraction;
@property(retain, nonatomic) SearchUIPeekDelegate *peekDelegate; // @synthesize peekDelegate=_peekDelegate;
@property(retain, nonatomic) SearchUITableModel *tableModel; // @synthesize tableModel=_tableModel;
@property(nonatomic) _Bool shouldUseStandardSectionInsets; // @synthesize shouldUseStandardSectionInsets=_shouldUseStandardSectionInsets;
@property(nonatomic) _Bool shouldUseInsetRoundedSections; // @synthesize shouldUseInsetRoundedSections=_shouldUseInsetRoundedSections;
@property __weak id <SearchUIResultsViewDelegate> resultsViewDelegate; // @synthesize resultsViewDelegate=_resultsViewDelegate;
@property(nonatomic) __weak id <SFFeedbackListener> feedbackListener; // @synthesize feedbackListener=_feedbackListener;
@property(copy, nonatomic) CDUnknownBlockType cellWillDisplayHandler; // @synthesize cellWillDisplayHandler;
@property(copy, nonatomic) CDUnknownBlockType tableViewDidUpdateHandler; // @synthesize tableViewDidUpdateHandler;
@property(copy, nonatomic) CDUnknownBlockType tableViewWillUpdateHandler; // @synthesize tableViewWillUpdateHandler;
- (void).cxx_destruct;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)forwardFeedbackForSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)toggleShowMoreForSection:(unsigned long long)arg1;
- (struct CGRect)scrollToIndexPath:(id)arg1;
- (void)tapAtIndexPath:(id)arg1;
- (id)currentTableModel;
- (_Bool)updateMustAccountForLayout;
- (void)performScrollTestWithHandlerForFirstScrollCompletion:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)performScrollTestWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)_canShowWhileLocked;
- (void)updateContentScrolledOffScreenStatus;
- (double)offScreenContentScrollDistance;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (void)deselectSelectedRows;
- (void)purgeMemory;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)scrollViewDidScroll:(id)arg1;
- (void)updateViewControllerTitle:(id)arg1;
- (void)cardSectionViewDidSelectPreferredPunchoutIndex:(long long)arg1;
- (void)updateSeparators;
- (void)cardSectionViewDidInvalidateSize:(id)arg1 animate:(_Bool)arg2;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateTableForNewCellHeightAnimated:(_Bool)arg1;
- (id)punchoutPickerDismissText:(id)arg1;
- (id)punchoutPickerTitleForIndexPath:(id)arg1;
- (id)punchoutsForIndexPath:(id)arg1;
- (id)nextCardForIndexPath:(id)arg1;
- (void)resignTextField;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)cellForIndexPath:(id)arg1 reuseIfPossible:(_Bool)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)willDismissViewController:(id)arg1;
- (void)showViewController:(id)arg1;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 forceModalPresentation:(_Bool)arg3;
- (void)presentViewController:(id)arg1;
- (void)requestAuthIfNecessaryAndPresentViewController:(id)arg1 animated:(_Bool)arg2 forceModalPresentation:(_Bool)arg3;
- (unsigned long long)handleSelectionAtIndexPath:(id)arg1 wasPop:(_Bool)arg2;
- (void)sendFeedbackForCardSectionEngagement:(id)arg1 atIndexPath:(id)arg2 withTriggerEvent:(unsigned long long)arg3;
- (id)cardSectionForIndexPath:(id)arg1;
- (id)resultForIndexPath:(id)arg1;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)fallbackPeekViewControllerForIndexPath:(id)arg1;
- (id)viewControllerForIndexPath:(id)arg1 isPeek:(_Bool)arg2;
- (void)traitCollectionDidChange:(id)arg1;
@property(nonatomic) _Bool threeDTouchEnabled;
- (void)updateLayoutMarginsWithSize:(struct CGSize)arg1 orientation:(long long)arg2;
- (void)updateLayoutMargins;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)addOrbInteractionIfNeeded;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) SearchUITableView *tableView; // @dynamic tableView;

@end

