//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Pegasus/BSServiceConnectionListenerDelegate-Protocol.h>
#import <Pegasus/_PGBackgroundPIPServiceConnectionTargetDelegate-Protocol.h>

@class BSServiceConnectionListener, NSMutableDictionary, NSMutableSet, NSSet, NSString;
@protocol OS_dispatch_queue, PGBackgroundPIPServiceDelegate;

__attribute__((visibility("hidden")))
@interface PGBackgroundPIPService : NSObject <BSServiceConnectionListenerDelegate, _PGBackgroundPIPServiceConnectionTargetDelegate>
{
    BSServiceConnectionListener *_connectionListener;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableSet *_mutableIdentifiersForAuthorizedActivitySessions;
    NSMutableSet *_lock_targets;
    NSMutableDictionary *_lock_targetsByActivitySessionIdentifier;
    struct os_unfair_lock_s _lock;
    id <PGBackgroundPIPServiceDelegate> _delegate;
    NSSet *_identifiersForAuthorizedActivitySessions;
}

- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSSet *identifiersForAuthorizedActivitySessions; // @synthesize identifiersForAuthorizedActivitySessions=_identifiersForAuthorizedActivitySessions;
@property(nonatomic) __weak id <PGBackgroundPIPServiceDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_targetForIdentifier:(id)arg1;
- (void)revokeAuthorizationActivitySessionWithIdentifier:(id)arg1;
- (_Bool)hasAcquiredAuthorizationForActivitySessionWithIdentifier:(id)arg1 appBundleIdentifier:(id)arg2;
- (void)pipDidStopForRemoteObject:(id)arg1;
- (void)pipDidStartForRemoteObject:(id)arg1;
- (void)backgroundPIPTargetDidInvalidate:(id)arg1;
- (void)backgroundPIPTargetRequestsAuthorization:(id)arg1;
- (void)_handleInvalidatedTarget:(id)arg1;
- (void)listener:(id)arg1 didReceiveConnection:(id)arg2 withContext:(id)arg3;
- (void)dealloc;
- (void)startListener;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

