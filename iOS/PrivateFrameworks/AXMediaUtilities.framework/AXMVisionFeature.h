//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AXMediaUtilities/AXMJSONSerializable-Protocol.h>
#import <AXMediaUtilities/NSSecureCoding-Protocol.h>

@class AXMVisionFeatureAestheticsResult, AXMVisionFeatureAssetMetadata, AXMVisionFeatureColorInfo, AXMVisionFeatureFaceDetectionResult, CMDeviceMotion, NSArray, NSDictionary, NSMutableDictionary, NSString;
@protocol NSSecureCoding;

@interface AXMVisionFeature : NSObject <AXMJSONSerializable, NSSecureCoding>
{
    unsigned long long _featureType;
    NSArray *_subfeatures;
    NSString *_barcodeType;
    long long _ocrFeatureType;
    NSArray *_effectiveTextDetectionLocales;
    double _creationDate;
    struct CGRect _frame;
    struct CGRect _normalizedFrame;
    NSString *_value;
    _Bool _isValueSpeakable;
    AXMVisionFeatureColorInfo *_colorInfo;
    AXMVisionFeatureAssetMetadata *_assetMetadata;
    double _blur;
    double _brightness;
    double _confidence;
    _Bool _isLowConfidence;
    struct CGAffineTransform _horizonTransform;
    float _horizonAngle;
    AXMVisionFeatureFaceDetectionResult *_faceDetectionResult;
    unsigned long long _faceId;
    CDStruct_14d5dc5e _facePose;
    struct CGSize _canvasSize;
    NSString *_modelID;
    NSString *_classificationLabel;
    NSString *_classificationLocalizedValue;
    NSString *_caption;
    NSMutableDictionary *_featureGates;
    _Bool _captionMayContainSensitiveContent;
    long long _uiClass;
    AXMVisionFeatureAestheticsResult *_aestheticsResult;
    CMDeviceMotion *_deviceMotion;
    long long _deviceOrientation;
    long long _cameraType;
    NSObject<NSSecureCoding> *_userContext;
    NSDictionary *_debugRectangles;
    NSString *_overrideLabel;
    struct CGRect _unpaddedDetectedFaceRect;
}

+ (id)flattenedFeatureList:(id)arg1;
+ (void)_append:(id)arg1 toList:(id)arg2;
+ (id)nameForOCRType:(long long)arg1;
+ (id)nameForFeatureType:(unsigned long long)arg1;
+ (long long)uiClassForName:(id)arg1;
+ (id)nameForUIClass:(long long)arg1;
+ (long long)locationForNormalizedFrame:(struct CGRect)arg1 previousLocation:(long long)arg2 usingThirds:(_Bool)arg3;
+ (id)localizedStringForLocation:(long long)arg1 isSubjectImplicit:(_Bool)arg2;
+ (id)nameForLocation:(long long)arg1;
+ (_Bool)supportsSecureCoding;
+ (struct CGRect)_aspectFaceRectFromSquareFaceRect:(struct CGRect)arg1 sizeInPixels:(struct CGSize)arg2;
+ (id)featureWithCameraType:(long long)arg1;
+ (id)featureWithDeviceMotion:(id)arg1 orientation:(long long)arg2;
+ (id)featureWithAssetMetadata:(id)arg1;
+ (id)featureWithColorInfo:(id)arg1 canvasSize:(struct CGSize)arg2;
+ (id)featureWithMediaLegibility:(id)arg1;
+ (id)featureWithIconClass:(id)arg1 confidence:(double)arg2;
+ (id)textSequence:(id)arg1 canvasSize:(struct CGSize)arg2;
+ (id)textLineWithText:(id)arg1 boundingBox:(struct CGRect)arg2 sequences:(id)arg3 canvasSize:(struct CGSize)arg4;
+ (id)textRegionWithText:(id)arg1 isSpeakable:(_Bool)arg2 boundingBox:(struct CGRect)arg3 lines:(id)arg4 canvasSize:(struct CGSize)arg5;
+ (id)textDocumentWithText:(id)arg1 isSpeakable:(_Bool)arg2 boundingBox:(struct CGRect)arg3 regions:(id)arg4 canvasSize:(struct CGSize)arg5;
+ (id)groupedFeatureWithElementRect:(struct CGRect)arg1 uiClass:(long long)arg2 confidence:(double)arg3 label:(id)arg4 canvasSize:(struct CGSize)arg5 subElements:(id)arg6;
+ (id)featureWithVisionRequest:(id)arg1 axElementRect:(struct CGRect)arg2 confidence:(double)arg3 uiClass:(long long)arg4 label:(id)arg5 canvasSize:(struct CGSize)arg6;
+ (id)featureWithVisionRequest:(id)arg1 rectangleResult:(id)arg2 canvasSize:(struct CGSize)arg3;
+ (id)featureWithImageAestheticsObservation:(id)arg1;
+ (id)featureWithTaxonomyNode:(id)arg1 canvasSize:(struct CGSize)arg2;
+ (id)significantEventClassificationWithCategory:(id)arg1 confidence:(float)arg2 canvasSize:(struct CGSize)arg3;
+ (id)nsfwClassificationWithCategory:(id)arg1 confidence:(float)arg2 canvasSize:(struct CGSize)arg3;
+ (id)sceneClassificationWithLabel:(id)arg1 localizedValue:(id)arg2 confidence:(float)arg3 canvasSize:(struct CGSize)arg4;
+ (id)objectClassificationWithLabel:(id)arg1 localizedValue:(id)arg2 boundingBox:(struct CGRect)arg3 confidence:(float)arg4 canvasSize:(struct CGSize)arg5;
+ (id)featureWithVisionRequest:(id)arg1 horizonResult:(id)arg2 canvasSize:(struct CGSize)arg3;
+ (id)featureWithVisionRequest:(id)arg1 brightnessValue:(float)arg2 canvasSize:(struct CGSize)arg3;
+ (id)featureWithVisionRequest:(id)arg1 blurValue:(float)arg2 canvasSize:(struct CGSize)arg3;
+ (id)personWithBoundingBox:(struct CGRect)arg1 confidence:(double)arg2 canvasSize:(struct CGSize)arg3;
+ (id)prominentObjectWithBoundingBox:(struct CGRect)arg1 canvasSize:(struct CGSize)arg2 confidence:(double)arg3;
+ (id)featureWithFaceDetectionResult:(id)arg1 canvasSize:(struct CGSize)arg2;
+ (id)featureWithMetadata:(id)arg1 interfaceOrientation:(long long)arg2 isMirrored:(_Bool)arg3 canvasSize:(struct CGSize)arg4;
+ (id)unitTestingHorizonFeature;
+ (id)unitTestingFaceFeatureWithSize:(struct CGSize)arg1 faceFrame:(struct CGRect)arg2;
+ (id)unitTestingProminentObjectFeature;
+ (id)unitTestingFaceFeature;
+ (id)unitTestingFeature;
+ (id)unitTestingFeatureWithType:(unsigned long long)arg1 canvasSize:(struct CGSize)arg2 frame:(struct CGRect)arg3 value:(id)arg4 valueIsSpeakable:(_Bool)arg5 barcodeType:(id)arg6 ocrFeatureType:(long long)arg7 subFeatures:(id)arg8;
+ (id)unitTestingTeatureWithType:(unsigned long long)arg1 axElementRect:(struct CGRect)arg2 confidence:(double)arg3 uiClass:(long long)arg4 label:(id)arg5 canvasSize:(struct CGSize)arg6;
+ (id)unitTestingFeatureWithType:(unsigned long long)arg1 canvasSize:(struct CGSize)arg2 frame:(struct CGRect)arg3 value:(id)arg4 barcodeType:(id)arg5 ocrFeatureType:(long long)arg6 subFeatures:(id)arg7;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *overrideLabel; // @synthesize overrideLabel=_overrideLabel;
@property(retain, nonatomic) NSDictionary *debugRectangles; // @synthesize debugRectangles=_debugRectangles;
@property(nonatomic) _Bool captionMayContainSensitiveContent; // @synthesize captionMayContainSensitiveContent=_captionMayContainSensitiveContent;
@property(retain, nonatomic) NSObject<NSSecureCoding> *userContext; // @synthesize userContext=_userContext;
@property(readonly, nonatomic) long long cameraType; // @synthesize cameraType=_cameraType;
@property(readonly, nonatomic) long long deviceOrientation; // @synthesize deviceOrientation=_deviceOrientation;
@property(readonly, nonatomic) CMDeviceMotion *deviceMotion; // @synthesize deviceMotion=_deviceMotion;
@property(readonly, nonatomic) AXMVisionFeatureAestheticsResult *aestheticsResult; // @synthesize aestheticsResult=_aestheticsResult;
@property(readonly, nonatomic) struct CGRect unpaddedDetectedFaceRect; // @synthesize unpaddedDetectedFaceRect=_unpaddedDetectedFaceRect;
@property(readonly, nonatomic) long long uiClass; // @synthesize uiClass=_uiClass;
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToAXMVisionFeature:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSString *debugDescription;
- (void)addFeatureGate:(id)arg1 userInfo:(id)arg2;
- (id)_nameForOCRFeatureType:(long long)arg1;
@property(readonly, nonatomic) _Bool isImageAesthetics;
@property(readonly, nonatomic) _Bool isIconClass;
@property(readonly, nonatomic) _Bool isProminentObject;
@property(readonly, nonatomic) _Bool isCameraMetadata;
@property(readonly, nonatomic) _Bool isMotion;
@property(readonly, nonatomic) _Bool isTextDiacritic;
@property(readonly, nonatomic) _Bool isTextCharacter;
@property(readonly, nonatomic) _Bool isTextSequence;
@property(readonly, nonatomic) _Bool isTextLine;
@property(readonly, nonatomic) _Bool isTextRegion;
@property(readonly, nonatomic) _Bool isTextDocument;
@property(readonly, nonatomic) _Bool isOCR;
@property(readonly, nonatomic) _Bool isRectangle;
@property(readonly, nonatomic) _Bool isAssetMetadata;
@property(readonly, nonatomic) _Bool isMediaLegibility;
@property(readonly, nonatomic) _Bool isHorizon;
@property(readonly, nonatomic) _Bool isBlur;
@property(readonly, nonatomic) _Bool isBrightness;
@property(readonly, nonatomic) _Bool isColor;
@property(readonly, nonatomic) _Bool isCaption;
@property(readonly, nonatomic) _Bool isModelClassification;
@property(readonly, nonatomic) _Bool isSignificantEventClassification;
@property(readonly, nonatomic) _Bool isNSFWClassification;
@property(readonly, nonatomic) _Bool isObjectClassification;
@property(readonly, nonatomic) _Bool isSceneClassification;
@property(readonly, nonatomic) _Bool isPerson;
@property(readonly, nonatomic) _Bool isRealtimeFace;
@property(readonly, nonatomic) _Bool isFace;
@property(readonly, nonatomic) _Bool isBarcode;
@property(readonly, nonatomic) _Bool isValueSpeakable;
@property(readonly, nonatomic) NSString *value;
- (long long)locationUsingThirds:(_Bool)arg1;
@property(readonly, nonatomic) NSDictionary *featureGates;
@property(readonly, nonatomic) NSString *caption;
@property(readonly, nonatomic) NSString *classificationLocalizedValue;
@property(readonly, nonatomic) NSString *classificationLabel;
@property(readonly, nonatomic) float horizonAngle;
@property(readonly, nonatomic) struct CGAffineTransform horizonTransform;
- (CDStruct_14d5dc5e)facePose;
@property(readonly, nonatomic) unsigned long long faceId;
@property(readonly, nonatomic) AXMVisionFeatureFaceDetectionResult *faceDetectionResult;
@property(readonly, nonatomic) double brightness;
@property(readonly, nonatomic) double blur;
@property(readonly, nonatomic) AXMVisionFeatureAssetMetadata *assetMetadata;
@property(readonly, nonatomic) AXMVisionFeatureColorInfo *colorInfo;
- (id)effectiveTextDetectionLocales;
@property(readonly, nonatomic) long long ocrFeatureType;
@property(readonly, nonatomic) NSString *barcodeType;
@property(readonly, nonatomic) _Bool isLowConfidence;
@property(readonly, nonatomic) double confidence;
@property(readonly, nonatomic) struct CGRect normalizedFrame;
@property(readonly, nonatomic) struct CGRect frame;
@property(readonly, nonatomic) struct CGSize canvasSize;
@property(readonly, nonatomic) double creationDate;
@property(readonly, nonatomic) NSArray *subfeatures;
@property(readonly, nonatomic) unsigned long long featureType;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (void)_serializeWithCoder:(id)arg1 orDictionary:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_init;

// Remaining properties
@property(readonly) Class superclass;

@end

