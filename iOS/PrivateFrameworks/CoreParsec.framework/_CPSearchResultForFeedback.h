//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ProtocolBuffer/PBCodable.h>

#import <CoreParsec/NSSecureCoding-Protocol.h>
#import <CoreParsec/_CPSearchResultForFeedback-Protocol.h>

@class NSData, NSString, _CPActionItemForFeedback, _CPPunchoutForFeedback, _CPStruct;
@protocol NSCopying;

@interface _CPSearchResultForFeedback : PBCodable <_CPSearchResultForFeedback, NSSecureCoding>
{
    _Bool _isStaticCorrection;
    _Bool _isLocalApplicationResult;
    _Bool _publiclyIndexable;
    _Bool _isFuzzyMatch;
    _Bool _doNotFold;
    _Bool _shouldUseCompactDisplay;
    _Bool _noGoTakeover;
    _Bool _preferTopPlatter;
    _Bool _wasCompact;
    _Bool _didTakeoverGo;
    _Bool _usesCompactDisplay;
    int _topHit;
    int _type;
    int _knownResultBundleId;
    int _knownSectionBundleIdentifier;
    int _knownApplicationBundleIdentifier;
    NSString *_identifier;
    _CPActionItemForFeedback *_action;
    _CPPunchoutForFeedback *_punchout;
    _CPStruct *_localFeatures;
    NSString *_resultType;
    double _rankingScore;
    unsigned long long _queryId;
    NSString *_intendedQuery;
    NSString *_correctedQuery;
    NSString *_completedQuery;
    NSString *_fbr;
    NSString *_userInput;
    unsigned long long _blockId;
    unsigned long long _hashedIdentifier;
    NSString *_resultBundleId;
    NSString *_sectionBundleIdentifier;
    NSString *_applicationBundleIdentifier;
    NSData *_entityData;
    unsigned long long _whichResultbundleidentifier;
    unsigned long long _whichSectionbundleid;
    unsigned long long _whichApplicationbundleid;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long whichApplicationbundleid; // @synthesize whichApplicationbundleid=_whichApplicationbundleid;
@property(readonly, nonatomic) unsigned long long whichSectionbundleid; // @synthesize whichSectionbundleid=_whichSectionbundleid;
@property(readonly, nonatomic) unsigned long long whichResultbundleidentifier; // @synthesize whichResultbundleidentifier=_whichResultbundleidentifier;
@property(nonatomic) _Bool usesCompactDisplay; // @synthesize usesCompactDisplay=_usesCompactDisplay;
@property(nonatomic) _Bool didTakeoverGo; // @synthesize didTakeoverGo=_didTakeoverGo;
@property(nonatomic) _Bool wasCompact; // @synthesize wasCompact=_wasCompact;
@property(nonatomic) _Bool preferTopPlatter; // @synthesize preferTopPlatter=_preferTopPlatter;
@property(nonatomic) _Bool noGoTakeover; // @synthesize noGoTakeover=_noGoTakeover;
@property(nonatomic) _Bool shouldUseCompactDisplay; // @synthesize shouldUseCompactDisplay=_shouldUseCompactDisplay;
@property(copy, nonatomic) NSData *entityData; // @synthesize entityData=_entityData;
@property(nonatomic) unsigned long long hashedIdentifier; // @synthesize hashedIdentifier=_hashedIdentifier;
@property(nonatomic) unsigned long long blockId; // @synthesize blockId=_blockId;
@property(nonatomic) _Bool doNotFold; // @synthesize doNotFold=_doNotFold;
@property(nonatomic) _Bool isFuzzyMatch; // @synthesize isFuzzyMatch=_isFuzzyMatch;
@property(copy, nonatomic) NSString *userInput; // @synthesize userInput=_userInput;
@property(copy, nonatomic) NSString *fbr; // @synthesize fbr=_fbr;
@property(nonatomic) _Bool publiclyIndexable; // @synthesize publiclyIndexable=_publiclyIndexable;
@property(nonatomic) _Bool isLocalApplicationResult; // @synthesize isLocalApplicationResult=_isLocalApplicationResult;
@property(copy, nonatomic) NSString *completedQuery; // @synthesize completedQuery=_completedQuery;
@property(copy, nonatomic) NSString *correctedQuery; // @synthesize correctedQuery=_correctedQuery;
@property(copy, nonatomic) NSString *intendedQuery; // @synthesize intendedQuery=_intendedQuery;
@property(nonatomic) unsigned long long queryId; // @synthesize queryId=_queryId;
@property(nonatomic) _Bool isStaticCorrection; // @synthesize isStaticCorrection=_isStaticCorrection;
@property(nonatomic) double rankingScore; // @synthesize rankingScore=_rankingScore;
@property(copy, nonatomic) NSString *resultType; // @synthesize resultType=_resultType;
@property(retain, nonatomic) _CPStruct *localFeatures; // @synthesize localFeatures=_localFeatures;
@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) _CPPunchoutForFeedback *punchout; // @synthesize punchout=_punchout;
@property(retain, nonatomic) _CPActionItemForFeedback *action; // @synthesize action=_action;
@property(nonatomic) int topHit; // @synthesize topHit=_topHit;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
@property(readonly, nonatomic) NSData *jsonData;
- (id)dictionaryRepresentation;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
@property(nonatomic) int knownApplicationBundleIdentifier; // @synthesize knownApplicationBundleIdentifier=_knownApplicationBundleIdentifier;
@property(copy, nonatomic) NSString *applicationBundleIdentifier; // @synthesize applicationBundleIdentifier=_applicationBundleIdentifier;
@property(nonatomic) int knownSectionBundleIdentifier; // @synthesize knownSectionBundleIdentifier=_knownSectionBundleIdentifier;
@property(copy, nonatomic) NSString *sectionBundleIdentifier; // @synthesize sectionBundleIdentifier=_sectionBundleIdentifier;
@property(nonatomic) int knownResultBundleId; // @synthesize knownResultBundleId=_knownResultBundleId;
@property(copy, nonatomic) NSString *resultBundleId; // @synthesize resultBundleId=_resultBundleId;
- (void)clearApplicationbundleid;
- (void)clearSectionbundleid;
- (void)clearResultbundleidentifier;
- (id)initWithFacade:(id)arg1;
- (id)feedbackJSON;
@property(readonly, copy, nonatomic) NSString *jsonApplicationBundleIdentifier;
@property(readonly, copy, nonatomic) NSString *jsonSectionBundleIdentifier;
@property(readonly, copy, nonatomic) NSString *jsonResultBundleIdentifier;
@property(readonly, copy, nonatomic) id <NSCopying> jsonIdentifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

