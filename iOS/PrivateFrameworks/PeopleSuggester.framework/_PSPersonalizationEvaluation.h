//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MLModelConfiguration, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSURL, NSUserDefaults;
@protocol _DKKnowledgeQuerying;

@interface _PSPersonalizationEvaluation : NSObject
{
    NSDictionary *_recipe;
    NSString *_adaptableModelDeployPath;
    long long _adaptationStrategy;
    id <_DKKnowledgeQuerying> _knowledgeStore;
    NSMutableArray *_featureDateForAllShareEvents;
    NSMutableArray *_featureDateForShareEventsSinceLastAdaptation;
    NSMutableDictionary *_featureNameDict;
    NSMutableArray *_featureMatricesForAllShareEvents;
    NSMutableArray *_sampledFeatureVectors;
    NSMutableDictionary *_sampledFeatureVectorsForSplits;
    NSDictionary *_selectedFeaturesConfig;
    NSMutableArray *_results;
    MLModelConfiguration *_adaptableModelConfiguration;
    NSURL *_intermediateCompiledModelURL;
    NSNumber *_trainDataCount;
    NSNumber *_testDataCount;
    NSNumber *_batchSize;
    NSNumber *_topN;
    NSNumber *_epoc;
    NSNumber *_evaluationIterationCount;
    NSNumber *_testSplitPercent;
    NSNumber *_swapOK;
    NSNumber *_accuracyGainThresholdForSwap;
    NSNumber *_engagementRateGainThresholdForSwap;
    NSNumber *_minimumTestDataSizeForSwap;
    NSNumber *_numClasses;
    NSNumber *_numTrees;
    NSNumber *_maxDepth;
    NSNumber *_learningRate;
    NSNumber *_minChildWeight;
    NSNumber *_recipeID;
    NSNumber *_minSampleCountForAdaptation;
    NSUserDefaults *_psAdaptationDefaults;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSUserDefaults *psAdaptationDefaults; // @synthesize psAdaptationDefaults=_psAdaptationDefaults;
@property(retain, nonatomic) NSNumber *minSampleCountForAdaptation; // @synthesize minSampleCountForAdaptation=_minSampleCountForAdaptation;
@property(retain, nonatomic) NSNumber *recipeID; // @synthesize recipeID=_recipeID;
@property(retain, nonatomic) NSNumber *minChildWeight; // @synthesize minChildWeight=_minChildWeight;
@property(retain, nonatomic) NSNumber *learningRate; // @synthesize learningRate=_learningRate;
@property(retain, nonatomic) NSNumber *maxDepth; // @synthesize maxDepth=_maxDepth;
@property(retain, nonatomic) NSNumber *numTrees; // @synthesize numTrees=_numTrees;
@property(retain, nonatomic) NSNumber *numClasses; // @synthesize numClasses=_numClasses;
@property(retain, nonatomic) NSNumber *minimumTestDataSizeForSwap; // @synthesize minimumTestDataSizeForSwap=_minimumTestDataSizeForSwap;
@property(retain, nonatomic) NSNumber *engagementRateGainThresholdForSwap; // @synthesize engagementRateGainThresholdForSwap=_engagementRateGainThresholdForSwap;
@property(retain, nonatomic) NSNumber *accuracyGainThresholdForSwap; // @synthesize accuracyGainThresholdForSwap=_accuracyGainThresholdForSwap;
@property(retain, nonatomic) NSNumber *swapOK; // @synthesize swapOK=_swapOK;
@property(retain, nonatomic) NSNumber *testSplitPercent; // @synthesize testSplitPercent=_testSplitPercent;
@property(retain, nonatomic) NSNumber *evaluationIterationCount; // @synthesize evaluationIterationCount=_evaluationIterationCount;
@property(retain, nonatomic) NSNumber *epoc; // @synthesize epoc=_epoc;
@property(retain, nonatomic) NSNumber *topN; // @synthesize topN=_topN;
@property(retain, nonatomic) NSNumber *batchSize; // @synthesize batchSize=_batchSize;
@property(retain, nonatomic) NSNumber *testDataCount; // @synthesize testDataCount=_testDataCount;
@property(retain, nonatomic) NSNumber *trainDataCount; // @synthesize trainDataCount=_trainDataCount;
@property(retain, nonatomic) NSURL *intermediateCompiledModelURL; // @synthesize intermediateCompiledModelURL=_intermediateCompiledModelURL;
@property(retain, nonatomic) MLModelConfiguration *adaptableModelConfiguration; // @synthesize adaptableModelConfiguration=_adaptableModelConfiguration;
@property(retain, nonatomic) NSMutableArray *results; // @synthesize results=_results;
@property(retain, nonatomic) NSDictionary *selectedFeaturesConfig; // @synthesize selectedFeaturesConfig=_selectedFeaturesConfig;
@property(retain, nonatomic) NSMutableDictionary *sampledFeatureVectorsForSplits; // @synthesize sampledFeatureVectorsForSplits=_sampledFeatureVectorsForSplits;
@property(retain, nonatomic) NSMutableArray *sampledFeatureVectors; // @synthesize sampledFeatureVectors=_sampledFeatureVectors;
@property(retain, nonatomic) NSMutableArray *featureMatricesForAllShareEvents; // @synthesize featureMatricesForAllShareEvents=_featureMatricesForAllShareEvents;
@property(retain, nonatomic) NSMutableDictionary *featureNameDict; // @synthesize featureNameDict=_featureNameDict;
@property(retain, nonatomic) NSMutableArray *featureDateForShareEventsSinceLastAdaptation; // @synthesize featureDateForShareEventsSinceLastAdaptation=_featureDateForShareEventsSinceLastAdaptation;
@property(retain, nonatomic) NSMutableArray *featureDateForAllShareEvents; // @synthesize featureDateForAllShareEvents=_featureDateForAllShareEvents;
@property(retain, nonatomic) id <_DKKnowledgeQuerying> knowledgeStore; // @synthesize knowledgeStore=_knowledgeStore;
@property(nonatomic) long long adaptationStrategy; // @synthesize adaptationStrategy=_adaptationStrategy;
@property(retain, nonatomic) NSString *adaptableModelDeployPath; // @synthesize adaptableModelDeployPath=_adaptableModelDeployPath;
@property(readonly, nonatomic) NSDictionary *recipe; // @synthesize recipe=_recipe;
- (void)adaptMLModel:(id)arg1 withTrainingData:(id)arg2 modelConfiguration:(id)arg3;
- (void)adaptMLModel:(id)arg1 overDataSplit:(id)arg2 dataStartingIndex:(long long)arg3 dataLength:(long long)arg4;
- (id)updateMLModelWithURL:(id)arg1 overDataSplit:(id)arg2;
- (id)evaluateClassicMLModel:(id)arg1;
- (id)createMLArrayBatchProviderOverDataSplitType:(id)arg1 mlModelType:(id)arg2 dataStartingIndex:(long long)arg3 dataLength:(long long)arg4;
- (id)createMLArrayBatchProviderOverDataSplitType:(id)arg1 mlModelType:(id)arg2;
- (id)createMLFeatureProviderInstanceForMLModelType:(id)arg1 forFeatureVector:(id)arg2;
- (id)createMLFeatureProviderArrayFromSingleShareEventData:(id)arg1 forMLModel:(id)arg2;
- (id)engagementSimulationWithMLModel:(id)arg1 mlModelType:(id)arg2 labelName:(id)arg3;
- (id)measureTestAccuracyOf:(id)arg1 againstTrueValuesOf:(id)arg2 labelName:(id)arg3;
- (void)getSamplesWithTestSplitPercentWithSeed:(int)arg1;
- (void)sampleFromDataWithSeed:(int)arg1;
- (unsigned long long)bucketedValue:(unsigned long long)arg1;
- (void)processData;
- (id)processDataWithQuery:(id)arg1;
- (id)loadAdaptableModelUnderDirectory:(id)arg1;
- (void)updateAdaptableModelConfigWithUpdateType:(long long)arg1 numTrees:(id)arg2;
- (_Bool)cloneAdaptableModel:(id)arg1 toFilePath:(id)arg2 originalXgboostModelName:(id)arg3 clonedXgboostModelName:(id)arg4;
- (id)loadDefaultModel;
- (id)runAdaptationAndEvaluationWithFeaturesConfigDeployPath:(id)arg1 adaptableModelDeployPath:(id)arg2;
- (_Bool)performPrerequisitesBeforeAdaptationWithFeaturesConfigDeployPath:(id)arg1;
- (void)setParametersFromRecipe;
- (id)runAdaptationAndEvaluation;
- (void)setLastDayOfAdaptation:(id)arg1;
- (id)initWithRecipe:(id)arg1 knowledgeStore:(id)arg2;

@end

