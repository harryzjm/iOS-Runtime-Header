//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class BKSProcessAssertion, BSAbsoluteMachTimer, BSServiceConnectionEndpointInjector, FBSCAContextSceneLayer, NSArray, NSMutableSet, NSString, NSXPCConnection, UIKBArbiterClientFocusContext, _UIKeyboardArbiter;

__attribute__((visibility("hidden")))
@interface _UIKeyboardArbiterClientHandle : NSObject
{
    _Bool _invalidated;
    NSString *_bundleIdentifier;
    _UIKeyboardArbiter *_owner;
    _Bool _running;
    FBSCAContextSceneLayer *_sceneLayer;
    UIKBArbiterClientFocusContext *_remoteFocusContext;
    _Bool _active;
    unsigned long long _wantedState;
    double _level;
    NSMutableSet *_hostedPids;
    _Bool _checkingShowability;
    int _suppressionCount;
    int _childrenSuppressionCount;
    _Bool _wantsFence;
    _Bool _deactivating;
    _Bool _keyboardOnScreen;
    _Bool _multipleScenes;
    BSAbsoluteMachTimer *_acquiringFocusTimer;
    BKSProcessAssertion *_remoteKeepAliveAssertion;
    unsigned long long _remoteKeepAliveAssertionCount;
    unsigned long long _remoteKeepAliveTimerCount;
    NSArray *_cachedContext;
    BSServiceConnectionEndpointInjector *_endpointGrantInjector;
    _Bool _inputUIHost;
    _Bool _hasDebugInformationEntitlement;
    _Bool _acquiringFocus;
    _Bool _requestedCorrectionOfClientSceneIdentityWhileAcquiringFocus;
    int _prevActiveIdentifier;
    NSXPCConnection *_connection;
    double _iavHeight;
    CDUnknownBlockType _pendingNotifyKeyboardChanged;
}

+ (id)handlerWithArbiter:(id)arg1 forConnection:(id)arg2;
- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType pendingNotifyKeyboardChanged; // @synthesize pendingNotifyKeyboardChanged=_pendingNotifyKeyboardChanged;
@property(nonatomic) _Bool requestedCorrectionOfClientSceneIdentityWhileAcquiringFocus; // @synthesize requestedCorrectionOfClientSceneIdentityWhileAcquiringFocus=_requestedCorrectionOfClientSceneIdentityWhileAcquiringFocus;
@property(readonly, nonatomic, getter=isAcquiringFocus) _Bool acquiringFocus; // @synthesize acquiringFocus=_acquiringFocus;
@property(nonatomic) _Bool hasDebugInformationEntitlement; // @synthesize hasDebugInformationEntitlement=_hasDebugInformationEntitlement;
@property(nonatomic) _Bool inputUIHost; // @synthesize inputUIHost=_inputUIHost;
@property int suppressionCount; // @synthesize suppressionCount=_suppressionCount;
@property(readonly) _Bool multipleScenes; // @synthesize multipleScenes=_multipleScenes;
@property(readonly) _Bool deactivating; // @synthesize deactivating=_deactivating;
@property(readonly) _Bool wantsFence; // @synthesize wantsFence=_wantsFence;
@property int prevActiveIdentifier; // @synthesize prevActiveIdentifier=_prevActiveIdentifier;
@property(readonly) double iavHeight; // @synthesize iavHeight=_iavHeight;
@property(readonly) double level; // @synthesize level=_level;
@property(readonly) unsigned long long wantedState; // @synthesize wantedState=_wantedState;
@property(readonly) _Bool active; // @synthesize active=_active;
@property(readonly, retain) UIKBArbiterClientFocusContext *remoteFocusContext; // @synthesize remoteFocusContext=_remoteFocusContext;
@property(readonly, retain) FBSCAContextSceneLayer *sceneLayer; // @synthesize sceneLayer=_sceneLayer;
@property _Bool running; // @synthesize running=_running;
@property(readonly) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(readonly, retain) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly) _Bool hasHostedPids;
- (void)signalEventSourceChanged:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setKeyboardTotalDisable:(_Bool)arg1 withFence:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)focusApplicationWithProcessIdentifier:(int)arg1 context:(id)arg2 stealingKeyboard:(_Bool)arg3 onCompletion:(CDUnknownBlockType)arg4;
- (void)focusApplicationWithProcessIdentifier:(int)arg1 context:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)applicationShouldFocusWithBundle:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)invalidate;
- (void)uncacheWindowContext;
- (void)cacheWindowContext;
- (void)releaseProcessAssertion;
- (void)takeProcessAssertionOnRemoteWithQueue:(id)arg1;
- (_Bool)isHostingPID:(int)arg1;
- (_Bool)isHandlerShowableWithHandler:(id)arg1;
- (id)description;
- (void)retrieveMoreDebugInformationWithCompletion:(CDUnknownBlockType)arg1;
- (void)retrieveDebugInformation:(CDUnknownBlockType)arg1;
- (void)transition:(id)arg1 eventStage:(unsigned long long)arg2 withInfo:(id)arg3;
- (void)notifyHostedPIDsOfSuppression:(_Bool)arg1 active:(_Bool)arg2;
- (void)notifyHostedPIDsOfSuppression:(_Bool)arg1;
- (void)setWindowHostingPID:(int)arg1 active:(_Bool)arg2;
- (void)notifyIAVHeight:(double)arg1;
- (void)signalKeyboardChangeComplete;
- (void)signalKeyboardChanged:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)signalKeyboardClientChanged:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)signalKeyboardUIDidChange:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)setWantsFencing:(_Bool)arg1;
- (void)didDetachLayer;
- (void)didAttachLayer;
- (void)checkActivation:(unsigned long long)arg1;
- (void)_reevaluateRemoteFocusContext:(id)arg1;
- (void)setClientFocusContext:(id)arg1;
- (void)setWindowContextID:(unsigned int)arg1 focusContext:(id)arg2 windowState:(unsigned long long)arg3 withLevel:(double)arg4;
- (void)clearAcquiringFocus;
- (_Bool)_shouldRejectSceneIdentityUpdateCorrectingClientIfNeeded:(id)arg1 fromSelector:(SEL)arg2;
- (void)beginAcquiringFocusOnQueue:(id)arg1;
@property(readonly) _Bool isKeyboardOnScreen;
- (_Bool)_isKeyboardOnScreen:(id)arg1;
- (void)_deactivateScene;
- (void)startArbitrationWithExpectedState:(id)arg1 focusContext:(id)arg2 hostingPIDs:(id)arg3 usingFence:(_Bool)arg4 withSuppression:(int)arg5 onConnected:(CDUnknownBlockType)arg6;
- (void)startArbitrationWithExpectedState:(id)arg1 hostingPIDs:(id)arg2 usingFence:(_Bool)arg3 withSuppression:(int)arg4 onConnected:(CDUnknownBlockType)arg5;
- (void)addHostedPids:(id)arg1;
- (void)updateSuspensionCountForPids:(id)arg1 active:(_Bool)arg2;
- (void)setDeactivating:(_Bool)arg1;
@property(readonly) int processIdentifier;
- (void)dealloc;

@end

