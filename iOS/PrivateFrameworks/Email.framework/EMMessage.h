//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Email/EFLoggable-Protocol.h>
#import <Email/EMContentItem-Protocol.h>
#import <Email/EMExtendedContentItem-Protocol.h>
#import <Email/EMMessageBuilder-Protocol.h>
#import <Email/EMMessageListItem-Protocol.h>
#import <Email/EMMutableMessageListItem-Protocol.h>

@class ECMessageFlags, ECSubject, EFFuture, EMMailDropMetadata, EMMessageObjectID, EMMessageRepository, EMObjectID, NSArray, NSDate, NSIndexSet, NSString, NSUUID;
@protocol ECEmailAddressConvertible, EMCollectionItemID;

@interface EMMessage <EFLoggable, EMMessageBuilder, EMExtendedContentItem, EMMutableMessageListItem, EMMessageListItem, EMContentItem>
{
    unsigned long long _isEditable;
    NSArray *_mailboxes;
    NSArray *_mailboxObjectIDs;
    struct os_unfair_lock_s _mailboxesLock;
    _Bool _isVIP;
    _Bool _isBlocked;
    _Bool _hasAttachments;
    _Bool _isToMe;
    _Bool _isCCMe;
    _Bool _isAvailableLocally;
    int _exchangeEventUID;
    NSDate *_date;
    ECSubject *_subject;
    NSString *_summary;
    ECMessageFlags *_flags;
    long long _conversationNotificationLevel;
    long long _conversationID;
    NSArray *_toList;
    NSArray *_ccList;
    long long _dataTransferByteCount;
    long long _storageByteCount;
    EMMailDropMetadata *_mailDropMetadata;
    CDUnknownBlockType _loaderBlock;
    long long __internalID;
    id <ECEmailAddressConvertible> _senderAddress;
    NSArray *_bccList;
    NSUUID *_documentID;
}

+ (_Bool)supportsSecureCoding;
+ (id)combinedFlagsForMessageListItemFlags:(id)arg1 forDisplay:(_Bool)arg2;
+ (id)combinedFlagsForMessageListItems:(id)arg1 forDisplay:(_Bool)arg2;
+ (id)combinedFlagsForMessageListItems:(id)arg1;
+ (id)log;
+ (id)externalDataTypeIdentifiers;
+ (id)UTType;
+ (id)_predicateForMessagesWithObjectIDConstantValue:(id)arg1 operatorType:(unsigned long long)arg2;
+ (id)predicateForExcludingMessagesWithObjectIDs:(id)arg1;
+ (id)predicateForExcludingMessageWithObjectID:(id)arg1;
+ (id)predicateForMessagesWithObjectIDs:(id)arg1;
+ (id)predicateForMessageWithInternalID:(long long)arg1;
+ (id)predicateForMessageWithObjectID:(id)arg1;
+ (id)predicateForMessageWithItemID:(id)arg1 mailboxPredicate:(id)arg2 mailboxTypeResolver:(id)arg3;
- (void).cxx_destruct;
@property(copy, nonatomic) NSUUID *documentID; // @synthesize documentID=_documentID;
@property(copy, nonatomic) NSArray *bccList; // @synthesize bccList=_bccList;
@property(retain, nonatomic) id <ECEmailAddressConvertible> senderAddress; // @synthesize senderAddress=_senderAddress;
@property long long _internalID; // @synthesize _internalID=__internalID;
@property(copy, nonatomic) CDUnknownBlockType loaderBlock; // @synthesize loaderBlock=_loaderBlock;
@property(nonatomic) int exchangeEventUID; // @synthesize exchangeEventUID=_exchangeEventUID;
@property(copy, nonatomic) EMMailDropMetadata *mailDropMetadata; // @synthesize mailDropMetadata=_mailDropMetadata;
@property(nonatomic) long long storageByteCount; // @synthesize storageByteCount=_storageByteCount;
@property(nonatomic) long long dataTransferByteCount; // @synthesize dataTransferByteCount=_dataTransferByteCount;
@property(nonatomic) _Bool isAvailableLocally; // @synthesize isAvailableLocally=_isAvailableLocally;
@property _Bool isCCMe; // @synthesize isCCMe=_isCCMe;
@property _Bool isToMe; // @synthesize isToMe=_isToMe;
@property(copy) NSArray *ccList; // @synthesize ccList=_ccList;
@property(copy) NSArray *toList; // @synthesize toList=_toList;
@property long long conversationID; // @synthesize conversationID=_conversationID;
@property long long conversationNotificationLevel; // @synthesize conversationNotificationLevel=_conversationNotificationLevel;
@property _Bool hasAttachments; // @synthesize hasAttachments=_hasAttachments;
@property _Bool isBlocked; // @synthesize isBlocked=_isBlocked;
@property _Bool isVIP; // @synthesize isVIP=_isVIP;
@property(retain) ECMessageFlags *flags; // @synthesize flags=_flags;
@property(copy) NSString *summary; // @synthesize summary=_summary;
@property(retain) ECSubject *subject; // @synthesize subject=_subject;
@property(retain) NSDate *date; // @synthesize date=_date;
- (id)requestRepresentationWithOptions:(id)arg1 delegate:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)requestRepresentationWithOptions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) NSString *displayName;
@property(copy, nonatomic) NSString *contentID;
@property(copy, nonatomic) NSString *UTType;
@property(copy, nonatomic) NSArray *availableRepresentations;
@property(readonly) _Bool isEditable;
@property(readonly) _Bool shouldArchiveByDefault;
@property(readonly) _Bool supportsArchiving;
@property(readonly) _Bool deleteMovesToTrash;
@property(readonly) EFFuture *displayMessage;
@property(readonly) EMObjectID *displayMessageObjectID;
@property(retain) id <EMCollectionItemID> displayMessageItemID;
@property(copy) NSArray *senderList;
@property(copy) NSIndexSet *flagColors;
@property _Bool hasUnflagged;
@property(copy) NSArray *mailboxes;
@property(copy) NSArray *mailboxObjectIDs;
@property unsigned long long count;
@property(readonly, nonatomic) id <EMCollectionItemID> itemID;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, copy, nonatomic) NSString *ef_publicDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSString *debugDescription;
- (id)cachedMetadataOfClass:(Class)arg1 forKey:(id)arg2;
- (void)setCachedMetadata:(id)arg1 forKey:(id)arg2;
- (void)_commonInitWithBuilder:(CDUnknownBlockType)arg1;
- (id)initWithObjectID:(id)arg1 builder:(CDUnknownBlockType)arg2;
- (id)initWithObjectID:(id)arg1;
- (void)setRepository:(id)arg1;
@property(readonly, nonatomic) EMMessageRepository *repository;
- (_Bool)isInManagedAccountWithSourceMailboxScope:(id)arg1;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) EMMessageObjectID *objectID; // @dynamic objectID;
@property(readonly) Class superclass;

@end

