//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MediaFoundation/MFPlaybackStackController-Protocol.h>
#import <MediaFoundation/MFQueueManagement-Protocol.h>

@class AVPlayerViewController, MISSING_TYPE, NSArray, NSDictionary, NSNumber, NSString;
@protocol MFPlaybackStackControllerDelegate, MFQueuePlayerItem;

@interface MFPlaybackStackControllerImplementation : NSObject <MFPlaybackStackController, MFQueueManagement>
{
    MISSING_TYPE *delegate;
    MISSING_TYPE *signpostSubscription;
    MISSING_TYPE *internalStack;
}

+ (id)errorDomain;
- (void).cxx_destruct;
- (id)init;
- (void)setRelativeVolume:(float)arg1;
- (void)setSpatializationFormat:(long long)arg1;
- (void)setupForManagedSessionWithAudioSession:(id)arg1;
- (void)setupForShared;
- (void)setupForSolo;
@property(nonatomic, readonly) _Bool isModeManagedSession;
@property(nonatomic, readonly) _Bool isModeShared;
@property(nonatomic, readonly) _Bool isModeSolo;
@property(nonatomic, readonly) NSString *modeDescription;
- (void)activateAudioSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)updateAudioSessionWithConfiguration:(id)arg1;
@property(nonatomic, readonly) NSDictionary *stateDictionary;
@property(nonatomic, readonly) AVPlayerViewController *videoViewController;
- (_Bool)shouldSkipJumpToItemStart:(long long)arg1;
- (void)skipWithDirection:(long long)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)jumpTo:(double)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)endSeekingWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)seekTo:(double)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)beginSeekingWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)endScanningWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)beginScanningWithDirection:(long long)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setRate:(float)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)pauseForLeasePreventionWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)pauseWithFadeOut:(double)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)pauseWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)playWithRate:(float)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setQueueWithInitialItem:(id)arg1 andPlay:(_Bool)arg2 identifier:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)reset;
- (void)reloadCurrentItemWithReason:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)clearPlaybackQueue;
- (void)reloadItemsKeepingCurrentItem:(_Bool)arg1;
- (void)restoreQueue:(CDUnknownBlockType)arg1;
@property(nonatomic, readonly) id <MFQueuePlayerItem> currentQueueItem;
@property(nonatomic, readonly) NSArray *nextItems;
@property(nonatomic, readonly) id <MFQueuePlayerItem> currentItem;
@property(nonatomic, readonly) NSNumber *targetTime;
@property(nonatomic, readonly) float targetRate;
@property(nonatomic, readonly) float effectiveRate;
@property(nonatomic, readonly) float rate;
@property(nonatomic, readonly) double currentTime;
@property(nonatomic, readonly) long long currentItemTransition;
@property(nonatomic, readonly) long long interruptedState;
@property(nonatomic, readonly) long long currentState;
- (id)initWithPlayerID:(id)arg1 queueController:(id)arg2 assetLoader:(id)arg3 errorController:(id)arg4 externalPlaybackController:(id)arg5 leaseController:(id)arg6 queue:(id)arg7;
@property(nonatomic) __weak id <MFPlaybackStackControllerDelegate> delegate; // @synthesize delegate;
@property(nonatomic) long long maximumPlayerQueueLength;

@end

