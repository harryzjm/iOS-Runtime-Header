//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PrototypeTools/PTSettings.h>

@class SBFFluidBehaviorSettings;

@interface SBPIPInteractionSettings : PTSettings
{
    _Bool _alwaysStartAtSmallestSize;
    _Bool _freelyPositionable;
    _Bool _panGestureEnabled;
    _Bool _pinchGestureEnabled;
    _Bool _rotationGestureEnabled;
    double _defaultContentSizeResetTimeout;
    double _inFlightHitTestPadding;
    double _maximumSizeSpanForPreferredSizeTuning;
    double _minimumSizeSpanBetweenPreferredSizes;
    double _positionDecelerationRate;
    double _positionExtenderMaximumDistance;
    double _positionVelocityYWeightOverVelocityX;
    double _rotationExtenderMaximumDistance;
    double _rotationPreRecognitionWeight;
    double _rotationRubberBandCoefficient;
    double _scaleDecelerationRate;
    double _scaleExtenderMaximumDistance;
    double _scaleLowPassFilterPreviousWeight;
    double _stashProgressTabAppearanceThresholdX;
    SBFFluidBehaviorSettings *_interactiveFluidBehavior;
    SBFFluidBehaviorSettings *_stashTabFluidBehavior;
}

+ (id)settingsControllerModule;
- (void).cxx_destruct;
@property(retain, nonatomic) SBFFluidBehaviorSettings *stashTabFluidBehavior; // @synthesize stashTabFluidBehavior=_stashTabFluidBehavior;
@property(retain, nonatomic) SBFFluidBehaviorSettings *interactiveFluidBehavior; // @synthesize interactiveFluidBehavior=_interactiveFluidBehavior;
@property(nonatomic) double stashProgressTabAppearanceThresholdX; // @synthesize stashProgressTabAppearanceThresholdX=_stashProgressTabAppearanceThresholdX;
@property(nonatomic) double scaleLowPassFilterPreviousWeight; // @synthesize scaleLowPassFilterPreviousWeight=_scaleLowPassFilterPreviousWeight;
@property(nonatomic) double scaleExtenderMaximumDistance; // @synthesize scaleExtenderMaximumDistance=_scaleExtenderMaximumDistance;
@property(nonatomic) double scaleDecelerationRate; // @synthesize scaleDecelerationRate=_scaleDecelerationRate;
@property(nonatomic) double rotationRubberBandCoefficient; // @synthesize rotationRubberBandCoefficient=_rotationRubberBandCoefficient;
@property(nonatomic) double rotationPreRecognitionWeight; // @synthesize rotationPreRecognitionWeight=_rotationPreRecognitionWeight;
@property(nonatomic) double rotationExtenderMaximumDistance; // @synthesize rotationExtenderMaximumDistance=_rotationExtenderMaximumDistance;
@property(nonatomic) double positionVelocityYWeightOverVelocityX; // @synthesize positionVelocityYWeightOverVelocityX=_positionVelocityYWeightOverVelocityX;
@property(nonatomic) double positionExtenderMaximumDistance; // @synthesize positionExtenderMaximumDistance=_positionExtenderMaximumDistance;
@property(nonatomic) double positionDecelerationRate; // @synthesize positionDecelerationRate=_positionDecelerationRate;
@property(nonatomic) double minimumSizeSpanBetweenPreferredSizes; // @synthesize minimumSizeSpanBetweenPreferredSizes=_minimumSizeSpanBetweenPreferredSizes;
@property(nonatomic) double maximumSizeSpanForPreferredSizeTuning; // @synthesize maximumSizeSpanForPreferredSizeTuning=_maximumSizeSpanForPreferredSizeTuning;
@property(nonatomic) double inFlightHitTestPadding; // @synthesize inFlightHitTestPadding=_inFlightHitTestPadding;
@property(nonatomic) double defaultContentSizeResetTimeout; // @synthesize defaultContentSizeResetTimeout=_defaultContentSizeResetTimeout;
@property(nonatomic) _Bool rotationGestureEnabled; // @synthesize rotationGestureEnabled=_rotationGestureEnabled;
@property(nonatomic) _Bool pinchGestureEnabled; // @synthesize pinchGestureEnabled=_pinchGestureEnabled;
@property(nonatomic) _Bool panGestureEnabled; // @synthesize panGestureEnabled=_panGestureEnabled;
@property(nonatomic) _Bool freelyPositionable; // @synthesize freelyPositionable=_freelyPositionable;
@property(nonatomic) _Bool alwaysStartAtSmallestSize; // @synthesize alwaysStartAtSmallestSize=_alwaysStartAtSmallestSize;
- (void)setDefaultValues;

@end

