//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIViewController.h>

#import <SpringBoard/SBApplicationHosting-Protocol.h>
#import <SpringBoard/SBAutoUnlockRule-Protocol.h>
#import <SpringBoard/SBBiometricUnlockBehavior-Protocol.h>
#import <SpringBoard/SBButtonEventsHandler-Protocol.h>
#import <SpringBoard/SBCoverSheetSlidingViewControllerContentViewController-Protocol.h>
#import <SpringBoard/SBIdleTimerProviding-Protocol.h>
#import <SpringBoard/SBLockScreenBacklightControlling-Protocol.h>
#import <SpringBoard/SBLockScreenBehaviorSuppressing-Protocol.h>
#import <SpringBoard/SBLockScreenBlockedStateObserving-Protocol.h>
#import <SpringBoard/SBLockScreenButtonObserving-Protocol.h>
#import <SpringBoard/SBLockScreenCallHandling-Protocol.h>
#import <SpringBoard/SBLockScreenContentStateProviding-Protocol.h>
#import <SpringBoard/SBLockScreenCustomActionStoring-Protocol.h>
#import <SpringBoard/SBLockScreenIdleTimerControlling-Protocol.h>
#import <SpringBoard/SBLockScreenLockingAndUnlocking-Protocol.h>
#import <SpringBoard/SBLockScreenMediaControlsPresenting-Protocol.h>
#import <SpringBoard/SBLockScreenPasscodeViewPresenting-Protocol.h>
#import <SpringBoard/SBLockScreenPluginPresenting-Protocol.h>
#import <SpringBoard/SBLockScreenProximityBehaviorProviding-Protocol.h>
#import <SpringBoard/SBLockScreenStatusBarTransitioning-Protocol.h>

@class NSString, SBFLockScreenActionContext, SBFLockScreenWakeAnimator, UIVisualEffectView;
@protocol SBBiometricUnlockBehaviorDelegate, SBIdleTimerCoordinating;

@interface SBLockScreenViewControllerBase : UIViewController <SBApplicationHosting, SBAutoUnlockRule, SBBiometricUnlockBehavior, SBButtonEventsHandler, SBCoverSheetSlidingViewControllerContentViewController, SBIdleTimerProviding, SBLockScreenBacklightControlling, SBLockScreenBehaviorSuppressing, SBLockScreenBlockedStateObserving, SBLockScreenButtonObserving, SBLockScreenCallHandling, SBLockScreenContentStateProviding, SBLockScreenCustomActionStoring, SBLockScreenIdleTimerControlling, SBLockScreenLockingAndUnlocking, SBLockScreenMediaControlsPresenting, SBLockScreenPasscodeViewPresenting, SBLockScreenPluginPresenting, SBLockScreenProximityBehaviorProviding, SBLockScreenStatusBarTransitioning>
{
    SBFLockScreenActionContext *_customLockScreenActionContext;
    _Bool _authenticated;
    _Bool _expectsFaceContact;
    id <SBIdleTimerCoordinating> _idleTimerCoordinator;
    double _backlightLevel;
    id <SBBiometricUnlockBehaviorDelegate> _biometricUnlockBehaviorDelegate;
    UIVisualEffectView *_wakeEffectView;
    SBFLockScreenWakeAnimator *_lockScreenWakeAnimator;
}

@property(readonly, nonatomic) SBFLockScreenWakeAnimator *lockScreenWakeAnimator; // @synthesize lockScreenWakeAnimator=_lockScreenWakeAnimator;
@property(nonatomic) __weak UIVisualEffectView *wakeEffectView; // @synthesize wakeEffectView=_wakeEffectView;
@property(nonatomic) __weak id <SBBiometricUnlockBehaviorDelegate> biometricUnlockBehaviorDelegate; // @synthesize biometricUnlockBehaviorDelegate=_biometricUnlockBehaviorDelegate;
@property(nonatomic) double backlightLevel; // @synthesize backlightLevel=_backlightLevel;
@property(nonatomic) __weak id <SBIdleTimerCoordinating> idleTimerCoordinator; // @synthesize idleTimerCoordinator=_idleTimerCoordinator;
@property(readonly, nonatomic) _Bool expectsFaceContact; // @synthesize expectsFaceContact=_expectsFaceContact;
@property(nonatomic, getter=isAuthenticated) _Bool authenticated; // @synthesize authenticated=_authenticated;
- (void).cxx_destruct;
- (void)handleBiometricEvent:(unsigned long long)arg1;
- (_Bool)shouldAutoUnlockForSource:(int)arg1;
- (_Bool)shouldUnlockUIOnKeyDownEvent;
- (void)noteResetRestoreStateUpdated;
- (void)noteDeviceBlockedStatusUpdated;
- (_Bool)isMainPageVisible;
- (void)jiggleLockIcon;
- (id)createHomeButtonSuppressAfterUnlockRecognizerForUnlockSource:(int)arg1;
- (id)createHomeButtonShowPasscodeRecognizerForHomeButtonPress;
@property(nonatomic, getter=isShowingMediaControls) _Bool showingMediaControls;
@property(retain, nonatomic, getter=_customLockScreenActionContext) SBFLockScreenActionContext *customLockScreenActionContext;
@property(readonly, nonatomic) _Bool shouldShowLockStatusBarTime;
- (_Bool)shouldDisableALS;
@property(readonly, nonatomic) _Bool contentOccludesBackground;
- (void)hostedAppWillRotateToInterfaceOrientation:(long long)arg1;
- (id)hostedAppSceneHandles;
- (id)hostedAppSceneHandle;
- (_Bool)isHostingAnApp;
- (_Bool)canHostAnApp;
- (void)noteMenuButtonUp;
- (void)noteMenuButtonDown;
- (_Bool)handleHeadsetButtonPress:(_Bool)arg1;
- (_Bool)handleVolumeDownButtonPress;
- (_Bool)handleVolumeUpButtonPress;
- (_Bool)handleLockButtonPress;
- (_Bool)handleHomeButtonLongPress;
- (_Bool)handleHomeButtonDoublePress;
- (_Bool)handleHomeButtonPress;
- (void)disableLockScreenPluginWithContext:(id)arg1;
- (void)enableLockScreenPluginWithContext:(id)arg1;
- (void)setInScreenOffMode:(_Bool)arg1 forAutoUnlock:(_Bool)arg2 fromUnlockSource:(int)arg3;
- (void)setInScreenOffMode:(_Bool)arg1;
- (_Bool)isInScreenOffMode;
- (void)startLockScreenFadeInAnimationForSource:(int)arg1;
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;
- (_Bool)isMakingEmergencyCall;
- (void)emergencyDialerExitedWithError:(id)arg1;
- (void)exitEmergencyDialerAnimated:(_Bool)arg1;
- (void)launchEmergencyDialerAnimated:(_Bool)arg1;
- (void)launchEmergencyDialer;
- (void)launchInCallAlert;
- (void)finishUIUnlockFromSource:(int)arg1;
- (_Bool)canBeDeactivatedForUIUnlockFromSource:(int)arg1;
- (_Bool)willUIUnlockFromSource:(int)arg1;
- (void)prepareForUILock;
- (void)prepareForUIUnlock;
- (_Bool)isUnlockDisabled;
- (void)setPasscodeLockVisible:(_Bool)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setPasscodeLockVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)isPasscodeLockVisible;
- (_Bool)suppressesScreenshots;
- (_Bool)suppressesControlCenter;
- (_Bool)suppressesBanners;
- (void)updateStatusBarForLockScreenComeback;
- (void)updateStatusBarForLockScreenTeardown;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (id)succinctDescriptionBuilder;
- (id)succinctDescription;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

