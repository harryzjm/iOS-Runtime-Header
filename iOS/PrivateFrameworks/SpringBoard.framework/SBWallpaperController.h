//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SpringBoard/BSDescriptionProviding-Protocol.h>
#import <SpringBoard/CSWallpaperOverlayHosting-Protocol.h>
#import <SpringBoard/SBFLegibilitySettingsProviderDelegate-Protocol.h>
#import <SpringBoard/SBFWallpaperViewDelegate-Protocol.h>
#import <SpringBoard/SBFWallpaperViewInternalObserver-Protocol.h>
#import <SpringBoard/SBUIActiveOrientationObserver-Protocol.h>
#import <SpringBoard/SBWWallpaperLegibilityProviding-Protocol.h>
#import <SpringBoard/SBWWallpaperPresenting-Protocol.h>
#import <SpringBoard/SBWWallpaperPresentingDelegate-Protocol.h>
#import <SpringBoard/SBWallpaperReachabilityCoordinating-Protocol.h>
#import <SpringBoard/SBWallpaperServerDelegate-Protocol.h>
#import <SpringBoard/UIWindowDelegate-Protocol.h>
#import <SpringBoard/_UISettingsKeyObserver-Protocol.h>

@class NSMapTable, NSMutableSet, NSString, PTSingleTestRecipe, SBFWallpaperConfigurationManager, SBFWallpaperCoreAnalyticsLogger, SBWWallpaperViewController, SBWallpaperAggdLogger, UIGestureRecognizer, UIScreen, UITraitCollection, UIView, UIWindow;
@protocol BSInvalidatable, SBFIrisWallpaperPlaying, SBUIWallpaperOverlay, SBWWallpaperLegibilityProviding, SBWWallpaperPresenting, SBWWallpaperPresentingDelegate;

@interface SBWallpaperController : NSObject <SBFLegibilitySettingsProviderDelegate, SBFWallpaperViewInternalObserver, SBUIActiveOrientationObserver, _UISettingsKeyObserver, SBWWallpaperPresentingDelegate, SBWallpaperReachabilityCoordinating, BSDescriptionProviding, SBWallpaperServerDelegate, SBFWallpaperViewDelegate, UIWindowDelegate, CSWallpaperOverlayHosting, SBWWallpaperPresenting, SBWWallpaperLegibilityProviding>
{
    UIWindow *_wallpaperWindow;
    UIView *_wallpaperContainerView;
    UIView *_wallpaperOverlayContainerView;
    long long _orientation;
    long long _displayedVariant;
    UIView<SBUIWallpaperOverlay> *_wallpaperOverlay;
    NSMutableSet *_activeOrientationSources;
    NSMapTable *_orientationProviders;
    PTSingleTestRecipe *_migrationTestRecipe;
    PTSingleTestRecipe *_reloadTestRecipe;
    SBWWallpaperViewController *_wallpaperViewController;
    id <SBWWallpaperPresenting> _wallpaperPresenter;
    id <SBWWallpaperLegibilityProviding> _wallpaperLegibilityProvider;
    id <SBWWallpaperPresentingDelegate> _wallpaperPresentingDelegate;
    UIScreen *_screen;
    NSString *_cachingIdentifier;
    SBFWallpaperConfigurationManager *_wallpaperConfigurationManager;
    SBWallpaperAggdLogger *_wallpaperAggdLogger;
    SBFWallpaperCoreAnalyticsLogger *_wallpaperCoreAnalyticsLogger;
    UITraitCollection *_fakeBlurViewOverrideTraitCollection;
    id <BSInvalidatable> _batterySaverAnimationAssertion;
    id <BSInvalidatable> _wallpaperStyleAnimationAssertion;
}

+ (id)accessAuthenticator;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) id <BSInvalidatable> wallpaperStyleAnimationAssertion; // @synthesize wallpaperStyleAnimationAssertion=_wallpaperStyleAnimationAssertion;
@property(retain, nonatomic) id <BSInvalidatable> batterySaverAnimationAssertion; // @synthesize batterySaverAnimationAssertion=_batterySaverAnimationAssertion;
@property(retain, nonatomic) UITraitCollection *fakeBlurViewOverrideTraitCollection; // @synthesize fakeBlurViewOverrideTraitCollection=_fakeBlurViewOverrideTraitCollection;
@property(retain, nonatomic) SBFWallpaperCoreAnalyticsLogger *wallpaperCoreAnalyticsLogger; // @synthesize wallpaperCoreAnalyticsLogger=_wallpaperCoreAnalyticsLogger;
@property(retain, nonatomic) SBWallpaperAggdLogger *wallpaperAggdLogger; // @synthesize wallpaperAggdLogger=_wallpaperAggdLogger;
@property(readonly, nonatomic) SBFWallpaperConfigurationManager *wallpaperConfigurationManager; // @synthesize wallpaperConfigurationManager=_wallpaperConfigurationManager;
@property(readonly, copy, nonatomic) NSString *cachingIdentifier; // @synthesize cachingIdentifier=_cachingIdentifier;
@property(readonly, nonatomic) UIScreen *screen; // @synthesize screen=_screen;
@property(readonly, nonatomic, getter=_WallpaperOrientationNotForYou) long long _orientation; // @synthesize _orientation;
@property(nonatomic) __weak id <SBWWallpaperPresentingDelegate> wallpaperPresentingDelegate; // @synthesize wallpaperPresentingDelegate=_wallpaperPresentingDelegate;
@property(readonly, nonatomic) id <SBWWallpaperLegibilityProviding> legibilityProvider; // @synthesize legibilityProvider=_wallpaperLegibilityProvider;
@property(readonly, nonatomic) id <SBWWallpaperPresenting> presenter; // @synthesize presenter=_wallpaperPresenter;
- (id)relinquishHostingOfWallpaperOverlay;
- (void)startHostingWallpaperOverlay:(id)arg1;
@property(readonly, nonatomic) double effectiveReachabilityYOffset;
- (_Bool)isWindowIgnoredForReachability:(id)arg1;
- (void)removeReachabilityObserver:(id)arg1;
- (void)addReachabilityObserver:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (void)wallpaperServer:(id)arg1 acquireActiveWallpaperSceneAssertionWithAction:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)wallpaperServer:(id)arg1 restoreDefaultWallpaperWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)wallpaperServer:(id)arg1 setWallpaperGradient:(id)arg2 forVariants:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)wallpaperServer:(id)arg1 setWallpaperColor:(id)arg2 darkColor:(id)arg3 forVariants:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)wallpaperServer:(id)arg1 setWallpaperColorName:(id)arg2 forVariants:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)wallpaperServer:(id)arg1 setWallpaperVideoWithWallpaperMode:(id)arg2 cropRect:(struct CGRect)arg3 wallpaperMode:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)wallpaperServer:(id)arg1 fetchContentCutoutBoundsForVariant:(long long)arg2 orientation:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)wallpaperServer:(id)arg1 fetchOriginalVideoURLDataForVariant:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)wallpaperServer:(id)arg1 fetchOriginalImageDataForVariant:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)wallpaperServer:(id)arg1 fetchThumbnailDataForVariant:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)wallpaperView:(id)arg1 wallpaperConfigurationIncludingValueTypes:(unsigned long long)arg2;
- (void)wallpaperViewDidChangeWantsRasterization:(id)arg1;
- (void)wallpaperView:(id)arg1 didChangeZoomFactor:(double)arg2;
- (void)wallpaperViewDidInvalidateBlurs:(id)arg1;
- (void)providerLegibilitySettingsChanged:(id)arg1;
- (void)activeInterfaceOrientationDidChangeToOrientation:(long long)arg1 willAnimateWithDuration:(double)arg2 fromOrientation:(long long)arg3;
- (void)activeInterfaceOrientationWillChangeToOrientation:(long long)arg1;
- (void)_forceUpdateToSpringBoardInterfaceOrientationWithAnimationDuration:(double)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)orientationSource:(long long)arg1 didRotateFromInterfaceOrientation:(long long)arg2;
- (void)orientationSource:(long long)arg1 willAnimateRotationToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)orientationSource:(long long)arg1 willRotateToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)setOrientationProvider:(id)arg1 forSource:(long long)arg2;
- (long long)defaultInterfaceOrientationForSource:(long long)arg1;
- (void)updateOrientationAfterSourceChange;
- (_Bool)_isAcceptingOrientationChangesFromSource:(long long)arg1;
- (void)deactivateOrientationSource:(long long)arg1;
- (void)activateOrientationSource:(long long)arg1;
@property(readonly, nonatomic) long long activeOrientationSource;
- (void)_noteSignificantTimeChanged:(id)arg1;
- (void)_saveWallpaperAggdKeysForLocations:(long long)arg1 withConfiguration:(id)arg2;
- (void)_saveWallpaperCoreAnalyticsForLocations:(long long)arg1 withConfiguration:(id)arg2;
- (void)wallpaperPresenterDidCompleteWallpaperChange:(id)arg1;
- (long long)wallpaperPresenter:(id)arg1 requestsOrientationWithRefresh:(_Bool)arg2;
- (void)wallpaperPresenter:(id)arg1 didChangeWallpaperForLocations:(long long)arg2 withConfiguration:(id)arg3;
- (id)activeInterfaceOrientationSourcesDescriptions;
- (id)succinctDescriptionBuilder;
- (id)succinctDescription;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)_reloadWallpaperAndFlushCaches:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)cancelInProcessAnimations;
- (void)preheatWallpaperForVariant:(long long)arg1;
- (id)_wallpaperViewForVariant:(long long)arg1;
- (void)_updateScreenBlanked;
- (void)_motionEffectsChanged;
- (void)_updateWallpaperForLocations:(long long)arg1 options:(unsigned long long)arg2 wallpaperMode:(long long)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)_updateWallpaperForLocations:(long long)arg1 options:(unsigned long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)_applicationDidFinishLaunching:(id)arg1;
- (void)_batterySaverModeChanged:(id)arg1;
- (id)_window;
- (void)updateWallpaperForLocations:(long long)arg1 wallpaperMode:(long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)updateWallpaperForLocations:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)newFakeBlurViewForVariant:(long long)arg1 style:(long long)arg2 transformOptions:(unsigned long long)arg3;
- (void)setWallpaperHidden:(_Bool)arg1 variant:(long long)arg2 reason:(id)arg3;
- (void)setDisallowsRasterization:(_Bool)arg1 forVariant:(long long)arg2 withReason:(id)arg3;
- (double)contrastForVariant:(long long)arg1;
- (double)contrastInRect:(struct CGRect)arg1 forVariant:(long long)arg2;
- (id)averageColorInRect:(struct CGRect)arg1 forVariant:(long long)arg2 withSmudgeRadius:(double)arg3;
- (id)averageColorInRect:(struct CGRect)arg1 forVariant:(long long)arg2;
- (id)averageColorForVariant:(long long)arg1;
- (id)legibilitySettingsForVariant:(long long)arg1;
@property(readonly, nonatomic) UIGestureRecognizer *wallpaperGestureRecognizer;
@property(readonly, nonatomic) id <SBFIrisWallpaperPlaying> irisWallpaperPlayer;
- (id)suspendWallpaperAnimationForReason:(id)arg1;
- (id)suspendColorSamplingForReason:(id)arg1;
- (void)removeObserver:(id)arg1 forVariant:(long long)arg2;
- (void)addObserver:(id)arg1 forVariant:(long long)arg2;
- (void)endDelayingHomescreenStyleChangesForReason:(id)arg1 animationFactory:(id)arg2;
- (void)beginDelayingHomescreenStyleChangesForReason:(id)arg1;
- (id)beginRequiringWithReason:(id)arg1;
- (_Bool)removeWallpaperStyleForPriority:(long long)arg1 forVariant:(long long)arg2 withAnimationFactory:(id)arg3;
- (_Bool)setWallpaperStyleTransitionState:(CDStruct_8ff95007)arg1 forPriority:(long long)arg2 forVariant:(long long)arg3 withAnimationFactory:(id)arg4;
- (_Bool)setWallpaperStyle:(long long)arg1 forPriority:(long long)arg2 forVariant:(long long)arg3 withAnimationFactory:(id)arg4;
@property(readonly, nonatomic) CDStruct_8ff95007 currentHomescreenStyleTransitionState;
- (void)setLockscreenOnlyWallpaperAlpha:(double)arg1;
@property(readonly, nonatomic) double minimumLockscreenWallpaperScale;
- (void)setLockscreenWallpaperScale:(double)arg1 withAnimationFactory:(id)arg2;
@property(nonatomic) double lockscreenWallpaperScale;
@property(readonly, nonatomic) double minimumHomescreenWallpaperScale;
- (id)setHomescreenWallpaperScale:(double)arg1 withAnimationFactory:(id)arg2;
@property(readonly, nonatomic) double homescreenWallpaperScale;
@property(nonatomic) double windowLevel;
- (void)setLockscreenWallpaperContentsRect:(struct CGRect)arg1;
- (void)updateIrisWallpaperForInteractiveMode;
- (_Bool)updateIrisWallpaperForStaticMode;
- (void)setAlpha:(double)arg1 forWallpaperVariant:(long long)arg2;
- (void)setVariant:(long long)arg1 withOutAnimationFactory:(id)arg2 inAnimationFactory:(id)arg3 completion:(CDUnknownBlockType)arg4;
@property(nonatomic) long long variant;
- (void)dealloc;
- (id)init;
- (id)initWithWallpaperConfigurationManager:(id)arg1 cachingIdentifier:(id)arg2;
- (id)initWithWallpaperConfigurationManager:(id)arg1;
- (id)initWithScreen:(id)arg1 orientation:(long long)arg2 variant:(long long)arg3 wallpaperConfigurationManager:(id)arg4 cachingIdentifier:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

