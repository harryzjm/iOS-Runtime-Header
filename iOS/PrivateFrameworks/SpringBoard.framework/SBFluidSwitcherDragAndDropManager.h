//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SpringBoard/BSTransactionObserver-Protocol.h>
#import <SpringBoard/SBApplicationDropSessionSceneProviding-Protocol.h>
#import <SpringBoard/SBDragAndDropWorkspaceTransactionDelegate-Protocol.h>
#import <SpringBoard/UIDragInteractionDelegate_Private-Protocol.h>
#import <SpringBoard/UIDropInteractionDelegate_Private-Protocol.h>

@class NSMapTable, NSString, SBDragAndDropWorkspaceTransaction, SBFluidSwitcherViewController, SBMainDisplaySceneManager, SBWindowDragInteraction, UIDropInteraction;
@protocol SBFluidSwitcherDragAndDropManagerDelegate, UIDragSession;

@interface SBFluidSwitcherDragAndDropManager : NSObject <BSTransactionObserver, SBApplicationDropSessionSceneProviding, UIDropInteractionDelegate_Private, UIDragInteractionDelegate_Private, SBDragAndDropWorkspaceTransactionDelegate>
{
    _Bool _windowDragHandledByDruid;
    _Bool _hasAddedSwitcherWindowAsDragTarget;
    SBFluidSwitcherViewController *_switcherContentController;
    SBMainDisplaySceneManager *_sceneManager;
    id <SBFluidSwitcherDragAndDropManagerDelegate> _delegate;
    UIDropInteraction *_dropInteraction;
    SBDragAndDropWorkspaceTransaction *_activeTransaction;
    NSMapTable *_activeDropSessions;
    SBWindowDragInteraction *_windowDragInteraction;
    id <UIDragSession> _windowDragSession;
    CDUnknownBlockType _windowDragSessionPrepareCompletionBlock;
    NSString *_windowDragSceneIdentifier;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool hasAddedSwitcherWindowAsDragTarget; // @synthesize hasAddedSwitcherWindowAsDragTarget=_hasAddedSwitcherWindowAsDragTarget;
@property(nonatomic) _Bool windowDragHandledByDruid; // @synthesize windowDragHandledByDruid=_windowDragHandledByDruid;
@property(retain, nonatomic) NSString *windowDragSceneIdentifier; // @synthesize windowDragSceneIdentifier=_windowDragSceneIdentifier;
@property(copy, nonatomic) CDUnknownBlockType windowDragSessionPrepareCompletionBlock; // @synthesize windowDragSessionPrepareCompletionBlock=_windowDragSessionPrepareCompletionBlock;
@property(retain, nonatomic) id <UIDragSession> windowDragSession; // @synthesize windowDragSession=_windowDragSession;
@property(retain, nonatomic) SBWindowDragInteraction *windowDragInteraction; // @synthesize windowDragInteraction=_windowDragInteraction;
@property(retain, nonatomic) NSMapTable *activeDropSessions; // @synthesize activeDropSessions=_activeDropSessions;
@property(retain, nonatomic) SBDragAndDropWorkspaceTransaction *activeTransaction; // @synthesize activeTransaction=_activeTransaction;
@property(retain, nonatomic) UIDropInteraction *dropInteraction; // @synthesize dropInteraction=_dropInteraction;
@property(readonly, nonatomic) __weak id <SBFluidSwitcherDragAndDropManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) __weak SBMainDisplaySceneManager *sceneManager; // @synthesize sceneManager=_sceneManager;
@property(readonly, nonatomic) __weak SBFluidSwitcherViewController *switcherContentController; // @synthesize switcherContentController=_switcherContentController;
- (void)transactionDidComplete:(id)arg1;
- (_Bool)_workspaceWouldAllowTransitionToApplication:(id)arg1;
- (void)_beginTrackingDropSessionIfNeeded:(id)arg1;
- (_Bool)_anyActiveAndVisibleSceneEntityMatches:(CDUnknownBlockType)arg1;
- (id)_dropInteraction:(id)arg1 customSpringAnimationBehaviorForDroppingItem:(id)arg2;
- (void)dropInteraction:(id)arg1 item:(id)arg2 willAnimateDropWithAnimator:(id)arg3;
- (id)dropInteraction:(id)arg1 previewForDroppingItem:(id)arg2 withDefault:(id)arg3;
- (void)dropInteraction:(id)arg1 sessionDidEnd:(id)arg2;
- (void)dropInteraction:(id)arg1 concludeDrop:(id)arg2;
- (void)dropInteraction:(id)arg1 performDrop:(id)arg2;
- (void)dropInteraction:(id)arg1 sessionDidExit:(id)arg2;
- (id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2;
- (void)dropInteraction:(id)arg1 sessionDidEnter:(id)arg2;
- (_Bool)dropInteraction:(id)arg1 canHandleSession:(id)arg2;
- (void)_windowDragSessionDidEnd;
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 willEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 sessionDidMove:(id)arg2;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (_Bool)dragInteraction:(id)arg1 sessionIsRestrictedToDraggingApplication:(id)arg2;
- (id)_dragInteraction:(id)arg1 customSpringAnimationBehaviorForCancellingItem:(id)arg2;
- (void)_dragInteractionDidCancelLiftWithoutDragging:(id)arg1;
- (id)_requiredContextIDsForDragSessionInView:(id)arg1;
- (void)_dragInteraction:(id)arg1 prepareForSession:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)preferredSceneIdentityForApplication:(id)arg1 targetContentIdentifier:(id)arg2 preferNewScene:(_Bool)arg3;
- (id)mostRecentSceneIdentityExcludingLiveScenesForApplication:(id)arg1;
- (id)newSceneIdentityForApplication:(id)arg1;
- (_Bool)isApplicationActiveAndVisible:(id)arg1;
- (void)dragAndDropTransaction:(id)arg1 didPlatterizeWindowDragWithSceneIdentifier:(id)arg2;
- (void)dragAndDropTransaction:(id)arg1 didEndGesture:(id)arg2;
- (void)dragAndDropTransaction:(id)arg1 didUpdateGesture:(id)arg2;
- (void)dragAndDropTransaction:(id)arg1 didBeginGesture:(id)arg2;
- (_Bool)isDragAndDropTransactionRunning;
- (void)handleWindowDragGestureRecognizer:(id)arg1;
- (_Bool)shouldBeginWindowDragGesture;
- (void)dealloc;
- (id)initWithSwitcherContentController:(id)arg1 sceneManager:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

