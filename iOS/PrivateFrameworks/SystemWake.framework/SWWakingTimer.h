//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SystemWake/BSCancellable-Protocol.h>
#import <SystemWake/BSInvalidatable-Protocol.h>
#import <SystemWake/BSTimerScheduleQuerying-Protocol.h>
#import <SystemWake/SWSystemSleepObserver-Protocol.h>

@class NSString, SWScheduledSystemWake, SWSystemSleepMonitor;
@protocol BSInvalidatable, BSTimerScheduleQuerying><BSCancellable><BSInvalidatable, SWSystemSleepAssertionProviding;

@interface SWWakingTimer : NSObject <SWSystemSleepObserver, BSTimerScheduleQuerying, BSCancellable, BSInvalidatable>
{
    NSString *_identifier;
    SWScheduledSystemWake *_scheduledWake;
    SWSystemSleepMonitor *_sleepMonitor;
    id <SWSystemSleepAssertionProviding> _sleepAssertionProvider;
    id <BSInvalidatable> _preventSleepAssertion;
    struct os_unfair_lock_s _lock;
    id <BSTimerScheduleQuerying><BSCancellable><BSInvalidatable> _lock_timer;
    CDUnknownBlockType _lock_handler;
    double _lock_leeway;
    _Bool _lock_invalidated;
}

- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)systemSleepMonitor:(id)arg1 prepareForSleepWithCompletion:(CDUnknownBlockType)arg2;
- (void)systemSleepMonitor:(id)arg1 sleepRequestedWithResult:(CDUnknownBlockType)arg2;
- (void)invalidate;
- (void)cancel;
- (void)scheduleForDate:(id)arg1 leewayInterval:(double)arg2 queue:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)scheduleWithFireInterval:(double)arg1 leewayInterval:(double)arg2 queue:(id)arg3 handler:(CDUnknownBlockType)arg4;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) double timeRemaining;
@property(readonly, nonatomic, getter=isScheduled) _Bool scheduled;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 sleepMonitor:(id)arg2 sleepAssertionProvider:(id)arg3;
- (id)initWithIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

