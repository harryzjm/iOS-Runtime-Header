//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TextRecognition/NSCopying-Protocol.h>
#import <TextRecognition/NSSecureCoding-Protocol.h>

@class NSArray, NSString;

@interface CRImageReaderOutput : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _isTitle;
    int _confidence;
    float _baselineAngle;
    NSString *_type;
    NSString *_stringValue;
    NSArray *_candidates;
    NSArray *_components;
    struct CGPoint _topLeft;
    struct CGPoint _topRight;
    struct CGPoint _bottomRight;
    struct CGPoint _bottomLeft;
    struct CGSize _imageSize;
    struct CGRect _boundingBox;
}

+ (_Bool)supportsSecureCoding;
+ (int)confidenceLevelForConfidenceScore:(double)arg1 confidenceThresholdProvider:(id)arg2;
+ (id)outputWithType:(id)arg1 textFeature:(id)arg2 imageSize:(struct CGSize)arg3 isTitle:(_Bool)arg4 confidenceThresholdProvider:(id)arg5;
- (void).cxx_destruct;
@property _Bool isTitle; // @synthesize isTitle=_isTitle;
@property struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property float baselineAngle; // @synthesize baselineAngle=_baselineAngle;
@property(readonly) NSArray *components; // @synthesize components=_components;
@property(readonly) NSArray *candidates; // @synthesize candidates=_candidates;
@property(readonly) struct CGPoint bottomLeft; // @synthesize bottomLeft=_bottomLeft;
@property(readonly) struct CGPoint bottomRight; // @synthesize bottomRight=_bottomRight;
@property(readonly) struct CGPoint topRight; // @synthesize topRight=_topRight;
@property(readonly) struct CGPoint topLeft; // @synthesize topLeft=_topLeft;
@property(readonly) struct CGRect boundingBox; // @synthesize boundingBox=_boundingBox;
@property int confidence; // @synthesize confidence=_confidence;
@property(retain) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(readonly) NSString *type; // @synthesize type=_type;
- (_Bool)_checkValidRange:(struct _NSRange)arg1 forDataLength:(unsigned long long)arg2;
- (id)decodeOutputsArrayFromData:(id)arg1 offset:(unsigned long long *)arg2 version:(long long)arg3;
- (id)encodingDataForOutputsArray:(id)arg1;
- (id)decodeStringFromData:(id)arg1 offset:(unsigned long long *)arg2;
- (id)encodingDataForString:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToImageReaderOutput:(id)arg1;
- (id)initV2WithDataRepresentation:(id)arg1;
- (id)initV1WithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)dataRepresentation;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGPoint)_rotatePointIfNeccessary:(struct CGPoint)arg1 anchor:(struct CGPoint)arg2 angle:(double)arg3;
- (id)cornersForCharacterRange:(struct _NSRange)arg1 error:(id *)arg2;
- (id)initWithType:(id)arg1 textFeature:(id)arg2 withCandidates:(_Bool)arg3 imageSize:(struct CGSize)arg4 isTitle:(_Bool)arg5 confidenceThresholdProvider:(id)arg6;
- (id)initWithType:(id)arg1 textFeature:(id)arg2 imageSize:(struct CGSize)arg3 isTitle:(_Bool)arg4 confidenceThresholdProvider:(id)arg5;

@end

