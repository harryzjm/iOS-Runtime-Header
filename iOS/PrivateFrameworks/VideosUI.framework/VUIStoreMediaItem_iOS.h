//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <VideosUI/TVPContentKeyLoading-Protocol.h>
#import <VideosUI/TVPMediaItemReportingDelegate-Protocol.h>
#import <VideosUI/VUIStoreFPSKeyLoaderDelegate-Protocol.h>

@class NSDictionary, NSError, NSNumber, NSObject, NSString, NSURL, VUIStoreDownloadMonitor, VUIStoreFPSKeyLoader;

__attribute__((visibility("hidden")))
@interface VUIStoreMediaItem_iOS <TVPMediaItemReportingDelegate, TVPContentKeyLoading, VUIStoreFPSKeyLoaderDelegate>
{
    _Bool _needsRentalCheckin;
    NSNumber *_startTime;
    NSURL *_fpsCertificateURL;
    NSURL *_fpsKeyServerURL;
    NSDictionary *_fpsAdditionalServerParams;
    unsigned long long _loadingContext;
    NSDictionary *_sinfsDict;
    NSNumber *_fileSize;
    NSURL *_downloadDestinationURL;
    NSNumber *_downloadToken;
    VUIStoreFPSKeyLoader *_storeFPSKeyLoader;
    long long _playbackType;
    NSURL *_playbackURL;
    VUIStoreDownloadMonitor *_downloadMonitor;
    NSObject *_parentReportingToken;
    NSError *_fpsKeyError;
}

+ (void)initialize;
- (void).cxx_destruct;
@property(retain, nonatomic) NSError *fpsKeyError; // @synthesize fpsKeyError=_fpsKeyError;
@property(retain, nonatomic) NSObject *parentReportingToken; // @synthesize parentReportingToken=_parentReportingToken;
@property(nonatomic) _Bool needsRentalCheckin; // @synthesize needsRentalCheckin=_needsRentalCheckin;
@property(retain, nonatomic) VUIStoreDownloadMonitor *downloadMonitor; // @synthesize downloadMonitor=_downloadMonitor;
@property(retain, nonatomic) NSURL *playbackURL; // @synthesize playbackURL=_playbackURL;
@property(nonatomic) long long playbackType; // @synthesize playbackType=_playbackType;
@property(retain, nonatomic) VUIStoreFPSKeyLoader *storeFPSKeyLoader; // @synthesize storeFPSKeyLoader=_storeFPSKeyLoader;
@property(retain, nonatomic) NSNumber *downloadToken; // @synthesize downloadToken=_downloadToken;
@property(retain, nonatomic) NSURL *downloadDestinationURL; // @synthesize downloadDestinationURL=_downloadDestinationURL;
@property(retain, nonatomic) NSNumber *fileSize; // @synthesize fileSize=_fileSize;
@property(retain, nonatomic) NSDictionary *sinfsDict; // @synthesize sinfsDict=_sinfsDict;
@property(nonatomic) unsigned long long loadingContext; // @synthesize loadingContext=_loadingContext;
@property(copy, nonatomic) NSDictionary *fpsAdditionalServerParams; // @synthesize fpsAdditionalServerParams=_fpsAdditionalServerParams;
@property(copy, nonatomic) NSURL *fpsKeyServerURL; // @synthesize fpsKeyServerURL=_fpsKeyServerURL;
@property(copy, nonatomic) NSURL *fpsCertificateURL; // @synthesize fpsCertificateURL=_fpsCertificateURL;
@property(nonatomic) NSNumber *startTime; // @synthesize startTime=_startTime;
- (id)_hlsURLEnsuringDsidQueryParamIsPresentFromURL:(id)arg1;
- (id)_rentalExpirationDate;
- (id)_rentalPlaybackEndDate;
- (id)_rentalEndDate;
- (id)_iTunesStoreContentInfo;
- (void)_externalPlaybackTypeDidChange:(id)arg1;
- (void)_checkInRental;
- (void)_checkoutRentalWithCheckoutType:(unsigned long long)arg1 startPlaybackClock:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_persistOfflineKeyData:(id)arg1 forKeyRequest:(id)arg2;
- (id)_offlineKeyDataForKeyRequest:(id)arg1;
- (id)_videoPlaybackTypeDescription;
- (id)_downloadForThisMediaItemReturningDownloadManager:(id *)arg1;
- (void)_deleteDownloadKeyCookieForURL:(id)arg1;
- (void)_setDownloadKeyCookieWithURL:(id)arg1 downloadKey:(id)arg2;
- (id)_iTunesStoreContentPurchasedMediaKind;
- (id)_adamIDString;
- (_Bool)_loadingCancelled:(unsigned long long)arg1;
- (void)_performStreamingRedownloadWithCompletion:(CDUnknownBlockType)arg1;
- (void)_configureForStreamingPlaybackWithCompletion:(CDUnknownBlockType)arg1;
- (void)_configureForPlaybackFromExistingDownload:(id)arg1 downloadManager:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_configureForLocalPlaybackWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_updateRentalPlaybackStartDate:(id)arg1;
- (void)storeFPSKeyLoader:(id)arg1 didReceiveUpdatedRentalExpirationDate:(id)arg2 playbackStartDate:(id)arg3;
- (void)storeFPSKeyLoader:(id)arg1 didLoadOfflineKeyData:(id)arg2 forKeyRequest:(id)arg3;
- (void)storeFPSKeyLoader:(id)arg1 willFailWithError:(id)arg2 forKeyRequest:(id)arg3;
- (void)loadFairPlayStreamingKeyRequests:(id)arg1;
- (void)mediaItemAllInitialLoadingComplete:(id)arg1 totalTime:(double)arg2 player:(id)arg3;
- (id)reportingDelegate;
- (void)cleanUpMediaItem;
- (id)replacementErrorForPlaybackError:(id)arg1;
- (void)prepareForPlaybackInitiationWithCompletion:(CDUnknownBlockType)arg1;
- (void)prepareForLoadingWithCompletion:(CDUnknownBlockType)arg1;
- (id)mediaItemMetadataForProperty:(id)arg1;
- (_Bool)hasTrait:(id)arg1;
- (id)mediaItemURL;
- (void)dealloc;
- (id)initWithMPMediaItem:(id)arg1;
- (id)initWithAdamID:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

