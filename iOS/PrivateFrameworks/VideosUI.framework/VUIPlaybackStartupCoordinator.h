//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDictionary, NSString, TVPStateMachine, VUIMediaInfo, VUIVideosPlayable;

@interface VUIPlaybackStartupCoordinator : NSObject
{
    _Bool _isRentAndWatchNow;
    _Bool _isCellularAllowed;
    _Bool _forceDownloadToStream;
    VUIMediaInfo *_mediaInfo;
    long long _watchType;
    CDUnknownBlockType _completion;
    NSString *_adamID;
    NSString *_videoCanonicalID;
    NSString *_showCanonicalID;
    NSString *_mediaType;
    NSDictionary *_contentMetadata;
    TVPStateMachine *_stateMachine;
    VUIVideosPlayable *_resolvedPlayable;
}

+ (void)initialize;
- (void).cxx_destruct;
@property(retain, nonatomic) VUIVideosPlayable *resolvedPlayable; // @synthesize resolvedPlayable=_resolvedPlayable;
@property(retain, nonatomic) TVPStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property(copy, nonatomic) NSDictionary *contentMetadata; // @synthesize contentMetadata=_contentMetadata;
@property(copy, nonatomic) NSString *mediaType; // @synthesize mediaType=_mediaType;
@property(copy, nonatomic) NSString *showCanonicalID; // @synthesize showCanonicalID=_showCanonicalID;
@property(copy, nonatomic) NSString *videoCanonicalID; // @synthesize videoCanonicalID=_videoCanonicalID;
@property(copy, nonatomic) NSString *adamID; // @synthesize adamID=_adamID;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(nonatomic) _Bool forceDownloadToStream; // @synthesize forceDownloadToStream=_forceDownloadToStream;
@property(nonatomic) _Bool isCellularAllowed; // @synthesize isCellularAllowed=_isCellularAllowed;
@property(nonatomic) _Bool isRentAndWatchNow; // @synthesize isRentAndWatchNow=_isRentAndWatchNow;
@property(nonatomic) long long watchType; // @synthesize watchType=_watchType;
@property(retain, nonatomic) VUIMediaInfo *mediaInfo; // @synthesize mediaInfo=_mediaInfo;
- (_Bool)_existingPlaybackSessionAllowsCellular;
- (_Bool)_mediaItemIsBeingDownloadedAndDownloadAllowsCellular:(id)arg1;
- (void)_showAlertControllerForExpirationPromptForDownload:(id)arg1 presentingViewController:(id)arg2;
- (_Bool)_shouldPromptForExpiredDownload:(id)arg1;
- (void)_checkIfAllowedToPlayOnCellularNetworkWithMediaItem:(id)arg1 presentingController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_shouldWarnAboutRentalPlaybackQualityForRentalMediaItem:(id)arg1;
- (void)_performRatingAndAgeVerificationWithMediaItem:(id)arg1 presentingController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_showCellularPlaybackQualityOptionsForRentalMediaItem:(id)arg1 presentingViewController:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_presentCantPlaybackOverCellularAlertControllerWithMediaItem:(id)arg1 presentingViewController:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_presentStartingPlaybackWindowWarningWithRentalMediaItem:(id)arg1 presentingViewController:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)_shouldWarnStartingRentalPlaybackWindowWithMediaItem:(id)arg1;
- (void)_preflightPlaybackWithPlaylist:(id)arg1 presentingViewController:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_registerStateMachineHandlers;
- (void)_addGroupActivityDayParamToPlayableAndMediaItem:(id)arg1;
- (id)_addQueryParamsToSharedWatchURL:(id)arg1 watchType:(long long)arg2 groupActivityDay:(id)arg3;
- (id)_descriptionForStartupAction:(long long)arg1;
- (id)_descriptionForWatchType:(long long)arg1;
- (void)performPlaybackStartupFlowWithCompletion:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithCanonicalID:(id)arg1 showCanonicalID:(id)arg2 mediaType:(id)arg3 watchType:(long long)arg4 isRentAndWatchNow:(_Bool)arg5 contentMetadata:(id)arg6;
- (id)initWithCanonicalID:(id)arg1 showCanonicalID:(id)arg2 mediaType:(id)arg3 watchType:(long long)arg4 isRentAndWatchNow:(_Bool)arg5;
- (id)initWithAdamID:(id)arg1 watchType:(long long)arg2 isRentAndWatchNow:(_Bool)arg3 contentMetadata:(id)arg4;
- (id)initWithAdamID:(id)arg1 watchType:(long long)arg2 isRentAndWatchNow:(_Bool)arg3;
- (id)initWithMediaInfo:(id)arg1 watchType:(long long)arg2 isRentAndWatchNow:(_Bool)arg3;

@end

