//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class JSContext, NSError, NSMutableArray, NSString, VUIAppReloadContext, VUIJSApplication, VUIJSFoundation;
@protocol OS_dispatch_source, VUIAppContextDelegate, VUIApplication;

@interface VUIAppContext : NSObject
{
    _Bool _respondsToTraitCollection;
    struct __CFRunLoop *_jsThreadRunLoop;
    struct __CFRunLoopSource *_jsThreadRunLoopSource;
    NSObject<OS_dispatch_source> *_lowMemoryWarningSource;
    _Bool _remoteInspectionEnabled;
    _Bool _isValid;
    _Bool _canAccessPendingQueue;
    _Bool _running;
    id <VUIApplication> _app;
    unsigned long long _mode;
    VUIJSApplication *_jsApp;
    VUIJSFoundation *_jsFoundation;
    id <VUIAppContextDelegate> _delegate;
    JSContext *_jsContext;
    double _appScriptTimeoutInterval;
    NSString *_nextJSChecksum;
    NSMutableArray *_onStartQueue;
    NSString *_responseScript;
    NSError *_responseError;
    VUIAppReloadContext *_reloadContext;
    NSMutableArray *_pendingQueue;
    NSMutableArray *_postEvaluationBlocks;
}

+ (id)currentAppContext;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableArray *postEvaluationBlocks; // @synthesize postEvaluationBlocks=_postEvaluationBlocks;
@property(retain, nonatomic) NSMutableArray *pendingQueue; // @synthesize pendingQueue=_pendingQueue;
@property(getter=isRunning) _Bool running; // @synthesize running=_running;
@property(retain, nonatomic) VUIAppReloadContext *reloadContext; // @synthesize reloadContext=_reloadContext;
@property(retain, nonatomic) NSError *responseError; // @synthesize responseError=_responseError;
@property(copy, nonatomic) NSString *responseScript; // @synthesize responseScript=_responseScript;
@property(nonatomic) _Bool canAccessPendingQueue; // @synthesize canAccessPendingQueue=_canAccessPendingQueue;
@property(readonly, nonatomic) NSMutableArray *onStartQueue; // @synthesize onStartQueue=_onStartQueue;
@property(copy, nonatomic) NSString *nextJSChecksum; // @synthesize nextJSChecksum=_nextJSChecksum;
@property _Bool isValid; // @synthesize isValid=_isValid;
@property(nonatomic) _Bool remoteInspectionEnabled; // @synthesize remoteInspectionEnabled=_remoteInspectionEnabled;
@property(nonatomic) double appScriptTimeoutInterval; // @synthesize appScriptTimeoutInterval=_appScriptTimeoutInterval;
@property(retain, nonatomic) JSContext *jsContext; // @synthesize jsContext=_jsContext;
@property(readonly, nonatomic) __weak id <VUIAppContextDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) VUIJSFoundation *jsFoundation; // @synthesize jsFoundation=_jsFoundation;
@property(retain, nonatomic) VUIJSApplication *jsApp; // @synthesize jsApp=_jsApp;
@property(readonly, nonatomic) unsigned long long mode; // @synthesize mode=_mode;
@property(readonly, nonatomic) __weak id <VUIApplication> app; // @synthesize app=_app;
- (id)_appTraitCollection;
- (void)contextDidStartWithJS:(id)arg1 options:(id)arg2;
- (void)contextDidFailWithError:(id)arg1;
- (void)contextDidStopWithOptions:(id)arg1;
- (void)_drainOnStartQueue;
- (void)_enqueueOnStartOrExecute:(CDUnknownBlockType)arg1;
- (void)_dispatchError:(id)arg1;
- (id)_errorWithMessage:(id)arg1;
- (void)_doEvaluate:(CDUnknownBlockType)arg1;
- (void)_invalidateJSThread;
- (void)_evaluate:(CDUnknownBlockType)arg1;
- (void)_sourceCanceledOnRunLoop:(struct __CFRunLoop *)arg1;
- (void)_sourcePerform;
- (void)_sourceScheduledOnRunLoop:(struct __CFRunLoop *)arg1;
- (void)_jsThreadMain;
- (void)_stopAndReload:(_Bool)arg1;
- (void)_addStopRecordToPendingQueueWithReload:(_Bool)arg1;
- (void)_startWithScript:(id)arg1 scriptUrl:(id)arg2;
- (void)_startWithURL:(id)arg1;
- (_Bool)_prepareStartWithURL:(id)arg1;
- (void)handleReloadWithUrgencyType:(unsigned long long)arg1 minInterval:(double)arg2 data:(id)arg3;
- (void)setException:(id)arg1 withErrorMessage:(id)arg2;
- (void)addPostEvaluateBlock:(CDUnknownBlockType)arg1;
- (void)evaluateDelegateBlockSync:(CDUnknownBlockType)arg1;
- (void)evaluate:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)stop;
- (void)reload;
- (void)openURLWithOptions:(id)arg1;
- (void)resumeWithOptions:(id)arg1;
- (void)suspendWithOptions:(id)arg1;
- (void)start;
- (void)dealloc;
- (id)initWithApplication:(id)arg1 mode:(unsigned long long)arg2 delegate:(id)arg3;
- (void)_addPrivateInterfaces;
- (void)exitAppWithOptions:(id)arg1;
- (void)launchAppWithOptions:(id)arg1;
- (void)evaluateFoundationJS;

@end

