//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AppleMediaServices/AMSBagDataSourceProtocol-Protocol.h>

@class AMSBagNetworkTask, AMSBagNetworkTaskResult, AMSObserver, AMSProcessInfo, NSDate, NSError, NSString;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface AMSBagNetworkDataSource : NSObject <AMSBagDataSourceProtocol>
{
    NSError *_activeFailure;
    CDUnknownBlockType _dataSourceChangedHandler;
    CDUnknownBlockType _dataSourceDataInvalidatedHandler;
    AMSProcessInfo *_processInfo;
    NSString *_profile;
    NSString *_profileVersion;
    AMSObserver *_accountsChangedObserver;
    AMSBagNetworkTaskResult *_cachedResult;
    struct os_unfair_recursive_lock_s _cachedDataAccessLock;
    NSString *_cachedStorefront;
    struct os_unfair_recursive_lock_s _cachedStorefrontAccessLock;
    NSObject<OS_dispatch_queue> *_completionQueue;
    AMSBagNetworkTask *_currentLoadTask;
    NSDate *_activeFailureExpiration;
    NSObject<OS_dispatch_queue> *_processAccountStoreDidChangeNotificationQueue;
}

+ (_Bool)_shouldProcessChangedAccount:(id)arg1 forMediaType:(id)arg2;
+ (_Bool)_isDataDictionary:(id)arg1 equalToDataDictionary:(id)arg2;
+ (id)valueForURLVariable:(id)arg1 account:(id)arg2 clientInfo:(id)arg3;
- (void).cxx_destruct;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *processAccountStoreDidChangeNotificationQueue; // @synthesize processAccountStoreDidChangeNotificationQueue=_processAccountStoreDidChangeNotificationQueue;
@property(readonly, nonatomic) NSDate *activeFailureExpiration; // @synthesize activeFailureExpiration=_activeFailureExpiration;
@property(retain, nonatomic) AMSBagNetworkTask *currentLoadTask; // @synthesize currentLoadTask=_currentLoadTask;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(readonly, nonatomic) struct os_unfair_recursive_lock_s cachedStorefrontAccessLock; // @synthesize cachedStorefrontAccessLock=_cachedStorefrontAccessLock;
@property(retain, nonatomic) NSString *cachedStorefront; // @synthesize cachedStorefront=_cachedStorefront;
@property(readonly, nonatomic) struct os_unfair_recursive_lock_s cachedDataAccessLock; // @synthesize cachedDataAccessLock=_cachedDataAccessLock;
@property(retain, nonatomic) AMSBagNetworkTaskResult *cachedResult; // @synthesize cachedResult=_cachedResult;
@property(retain, nonatomic) AMSObserver *accountsChangedObserver; // @synthesize accountsChangedObserver=_accountsChangedObserver;
@property(readonly, copy, nonatomic) NSString *profileVersion; // @synthesize profileVersion=_profileVersion;
@property(readonly, copy, nonatomic) NSString *profile; // @synthesize profile=_profile;
@property(readonly, copy, nonatomic) AMSProcessInfo *processInfo; // @synthesize processInfo=_processInfo;
@property(copy, nonatomic) CDUnknownBlockType dataSourceDataInvalidatedHandler; // @synthesize dataSourceDataInvalidatedHandler=_dataSourceDataInvalidatedHandler;
@property(copy, nonatomic) CDUnknownBlockType dataSourceChangedHandler; // @synthesize dataSourceChangedHandler=_dataSourceChangedHandler;
- (void)_updateCachedResult:(id)arg1;
- (void)_invalidateCacheNotification:(id)arg1;
- (id)_fetchBag;
- (void)_accountStoreDidChange;
- (id)valueForURLVariable:(id)arg1 account:(id)arg2;
- (void)loadWithCompletion:(CDUnknownBlockType)arg1;
- (id)bagKeyInfoForKey:(id)arg1;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSString *descriptionExtended;
@property(retain, nonatomic) NSError *activeFailure; // @synthesize activeFailure=_activeFailure;
@property(readonly, nonatomic, getter=isLoaded) _Bool loaded;
@property(readonly, nonatomic) NSDate *expirationDate;
- (void)dealloc;
- (id)initWithProfile:(id)arg1 profileVersion:(id)arg2 processInfo:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

