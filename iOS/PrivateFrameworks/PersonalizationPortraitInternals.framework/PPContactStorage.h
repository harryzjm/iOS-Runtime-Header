//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CNContactStore, NSString, PPContactDiskCacheManager, PPMeCardCacheManager, PPSQLDatabase, SGSqlEntityStore;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, SGSuggestionsServiceContactsProtocol;

@interface PPContactStorage : NSObject
{
    CNContactStore *_contactsStore;
    NSObject<OS_dispatch_semaphore> *_concurrentContactQueryThrottleSem;
    NSObject<OS_dispatch_queue> *_concurrentContactQueryQueue;
    PPContactDiskCacheManager *_contactCacheManager;
    PPMeCardCacheManager *_meCardCacheManager;
    id <SGSuggestionsServiceContactsProtocol> _foundInAppsService;
    SGSqlEntityStore *_foundInAppsHarvestStore;
    NSString *_path;
    PPSQLDatabase *_db;
    _Bool _chineseBirthdayFound;
}

+ (id)normalizeHandle:(id)arg1;
- (void).cxx_destruct;
- (void)setChineseBirthdayFoundKVData;
- (void)loadChineseBirthdayFoundKVData;
- (void)setChineseBirthdayFound:(_Bool)arg1;
- (_Bool)chineseBirthdayFound;
- (id)contactHandleSourceCountsWithMinimumSourceCount:(unsigned long long)arg1;
- (unsigned long long)pruneOrphanedHandlesWithTxnWitness:(id)arg1;
- (void)storeHandleSourceMapWithHandles:(id)arg1 sourceId:(long long)arg2 txnWitness:(id)arg3;
- (long long)insertIfNeededAndFetchIdentifierWithHandle:(id)arg1 txnWitness:(id)arg2;
- (id)sourcesForContactHandle:(id)arg1;
- (id)contactHandlesForSource:(id)arg1;
- (id)contactHandlesForTopics:(id)arg1;
- (CDUnknownBlockType)postalAddressFilterWithQuery:(id)arg1;
- (CDUnknownBlockType)phoneFilterWithQuery:(id)arg1;
- (CDUnknownBlockType)nameFilterWithQuery:(id)arg1;
- (CDUnknownBlockType)emailFilterWithQuery:(id)arg1;
- (id)_waitForGroup:(id)arg1 results:(id)arg2 timeoutSeconds:(double)arg3 explanationSet:(id)arg4;
- (id)_waitForGroup:(id)arg1 results:(id)arg2;
- (id)_joinResults:(id)arg1;
- (id)contactsWithQuery:(id)arg1 explanationSet:(id)arg2 timeoutSeconds:(id)arg3 error:(id *)arg4;
- (id)initWithDatabase:(id)arg1;
- (id)init;
- (void)clearChangeHistoryForClient:(id)arg1 historyResult:(id)arg2;
- (id)contactsChangeHistoryForClient:(id)arg1 error:(id *)arg2;
- (void)_setHistoryToken:(id)arg1 clientIdentifier:(id)arg2;
- (id)_historyTokenForClientIdentifier:(id)arg1;
- (_Bool)_iterNameRecordsFromDiskCache:(id)arg1 error:(id *)arg2 block:(CDUnknownBlockType)arg3;
- (id)_disksCacheHistoryRecordsWithError:(id *)arg1;
- (id)_namesRecordsForAllFoundInAppsContactsWithKeepGoingBlock:(CDUnknownBlockType)arg1;
- (_Bool)_addToCache:(id)arg1 records:(id)arg2;
- (_Bool)_iterContactsNameRecordsForAllContactsFromSouceAndReplaceDiskCacheWithError:(id *)arg1 diskCache:(id)arg2 block:(CDUnknownBlockType)arg3;
- (_Bool)_iterContactsNameRecordsForAllContactsWithError:(id *)arg1 block:(CDUnknownBlockType)arg2;
- (id)_nameRecordKeysToFetch;
- (id)contactNameRecordsWithHistoryResult:(id)arg1 truncated:(_Bool *)arg2 error:(id *)arg3;
- (_Bool)iterAllNameRecordsFromAllSourcesWithError:(id *)arg1 block:(CDUnknownBlockType)arg2;
- (id)_contactsContactsWithPredicate:(id)arg1 explanationSet:(id)arg2 error:(id *)arg3;
- (id)contactsContactsWithQuery:(id)arg1 explanationSet:(id)arg2 error:(id *)arg3;
- (id)_contactsPostalAddressSearchWithQuery:(id)arg1 explanationSet:(id)arg2 error:(id *)arg3;
- (id)_contactsPhoneSearchWithQuery:(id)arg1 explanationSet:(id)arg2 error:(id *)arg3;
- (id)_contactsEmailSearchWithQuery:(id)arg1 explanationSet:(id)arg2 error:(id *)arg3;
- (id)_contactsNameSearchWithQuery:(id)arg1 explanationSet:(id)arg2 error:(id *)arg3;
- (id)_contactsFullTextSearchWithQuery:(id)arg1 explanationSet:(id)arg2 error:(id *)arg3 filter:(CDUnknownBlockType)arg4;
- (void)asyncFillResultsFromContactsWithQuery:(id)arg1 explanationSet:(id)arg2 group:(id)arg3 results:(id)arg4;
- (id)meCard;
- (id)_foundInAppsContactsQueryWithIdentifier:(id)arg1 explanationSet:(id)arg2 error:(id *)arg3;
- (id)_foundInAppsContactsQueryWithTerm:(id)arg1 explanationSet:(id)arg2 error:(id *)arg3 filter:(CDUnknownBlockType)arg4;
- (id)_foundInAppsContactsWithQuery:(id)arg1 explanationSet:(id)arg2 error:(id *)arg3;
- (void)asyncFillResultsFromFoundInAppsWithQuery:(id)arg1 explanationSet:(id)arg2 group:(id)arg3 results:(id)arg4;

@end

