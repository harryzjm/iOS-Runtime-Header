//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PersonalizationPortraitInternals/PPFeedbackAccepting-Protocol.h>
#import <PersonalizationPortraitInternals/PPFeedbackProcessing-Protocol.h>

@class NSCache, PPLocationStorage, PPTrialWrapper, _PASLock;

@interface PPLocalLocationStore : NSObject <PPFeedbackAccepting, PPFeedbackProcessing>
{
    _PASLock *_cache;
    NSCache *_modelCache;
    PPTrialWrapper *_trialWrapper;
    _Bool _useScoreInterpreter;
    PPLocationStorage *_storage;
}

+ (float)resolvedPerRecordDecayRateForFeatureProvider:(id)arg1 perRecordDecayRate:(float)arg2;
+ (float)resolvedPerRecordDecayRateForRecord:(id)arg1 perRecordDecayRate:(float)arg2;
+ (float)resolvedPerRecordDecayRateForSourceBundleId:(id)arg1 algorithm:(unsigned short)arg2 perRecordDecayRate:(float)arg3;
+ (void)sortAndTruncate:(id)arg1 queryLimit:(unsigned long long)arg2;
+ (id)scoredLocationFromName:(id)arg1 category:(unsigned short)arg2 score:(double)arg3 sentimentScore:(double)arg4;
+ (unsigned short)routineLOITypeToLocationCategory:(long long)arg1;
+ (unsigned short)namedEntityCategoryToLocationCategory:(unsigned long long)arg1;
+ (_Bool)isLocationRelevantDynamicNamedEntityCategory:(id)arg1;
+ (_Bool)isLocationRelevantNamedEntityCategory:(unsigned long long)arg1;
+ (unsigned short)poiCategoryToPPLocationCategory:(id)arg1;
+ (id)locationFromMapItem:(id)arg1;
+ (id)locationNamedEntityToPPScoredLocation:(id)arg1;
+ (id)locationFromMapItemDictionary:(id)arg1;
+ (id)defaultStore;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool useScoreInterpreter; // @synthesize useScoreInterpreter=_useScoreInterpreter;
@property(readonly, nonatomic) PPLocationStorage *storage; // @synthesize storage=_storage;
- (_Bool)_logFeedbackSessionsWithFeedback:(id)arg1 error:(id *)arg2;
- (_Bool)_extractDonationsForFeedback:(id)arg1 pbFeedbackLog:(id)arg2 location:(id)arg3 error:(id *)arg4;
- (id)_feedbackItemToLocationMapForFeedback:(id)arg1 error:(id *)arg2;
- (id)_locationToMappedStringMatchingForLocations:(id)arg1 timestamp:(double)arg2 error:(id *)arg3;
- (id)_getScoredLocationFeaturesForCoreMLFromIdentifier:(id)arg1 scoringDate:(id)arg2 excludingSourceBundleId:(id)arg3 decayedFeedbackCounts:(id)arg4 featurizer:(id)arg5 error:(id *)arg6;
- (id)_getScoredLocationFeaturesForStreamingScorerWithIdentifier:(id)arg1 excludingSourceBundleId:(id)arg2 decayedFeedbackCounts:(id)arg3 error:(id *)arg4;
- (void)processfeedbackItems:(id)arg1 scoringDate:(id)arg2 clientIdentifier:(id)arg3 clientBundleId:(id)arg4 mappingId:(id)arg5;
- (id)_feedbackItemsByItemString:(id)arg1;
- (void)registerFeedback:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)pruneOrphanedLocationFeedbackCountsWithLimit:(long long)arg1 rowOffset:(unsigned long long)arg2 deletedCount:(unsigned long long *)arg3 isComplete:(_Bool *)arg4;
- (_Bool)deleteAllLocationFeedbackCountsOlderThanDate:(id)arg1;
- (void)_logDonationForLocations:(id)arg1 bundleId:(id)arg2 algorithm:(unsigned short)arg3 groupId:(id)arg4;
- (_Bool)deleteAllLocationsOlderThanDate:(id)arg1 deletedCount:(unsigned long long *)arg2 error:(id *)arg3;
- (_Bool)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 groupId:(id)arg2 olderThan:(id)arg3 deletedCount:(unsigned long long *)arg4 error:(id *)arg5;
- (_Bool)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 groupIds:(id)arg2 deletedCount:(unsigned long long *)arg3 error:(id *)arg4;
- (_Bool)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 documentIds:(id)arg2 deletedCount:(unsigned long long *)arg3 error:(id *)arg4;
- (_Bool)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 deletedCount:(unsigned long long *)arg2 error:(id *)arg3;
- (_Bool)clearWithError:(id *)arg1 deletedCount:(unsigned long long *)arg2;
- (id)_unlimitedLocationRecordsWithQuery:(id)arg1 error:(id *)arg2;
- (id)locationRecordsWithQuery:(id)arg1 error:(id *)arg2;
- (id)homeOrWorkAddresses;
- (id)locationForWork;
- (id)locationForHome;
- (id)locationRecordOfCategory:(unsigned short)arg1;
- (_Bool)iterLocationRecordsWithQuery:(id)arg1 error:(id *)arg2 block:(CDUnknownBlockType)arg3;
- (id)_loadScoreInterpreter;
- (id)scoreLocations:(id)arg1 scoringDate:(id)arg2 perRecordDecayRate:(float)arg3 decayRate:(float)arg4 sourceStats:(id)arg5 scoreInterpreter:(id)arg6 streamingScorer:(id *)arg7 mlModel:(id)arg8;
- (double)finalScoreFromRecordsUsingHybrid:(id)arg1 streamingScorer:(id)arg2 mlModel:(id)arg3;
- (id)_loadScoringMLModel;
- (_Bool)_shouldUseScoringMLModel;
- (id)rankedLocationsWithQuery:(id)arg1 clientProcessName:(id)arg2 error:(id *)arg3;
- (void)_petLoggingForQuery:(id)arg1 resultCount:(unsigned long long)arg2 clientProcessName:(id)arg3 hasError:(_Bool)arg4;
- (_Bool)iterRankedLocationsWithQuery:(id)arg1 error:(id *)arg2 block:(CDUnknownBlockType)arg3;
- (_Bool)donateLocations:(id)arg1 source:(id)arg2 contextualNamedEntities:(id)arg3 algorithm:(unsigned short)arg4 cloudSync:(_Bool)arg5 decayRate:(double)arg6 error:(id *)arg7;
- (id)_init;
- (id)initWithStorage:(id)arg1 trialWrapper:(id)arg2;
- (id)init;

@end

