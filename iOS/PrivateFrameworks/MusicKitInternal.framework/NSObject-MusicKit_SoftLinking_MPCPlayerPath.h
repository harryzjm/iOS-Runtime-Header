//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MusicKit_SoftLinking_MPSectionedCollection, NSNumber, NSString;
@protocol MusicKit_SoftLinking_MPCPlayerPath, MusicKit_SoftLinking_MPCPlayerResponseItem, MusicKit_SoftLinking_MPCPlayerResponseTracklist, MusicKit_SoftLinking_MPNowPlayingInfoAudioFormat;

@interface NSObject (MusicKit_SoftLinking_MPCPlayerPath)
- (_Bool)musicKit_playerPath_isCompanion;
- (_Bool)musicKit_playerPath_isLocal;
- (id)musicKit_playerPath_route;
- (_Bool)musicKit_playerPath_isInProcess;
- (id)musicKit_playerPath_playerID;
- (id)musicKit_playerPath_bundleID;
- (id)_musicKit_self_playerPath;
- (id)musicKit_playerResponseItem_removeCommandRequest;
- (id)musicKit_playerResponseItem_seekCommand;
@property(readonly, nonatomic) id <MusicKit_SoftLinking_MPNowPlayingInfoAudioFormat> musicKit_playerResponseItem_nowPlayingAudioFormat;
@property(readonly, nonatomic) _Bool musicKit_playerResponseItem_isLoading;
@property(readonly, nonatomic) _Bool musicKit_playerResponseItem_isPlaceholder;
@property(readonly, nonatomic) _Bool musicKit_playerResponseItem_isLiveContent;
@property(readonly, nonatomic) float musicKit_playerResponseItem_defaultRate;
@property(readonly, nonatomic) float musicKit_playerResponseItem_rate;
@property(readonly, nonatomic) double musicKit_playerResponseItem_elapsedTime;
@property(readonly, nonatomic) double musicKit_playerResponseItem_duration;
@property(readonly, nonatomic) double musicKit_playerResponseItem_endTime;
@property(readonly, nonatomic) double musicKit_playerResponseItem_startTime;
- (CDStruct_1c9ae071)_durationSnapshot;
@property(readonly, copy, nonatomic) NSString *musicKit_playerResponseItem_contentItemIdentifier;
@property(readonly, nonatomic) id musicKit_playerResponseItem_underlyingModelObject;
- (id)_musicKit_self_responseItem;
- (void)_musicKit_setCommandOptionValue:(id)arg1 forKey:(id)arg2;
- (void)musicKit_setSessionID:(id)arg1;
- (id)_musicKit_self_commandRequest;
- (id)musicKit_resetTracklistCommand_clearUpNextItemsCommandRequest;
- (id)musicKit_resetTracklistCommand_clearCommandRequest;
- (id)musicKit_resetTracklistCommand_replaceCommandRequestWithPlaybackIntent:(id)arg1 replaceIntent:(long long)arg2;
- (id)_musicKit_self_resetTracklistCommand;
- (id)musicKit_insertItemsCommand_insertAtEndOfTracklistCommandRequestWithPlaybackIntent:(id)arg1;
- (id)musicKit_insertItemsCommand_insertAfterPlayingItemCommandRequestWithPlaybackIntent:(id)arg1;
- (id)_musicKit_self_insertItemsCommand;
- (id)musicKit_reorderItemsCommand_moveItem:(id)arg1 beforeItem:(id)arg2;
- (id)musicKit_reorderItemsCommand_moveItem:(id)arg1 afterItem:(id)arg2;
- (id)_musicKit_self_reorderItemsCommand;
- (id)musicKit_repeatCommand_setRepeatType:(long long)arg1;
- (id)_musicKit_self_repeatCommand;
- (id)musicKit_shuffleCommand_setShuffleType:(long long)arg1;
- (id)_musicKit_self_shuffleCommand;
- (id)musicKit_changeItemCommand_changeToItem:(id)arg1;
- (id)musicKit_changeItemCommand_nextChapterCommandRequest;
- (id)musicKit_changeItemCommand_nextSectionCommandRequest;
- (id)musicKit_changeItemCommand_nextItemCommandRequest;
- (id)musicKit_changeItemCommand_previousChapterCommandRequest;
- (id)musicKit_changeItemCommand_previousSectionCommandRequest;
- (id)musicKit_changeItemCommand_previousItemDeferringToPlaybackQueuePositionCommandRequest;
- (id)musicKit_changeItemCommand_previousItemCommandRequest;
- (id)_musicKit_self_changeItemCommand;
@property(readonly, nonatomic, getter=musicKit_actionAtQueueEndCommand_isAutoPlaySupported) _Bool musicKit_actionAtQueueEndCommand_autoPlaySupported;
- (id)musicKit_actionAtQueueEndCommand_setQueueEndActionCommandRequest:(long long)arg1;
- (id)_musicKit_self_actionAtQueueEndCommand;
- (id)musicKit_seekCommand_changePositionCommandRequestToElapsedInterval:(double)arg1;
- (id)musicKit_seekCommand_jumpCommandRequestByInterval:(double)arg1;
- (id)musicKit_seekCommand_endSeekCommandRequest;
- (id)musicKit_seekCommand_beginSeekCommandRequestWithDirection:(long long)arg1;
@property(readonly, copy, nonatomic) NSNumber *musicKit_seekCommand_preferredBackwardJumpInterval;
@property(readonly, copy, nonatomic) NSNumber *musicKit_seekCommand_preferredForwardJumpInterval;
- (id)_musicKit_self_seekCommand;
@property(readonly, nonatomic) CDUnknownBlockType musicKit_responseTracklist_underlyingSectionObjectAtIndexPathBlock;
@property(readonly, nonatomic) MusicKit_SoftLinking_MPSectionedCollection *musicKit_responseTracklist_sectionedCollection;
- (id)musicKit_responseTracklist_actionAtQueueEndCommand;
- (id)musicKit_responseTracklist_shuffleCommand;
- (id)musicKit_responseTracklist_repeatCommand;
- (id)musicKit_responseTracklist_changeItemCommand;
- (id)musicKit_responseTracklist_reorderCommand;
- (id)musicKit_responseTracklist_insertCommand;
- (id)musicKit_responseTracklist_resetCommand;
@property(readonly, nonatomic) long long musicKit_responseTracklist_actionAtQueueEnd;
@property(readonly, nonatomic) long long musicKit_responseTracklist_shuffleType;
@property(readonly, nonatomic) long long musicKit_responseTracklist_repeatType;
@property(readonly, nonatomic) id <MusicKit_SoftLinking_MPCPlayerResponseItem> musicKit_responseTracklist_playingItem;
- (id)_musicKit_self_responseTracklist;
@property(readonly, nonatomic) NSString *musicKit_avRoute_routeUID;
@property(readonly, nonatomic) NSString *musicKit_avRoute_routeName;
- (id)_musicKit_self_avRoute;
- (id)musicKit_playerResponse_stopCommandRequest;
- (id)musicKit_playerResponse_pauseCommandRequest;
- (id)musicKit_playerResponse_playCommandRequest;
@property(readonly, nonatomic) long long musicKit_playerResponse_state;
@property(readonly, nonatomic) id <MusicKit_SoftLinking_MPCPlayerPath> musicKit_playerPath;
@property(readonly, nonatomic) id <MusicKit_SoftLinking_MPCPlayerResponseTracklist> musicKit_playerResponse_tracklist;
- (id)_musicKit_self_playerResponse;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

