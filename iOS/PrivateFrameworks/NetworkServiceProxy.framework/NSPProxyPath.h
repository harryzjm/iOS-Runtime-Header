//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NetworkServiceProxy/NSCopying-Protocol.h>
#import <NetworkServiceProxy/NSPPrivacyProxyNetworkRegistrationDelegate-Protocol.h>
#import <NetworkServiceProxy/NSSecureCoding-Protocol.h>

@class NSPPrivacyProxyNetworkRegistration, NSPProxyAgentNetworkStatistics, NSPProxyTokenInfo, NSString;
@protocol NSPProxyPathDelegate;

@interface NSPProxyPath : NSObject <NSSecureCoding, NSCopying, NSPPrivacyProxyNetworkRegistrationDelegate>
{
    _Bool _allowFallback;
    _Bool _allowFailOpen;
    _Bool _singleHopRegistered;
    _Bool _multiHopRegistered;
    _Bool _geohashSharingEnabled;
    id <NSPProxyPathDelegate> _delegate;
    NSPProxyTokenInfo *_ingressProxy;
    NSPProxyTokenInfo *_egressProxy;
    unsigned long long _proxyPathWeight;
    NSPPrivacyProxyNetworkRegistration *_singleHopRegistration;
    NSPPrivacyProxyNetworkRegistration *_multiHopRegistration;
    NSPProxyAgentNetworkStatistics *_networkSingleHopAgentStatistics;
    NSPProxyAgentNetworkStatistics *_networkMultiHopAgentStatistics;
}

+ (_Bool)supportsSecureCoding;
- (void).cxx_destruct;
@property(retain, nonatomic) NSPProxyAgentNetworkStatistics *networkMultiHopAgentStatistics; // @synthesize networkMultiHopAgentStatistics=_networkMultiHopAgentStatistics;
@property(retain, nonatomic) NSPProxyAgentNetworkStatistics *networkSingleHopAgentStatistics; // @synthesize networkSingleHopAgentStatistics=_networkSingleHopAgentStatistics;
@property(retain, nonatomic) NSPPrivacyProxyNetworkRegistration *multiHopRegistration; // @synthesize multiHopRegistration=_multiHopRegistration;
@property(retain, nonatomic) NSPPrivacyProxyNetworkRegistration *singleHopRegistration; // @synthesize singleHopRegistration=_singleHopRegistration;
@property(nonatomic) _Bool geohashSharingEnabled; // @synthesize geohashSharingEnabled=_geohashSharingEnabled;
@property(nonatomic) _Bool multiHopRegistered; // @synthesize multiHopRegistered=_multiHopRegistered;
@property(nonatomic) _Bool singleHopRegistered; // @synthesize singleHopRegistered=_singleHopRegistered;
@property(nonatomic) _Bool allowFailOpen; // @synthesize allowFailOpen=_allowFailOpen;
@property(nonatomic) _Bool allowFallback; // @synthesize allowFallback=_allowFallback;
@property(nonatomic) unsigned long long proxyPathWeight; // @synthesize proxyPathWeight=_proxyPathWeight;
@property(retain, nonatomic) NSPProxyTokenInfo *egressProxy; // @synthesize egressProxy=_egressProxy;
@property(retain, nonatomic) NSPProxyTokenInfo *ingressProxy; // @synthesize ingressProxy=_ingressProxy;
@property __weak id <NSPProxyPathDelegate> delegate; // @synthesize delegate=_delegate;
- (id)multiHopConfigurationHash;
- (id)singleHopConfigurationHash;
- (void)dealloc;
- (void)reportErrorForNetworkRegistration:(id)arg1 error:(int)arg2 withOptions:(id)arg3;
- (void)resetError;
- (void)resetStats;
- (void)handleNetworkCharacteristicsChange:(id)arg1;
- (_Bool)matchEgress:(id)arg1;
- (_Bool)matchIngress:(id)arg1;
- (_Bool)proxyPathIsValid:(id)arg1 proxyPathList:(id)arg2;
- (void)updateGeohashSharing:(_Bool)arg1;
- (void)enableFailOpen:(_Bool)arg1;
- (void)updateIngressProxy:(id)arg1 egressProxy:(id)arg2 proxyPathWeight:(unsigned long long)arg3;
- (_Bool)isSingleHopRegistered;
- (_Bool)isMultiHopRegistered;
- (void)resetMultiHopProxyAgent;
- (void)resetSingleHopProxyAgent;
- (void)setupMultiHopProxyRegistrations;
- (void)setupSingleHopProxyRegistrations;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2;
- (id)initWithDelegate:(id)arg1 ingressProxy:(id)arg2 egressProxy:(id)arg3 proxyPathWeight:(unsigned long long)arg4 allowFallback:(_Bool)arg5 allowFailOpen:(_Bool)arg6 geohashSharingEnabled:(_Bool)arg7 networkCharacteristics:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

