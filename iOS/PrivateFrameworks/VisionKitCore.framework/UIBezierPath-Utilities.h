//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIBezierPath.h>

@class NSMutableArray;

@interface UIBezierPath (Utilities)
+ (id)mapPaths:(id)arg1 toQuads:(id)arg2;
+ (double)radiusForQuads:(id)arg1 radiusRatio:(double)arg2;
+ (id)vk_roundAndGroupNormalizedQuadsForHighlight:(id)arg1 aspectRatio:(double)arg2 expansionScale:(double)arg3 radiusToAvgHeightRatio:(double)arg4;
+ (struct CGPoint)vk_projectPoint:(struct CGPoint)arg1 lineStart:(struct CGPoint)arg2 lineEnd:(struct CGPoint)arg3;
+ (struct CGPoint)vk_calculateCenterForPoints:(struct CGPoint)arg1 p2:(struct CGPoint)arg2 p3:(struct CGPoint)arg3 radius:(double)arg4;
+ (double)vk_signForRadiusWithVectorStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2 otherPoint:(struct CGPoint)arg3;
+ (double)vk_clampedRadius:(double)arg1 p1:(struct CGPoint)arg2 p2:(struct CGPoint)arg3 p3:(struct CGPoint)arg4;
+ (id)vk_shiftLinePerpendicularlyFromPoint:(struct CGPoint)arg1 to:(struct CGPoint)arg2 radius:(double)arg3;
+ (void)_processPointsForRounding:(id)arg1 withRadius:(double)arg2;
+ (void)_processPointsForNarrowAngles:(id)arg1;
+ (const struct CGPath *)vk_newRoundedPathWithRadius:(double)arg1 points:(id)arg2;
+ (struct CGPath *)_cgPathFromClipperPath:(void *)arg1;
+ (_Bool)vk_cgPathcontainsAnyCurveToPoints:(struct CGPath *)arg1;
+ (id)vk_groupAndRoundPaths:(id)arg1 radius:(double)arg2 offset:(double)arg3;
+ (id)vk_subpathArrayFromCGPath:(struct CGPath *)arg1;
+ (id)vk_pathFromCGPath:(struct CGPath *)arg1;
+ (id)vk_allPointsFromCGPath:(struct CGPath *)arg1;
- (id)vk_expandWithOffset:(double)arg1;
- (id)_vk_flattenWithPath:(id)arg1 clipType:(int)arg2;
- (id)vk_intersectAndFlattenWithPath:(id)arg1;
- (id)vk_unionAndFlattenWithPath:(id)arg1;
- (id)vk_subpathArray;
- (id)debugQuickLookObject;
- (id)vk_pathFromFlippingInRect:(struct CGRect)arg1;
- (void)vk_applyTransform:(struct CGAffineTransform)arg1;
@property(readonly, nonatomic) NSMutableArray *vk_allPoints;
@property(readonly, nonatomic) struct CGPoint vk_centroid;
- (void)vk_appendBezierPath:(id)arg1;
- (void)vk_addCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)vk_addLineToPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) const struct CGPath *vk_CGPath;
@end

