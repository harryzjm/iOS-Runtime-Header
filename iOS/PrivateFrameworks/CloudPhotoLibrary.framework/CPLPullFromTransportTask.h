//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CPLFeatureVersionHistory, NSData, NSObject, NSString;
@protocol CPLEngineTransportDownloadBatchTask, CPLEngineTransportGetLibraryInfoTask, CPLEngineTransportGroup, CPLEngineTransportQueryTask, CPLPullFromTransportTaskDelegate, OS_dispatch_queue;

@interface CPLPullFromTransportTask
{
    NSObject<OS_dispatch_queue> *_queue;
    NSData *_initialSyncAnchor;
    id <CPLEngineTransportDownloadBatchTask> _downloadTask;
    id <CPLEngineTransportQueryTask> _queryTask;
    id <CPLEngineTransportGetLibraryInfoTask> _getLibraryInfoTask;
    NSData *_lastKnownSyncAnchor;
    NSString *_clientCacheIdentifier;
    Class _currentQueryClass;
    _Bool _ignoreNewBatches;
    _Bool _gotSomeChanges;
    _Bool _useCourtesyMingling;
    unsigned long long _rewindFeatureVersion;
    NSData *_rewindSyncAnchor;
    CPLFeatureVersionHistory *_versionHistory;
    id <CPLEngineTransportGroup> _transportGroup;
    _Bool _isPrePushPhase;
}

@property(nonatomic, setter=setPrePushPhase:) _Bool isPrePushPhase; // @synthesize isPrePushPhase=_isPrePushPhase;
- (void).cxx_destruct;
- (id)taskIdentifier;
- (void)cancel;
- (void)resume;
- (void)pause;
- (void)taskDidFinishWithError:(id)arg1;
- (void)launch;
- (void)_launch;
- (void)_checkServerFeatureVersion:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_launchPullTasksAndDisableQueries:(_Bool)arg1;
- (void)_launchNextQueryTask;
- (void)_launchQueryForClass:(Class)arg1 cursor:(id)arg2;
- (void)_handleNewBatchFromQuery:(id)arg1 newCursor:(id)arg2;
- (void)_handleNewBatchFromQuery:(id)arg1 newCursor:(id)arg2 inTransaction:(id)arg3;
- (void)_launchFetchChangesFromSyncAnchor:(id)arg1;
- (void)_updateLastFeatureVersionAndRelaunchFetchChangesFromSyncAnchor:(id)arg1;
- (void)_handleNewBatchFromChanges:(id)arg1 newSyncAnchor:(id)arg2;
- (_Bool)_checkStateBeforeContinuingInTransaction:(id)arg1;
- (void)_handleNewBatchFromChanges:(id)arg1 newSyncAnchor:(id)arg2 inTransaction:(id)arg3;
- (void)_extractAndMingleAssetsIfPossibleFromBatch:(id)arg1 inTransaction:(id)arg2;
- (id)initWithEngineLibrary:(id)arg1;

// Remaining properties
@property(retain) id <CPLPullFromTransportTaskDelegate> delegate; // @dynamic delegate;

@end

