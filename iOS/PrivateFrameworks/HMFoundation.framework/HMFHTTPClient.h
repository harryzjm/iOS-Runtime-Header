//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFLogging-Protocol.h>
#import <HMFoundation/HMFNetMonitorDelegate-Protocol.h>
#import <HMFoundation/HMFTimerDelegate-Protocol.h>
#import <HMFoundation/NSURLSessionDelegate-Protocol.h>

@class HMFHTTPClientConfiguration, HMFNetManager, HMFNetMonitor, HMFNetService, HMFTimer, NSObject, NSOperationQueue, NSString, NSURL, NSURLSession;
@protocol HMFHTTPClientDelegate, OS_dispatch_queue;

@interface HMFHTTPClient <HMFLogging, HMFNetMonitorDelegate, HMFTimerDelegate, NSURLSessionDelegate>
{
    struct os_unfair_lock_s _lock;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _reachable;
    _Bool _pinging;
    _Bool _allowAnonymousConnection;
    _Bool _active;
    HMFHTTPClientConfiguration *_configuration;
    NSURL *_baseURL;
    id <HMFHTTPClientDelegate> _delegate;
    HMFNetService *_netService;
    NSURLSession *_session;
    HMFNetMonitor *_reachabilityMonitor;
    NSOperationQueue *_reachabilityProbeQueue;
    HMFNetManager *_netManager;
    HMFTimer *_delegatedPingTimer;
    CDUnknownBlockType _timerFactory;
}

+ (id)logCategory;
+ (id)baseURLWithScheme:(id)arg1 hostAddress:(id)arg2 port:(unsigned long long)arg3;
- (void).cxx_destruct;
@property(copy) CDUnknownBlockType timerFactory; // @synthesize timerFactory=_timerFactory;
@property(retain, nonatomic) HMFTimer *delegatedPingTimer; // @synthesize delegatedPingTimer=_delegatedPingTimer;
@property(readonly, nonatomic) HMFNetManager *netManager; // @synthesize netManager=_netManager;
@property(readonly, nonatomic) NSOperationQueue *reachabilityProbeQueue; // @synthesize reachabilityProbeQueue=_reachabilityProbeQueue;
@property(readonly, nonatomic) HMFNetMonitor *reachabilityMonitor; // @synthesize reachabilityMonitor=_reachabilityMonitor;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
@property(readonly, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(nonatomic) _Bool allowAnonymousConnection; // @synthesize allowAnonymousConnection=_allowAnonymousConnection;
@property(readonly, copy, nonatomic) HMFNetService *netService; // @synthesize netService=_netService;
@property __weak id <HMFHTTPClientDelegate> delegate; // @synthesize delegate=_delegate;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)timerDidFire:(id)arg1;
- (void)networkMonitorIsUnreachable:(id)arg1;
- (void)networkMonitorIsReachable:(id)arg1;
- (id)logIdentifier;
- (void)resolveWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)invalidate;
- (void)cancelPendingRequests;
- (void)_sendRequest:(id)arg1 baseURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)sendRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)stopDelegatedPingTimer;
- (void)startDelegatedPingTimer;
- (_Bool)requestClientReachabilityPingWithRetry:(_Bool)arg1;
- (void)startReachabilityProbe;
@property(nonatomic, getter=isPinging) _Bool pinging; // @synthesize pinging=_pinging;
@property(nonatomic, getter=isReachable) _Bool reachable; // @synthesize reachable=_reachable;
@property(readonly, copy, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(readonly, nonatomic) unsigned long long options;
@property(readonly, copy) HMFHTTPClientConfiguration *configuration; // @synthesize configuration=_configuration;
- (id)attributeDescriptions;
- (void)dealloc;
- (void)finishCommonInitialization;
- (id)createNSURLSession:(id)arg1;
- (id)initWithService:(id)arg1 configuration:(id)arg2 session:(id)arg3 reachabilityMonitor:(id)arg4 netManager:(id)arg5;
- (id)initWithService:(id)arg1 configuration:(id)arg2;
- (id)initWithNetService:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithBaseURL:(id)arg1 configuration:(id)arg2 session:(id)arg3 reachabilityMonitor:(id)arg4 netManager:(id)arg5;
- (id)initWithBaseURL:(id)arg1 configuration:(id)arg2;
- (id)initWithBaseURL:(id)arg1 options:(unsigned long long)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

