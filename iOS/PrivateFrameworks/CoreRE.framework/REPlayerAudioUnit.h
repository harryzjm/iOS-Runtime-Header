//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <AudioToolbox/AUAudioUnit.h>

@class AUAudioUnitBusArray, AVAudioEngine, AVAudioMixerNode, AVAudioPlayerNode, NSObject;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface REPlayerAudioUnit : AUAudioUnit
{
    AUAudioUnitBusArray *_outputBusArray;
    AVAudioEngine *_engine;
    AVAudioMixerNode *_sampleRateConverter;
    AVAudioPlayerNode *_playingNode;
    struct atomic<bool> _didHitStop;
    struct atomic<bool> _looping;
    id _resource;
    struct mutex _engineConfigurationMutex;
    struct shared_ptr<AudioStreamRecordingManager::StreamWriter> _recordingStreamWriter;
    CDUnknownBlockType _playingNodeRenderBlock;
    CDUnknownBlockType _sampleRateConverterRenderBlock;
    struct OpaqueAudioComponentInstance *_playingNodeAudioUnit;
    double _startTime;
    double _pauseTime;
    struct atomic<double> _renderSampleTime;
    unsigned long long _currentPlayTimeParamAddress;
    struct atomic<REAudioPlaybackState> _playbackState;
    struct atomic<unsigned int> _playedFrames;
    _Bool _isScheduled;
    struct atomic<bool> _shouldDispatchCompletion;
    NSObject<OS_dispatch_queue> *_serialWorkQueue;
    CDUnknownBlockType _streamPlaybackDidComplete;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(copy) CDUnknownBlockType streamPlaybackDidComplete; // @synthesize streamPlaybackDidComplete=_streamPlaybackDidComplete;
@property(retain) NSObject<OS_dispatch_queue> *serialWorkQueue; // @synthesize serialWorkQueue=_serialWorkQueue;
- (id)outputBusses;
- (id)channelCapabilities;
- (CDUnknownBlockType)internalRenderBlock;
- (void)deallocateRenderResources;
- (_Bool)allocateRenderResourcesAndReturnError:(id *)arg1;
@property double playbackPosition;
- (double)outputSampleRate;
@property(readonly) double assetDuration;
- (void)resume;
- (void)pause;
- (void)stop;
- (void)play;
@property(readonly) _Bool isPrepared;
- (void)prepareToPlayBuffer:(id)arg1 withLayoutTag:(unsigned int)arg2 looping:(_Bool)arg3;
- (void)prepareToPlayFile:(id)arg1 withLayoutTag:(unsigned int)arg2 looping:(_Bool)arg3;
- (void)scheduleCurrentResourceOnPlayer:(id)arg1 startingProgress:(double)arg2;
- (void)scheduleCurrentResourceOnPlayer:(id)arg1;
- (void)_playbackCompletionCallback;
- (id)initWithComponentDescription:(struct AudioComponentDescription)arg1 options:(unsigned int)arg2 error:(id *)arg3;

@end

