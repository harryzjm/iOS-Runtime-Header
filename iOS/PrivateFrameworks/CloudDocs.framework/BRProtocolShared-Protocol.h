//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CloudDocs/BRShareOperationProtocol-Protocol.h>
#import <CloudDocs/CKXPCShareDaemon-Protocol.h>

@class BRCMigrationReport, BRFileObjectID, BRMangledID, CKShareMetadata, FPSandboxingURLWrapper, NSArray, NSData, NSDate, NSDictionary, NSError, NSFileHandle, NSNumber, NSObject, NSSet, NSString, NSURL, NSUUID;
@protocol BRItemNotificationReceiving, BROperationClient;

@protocol BRProtocolShared <CKXPCShareDaemon, BRShareOperationProtocol>
- (void)corruptDatabase:(void (^)(NSError *))arg1;
- (void)queryTelemetryEnablementWithReply:(void (^)(_Bool, NSError *))arg1;
- (void)reportDummyCiconiaMigration:(BRCMigrationReport *)arg1 reply:(void (^)(NSError *))arg2;
- (void)reportFinishedMigration:(BRCMigrationReport *)arg1 uuid:(NSUUID *)arg2 reply:(void (^)(NSError *))arg3;
- (void)reportCleanupFailureDuringSilentMigration:(NSError *)arg1 operationType:(NSString *)arg2 uuid:(NSUUID *)arg3 version:(unsigned long long)arg4 reply:(void (^)(NSError *))arg5;
- (void)reportItemMismatchDuringSilentMigration:(NSError *)arg1 information:(NSString *)arg2 uuid:(NSUUID *)arg3 reply:(void (^)(NSError *))arg4;
- (void)signalStartOfSilentTelemetry:(NSDate *)arg1 uuid:(NSUUID *)arg2 manual:(_Bool)arg3 version:(unsigned long long)arg4 reply:(void (^)(NSError *))arg5;
- (void)queryLastCiconiaVersion:(void (^)(unsigned long long, NSError *))arg1;
- (void)_t_extractMetadataForAllContainersWithReply:(void (^)(NSError *))arg1;
- (void)_t_getEntitledContainerIDsForBundleID:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)_t_getEntitlementsForBundleID:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)keepDataLocalOnSignOut:(_Bool)arg1 reply:(void (^)(NSError *))arg2;
- (void)copyCollaborationIdentifierForFileObjectID:(BRFileObjectID *)arg1 reply:(void (^)(NSString *, NSError *))arg2;
- (void)lookupMinFileSizeForThumbnailTransferWithReply:(void (^)(NSNumber *, NSError *))arg1;
- (void)lookupExcludedExtensionsForLogoutWithReply:(void (^)(NSSet *, NSError *))arg1;
- (void)lookupExcludedFilenamesForLogoutWithReply:(void (^)(NSSet *, NSError *))arg1;
- (void)getShareOptionsOfItemIdentifier:(NSString *)arg1 reply:(void (^)(_Bool, _Bool, _Bool, NSString *, NSError *))arg2;
- (void)refreshSharingStateForItemIdentifier:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (oneway void)updatePrivilegesDescriptor;
- (void)presentAcceptDialogsForShareMetadata:(CKShareMetadata *)arg1 reply:(void (^)(NSError *))arg2;
- (void)copyCurrentUserIdentifierWithReply:(void (^)(NSString *, NSError *))arg1;
- (void)startOperation:(NSObject<BROperationClient> *)arg1 toAcceptShareLink:(NSURL *)arg2 skipAcceptDialogs:(_Bool)arg3 reply:(void (^)(FPSandboxingURLWrapper *, NSError *))arg4;
- (void)startOperation:(NSObject<BROperationClient> *)arg1 toUploadAllFilesInContainer:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)startOperation:(NSObject<BROperationClient> *)arg1 toCopyAvailableQuotaWithReply:(void (^)(NSNumber *, NSError *))arg2;
- (void)startOperation:(NSObject<BROperationClient> *)arg1 toCopySharingWebAuthTokenForContainerID:(NSString *)arg2 reply:(void (^)(NSString *, NSError *))arg3;
- (void)enumerateWorkingSetChangesFromChangeToken:(NSData *)arg1 limit:(unsigned long long)arg2 completion:(void (^)(NSArray<NSFileProviderItem> *, NSArray *, NSData *, NSError *))arg3;
- (void)enumerateAllFoldersWithSortOrder:(unsigned char)arg1 offset:(unsigned long long)arg2 limit:(unsigned long long)arg3 completion:(void (^)(NSArray *, unsigned long long, NSError *))arg4;
- (void)enumerateItemsInFolder:(BRFileObjectID *)arg1 sortOrder:(unsigned char)arg2 offset:(unsigned long long)arg3 limit:(unsigned long long)arg4 completion:(void (^)(NSArray<NSFileProviderItem> *, unsigned long long, _Bool, NSError *))arg5;
- (void)currentNotifRankWithReply:(void (^)(unsigned long long, NSError *))arg1;
- (void)getIsContainerWithIDOverQuota:(NSString *)arg1 reply:(void (^)(NSNumber *, NSError *))arg2;
- (void)getContainerLastServerUpdateWithID:(NSString *)arg1 reply:(void (^)(NSDate *, NSError *))arg2;
- (void)getContainerStatusWithID:(NSString *)arg1 reply:(void (^)(unsigned int, NSError *))arg2;
- (void)getLocalizedLastSyncWithReply:(void (^)(NSString *, NSError *))arg1;
- (void)getLastSyncDateWithReply:(void (^)(NSDate *, NSError *))arg1;
- (void)getApplicationStatusForProcess:(CDStruct_6ad76789)arg1 reply:(void (^)(BOOL, NSError *))arg2;
- (void)getApplicationStatus:(void (^)(BOOL, NSError *))arg1;
- (void)resolveFileObjectIDsToContentRecordIDsForThumbnails:(NSArray *)arg1 reply:(void (^)(NSDictionary *, NSArray *, NSArray *, NSArray *, NSError *))arg2;
- (void)resolveBookmarkDataToURL:(NSString *)arg1 reply:(void (^)(NSURL *, NSData *, NSURL *, NSData *, NSError *))arg2;
- (void)jetsamCloudDocsAppsWithReply:(void (^)(NSError *))arg1;
- (void)getSyncState:(unsigned long long)arg1 reply:(void (^)(unsigned long long, NSError *))arg2;
- (void)setMigrationStatus:(BOOL)arg1 forDSID:(NSString *)arg2 shouldUpdateAccount:(_Bool)arg3 reply:(void (^)(NSError *))arg4;
- (void)getContainersNeedingUpload:(void (^)(NSSet *, NSError *))arg1;
- (void)invalidateAccountCacheWithReply:(void (^)(NSError *))arg1;
- (void)updateAccountDisplayName:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)logoutAccountWithACAccountID:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)createAccountWithACAccountID:(NSString *)arg1 dsid:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)getLoggedInUserPropertyValuesForKeys:(NSArray *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)didReceiveHandoffRequestForBundleID:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)iCloudDesktopSettingsChangedWithAttributes:(NSDictionary *)arg1 reply:(void (^)(NSError *))arg2;
- (void)evictOldDocumentsWithReply:(void (^)(NSError *))arg1;
- (void)setStorageOpimizationEnabled:(_Bool)arg1 reply:(void (^)(NSError *))arg2;
- (void)hasOptimizeStorageWithReply:(void (^)(_Bool, NSError *))arg1;
- (void)getApplicationDocumentUsageInfoForBundleID:(NSString *)arg1 withReply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)getTotalApplicationDocumentUsageWithReply:(void (^)(NSDictionary *, NSError *))arg1;
- (void)queryEligibleAccountDescriptorsWithReply:(void (^)(NSArray *, NSError *))arg1;
- (void)queryPathsForPersona:(NSString *)arg1 reply:(void (^)(NSDictionary *, NSError *))arg2;
- (void)getItemUpdateSenderWithReceiver:(id <BRItemNotificationReceiving>)arg1 reply:(void (^)(id <BRItemNotificationSending><NSXPCProxyCreating>, NSDictionary *, NSError *))arg2;
- (void)registerInitialSyncBarrierForID:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)deleteAllContentsOfContainerID:(NSString *)arg1 onClient:(_Bool)arg2 onServer:(_Bool)arg3 wait:(_Bool)arg4 reply:(void (^)(NSError *))arg5;
- (oneway void)updateContainerMetadataForID:(NSString *)arg1;
- (void)getContainerURLForID:(NSString *)arg1 forProcess:(CDStruct_6ad76789)arg2 reply:(void (^)(NSURL *, NSData *, NSString *, NSError *))arg3;
- (void)getContainerURLForID:(NSString *)arg1 recreateDocumentsIfNeeded:(_Bool)arg2 reply:(void (^)(NSURL *, NSData *, NSString *, NSError *))arg3;
- (void)getContainerURLForID:(NSString *)arg1 reply:(void (^)(NSURL *, NSData *, NSString *, NSError *))arg2;
- (void)presyncContainerWithID:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (oneway void)checkinAskClientIfUsingUbiquity:(_Bool)arg1;
- (void)getContainerForMangledID:(BRMangledID *)arg1 personaID:(NSString *)arg2 reply:(void (^)(BRContainer *, NSError *))arg3;
- (void)getContainersByID:(void (^)(NSDictionary *, NSError *))arg1;
- (void)createContainerWithID:(NSString *)arg1 ownerName:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)cancelTreeConsistencyCheckWithReply:(void (^)(NSError *))arg1;
- (void)resumeSyncConsistencyWithReply:(void (^)(NSError *))arg1;
- (void)pauseSyncConsistencyWithReply:(void (^)(NSError *))arg1;
- (void)launchSyncConsistencyChecksWithReply:(void (^)(NSArray *, NSArray *, NSError *))arg1;
- (void)dropSpotlightIndexWithReply:(void (^)(NSError *))arg1;
- (void)reclaimAmount:(long long)arg1 withUrgency:(int)arg2 reply:(void (^)(long long))arg3;
- (void)purgeAmount:(long long)arg1 withUrgency:(int)arg2 reply:(void (^)(long long))arg3;
- (void)computePurgeableSpaceForAllUrgenciesWithReply:(void (^)(NSDictionary *, NSNumber *, NSError *))arg1;
- (void)iWorkForceSyncContainerID:(NSString *)arg1 ownedByMe:(_Bool)arg2 reply:(void (^)(NSError *))arg3;
- (void)forceSyncContainerID:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)forceSyncZoneHealthWithBarrierWithTimeout:(unsigned long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)forceSyncWithBarrierContainerID:(NSString *)arg1 timeout:(unsigned long long)arg2 reply:(void (^)(NSError *))arg3;
- (void)zoneNameForContainer:(NSString *)arg1 reply:(void (^)(NSString *, NSError *))arg2;
- (void)healthStatusStringForContainer:(NSString *)arg1 reply:(void (^)(NSString *, NSError *))arg2;
- (void)simulateHealthIssueWithContainer:(NSString *)arg1 status:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)printStatus:(NSFileHandle *)arg1 containerID:(NSString *)arg2 reply:(void (^)(_Bool, NSError *))arg3;
- (void)performSelfCheck:(NSFileHandle *)arg1 reply:(void (^)(_Bool, NSError *))arg2;
- (void)dumpCoordinationInfoTo:(NSFileHandle *)arg1 reply:(void (^)(_Bool, NSError *))arg2;
- (void)backupDatabaseWithURLWrapper:(FPSandboxingURLWrapper *)arg1 forCiconia:(_Bool)arg2 reply:(void (^)(NSURL *, NSError *))arg3;
- (void)dumpDatabaseTo:(NSFileHandle *)arg1 containerID:(NSString *)arg2 personaID:(NSString *)arg3 includeAllItems:(_Bool)arg4 reply:(void (^)(_Bool, NSError *))arg5;
- (void)dumpFPFSMigrationStatusTo:(NSFileHandle *)arg1 personaID:(NSString *)arg2 includeNonMigratedItems:(_Bool)arg3 reply:(void (^)(_Bool, NSError *))arg4;
- (void)resetBudgets:(NSSet *)arg1 reply:(void (^)(NSError *))arg2;
- (void)setupInstanceWithDict:(NSDictionary *)arg1 reply:(void (^)(_Bool, NSError *))arg2;
- (void)waitUntilIdle:(NSString *)arg1 timeout:(NSNumber *)arg2 reply:(void (^)(NSNumber *, NSError *))arg3;
@end

