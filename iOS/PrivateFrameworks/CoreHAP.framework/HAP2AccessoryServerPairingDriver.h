//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreHAP/HAP2AccessoryServerPairingDriver-Protocol.h>
#import <CoreHAP/HAP2AccessoryServerPairingDriverWorkItemInfo-Protocol.h>
#import <CoreHAP/HAP2Cancelable-Protocol.h>

@class HAP2PropertyLock, HAP2SerializedOperationQueue, HAPPairSetupSession, HMFActivity, NSArray, NSError, NSString;
@protocol HAP2AccessoryServerEncoding, HAP2AccessoryServerPairingDriverDelegate, HAP2AccessoryServerSecureTransportFactory, HAP2AccessoryServerTransport, HAP2UnpairedAccessoryServer;

@interface HAP2AccessoryServerPairingDriver <HAP2Cancelable, HAP2AccessoryServerPairingDriverWorkItemInfo, HAP2AccessoryServerPairingDriver>
{
    HAP2PropertyLock *_propertyLock;
    unsigned long long _authMethod;
    HAP2SerializedOperationQueue *_operationQueue;
    HAPPairSetupSession *_pairingSession;
    id <HAP2AccessoryServerTransport> _transport;
    id <HAP2AccessoryServerSecureTransportFactory> _secureTransportFactory;
    id <HAP2AccessoryServerEncoding> _encoding;
    id <HAP2AccessoryServerPairingDriverDelegate> _delegate;
    id <HAP2UnpairedAccessoryServer> _accessoryServer;
    unsigned long long _currentWorkItemIndex;
    NSError *_cancelError;
    unsigned long long _featureFlags;
    NSArray *_workItems;
    HMFActivity *_pairingActivity;
}

+ (id)_generateWorkItemsForAuthMethod:(unsigned long long)arg1;
- (void).cxx_destruct;
@property(nonatomic) __weak HMFActivity *pairingActivity; // @synthesize pairingActivity=_pairingActivity;
@property(readonly, nonatomic) NSArray *workItems; // @synthesize workItems=_workItems;
@property(readonly, nonatomic) unsigned long long featureFlags; // @synthesize featureFlags=_featureFlags;
@property(nonatomic) unsigned long long currentWorkItemIndex; // @synthesize currentWorkItemIndex=_currentWorkItemIndex;
@property(readonly, nonatomic) id <HAP2AccessoryServerSecureTransportFactory> secureTransportFactory; // @synthesize secureTransportFactory=_secureTransportFactory;
@property(readonly, nonatomic) unsigned long long authMethod; // @synthesize authMethod=_authMethod;
@property(readonly, nonatomic) HAP2PropertyLock *propertyLock; // @synthesize propertyLock=_propertyLock;
@property(readonly, copy) NSString *description;
- (void)workItem:(id)arg1 finishedWithError:(id)arg2;
- (void)_pairingFinishedWithError:(id)arg1;
- (void)_cancelWithError:(id)arg1;
- (void)cancelWithError:(id)arg1;
- (id)currentWorkItem;
- (id)moveToNextWorkItem;
- (id)pairAccessory:(id)arg1 delegate:(id)arg2;
@property(retain, nonatomic) NSError *cancelError; // @synthesize cancelError=_cancelError;
@property(nonatomic) __weak id <HAP2AccessoryServerPairingDriverDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <HAP2UnpairedAccessoryServer> accessoryServer; // @synthesize accessoryServer=_accessoryServer;
@property(readonly, nonatomic) id <HAP2AccessoryServerEncoding> encoding; // @synthesize encoding=_encoding;
@property(readonly, nonatomic) id <HAP2AccessoryServerTransport> transport; // @synthesize transport=_transport;
@property(retain, nonatomic) HAPPairSetupSession *pairingSession; // @synthesize pairingSession=_pairingSession;
@property(retain, nonatomic) HAP2SerializedOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
- (id)initWithTransport:(id)arg1 secureTransportFactory:(id)arg2 encoding:(id)arg3 featureFlags:(unsigned long long)arg4;
- (id)initWithTransport:(id)arg1 secureTransportFactory:(id)arg2 encoding:(id)arg3 featureFlags:(unsigned long long)arg4 workItems:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

