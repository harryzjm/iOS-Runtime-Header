//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIResponder.h>

#import <MobileSafariUI/ActionPanelDelegate-Protocol.h>
#import <MobileSafariUI/AddBookmarkActivityDelegate-Protocol.h>
#import <MobileSafariUI/BackForwardTableViewControllerDelegate-Protocol.h>
#import <MobileSafariUI/BookmarksBarViewDelegate-Protocol.h>
#import <MobileSafariUI/BookmarksNavigationControllerDelegate-Protocol.h>
#import <MobileSafariUI/BrowserRootViewControllerDelegate-Protocol.h>
#import <MobileSafariUI/CatalogViewControllerDelegate-Protocol.h>
#import <MobileSafariUI/CompletionDetailViewControllerDelegate-Protocol.h>
#import <MobileSafariUI/ContinuousReadingViewControllerDelegate-Protocol.h>
#import <MobileSafariUI/DownloadOpenHandler-Protocol.h>
#import <MobileSafariUI/LibraryItemOpenHandler-Protocol.h>
#import <MobileSafariUI/LinkPreviewProvider-Protocol.h>
#import <MobileSafariUI/QLPreviewControllerDelegate-Protocol.h>
#import <MobileSafariUI/SKStoreProductViewControllerDelegate-Protocol.h>
#import <MobileSafariUI/StartPageDataSource-Protocol.h>
#import <MobileSafariUI/TabBarManagerObserving-Protocol.h>
#import <MobileSafariUI/TabControllerDocumentObserving-Protocol.h>
#import <MobileSafariUI/TabDocumentDelegate-Protocol.h>
#import <MobileSafariUI/TabGroupAlertControllerDelegate-Protocol.h>
#import <MobileSafariUI/TabSnapshotGeneratorDelegate-Protocol.h>
#import <MobileSafariUI/UIGestureRecognizerDelegatePrivate-Protocol.h>
#import <MobileSafariUI/UIScreenshotServiceDelegate-Protocol.h>
#import <MobileSafariUI/UIScrollViewDelegate-Protocol.h>
#import <MobileSafariUI/UITextFieldDelegate-Protocol.h>
#import <MobileSafariUI/UIWindowSceneDelegate-Protocol.h>
#import <MobileSafariUI/WBSDigitalHealthManagerDelegate-Protocol.h>
#import <MobileSafariUI/WBSWebExtensionCommandHandling-Protocol.h>
#import <MobileSafariUI/_SFBarManagerDelegate-Protocol.h>
#import <MobileSafariUI/_SFBrowserContentController-Protocol.h>
#import <MobileSafariUI/_SFBrowserKeyCommandSafariMethods-Protocol.h>
#import <MobileSafariUI/_SFDigitalHealthViewControllerDelegate-Protocol.h>
#import <MobileSafariUI/_SFDynamicBarAnimatorDelegate-Protocol.h>
#import <MobileSafariUI/_SFMailContentProviderDataSource-Protocol.h>
#import <MobileSafariUI/_SFNavigationBarDelegate-Protocol.h>
#import <MobileSafariUI/_SFNavigationIntentHandling-Protocol.h>
#import <MobileSafariUI/_SFOverlayProviderDelegate-Protocol.h>
#import <MobileSafariUI/_SFSaveToFilesOperationDelegate-Protocol.h>
#import <MobileSafariUI/_SFSingleBookmarkNavigationControllerDelegate-Protocol.h>

@class ActionPanel, ApplicationShortcutController, BookmarksNavigationController, BrowserRootViewController, BrowserWindowController, CatalogViewControllerState, ContinuousReadingController, ContinuousReadingViewController, DownloadsViewController, LibraryController, NSArray, NSDate, NSMapTable, NSMutableSet, NSNumber, NSString, NSTimer, NSUUID, SKStoreProductViewController, SafariSettingsSyncEngine, SearchStateCache, StatusBarSpinnerController, TabController, TabDocument, TabDragDropInteractionController, TabGroupPickerViewController, UIPinchGestureRecognizer, UIScrollView, UITextRange, UIToolbar, UIView, UIWindow, UIWindowScene, UserActivityController, WBSDigitalHealthManager, WBSavedStateManager, WBWindowState, WKBackForwardListItem, WKPreferences, WKProcessPool, WebExtensionWindow, _SFActivityViewController, _SFBarManager, _SFBrowserConfiguration, _SFBrowserSavedState, _SFBrowserWindowStateData, _SFCrashBanner, _SFDownload, _SFMailContentProvider, _SFPageFormatMenuController, _SFPageZoomPreferenceManager, _SFPerSitePreferencesVendor, _SFSaveToFilesOperation, _SFWebView;
@protocol BrowserControllerUIDelegate, LoadProgressObserver, TabGroupProvider, WBSWebExtensionTab, WBSWebExtensionWindow, _SFBrowserDocument;

@interface BrowserController : UIResponder <_SFOverlayProviderDelegate, ActionPanelDelegate, AddBookmarkActivityDelegate, BackForwardTableViewControllerDelegate, BookmarksBarViewDelegate, BookmarksNavigationControllerDelegate, BrowserRootViewControllerDelegate, CatalogViewControllerDelegate, ContinuousReadingViewControllerDelegate, DownloadOpenHandler, LinkPreviewProvider, QLPreviewControllerDelegate, SKStoreProductViewControllerDelegate, TabControllerDocumentObserving, TabSnapshotGeneratorDelegate, UIGestureRecognizerDelegatePrivate, UIScreenshotServiceDelegate, UIScrollViewDelegate, UITextFieldDelegate, WBSDigitalHealthManagerDelegate, _SFBarManagerDelegate, _SFDigitalHealthViewControllerDelegate, _SFDynamicBarAnimatorDelegate, _SFMailContentProviderDataSource, _SFSaveToFilesOperationDelegate, _SFSingleBookmarkNavigationControllerDelegate, TabBarManagerObserving, WBSWebExtensionCommandHandling, LibraryItemOpenHandler, TabGroupAlertControllerDelegate, StartPageDataSource, CompletionDetailViewControllerDelegate, TabDocumentDelegate, UIWindowSceneDelegate, _SFBrowserContentController, _SFBrowserKeyCommandSafariMethods, _SFNavigationBarDelegate, _SFNavigationIntentHandling>
{
    id <BrowserControllerUIDelegate> _uiDelegate;
    _Bool _didConnectToScene;
    _Bool _antiPhishingServiceInitialized;
    _Bool _applicationIsOpaque;
    unsigned long long _avoidSuppressingBlur;
    _Bool _backgrounded;
    WKBackForwardListItem *_backForwardListItemNeedingSnapshot;
    CDUnknownBlockType _blockRequestingScreenshotPDFData;
    _SFBrowserConfiguration *_cachedConfiguration;
    _SFMailContentProvider *_cachedMailContentProvider;
    _Bool _contentBorrowedForTab;
    ContinuousReadingController *_continuousReadingController;
    ContinuousReadingViewController *_continuousReadingViewController;
    _SFCrashBanner *_crashBanner;
    double _crashBannerDraggingOffset;
    _Bool _didRestoreState;
    DownloadsViewController *_downloadsViewController;
    NSMutableSet *_dropSessionsForTabBarVisibility;
    _Bool _freezeWebViewUpdatesForSizeTransition;
    _Bool _hasTappedShare;
    _Bool _interactivelyChangingObscuredInsets;
    _Bool _isActionPanelReady;
    _Bool _isAnimatingBannerOffScreen;
    _Bool _isTrackingWebViewAnimatedResize;
    double _lastAdjustmentForKeyboard;
    long long _lastTabSwitchKeyboardModifierFlags;
    BookmarksNavigationController *_modalBookmarksController;
    _Bool _needsImmediateLayoutForWebViewObscuredInsetsUpdate;
    _Bool _needsSnapshotUpdateForActiveTab;
    _Bool _needsSnapshotUpdateForBlankTabs;
    TabDocument *_nextContinuousItemDocument;
    _SFPageFormatMenuController *_pageFormatMenuController;
    _SFActivityViewController *_presentedActivityViewController;
    TabDocument *_previewDocument;
    NSTimer *_previewDocumentCloseTimer;
    _SFDownload *_previewedDownload;
    TabDocument *_previousContinuousItemDocument;
    ActionPanel *_prewarmedActionPanel;
    _Bool _privateBrowsingAvailable;
    TabDocument *_progressSuppressingDocument;
    NSMutableSet *_reasonsForIgnoringUserInteraction;
    NSDate *_resignActiveDate;
    BrowserRootViewController *_rootViewController;
    _SFSaveToFilesOperation *_saveToFilesOperation;
    UIScrollView *_scrollView;
    SearchStateCache *_searchStateCache;
    NSString *_sceneID;
    UIView *_scrollingStatusBar;
    _Bool _scrollViewIsDragging;
    _Bool _obscuredInsetsIncludeRefreshControlDuringBounce;
    _Bool _shouldDisableToolbarForCatalogViewControllerPopover;
    _Bool _shouldMakeFavoritesStickyWhenReinsertingBorrowedContent;
    _Bool _showingDemoModeAlert;
    TabController *_tabController;
    TabDragDropInteractionController *_tabDragDropController;
    _Bool _tabViewPinchActive;
    UIPinchGestureRecognizer *_tabViewPinchRecognizer;
    _Bool _telemetryHasPresentedBookmarks;
    UIToolbar *_tiltedTabToolbar;
    _Bool _trackingWebViewBackForwardNavigationGesture;
    NSMapTable *_viewControllersPendingPresentation;
    _Bool _disableBarHiding;
    long long _dynamicBarAnimatorStateBeforeNavigationGesture;
    _Bool _shouldShowBarsAfterDraggingDownward;
    StatusBarSpinnerController *_spinnerController;
    _Bool _isSpeculativeLoadingEnabled;
    TabDocument *_speculativeLoadDocument;
    NSString *_speculativeLoadURL;
    CatalogViewControllerState *_catalogViewControllerStateForSizeChange;
    _Bool _isPerformingRootViewControllerSizeTransition;
    _Bool _statusBarHeightChangedWhilePerformingRootViewControllerSizeTransition;
    long long _rootViewControllerVerticalSizeClassBeforeSizeTransition;
    long long _bookmarksPresentationStyleBeforeSizeTransition;
    _Bool _isRestoringInterfaceAfterElementFullscreen;
    WebExtensionWindow *_normalExtensionWindow;
    WebExtensionWindow *_privateExtensionWindow;
    ActionPanel *_extensionActionPanel;
    SafariSettingsSyncEngine *_settingsSyncEngine;
    double _lastRefreshControlHeight;
    TabGroupPickerViewController *_tabGroupPickerViewController;
    NSNumber *_layoutToRestoreAfterOpeningNewTabs;
    CDUnknownBlockType _animationPendingDynamicBarAnimatorSteadyState;
    _Bool _shouldPresentActionPanelFromMenuButton;
    _Bool _readerViewStale;
    _Bool _readerShouldBeShownIfPossible;
    _Bool _fullScreenInPortrait;
    _Bool _canPerformPostLaunchActions;
    _Bool _usesNarrowLayout;
    _Bool _usesTabBar;
    _Bool _usesCompactUnifiedBar;
    _Bool _showingCrashBanner;
    _Bool _suspendedOrSuspending;
    _Bool _controlledByAutomation;
    _Bool _wantsUnifiedFieldFocused;
    _Bool _canFocusNavigationBarURL;
    _Bool _privateBrowsingEnabled;
    BrowserWindowController *_browserWindowController;
    NSUUID *_UUID;
    WBSavedStateManager *_savedStateManager;
    WBWindowState *_windowState;
    TabDocument *_cachedDocumentOnContinuousTransition;
    double _lastInteractionTime;
    _SFBrowserSavedState *_savedState;
    long long _favoritesState;
    _SFBarManager *_barManager;
    WKPreferences *_wkPreferences;
    SKStoreProductViewController *_presentedStoreProductViewController;
    UITextRange *_textRangeToRestoreAfterParsecCardDismissal;
    NSString *_searchCountKey;
    WBSDigitalHealthManager *_digitalHealthManager;
    TabDocument *_tabDocumentPlayingPIPVideo;
    UserActivityController *_userActivityController;
    ApplicationShortcutController *_shortcutController;
    UIWindowScene *_scene;
    LibraryController *_libraryController;
    _SFWebView *_webView;
}

+ (id)sharedProcessPool;
- (void).cxx_destruct;
@property(readonly, nonatomic) TabController *tabController; // @synthesize tabController=_tabController;
@property(readonly, nonatomic) BrowserRootViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(readonly, nonatomic) _SFWebView *webView; // @synthesize webView=_webView;
@property(nonatomic, getter=isPrivateBrowsingEnabled) _Bool privateBrowsingEnabled; // @synthesize privateBrowsingEnabled=_privateBrowsingEnabled;
@property(readonly, nonatomic) LibraryController *libraryController; // @synthesize libraryController=_libraryController;
@property(readonly, nonatomic) __weak UIWindowScene *scene; // @synthesize scene=_scene;
@property(readonly, nonatomic) ApplicationShortcutController *shortcutController; // @synthesize shortcutController=_shortcutController;
@property(readonly, nonatomic) UserActivityController *userActivityController; // @synthesize userActivityController=_userActivityController;
@property(retain, nonatomic) TabDocument *tabDocumentPlayingPIPVideo; // @synthesize tabDocumentPlayingPIPVideo=_tabDocumentPlayingPIPVideo;
@property(readonly, nonatomic) WBSDigitalHealthManager *digitalHealthManager; // @synthesize digitalHealthManager=_digitalHealthManager;
@property(readonly, copy, nonatomic) NSString *searchCountKey; // @synthesize searchCountKey=_searchCountKey;
@property(readonly, nonatomic) __weak _SFActivityViewController *presentedActivityViewController; // @synthesize presentedActivityViewController=_presentedActivityViewController;
@property(retain, nonatomic) UITextRange *textRangeToRestoreAfterParsecCardDismissal; // @synthesize textRangeToRestoreAfterParsecCardDismissal=_textRangeToRestoreAfterParsecCardDismissal;
@property(retain, nonatomic) SKStoreProductViewController *presentedStoreProductViewController; // @synthesize presentedStoreProductViewController=_presentedStoreProductViewController;
@property(nonatomic) _Bool canFocusNavigationBarURL; // @synthesize canFocusNavigationBarURL=_canFocusNavigationBarURL;
@property(readonly, nonatomic) WKPreferences *wkPreferences; // @synthesize wkPreferences=_wkPreferences;
@property(readonly, nonatomic) _SFBarManager *barManager; // @synthesize barManager=_barManager;
@property(nonatomic) long long favoritesState; // @synthesize favoritesState=_favoritesState;
@property(nonatomic) _Bool wantsUnifiedFieldFocused; // @synthesize wantsUnifiedFieldFocused=_wantsUnifiedFieldFocused;
@property(readonly, nonatomic) UIPinchGestureRecognizer *tabViewPinchRecognizer; // @synthesize tabViewPinchRecognizer=_tabViewPinchRecognizer;
@property(readonly, nonatomic, getter=isControlledByAutomation) _Bool controlledByAutomation; // @synthesize controlledByAutomation=_controlledByAutomation;
@property(readonly, nonatomic) _SFBrowserSavedState *savedState; // @synthesize savedState=_savedState;
@property(readonly, nonatomic, getter=isSuspendedOrSuspending) _Bool suspendedOrSuspending; // @synthesize suspendedOrSuspending=_suspendedOrSuspending;
@property(nonatomic, getter=isShowingCrashBanner) _Bool showingCrashBanner; // @synthesize showingCrashBanner=_showingCrashBanner;
@property(readonly, nonatomic) _Bool usesCompactUnifiedBar; // @synthesize usesCompactUnifiedBar=_usesCompactUnifiedBar;
@property(readonly, nonatomic) _Bool usesTabBar; // @synthesize usesTabBar=_usesTabBar;
@property(nonatomic) _Bool usesNarrowLayout; // @synthesize usesNarrowLayout=_usesNarrowLayout;
@property(readonly, nonatomic) _Bool canPerformPostLaunchActions; // @synthesize canPerformPostLaunchActions=_canPerformPostLaunchActions;
@property(nonatomic) double lastInteractionTime; // @synthesize lastInteractionTime=_lastInteractionTime;
@property(readonly, nonatomic) _Bool fullScreenInPortrait; // @synthesize fullScreenInPortrait=_fullScreenInPortrait;
@property(retain, nonatomic) TabDocument *cachedDocumentOnContinuousTransition; // @synthesize cachedDocumentOnContinuousTransition=_cachedDocumentOnContinuousTransition;
@property(retain, nonatomic) TabDocument *nextContinuousItemDocument; // @synthesize nextContinuousItemDocument=_nextContinuousItemDocument;
@property(retain, nonatomic) TabDocument *previousContinuousItemDocument; // @synthesize previousContinuousItemDocument=_previousContinuousItemDocument;
@property(nonatomic) _Bool readerShouldBeShownIfPossible; // @synthesize readerShouldBeShownIfPossible=_readerShouldBeShownIfPossible;
@property(nonatomic, getter=isReaderViewStale) _Bool readerViewStale; // @synthesize readerViewStale=_readerViewStale;
@property(readonly, nonatomic) WBWindowState *windowState; // @synthesize windowState=_windowState;
@property(readonly, nonatomic) WBSavedStateManager *savedStateManager; // @synthesize savedStateManager=_savedStateManager;
@property(readonly, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
@property(readonly, nonatomic) __weak BrowserWindowController *browserWindowController; // @synthesize browserWindowController=_browserWindowController;
@property(readonly, nonatomic) id <LoadProgressObserver> loadProgressObserver; // @synthesize loadProgressObserver=_spinnerController;
- (void)tabBarManager:(id)arg1 didRemoveTabBar:(id)arg2;
- (void)tabBarManager:(id)arg1 didCreateTabBar:(id)arg2;
@property(readonly, nonatomic) NSString *activeLibraryType;
- (void)openLibrary:(id)arg1;
- (void)didDismissTabGroupAlertViewController:(id)arg1;
- (void)overlayDidHide:(id)arg1;
- (_Bool)shouldIncludeWebExtensionActivitiesForActionPanelMenuStyle:(long long)arg1;
- (void)validateExtensionToolbarItemsInWindow:(id)arg1;
- (id)webExtensionWindowForTabDocument:(id)arg1;
- (id)webExtensionWindowWithID:(double)arg1;
@property(readonly, copy, nonatomic) NSArray *tabDocumentsForActiveTabThatCanReceiveMessages;
@property(readonly, copy, nonatomic) NSArray *webExtensionWindows;
@property(readonly, nonatomic) _Bool activeWebExtensionWindowIsFocused;
@property(readonly, nonatomic) id <WBSWebExtensionWindow> activeWebExtensionWindow;
@property(readonly, nonatomic) struct CGSize webExtensionTabSize;
@property(readonly, nonatomic) struct CGRect webExtensionWindowGeometry;
- (long long)updatePolicyForStartPageController:(id)arg1;
@property(readonly, nonatomic) id <TabGroupProvider> tabGroupProvider;
- (void)presentPrivacyReport;
- (_Bool)getContextForCurrentPageWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)editBookmark:(id)arg1;
- (void)endIgnoringUserInteraction:(id)arg1;
- (void)beginIgnoringUserInteraction:(id)arg1;
- (_Bool)saveToFilesOperationSupportsDownloads:(id)arg1;
- (void)saveToFilesOperation:(id)arg1 presentViewController:(id)arg2;
- (void)saveToFilesOperation:(id)arg1 didFinishWithSuccess:(_Bool)arg2;
- (_Bool)activityViewControllerSupportsDownloads:(id)arg1;
- (long long)previewController:(id)arg1 editingModeForPreviewItem:(id)arg2;
- (id)previewController:(id)arg1 transitionViewForPreviewItem:(id)arg2;
- (_Bool)previewController:(id)arg1 shouldOpenURL:(id)arg2 forPreviewItem:(id)arg3;
- (void)previewControllerDidDismiss:(id)arg1;
- (void)openDownload:(id)arg1;
- (void)screenshotService:(id)arg1 generatePDFRepresentationWithCompletion:(CDUnknownBlockType)arg2;
- (void)windowScene:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)scene:(id)arg1 didFailToContinueUserActivityWithType:(id)arg2 error:(id)arg3;
- (void)scene:(id)arg1 continueUserActivity:(id)arg2;
- (void)scene:(id)arg1 willContinueUserActivityWithType:(id)arg2;
- (void)scene:(id)arg1 openURLContexts:(id)arg2;
- (void)windowScene:(id)arg1 didUpdateCoordinateSpace:(id)arg2 interfaceOrientation:(long long)arg3 traitCollection:(id)arg4;
- (void)sceneDidEnterBackground:(id)arg1;
- (void)sceneWillResignActive:(id)arg1;
- (void)sceneDidBecomeActive:(id)arg1;
- (void)sceneWillEnterForeground:(id)arg1;
- (void)sceneDidDisconnect:(id)arg1;
- (void)scene:(id)arg1 willConnectToSession:(id)arg2 options:(id)arg3;
- (void)digitalHealthViewController:(id)arg1 didFinishDismissingBlockingViewController:(id)arg2;
- (void)clearCachedTabCompletionData;
- (void)switchToTabWithUUID:(id)arg1 inWindowWithUUID:(id)arg2 forTabGroupWithUUID:(id)arg3;
- (void)switchToTabWithUUID:(id)arg1 inWindowWithUUID:(id)arg2;
- (void)tabDocument:(id)arg1 didChangePIPState:(_Bool)arg2;
- (void)policyDidChangeForDigitalHealthManager:(id)arg1;
- (void)_automaticPasswordInputViewNotification:(id)arg1;
- (double)continuousReadingViewControllerNextWebViewLandingOffset:(id)arg1 includeBottomBar:(_Bool)arg2;
- (void)continuousReadingViewController:(id)arg1 didCommitToLoadItem:(id)arg2;
- (void)continuousReadingViewControllerCommitToLoadPreviousItem:(id)arg1;
- (void)continuousReadingViewControllerWillCommitToLoadNextItem:(id)arg1;
- (void)continuousReadingViewController:(id)arg1 scrollViewDidScroll:(id)arg2;
- (void)markReadingListBookmark:(id)arg1 asRead:(_Bool)arg2 postNotification:(_Bool)arg3;
- (void)tabDocumentDidChangeCanStopLoadingState:(id)arg1;
- (void)tabDocumentDidUpdateThemeColor:(id)arg1;
- (id)pageZoomPreferenceManagerForTabDocument:(id)arg1;
- (void)tabDocumentDidChangeSafeAreaShouldAffectObscuredInsets:(id)arg1;
- (void)tabDocumentDidChangeSafeAreaInsets:(id)arg1;
- (void)closeTabDocument:(id)arg1 animated:(_Bool)arg2;
- (_Bool)tabDocumentCanCloseWindow:(id)arg1;
- (id)tabDocumentSavedSessionStateData:(id)arg1;
- (long long)tabDocumentOrderIndex:(id)arg1;
- (void)tabDocument:(id)arg1 dismissViewControllerAnimated:(id)arg2;
- (void)tabDocument:(id)arg1 presentViewControllerAnimated:(id)arg2;
- (void)tabDocumentWillDismissInlineDialog:(id)arg1;
- (void)tabDocumentWillShowInlineDialog:(id)arg1;
- (void)tabDocumentDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)tabDocumentWillEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)tabDocumentDidBeginNavigationGesture:(id)arg1;
- (void)setAppBannerPinnedToTop:(_Bool)arg1 forTabDocument:(id)arg2;
- (void)removeAppBannerFromTabDocument:(id)arg1 animated:(_Bool)arg2;
- (_Bool)tabDocumentShouldDeferAppBannerRemoval:(id)arg1;
- (void)tabDocumentDidCompleteCheckForAppBanner:(id)arg1;
- (void)loadCloudTabsForDeviceRestoration:(id)arg1;
- (id)loadURLInNewTab:(id)arg1 title:(id)arg2 UUID:(id)arg3 inBackground:(_Bool)arg4 animated:(_Bool)arg5 fromExternalApplication:(_Bool)arg6 restoringCloudTab:(_Bool)arg7;
- (id)loadURLInNewTab:(id)arg1 inBackground:(_Bool)arg2 animated:(_Bool)arg3 fromExternalApplication:(_Bool)arg4;
- (id)loadURLInNewTab:(id)arg1 inBackground:(_Bool)arg2 animated:(_Bool)arg3;
- (id)loadURLInNewTab:(id)arg1 inBackground:(_Bool)arg2;
- (id)blankTabTitleForTabDocument:(id)arg1;
- (void)tabDocumentShouldBecomeActive:(id)arg1;
- (_Bool)tabDocumentCanBecomeCurrentUserActivity:(id)arg1;
- (void)tabController:(id)arg1 didSwitchFromTabDocument:(id)arg2 toTabDocument:(id)arg3;
- (void)tabControllerDocumentCountDidChange:(id)arg1;
- (void)switchFromTabDocument:(id)arg1 toTabDocument:(id)arg2;
- (_Bool)tabDocumentCanBeginInputSessionForStreamlinedLogin:(id)arg1;
- (_Bool)tabDocumentCanDisplayModalUI:(id)arg1;
- (void)tabDocumentWillDisableLinkPreview;
- (void)tabDocumentDidDimissPreviewedDocument:(id)arg1;
- (void)tabDocumentCommitPreviewedDocumentAsNewTab:(id)arg1 inBackground:(_Bool)arg2;
- (void)tabDocumentCommitPreviewedDocument:(id)arg1;
- (void)tabDocument:(id)arg1 didCreatePreviewDocument:(id)arg2;
- (void)closePreviewDocument;
- (void)_closePreviewDocumentTimerFired:(id)arg1;
- (unsigned long long)popUpPolicyForTabDocument:(id)arg1;
- (void)tabDocumentShouldCloseAndSwitchToParentTab:(id)arg1;
- (void)tabDocument:(id)arg1 didCreateNewTabDocument:(id)arg2;
- (void)bookmarksNavigationController:(id)arg1 provideContextResponseWithBlock:(CDUnknownBlockType)arg2;
- (void)tabDocument:(id)arg1 didExtractArticleText:(id)arg2 withMetadata:(id)arg3;
- (void)tabDocumentDidChangeMediaState:(id)arg1;
- (void)tabDocument:(id)arg1 didDetectReaderAvailability:(_Bool)arg2;
- (void)tabDocumentDidAddAlert:(id)arg1;
- (_Bool)tabDocumentCanShowJavaScriptAlertConfirmOrTextInput:(id)arg1;
- (_Bool)tabDocumentShouldHandleCertificateError:(id)arg1;
- (_Bool)tabDocumentShouldHandleAuthentication:(id)arg1;
- (_Bool)tabDocumentIsBackgroundPreloading:(id)arg1;
- (void)tabDocumentFluidProgressRocketAnimationDidComplete:(id)arg1;
- (void)tabDocumentDidUpdateBackForward:(id)arg1;
- (void)tabDocumentDidUpdateURL:(id)arg1;
- (void)tabDocumentDidUpdateTitle:(id)arg1;
- (void)tabDocumentDidChangeLocationWithinPageForMainFrame:(id)arg1;
- (void)webViewDidFirstVisuallyNonEmptyLayoutForTabDocument:(id)arg1;
- (void)tabDocumentDidCommitNavigation:(id)arg1;
- (void)tabDocument:(id)arg1 didFinishLoadingWithError:(_Bool)arg2;
- (void)tabDocumentDidCancelRedirectToExternalApplication:(id)arg1;
- (_Bool)tabDocumentCanRedirectToExternalApplication:(id)arg1;
- (_Bool)tabDocument:(id)arg1 canShowDownload:(id)arg2;
- (_Bool)tabDocumentCanDownloadFile:(id)arg1;
- (void)willStartLoadFromUserTap:(id)arg1;
- (void)tabDocumentDidStartLoading:(id)arg1;
- (void)tabDocumentDidUpdatePersistentState:(id)arg1;
- (void)tabDocumentDidUpdateShowingContinuous:(id)arg1;
- (id)printControllerForContentProvider:(id)arg1;
- (id)webViewForMailContentProvider:(id)arg1;
- (_Bool)readerViewIsVisibleForMailContentProvider:(id)arg1;
- (id)readerControllerForMailContentProvider:(id)arg1;
- (void)backForwardTableViewController:(id)arg1 configureNavigationIntentForDrag:(id)arg2;
- (void)backForwardListTableViewControllerDidSelectParentItem:(id)arg1;
- (void)backForwardTableViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)addBookmarkActivityFailedToAcquireBookmarkLock:(id)arg1;
- (_Bool)addBookmarkActivityCanSaveBookmarkChanges:(id)arg1;
- (id)downloadsViewControllerForActionPanel:(id)arg1;
- (void)actionPanel:(id)arg1 prepareForMailActivityWithMailController:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)actionPanelAddTabDocumentToReadingList:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (unsigned long long)browserPersonaForActivityViewController:(id)arg1;
- (void)updatePopoverPositionAfterTransitionFromHorizontalSizeClass:(long long)arg1 toHorizontalSizeClass:(long long)arg2;
- (void)bookmarksNavigationControllerContentDidBecomeDirty:(id)arg1;
- (void)bookmarksNavigationController:(id)arg1 setBookmark:(id)arg2 asRead:(_Bool)arg3;
- (void)bookmarksNavigationControllerViewDidDisappear:(id)arg1;
- (void)bookmarksNavigationControllerViewDidAppear:(id)arg1;
- (void)bookmarksNavigationController:(id)arg1 editFavoritesGridViewBookmark:(id)arg2;
- (void)bookmarksNavigationController:(id)arg1 updateReadingListUnreadFilterShowingAllBookmarks:(_Bool)arg2;
- (id)bookmarksNavigationControllerCurrentContinuousReadingItem:(id)arg1;
- (void)bookmarksBarView:(id)arg1 bookmarksNavigationControllerViewDidDisappear:(id)arg2;
- (void)bookmarksBarView:(id)arg1 bookmarksNavigationControllerViewDidAppear:(id)arg2;
- (_Bool)bookmarksNavigationControllerIsPresentedInsideBlankTab:(id)arg1;
- (long long)bookmarksNavigationControllerFavoritesGridViewLayoutType:(id)arg1;
- (void)bookmarksNavigationControllerReloadDidFail:(id)arg1;
- (void)bookmarksNavigationControllerDidTapOutsideFavorites:(id)arg1;
- (void)bookmarksNavigationControllerDidPressDoneButton:(id)arg1;
- (void)handleNavigationIntent:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dispatchNavigationIntent:(id)arg1;
- (void)presentPrintControllerForTabDocument:(id)arg1 frame:(id)arg2 initiatedByWebContent:(_Bool)arg3;
- (void)presentDownloadsViewController;
- (void)addBookmarkFolderForCurrentTabs;
- (void)addBookmarkForCurrentTab;
- (void)presentAutomaticTabClosingAlertController;
- (void)editBookmarksKeyPressed;
- (void)toggleBookmarksPresentation;
- (void)_openPageFormatMenu:(id)arg1;
- (id)barManager:(id)arg1 visibleBarItemsForLayout:(long long)arg2 availableItems:(id)arg3;
- (void)barManager:(id)arg1 willRegisterBarWithToken:(id)arg2;
- (void)barManager:(id)arg1 didReceiveLongPressForBarItem:(long long)arg2;
- (void)barManager:(id)arg1 didReceiveTouchDownForBarItem:(long long)arg2;
- (_Bool)barManager:(id)arg1 canHandleLongPressForBarItem:(long long)arg2;
- (void)barManager:(id)arg1 didReceiveTapForBarItem:(long long)arg2;
- (void)makeSpaceForTabWithPrivateBrowsing:(_Bool)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (void)showBookmarksPanelWithNonAnimatedTransition;
- (_Bool)createAndAddToHomeScreenBundleForWebClip:(id)arg1;
- (void)setPresentingModalBookmarksController:(_Bool)arg1 withExclusiveCollection:(id)arg2 bookmarkUUIDString:(id)arg3 animated:(_Bool)arg4;
@property(readonly, nonatomic, getter=isPresentingModalBookmarksController) _Bool presentingModalBookmarksController;
- (void)_presentModalViewController:(id)arg1 fromBarItem:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)presentModalViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismissPageFormatMenu;
- (_Bool)dismissTransientUIAnimated:(_Bool)arg1 preserveFavoritesState:(_Bool)arg2;
- (_Bool)dismissTransientUIAnimated:(_Bool)arg1;
- (void)fraudWarningsToggled;
- (void)didCloseBrowserWindow;
- (void)completionDetailViewControllerDidDismiss:(id)arg1;
- (void)dismissCompletionDetail;
- (void)productViewControllerDidFinish:(id)arg1;
- (_Bool)addBookmarkNavControllerCanSaveBookmarkChanges:(id)arg1;
- (void)addBookmarkNavController:(id)arg1 didFinishWithResult:(_Bool)arg2 bookmark:(id)arg3;
- (id)continuousReadingViewControllerForBrowserViewController:(id)arg1;
- (double)browserViewControllerAdditionalContentHeightForBanners:(id)arg1;
- (void)browserViewController:(id)arg1 didUpdateBannerTheme:(id)arg2;
- (void)browserViewController:(id)arg1 didChangeSidebarStyle:(long long)arg2;
- (void)browserViewController:(id)arg1 didChangeShowingSidebar:(_Bool)arg2;
- (long long)browserViewController:(id)arg1 sidebarStyleForViewSize:(struct CGSize)arg2;
- (id)sidebarContentViewControllerForBrowserViewController:(id)arg1;
- (void)browserViewControllerDidLayOutSubviews:(id)arg1;
- (void)browserViewControllerDidChangeToolbarPlacement:(id)arg1;
- (void)browserViewController:(id)arg1 didCreateUnifiedBar:(id)arg2;
- (void)browserViewController:(id)arg1 didCreateNavigationBar:(id)arg2;
- (void)browserViewController:(id)arg1 didCreateToolbar:(id)arg2;
- (long long)browserViewController:(id)arg1 toolbarPlacementForViewSize:(struct CGSize)arg2;
- (_Bool)browserViewControllerShouldTemporarilyHideBottomToolbar:(id)arg1;
- (_Bool)browserViewControllerInterfaceFillsScreen:(id)arg1;
- (void)browserViewController:(id)arg1 traitCollectionDidChange:(id)arg2;
- (void)browserViewControllerDidChangeBarInsets:(id)arg1;
- (void)linkPreviewProviderWillDismissPreview;
- (void)commitLinkPreviewViewController:(id)arg1;
- (id)linkPreviewViewControllerForURL:(id)arg1;
- (id)linkPreviewViewControllerForNavigationIntent:(id)arg1;
- (_Bool)shouldDeferHistoryUpdatesForWKWebView:(id)arg1;
- (void)document:(id)arg1 willMakeReaderVisible:(_Bool)arg2;
- (void)dynamicBarAnimatorStateDidChange:(id)arg1;
- (void)dynamicBarAnimatorWillLeaveSteadyState:(id)arg1;
- (void)dynamicBarAnimatorWillEnterSteadyState:(id)arg1;
- (_Bool)browserViewControllerShouldModifyWebViewGeometry:(id)arg1;
- (_Bool)browserViewControllerShouldFreezeWebViewUpdatesForSizeTransition:(id)arg1;
- (void)updateExposedScrollViewRect;
- (double)browserViewController:(id)arg1 adjustedTopObscuredInsetForBanners:(double)arg2;
- (void)updateInsetsForBackgroundWebView:(id)arg1;
@property(readonly, nonatomic) _Bool isShowingInOneThirdMode;
@property(readonly, nonatomic) WKProcessPool *processPool;
- (id)detachFromScene;
- (void)attachToScene:(id)arg1;
- (void)closeWindow;
- (void)adoptSceneID:(id)arg1;
@property(readonly, nonatomic) _SFBrowserWindowStateData *windowStateData;
- (void)_didEnableCustomizationSync;
- (id)initWithUUID:(id)arg1 sceneID:(id)arg2 browserWindowController:(id)arg3 controlledByAutomation:(_Bool)arg4;
- (id)initWithWindowState:(id)arg1 browserWindowController:(id)arg2 controlledByAutomation:(_Bool)arg3;
- (id)initWithWindowState:(id)arg1 browserWindowController:(id)arg2;
- (id)initWithStateData:(id)arg1 browserWindowController:(id)arg2 savedState:(id)arg3 controlledByAutomation:(_Bool)arg4;
- (void)prepareToNavigateInTabDocument:(id)arg1;
@property(readonly, nonatomic, getter=isShowingCompletionListCompletions) _Bool showingCompletionListCompletions;
@property(readonly, nonatomic, getter=isShowingCompletionDetail) _Bool showingCompletionDetail;
- (void)_contentBlockersPerSitePreferenceDidChange:(id)arg1;
- (void)_perSitePreferencesDidChange:(id)arg1;
- (void)updateShowingSidebarForLoad;
- (void)navigationBarDidLayoutSubviews:(id)arg1;
- (void)navigationBar:(id)arg1 didCreateLeadingToolbar:(id)arg2 trailingToolbar:(id)arg3;
- (void)navigationBar:(id)arg1 didProduceNavigationIntent:(id)arg2;
- (id)currentContentUUIDForNavigationBar:(id)arg1;
- (long long)dataOwnerForNavigationBar:(id)arg1;
- (id)itemProviderForNavigationBar:(id)arg1;
- (void)navigationBar:(id)arg1 extensionButtonTapped:(id)arg2 extension:(id)arg3;
- (void)navigationBar:(id)arg1 multipleExtensionsButtonTapped:(id)arg2;
- (id)navigationBarURLForSharing:(id)arg1;
- (void)navigationBarFormatMenuButtonBecameUnavailable:(id)arg1;
- (void)navigationBarFormatMenuButtonWasTapped:(id)arg1;
- (void)navigationBarMediaStateMuteButtonWasTapped:(id)arg1;
- (void)navigationBarStopLoadingButtonWasTapped:(id)arg1;
- (void)navigationBarVoiceSearchButtonWasTapped:(id)arg1;
- (void)navigationBarMinimizationChanged;
- (void)navigationBarReloadButtonWasTapped:(id)arg1;
- (void)navigationBarCancelButtonWasTapped:(id)arg1;
- (void)navigationBarFormatMenuButtonStartedInteraction:(id)arg1;
- (void)navigationBarTranslateButtonWasTapped:(id)arg1;
- (void)navigationBarReaderButtonWasTapped:(id)arg1;
- (void)navigationBarDidUpdateBackdropEffect:(id)arg1;
- (void)navigationBarURLWasTapped:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)compressedNavigationBarWasTapped:(id)arg1;
- (void)navigationBarMetricsDidChange:(id)arg1;
@property(readonly, nonatomic) _Bool hasDedicatedDownloadsToolbarItem;
@property(readonly, nonatomic) _Bool hasDedicatedMediaStateButton;
@property(readonly, nonatomic) _Bool supportsPrivacyReport;
@property(readonly, nonatomic) _SFPageZoomPreferenceManager *pageZoomManager;
@property(readonly, nonatomic) _SFPerSitePreferencesVendor *perSitePreferencesVendor;
@property(readonly, nonatomic) unsigned long long downloadsCount;
@property(nonatomic) _Bool keepBarsMinimized;
- (void)toggleShowingReaderForUserAction;
- (void)clearBadgeOnPageFormatMenu;
@property(readonly, nonatomic) id <WBSWebExtensionTab> activeTabForExtensions;
@property(readonly, nonatomic) id <_SFBrowserDocument> activeDocument;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)pasteAndSearch:(id)arg1;
- (void)pasteAndGo:(id)arg1;
- (void)share:(id)arg1;
- (void)mergeAllWindows:(id)arg1;
- (void)openNewPrivateWindow:(id)arg1;
- (void)openNewWindow:(id)arg1;
- (void)addAllTabsToBookmarks:(id)arg1;
- (void)closeAllTabs:(id)arg1;
- (void)closeAllTabsMatchingSearch:(id)arg1;
- (void)autoFillFormKeyPressed;
- (void)saveWebpageAlternativeKeyPressed;
- (void)saveKeyPressed;
- (void)resetPageZoomLevelAndFontSize;
- (void)decreaseSize:(id)arg1;
- (void)increaseSize:(id)arg1;
- (void)emailCurrentPage;
- (void)cancelKeyPressed;
- (void)toggleReaderKeyPressed;
- (void)previousFindResultKeyPressed;
- (void)nextFindResultKeyPressed;
- (void)takeFindStringKeyPressed;
- (void)findKeyPressed;
- (void)navigateForwardKeyPressed;
- (void)navigateBackKeyPressed;
- (void)reloadFromOriginKeyPressed;
- (void)reloadKeyPressed;
- (void)webExtensionKeyCommandPressed:(id)arg1;
- (void)emptySelectorForDownloadModifierLinkTap;
- (void)emptySelectorForAddLinkToReadingListModifierLinkTap;
- (void)emptySelectorForOpenInNewTabOppositePreferenceModifierLinkTap;
- (void)emptySelectorForOpenInNewTabModifierLinkTap;
- (void)toggleDownloadsKeyPressed;
- (void)reopenLastClosedTabPressed;
- (void)previousTabKeyPressed:(id)arg1;
- (void)nextTabKeyPressed:(id)arg1;
- (void)closeOtherTabsKeyPressed;
- (void)closeActiveTab:(id)arg1;
- (void)newTabWithAlternativeOrderingKeyPressed;
- (void)nextTabGroupKeyPressed;
- (void)previousTabGroupKeyPressed;
- (void)renameTabGroupKeyPressed;
- (void)closeTabGroupKeyPressed;
- (void)newTabGroupKeyPressed;
- (void)openNewPrivateTab:(id)arg1;
- (void)newTabAlternativeKeyPressed;
- (void)openNewTab:(id)arg1;
- (void)printKeyPressed;
- (void)previousReadingListItemKeyPressed;
- (void)nextReadingListItemKeyPressed;
- (void)addToReadingList:(id)arg1;
- (void)showTabView;
- (void)toggleTabView;
- (void)toggleTabViewKeyPressed;
- (void)toggleShowingFavoritesBarKeyPressed;
- (void)toggleBookmarksKeyPressed;
- (void)focusAddressFieldAlternativeKeyPressed;
- (void)focusAddressFieldKeyPressed;
- (void)addToBookmarks:(id)arg1;
- (void)showHistoryCollectionAlternativeKeyPressed;
- (void)showHistoryCollectionKeyPressed;
- (void)showReadingListCollectionKeyPressed;
- (void)showBookmarksCollectionKeyPressed;
- (void)switchToTabKeyPressed:(id)arg1;
- (void)validateCommand:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)keyCommands;
- (_Bool)_wantsPriorityOverFocusUpdates;
- (void)_didChangeToFirstResponder:(id)arg1;
- (id)nextResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (double)browserViewController:(id)arg1 adjustedBottomContentInset:(double)arg2;
- (void)didChangeContinuousReadingItemInActiveDocument;
@property(readonly, nonatomic) ContinuousReadingController *continuousReadingController;
- (_Bool)isContinuousReadingDocument:(id)arg1;
- (void)clearContinuousItemDocuments;
- (void)clearDocumentForContinuousReading:(id)arg1;
- (void)updateContinuousPreviewViewFrame;
- (void)reinsertBorrowedContentViewForTab:(id)arg1;
- (id)borrowContentViewForTab:(id)arg1 withTopBackdropView:(id *)arg2 ofHeight:(double)arg3;
- (void)didCancelDismissingTabOverview;
- (void)tabCollectionViewDidDismiss:(id)arg1;
- (void)tabCollectionViewWillDismiss:(id)arg1;
- (void)tabCollectionViewWillPresent:(id)arg1;
@property(readonly, nonatomic) _Bool shouldSnapshotActiveTab;
@property(readonly, nonatomic) _Bool avoidSnapshotOfActiveTabIfPossible;
- (void)snapshotTabDocument:(id)arg1 size:(struct CGSize)arg2 topBackdropHeight:(double)arg3 options:(unsigned long long)arg4 completion:(CDUnknownBlockType)arg5;
- (double)topBarsHeightForSnapshotGenerator:(id)arg1;
- (struct CGSize)contentSizeForSnapshotGenerator:(id)arg1;
- (void)setNeedsSnapshotUpdateForActiveTab;
- (void)setNeedsSnapshotUpdateForActiveTabIfTabIsBlank;
- (void)showReadingListAutomaticArchiveAlertIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)addReadingListBookmarkForCurrentTab;
- (void)_perSitePageZoomPreferenceDidChange:(id)arg1;
- (void)_perSiteAutomaticReaderActivationPreferenceDidChange:(id)arg1;
- (double)verticalScrollOffsetForReaderViewInTabDocument:(id)arg1;
- (void)hideReaderForTabDocument:(id)arg1 animated:(_Bool)arg2 deactivationMode:(unsigned long long)arg3;
- (void)showReaderForTabDocument:(id)arg1 animated:(_Bool)arg2;
- (void)setShowingReader:(_Bool)arg1 animated:(_Bool)arg2 forTabDocument:(id)arg3;
- (void)setShowingReader:(_Bool)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic, getter=isShowingReader) _Bool showingReader;
- (void)_downloadsDidChange:(id)arg1;
- (void)setScrollViewZoomEnabled:(_Bool)arg1;
@property(retain, nonatomic) NSString *currentBookmarksCollection;
- (void)toggleAlwaysShowBookmarksBarMessageReceived;
- (void)setCookiePolicyMessageReceived;
- (void)clearHistoryMessageReceived;
- (void)autoFillStateChangedMessageReceived;
- (void)clearSpeculativeLoadDocument;
- (void)cancelSpeculativeLoad;
- (void)clearReaderViews;
- (void)didReceiveMemoryWarning;
- (void)updateInterface;
@property(nonatomic) float zoomScale;
- (void)setProgressEnabled:(_Bool)arg1;
- (void)goForward;
- (void)goBack;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)_handleKeyUIEvent:(id)arg1;
- (void)didCompleteScrolling;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)updateApplePayPreferences;
- (void)updateJavaScriptPreferences;
- (void)updateWebKitExperimentalFeatures;
- (void)updateInternalPreferences;
- (void)updateSpeculativeLoadingPreferences;
@property(readonly, nonatomic) _SFBrowserConfiguration *configuration;
- (void)writePrivateBrowsingEnabled:(_Bool)arg1;
- (void)togglePrivateBrowsingEnabled;
@property(readonly, nonatomic, getter=isPrivateBrowsingAvailable) _Bool privateBrowsingAvailable;
- (void)carrierBundledChanged;
- (void)userDefaultsDidChangeValueForKey:(id)arg1;
- (void)setUpWithURL:(id)arg1 launchOptions:(id)arg2;
- (void)_showTabGroupPicker:(id)arg1;
- (id)makeSidebarButton;
- (void)updateTabGroupButtonsVisibility;
- (void)sidebarTrailingButtonWasTapped;
- (void)reloadSidebar;
@property(readonly, nonatomic) BookmarksNavigationController *bookmarksNavigationController;
@property(readonly, nonatomic) long long overrideBarTintStyleForUnifiedBar;
@property(readonly, nonatomic) long long tabBarDisplayMode;
@property(readonly, nonatomic) _Bool shouldUseCompactUnifiedBar;
- (void)endTrackingDropSessionForTabBarVisibility:(id)arg1;
- (void)beginTrackingDropSessionForTabBarVisibility:(id)arg1;
- (void)catalogViewControllerWillUnfocusUnifiedField:(id)arg1;
- (void)dismissCatalogViewController:(id)arg1;
- (_Bool)catalogViewController:(id)arg1 shouldBeginDismissGestureUsingStyle:(long long)arg2;
- (void)catalogViewControllerDidScroll:(id)arg1 animated:(_Bool)arg2;
- (void)catalogViewController:(id)arg1 didPasteText:(id)arg2;
- (_Bool)catalogViewControllerShouldSuppressPopover:(id)arg1;
- (void)catalogViewController:(id)arg1 focusNextKeyView:(_Bool)arg2;
- (_Bool)catalogViewControllerShouldRequestSuggestions:(id)arg1;
- (void)catalogViewController:(id)arg1 presentViewControllerWithinPopover:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)catalogViewControllerPopoverWillDismiss:(id)arg1 dismissalReason:(long long)arg2;
- (void)catalogViewControllerDidEndEditing:(id)arg1;
- (void)catalogViewControllerDidBeginEditing:(id)arg1;
- (void)catalogViewController:(id)arg1 cacheSearchQueryID:(long long)arg2;
- (void)catalogViewController:(id)arg1 completionItem:(id)arg2 wasAcceptedForString:(id)arg3;
- (void)catalogViewController:(id)arg1 mightSelectCompletionItem:(id)arg2 forString:(id)arg3;
- (void)catalogViewController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (double)catalogViewControllerPopoverWidth:(id)arg1;
- (void)catalogViewController:(id)arg1 loadURL:(id)arg2 inExternalApplication:(_Bool)arg3;
- (void)catalogViewController:(id)arg1 didSelectAddress:(id)arg2;
- (void)catalogViewControllerDidSelectFindOnPage:(id)arg1;
- (void)clearParsecQueryOriginatingFromSearchSuggestion;
@property(readonly, nonatomic) long long idOfParsecQueryOriginatingFromSearchSuggestion;
- (void)catalogViewController:(id)arg1 didSelectSearch:(id)arg2;
- (void)_didChangePowerState;
- (void)prepareForTabDocumentWebViewFullscreenMayReturnToInline:(id)arg1;
- (void)toggleVoiceSearch;
- (void)unifiedTabBarActiveTabWasTapped;
- (void)setFavoritesState:(long long)arg1 forVoiceSearch:(_Bool)arg2 animated:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)setFavoritesState:(long long)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setFavoritesState:(long long)arg1 animated:(_Bool)arg2;
- (id)createCatalogViewController;
- (void)updateButtonBarContentsAnimated:(_Bool)arg1;
- (void)updateFavoritesForNewDocument;
- (void)_bookmarksDidReload:(id)arg1;
- (_Bool)hasAnyFavorites;
- (void)cancelFavoritesAnimated:(_Bool)arg1;
- (void)cancelFavorites;
- (void)setFavoritesFieldFocused:(_Bool)arg1 forVoiceSearch:(_Bool)arg2 animated:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)setFavoritesFieldFocused:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setFavoritesAreEmbedded:(_Bool)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic) _Bool favoritesAreShowingInPopover;
@property(readonly, nonatomic) _Bool favoritesFieldShouldBeExpanded;
@property(readonly, nonatomic, getter=isFavoritesFieldFocused) _Bool favoritesFieldFocused;
@property(readonly, nonatomic) _Bool favoritesAreEmbedded;
@property(readonly, nonatomic, getter=isShowingFavorites) _Bool showingFavorites;
- (double)browserViewController:(id)arg1 adjustedBottomObscuredInset:(double)arg2;
- (struct UIEdgeInsets)finalObscuredInsetsForScrollView:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)_tabViewPinch:(id)arg1;
- (void)_parsecBagDidLoad:(id)arg1;
- (void)_parsecABGroupIdentifierDidChange:(id)arg1;
- (void)_defaultSearchEngineDidChange:(id)arg1;
- (void)updateSearchEngine;
- (void)updateSearchEngineIfNeeded;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)showBars;
- (_Bool)dynamicBarAnimator:(id)arg1 canTransitionToState:(long long)arg2 byDraggingWithOffset:(double)arg3;
- (double)dynamicBarAnimator:(id)arg1 minimumTopBarHeightForOffset:(double)arg2;
- (void)updateDynamicBarGeometry;
- (void)dynamicBarAnimatorOutputsDidChange:(id)arg1;
- (void)_initSubviews;
- (void)updateTabViewPinchRecognizer;
- (void)updatePrivateBrowsingAvailability;
- (void)updateTabOverviewBarPlacement;
@property(readonly, nonatomic) _Bool shouldUseClassicTabOverview;
- (void)animateLinkImage:(struct CGImage *)arg1 fromRect:(struct CGRect)arg2 inView:(id)arg3 toBarItem:(long long)arg4;
@property(readonly, nonatomic) _Bool interfaceFillsScreen;
- (void)updateShowingTabBarAnimated:(_Bool)arg1;
- (void)rootViewControllerViewDidTransitionFromSize:(struct CGSize)arg1 animated:(_Bool)arg2;
- (void)rootViewControllerViewTransitionFromSize:(struct CGSize)arg1 includingSidebar:(_Bool)arg2 animated:(_Bool)arg3;
- (void)rootViewControllerViewWillTransitionToSize:(struct CGSize)arg1;
- (void)_hasUnviewedDownloadsDidChange:(id)arg1;
- (void)_downloadManagerDidFinishLastDownload:(id)arg1;
- (void)_downloadsTotalProgressDidChange:(id)arg1;
- (_Bool)_shouldUseNarrowLayout;
- (_Bool)canHideBars;
- (void)updateAppBannerFrame;
- (void)_hideCrashBanner;
- (void)showCrashBanner:(id)arg1 animated:(_Bool)arg2;
- (void)setShowingCrashBanner:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)showDemoModeFeatureDisabledAlert;
- (void)loadURL:(id)arg1;
- (void)didBecomeActive;
- (void)willEnterForeground;
- (_Bool)isAnyPageLoaded;
- (void)invalidateSourceApplication;
- (void)didEnterBackground;
- (void)willResignActive;
- (void)updateScrollToTopView;
- (void)statusBarHeightChanged;
- (void)restoreInterfaceAfterElementFullscreen;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIWindow *window;

@end

