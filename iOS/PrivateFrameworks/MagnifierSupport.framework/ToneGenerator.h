//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVAudioEngine, AVAudioMixerNode, AVAudioPCMBuffer, AVAudioPlayerNode, CHHapticEngine, NSTimer, NSURL;

@interface ToneGenerator : NSObject
{
    _Bool _useSoundFeedback;
    _Bool _useHapticFeedback;
    _Bool _hapticEngineStarted;
    float _volume;
    float _leftBalance;
    float _rightBalance;
    float _pitchFactor;
    double _pulseFrequency;
    NSURL *_audioFileURL;
    AVAudioEngine *_audioEngine;
    AVAudioPlayerNode *_player;
    AVAudioMixerNode *_mixer;
    AVAudioPCMBuffer *_buffer;
    double _pulseDuration;
    CHHapticEngine *_hapticEngine;
    NSTimer *_timer;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property _Bool hapticEngineStarted; // @synthesize hapticEngineStarted=_hapticEngineStarted;
@property(retain, nonatomic) CHHapticEngine *hapticEngine; // @synthesize hapticEngine=_hapticEngine;
@property(nonatomic) double pulseDuration; // @synthesize pulseDuration=_pulseDuration;
@property(retain, nonatomic) AVAudioPCMBuffer *buffer; // @synthesize buffer=_buffer;
@property(retain, nonatomic) AVAudioMixerNode *mixer; // @synthesize mixer=_mixer;
@property(retain, nonatomic) AVAudioPlayerNode *player; // @synthesize player=_player;
@property(retain, nonatomic) AVAudioEngine *audioEngine; // @synthesize audioEngine=_audioEngine;
@property(retain, nonatomic) NSURL *audioFileURL; // @synthesize audioFileURL=_audioFileURL;
@property(nonatomic) float pitchFactor; // @synthesize pitchFactor=_pitchFactor;
@property(nonatomic) float rightBalance; // @synthesize rightBalance=_rightBalance;
@property(nonatomic) float leftBalance; // @synthesize leftBalance=_leftBalance;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(nonatomic) double pulseFrequency; // @synthesize pulseFrequency=_pulseFrequency;
- (void)playHapticsWithVolume:(float)arg1 pulseDuration:(double)arg2;
- (id)configureHapticPlayerWithVolume:(float)arg1 duration:(double)arg2 error:(id *)arg3;
- (void)playSoundWithPitchFactor:(float)arg1 leftBalance:(float)arg2 rightBalance:(float)arg3 volume:(float)arg4 loop:(_Bool)arg5;
- (void)configurePlayerWithPitchFactor:(float)arg1 leftBalance:(float)arg2 rightBalance:(float)arg3 volume:(float)arg4 loop:(_Bool)arg5;
- (void)pause;
- (void)playOnePulse;
- (id)configureAudioEngineWithError:(id *)arg1;
- (void)stopPulse;
- (void)startPulse;
- (id)init;
@property(nonatomic) _Bool useHapticFeedback;
@property(nonatomic) _Bool useSoundFeedback;
@property(readonly, nonatomic) float maxPitchFactor;
@property(readonly, nonatomic) float minPitchFactor;
@property(readonly, nonatomic) double minPulseFrequency;
@property(readonly, nonatomic) double maxPulseFrequency;

@end

