//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSCoder.h>

#import <MediaServices/MSVSegmentedSubEncoder-Protocol.h>

@class NSData, NSMapTable, NSMutableArray, NSString;

@interface MSVOPACKEncoder : NSCoder <MSVSegmentedSubEncoder>
{
    _Bool _hasFinished;
    NSData *_encodedData;
    NSMutableArray *_objects;
    NSMapTable *_objectLookupTable;
    NSMutableArray *_wrapperStack;
}

+ (id)encodedDataWithRootObject:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) NSMutableArray *wrapperStack; // @synthesize wrapperStack=_wrapperStack;
@property(readonly, nonatomic) NSMapTable *objectLookupTable; // @synthesize objectLookupTable=_objectLookupTable;
@property(readonly, nonatomic) NSMutableArray *objects; // @synthesize objects=_objects;
@property(nonatomic) _Bool hasFinished; // @synthesize hasFinished=_hasFinished;
- (void).cxx_destruct;
- (id)_convertObject:(id)arg1;
- (id)_convertNumber:(id)arg1;
- (void)_encodeNumber:(id)arg1 forKey:(id)arg2;
- (void)finishEncodingPartialTopLevelObject;
- (void)beginEncodingPartialTopLevelObject:(id)arg1;
@property(readonly, nonatomic) _Bool hasTopLevelData;
- (void)encodeBytes:(const char *)arg1 length:(unsigned long long)arg2 forKey:(id)arg3;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeBool:(_Bool)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)encodeRootObject:(id)arg1;
- (_Bool)allowsKeyedCoding;
- (_Bool)requiresSecureCoding;
@property(readonly, nonatomic) NSData *encodedData; // @synthesize encodedData=_encodedData;
- (void)finishEncoding;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

