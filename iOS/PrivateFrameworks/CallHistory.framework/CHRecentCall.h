//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CallHistory/NSCopying-Protocol.h>
#import <CallHistory/NSSecureCoding-Protocol.h>

@class CHHandle, CHPhoneBookIOSManager, CNContact, INInteraction, NSArray, NSDate, NSDateInterval, NSDictionary, NSNumber, NSSet, NSString, NSUUID, NSValue;

@interface CHRecentCall : NSObject <NSSecureCoding, NSCopying>
{
    _Bool _read;
    _Bool _callerIdIsBlocked;
    _Bool _multiCall;
    _Bool _answered;
    _Bool _mobileOriginated;
    unsigned int _callStatus;
    unsigned int _callerIdAvailability;
    unsigned int _callCategory;
    unsigned int _callType;
    CHHandle *_localParticipantHandle;
    NSUUID *_localParticipantUUID;
    NSUUID *_outgoingLocalParticipantUUID;
    NSSet *_remoteParticipantHandles;
    NSString *_uniqueId;
    NSString *_callerNetworkName;
    NSString *_serviceProvider;
    NSNumber *_bytesOfDataUsed;
    NSDate *_date;
    double _duration;
    NSString *_isoCountryCode;
    NSString *_mobileCountryCode;
    NSString *_mobileNetworkCode;
    NSNumber *_disconnectedCause;
    NSNumber *_filteredOutReason;
    NSString *_callerNetworkFirstName;
    NSString *_callerNetworkSecondName;
    unsigned long long _unreadCount;
    NSArray *_callOccurrences;
    NSString *_clientAddressBookRecordId;
    NSString *_contactIdentifier;
    long long _mediaType;
    long long _ttyType;
    long long _handleType;
    NSNumber *_timeToEstablish;
    NSValue *_addressBookRecordRef;
    NSString *_addressBookRecordId;
    NSString *_addressBookCallerIDMultiValueId;
    NSString *_devicePhoneId;
    NSString *_callerId;
    CNContact *_contactRef;
    long long _junkConfidence;
    long long _verificationStatus;
    NSString *_callerName;
    NSString *_callerIdLabel;
    NSString *_callerIdLocation;
    NSUUID *_participantGroupUUID;
    NSString *_callerIdFormatted;
}

+ (_Bool)supportsSecureCoding;
+ (unsigned int)getCallTypeForCategory:(unsigned int)arg1 andServiceProvider:(id)arg2;
+ (id)serviceProviderForCallType:(unsigned int)arg1;
+ (unsigned int)categoryForCallType:(unsigned int)arg1;
+ (unsigned int)categoryForMediaType:(long long)arg1 andTTYType:(long long)arg2;
+ (long long)ttyTypeForCallCategory:(unsigned int)arg1;
+ (long long)mediaTypeForCallCategory:(unsigned int)arg1;
+ (id)callCategoryAsString:(unsigned int)arg1;
+ (id)callStatusAsString:(unsigned int)arg1;
+ (id)callTypeAsString:(unsigned int)arg1;
+ (id)callHandleTypeAsString:(long long)arg1;
+ (id)callTTYTypeAsString:(long long)arg1;
+ (id)callMediaTypeAsString:(long long)arg1;
+ (id)getLocationForCallerId:(id)arg1 andIsoCountryCode:(id)arg2;
+ (id)unarchivedObjectFromData:(id)arg1 error:(id *)arg2;
+ (id)unarchivedObjectClasses;
+ (id)predicateForCallsWithAnyUniqueIDs:(id)arg1;
+ (id)predicateForCallsWithUniqueID:(id)arg1;
+ (id)predicateForCallsWithAnyTTYTypes:(id)arg1;
+ (id)predicateForCallsWithTTYType:(long long)arg1;
+ (id)predicateForCallsWithStatusJunk:(_Bool)arg1;
+ (id)predicateForCallsWithStatusRead:(_Bool)arg1;
+ (id)predicateForCallsWithStatusOriginated:(_Bool)arg1;
+ (id)predicateForCallsWithStatusAnswered:(_Bool)arg1;
+ (id)predicateForCallsWithStatus:(unsigned int)arg1;
+ (id)predicateForCallsWithAnyServiceProviders:(id)arg1;
+ (id)predicateForCallsWithServiceProvider:(id)arg1;
+ (id)predicateForCallsWithAnyRemoteParticipantHandleNormalizedValues:(id)arg1;
+ (id)predicateForCallsWithAnyRemoteParticipantHandleValues:(id)arg1;
+ (id)predicateForCallsWithAnyRemoteParticipantHandleTypes:(id)arg1;
+ (id)predicateForCallsWithAnyRemoteParticipantHandles:(id)arg1;
+ (id)predicateForCallsWithRemoteParticipantHandleNormalizedValue:(id)arg1;
+ (id)predicateForCallsWithRemoteParticipantHandleValue:(id)arg1;
+ (id)predicateForCallsWithRemoteParticipantHandleType:(long long)arg1;
+ (id)predicateForCallsWithRemoteParticipantHandle:(id)arg1;
+ (id)predicateForCallsWithRemoteParticipantCount:(long long)arg1;
+ (id)predicateForCallsWithAnyMediaTypes:(id)arg1;
+ (id)predicateForCallsWithMediaType:(long long)arg1;
+ (id)predicateForCallsWithCategory:(unsigned int)arg1;
+ (id)predicateForCallsBetweenStartDate:(id)arg1 endDate:(id)arg2;
- (void).cxx_destruct;
@property _Bool mobileOriginated; // @synthesize mobileOriginated=_mobileOriginated;
@property _Bool answered; // @synthesize answered=_answered;
@property(copy, nonatomic, getter=callerIdForDisplay) NSString *callerIdFormatted; // @synthesize callerIdFormatted=_callerIdFormatted;
@property(retain, nonatomic) NSUUID *participantGroupUUID; // @synthesize participantGroupUUID=_participantGroupUUID;
@property(nonatomic) _Bool multiCall; // @synthesize multiCall=_multiCall;
@property(copy, nonatomic) NSString *callerIdLocation; // @synthesize callerIdLocation=_callerIdLocation;
@property(copy, nonatomic) NSString *callerIdLabel; // @synthesize callerIdLabel=_callerIdLabel;
@property(copy, nonatomic) NSString *callerName; // @synthesize callerName=_callerName;
@property(nonatomic) long long verificationStatus; // @synthesize verificationStatus=_verificationStatus;
@property(nonatomic) long long junkConfidence; // @synthesize junkConfidence=_junkConfidence;
@property(copy, nonatomic) CNContact *contactRef; // @synthesize contactRef=_contactRef;
@property(copy, nonatomic) NSString *callerId; // @synthesize callerId=_callerId;
@property(copy, nonatomic) NSString *devicePhoneId; // @synthesize devicePhoneId=_devicePhoneId;
@property(nonatomic) unsigned int callType; // @synthesize callType=_callType;
@property(nonatomic) unsigned int callCategory; // @synthesize callCategory=_callCategory;
@property(copy, nonatomic) NSString *addressBookCallerIDMultiValueId; // @synthesize addressBookCallerIDMultiValueId=_addressBookCallerIDMultiValueId;
@property(copy, nonatomic) NSString *addressBookRecordId; // @synthesize addressBookRecordId=_addressBookRecordId;
@property(copy, nonatomic) NSValue *addressBookRecordRef; // @synthesize addressBookRecordRef=_addressBookRecordRef;
@property(retain, nonatomic) NSNumber *timeToEstablish; // @synthesize timeToEstablish=_timeToEstablish;
@property(nonatomic) long long handleType; // @synthesize handleType=_handleType;
@property(nonatomic) long long ttyType; // @synthesize ttyType=_ttyType;
@property(nonatomic) long long mediaType; // @synthesize mediaType=_mediaType;
@property(copy, nonatomic) NSString *contactIdentifier; // @synthesize contactIdentifier=_contactIdentifier;
@property(copy) NSString *clientAddressBookRecordId; // @synthesize clientAddressBookRecordId=_clientAddressBookRecordId;
@property(copy, nonatomic) NSArray *callOccurrences; // @synthesize callOccurrences=_callOccurrences;
@property(nonatomic) unsigned long long unreadCount; // @synthesize unreadCount=_unreadCount;
@property(copy, nonatomic) NSString *callerNetworkSecondName; // @synthesize callerNetworkSecondName=_callerNetworkSecondName;
@property(copy, nonatomic) NSString *callerNetworkFirstName; // @synthesize callerNetworkFirstName=_callerNetworkFirstName;
@property(nonatomic) _Bool callerIdIsBlocked; // @synthesize callerIdIsBlocked=_callerIdIsBlocked;
@property(nonatomic) unsigned int callerIdAvailability; // @synthesize callerIdAvailability=_callerIdAvailability;
@property(retain, nonatomic) NSNumber *filteredOutReason; // @synthesize filteredOutReason=_filteredOutReason;
@property(retain, nonatomic) NSNumber *disconnectedCause; // @synthesize disconnectedCause=_disconnectedCause;
@property(copy, nonatomic) NSString *mobileNetworkCode; // @synthesize mobileNetworkCode=_mobileNetworkCode;
@property(copy, nonatomic) NSString *mobileCountryCode; // @synthesize mobileCountryCode=_mobileCountryCode;
@property(nonatomic) _Bool read; // @synthesize read=_read;
@property(copy, nonatomic) NSString *isoCountryCode; // @synthesize isoCountryCode=_isoCountryCode;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(retain, nonatomic) NSNumber *bytesOfDataUsed; // @synthesize bytesOfDataUsed=_bytesOfDataUsed;
@property(copy, nonatomic) NSString *serviceProvider; // @synthesize serviceProvider=_serviceProvider;
@property(nonatomic) unsigned int callStatus; // @synthesize callStatus=_callStatus;
@property(copy, nonatomic) NSString *callerNetworkName; // @synthesize callerNetworkName=_callerNetworkName;
@property(copy, nonatomic) NSString *uniqueId; // @synthesize uniqueId=_uniqueId;
@property(copy, nonatomic) NSSet *remoteParticipantHandles; // @synthesize remoteParticipantHandles=_remoteParticipantHandles;
@property(retain, nonatomic) NSUUID *outgoingLocalParticipantUUID; // @synthesize outgoingLocalParticipantUUID=_outgoingLocalParticipantUUID;
@property(retain, nonatomic) NSUUID *localParticipantUUID; // @synthesize localParticipantUUID=_localParticipantUUID;
@property(retain, nonatomic) CHHandle *localParticipantHandle; // @synthesize localParticipantHandle=_localParticipantHandle;
- (_Bool)isEqualToRecentCall:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, nonatomic) _Bool isJunk;
- (void)fixCallTypeInfo;
- (void)updateTTYAndMediaType;
- (id)callOccurrencesAsString;
- (id)callerIdSubStringForDisplay;
- (id)callerNameForDisplay;
- (id)getLocalizedString:(id)arg1;
- (_Bool)callerIdIsEmailAddress;
- (void)fetchAndSetFullContact;
- (void)fetchAndSetContactIdentifier;
- (long long)countOfExcludedHandles;
- (id)validRemoteParticipantHandles;
@property(readonly, nonatomic) CHPhoneBookIOSManager *phoneBookManager;
- (unsigned long long)numberOfOccurrences;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)coalescedCallWithCall:(id)arg1 usingStrategy:(id)arg2;
- (_Bool)coalesceWithCall:(id)arg1 withStrategy:(id)arg2;
- (_Bool)canCoalesceWithCall:(id)arg1 withStrategy:(id)arg2;
- (_Bool)canCoalesceRemoteParticipantHandlesFromCall:(id)arg1;
- (_Bool)canCoalesceSyncWithRecentsStrategyWithCall:(id)arg1;
- (id)callOccurrencesArrayByAddingCallOccurrencesFromArray:(id)arg1;
- (id)init;
- (id)archivedDataWithError:(id *)arg1;
@property(readonly, nonatomic) NSDateInterval *interactionDateInterval;
@property(readonly, nonatomic) INInteraction *interaction;
@property(readonly, copy, nonatomic) NSString *notificationThreadIdentifier;

@end

