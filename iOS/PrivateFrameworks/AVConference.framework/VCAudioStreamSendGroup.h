//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVCBasebandCongestionDetector, VCAudioStreamGroupCommon, VCSystemAudioCaptureSession;

__attribute__((visibility("hidden")))
@interface VCAudioStreamSendGroup
{
    _Bool _isVADFilteringEnabled;
    _Bool _isCurrentDTXEnabled;
    AVCBasebandCongestionDetector *_basebandCongestionDetector;
    unsigned int _cellularUniqueTag;
    VCAudioStreamGroupCommon *_common;
    _Bool _lastEnqueuedStreamUpdateEventWasEmpty;
    struct opaqueCMSimpleQueue *_audioStreamUpdateEventQueue;
    struct opaqueCMSimpleQueue *_audioRedundancyChangeEventQueue;
    struct tagVCMemoryPool *_audioStreamUpdatePool;
    struct tagVCMemoryPool *_audioRedundancyEventPool;
    struct tagVCMediaQueue *_mediaQueue;
    unsigned char _lastAudioPriority;
    _Bool _forcedAudioPriorityEnabled;
    unsigned char _forcedAudioPriorityValue;
    double _forcedAudioPriorityLastUpdateTime;
    struct opaqueVCVoiceDetector *_voiceDetector;
    VCSystemAudioCaptureSession *_systemAudioCaptureSession;
    struct tagVCAudioDucker *_audioDucker;
    _Bool _shouldScheduleMediaQueue;
    float _averageInputPower;
}

@property(readonly) VCAudioStreamGroupCommon *common; // @synthesize common=_common;
@property(nonatomic) unsigned int cellularUniqueTag; // @synthesize cellularUniqueTag=_cellularUniqueTag;
@property(retain, nonatomic) AVCBasebandCongestionDetector *basebandCongestionDetector; // @synthesize basebandCongestionDetector=_basebandCongestionDetector;
@property(nonatomic, setter=setCurrentDTXEnabled:) _Bool isCurrentDTXEnabled; // @synthesize isCurrentDTXEnabled=_isCurrentDTXEnabled;
@property(nonatomic, setter=setVADFilteringEnabled:) _Bool isVADFilteringEnabled; // @synthesize isVADFilteringEnabled=_isVADFilteringEnabled;
- (void)didReceiveCustomReportPacket:(struct tagRTCPPACKET *)arg1 arrivalNTPTime:(union tagNTP)arg2;
- (void)didReceiveReportPacket:(struct tagRTCPPACKET *)arg1 arrivalNTPTime:(union tagNTP)arg2;
- (id)checkStreamsForAdditionalOptIn:(id)arg1;
- (id)setupRedundancyControllerForMode:(unsigned int)arg1;
- (void)setMuteOnStreams;
- (void)stopDynamicDucker;
- (void)startDynamicDucker;
- (void)stopVoiceActivityDetection;
- (void)startVoiceActivityDetection;
- (void)flushAudioRedundancyEventQueue;
- (void)flushAudioEventQueue;
- (void)cleanupIOEventQueues;
- (_Bool)createIOEventQueues;
- (void)redundancyController:(id)arg1 redundancyVectorDidChange:(CDStruct_d7e2e0ee)arg2;
- (void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2;
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;
- (id)stopCapture;
- (id)startCapture;
- (_Bool)removeSyncDestination:(id)arg1;
- (_Bool)addSyncDestination:(id)arg1;
- (id)activeStreamKeys;
- (void)dispatchedUpdateActiveMediaStreamIDs:(id)arg1 withTargetBitrate:(unsigned int)arg2 mediaBitrates:(id)arg3 rateChangeCounter:(unsigned int)arg4;
- (void)setReportingAgent:(struct opaqueRTCReporting *)arg1;
- (void)collectAndLogChannelMetrics:(CDStruct_b671a7c4 *)arg1;
- (_Bool)configureStreams;
@property(nonatomic, setter=setMuted:) _Bool isMuted;
- (void)didStop;
- (id)willStart;
- (void)updateVoiceActivityEnabled:(_Bool)arg1 isMediaPriorityEnabled:(_Bool)arg2;
- (void)updateActiveVoiceOnly:(_Bool)arg1;
@property(setter=setPowerSpectrumEnabled:) _Bool isPowerSpectrumEnabled;
@property(readonly, nonatomic) int deviceRole;
- (_Bool)configureAudioStreams:(id)arg1 deviceRole:(int)arg2 operatingMode:(int)arg3;
- (_Bool)setDeviceRole:(int)arg1 operatingMode:(int)arg2;
- (_Bool)setupStreamGroupWithConfig:(id)arg1;
- (void)dealloc;
- (id)initWithConfig:(id)arg1;

@end

