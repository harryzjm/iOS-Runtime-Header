//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSData, NSDictionary, NSMutableDictionary, NSString;
@protocol VCMediaStreamSyncSource;

__attribute__((visibility("hidden")))
@interface VCVideoStreamConfig
{
    long long _videoResolution;
    unsigned long long _framerate;
    unsigned long long _txMaxBitrate;
    unsigned long long _txMinBitrate;
    unsigned long long _txInitialBitrate;
    unsigned long long _rxMaxBitrate;
    unsigned long long _rxMinBitrate;
    unsigned long long _keyFrameInterval;
    int _remoteVideoInitialOrientation;
    _Bool _enableCVO;
    unsigned long long _cvoExtensionID;
    _Bool _isVideoProtected;
    long long _type;
    unsigned long long _sourceFramerate;
    int _encodingMode;
    int _encoderUsage;
    _Atomic unsigned char *_videoPriorityPointer;
    long long _captureSourceID;
    unsigned int _screenDisplayID;
    unsigned long long _customWidth;
    unsigned long long _customHeight;
    NSMutableDictionary *_rxCodecFeatureListStrings;
    NSMutableDictionary *_txCodecFeatureListStrings;
    NSData *_featureBitfieldEncoder;
    NSData *_featureBitfieldDecoder;
    unsigned long long _tilesPerFrame;
    unsigned int _pixelFormat;
    _Bool _ltrpEnabled;
    int _hdrMode;
    NSString *_remoteDeviceName;
    NSString *_profileLevel;
    unsigned int _parameterSets;
    _Bool _temporalScalingEnabled;
    _Bool _isVariableSliceModeEnabled;
    _Bool _rtcpPSFB_FIREnabled;
    _Bool _resetSendRTPTimestampOnStop;
    id <VCMediaStreamSyncSource> _syncSource;
    _Bool _useInBandFEC;
    unsigned int _audioIOSampleRate;
    _Bool _fecEnabled;
    _Bool _rtxEnabled;
    int _transportProtocolType;
    double _minPlaybackInterval;
    _Bool _useVideoJitterForVideoPlayout;
    _Bool _forceZeroRegionOfInterestOrigin;
    _Bool _shouldEnableMLEnhance;
    unsigned long long _maxEncoderPixels;
}

+ (id)profileLevelStringForId:(unsigned int)arg1;
+ (unsigned int)profileLevelIdForString:(id)arg1;
+ (_Bool)validateClientDictionary:(id)arg1;
@property(nonatomic) _Bool shouldEnableMLEnhance; // @synthesize shouldEnableMLEnhance=_shouldEnableMLEnhance;
@property(nonatomic) _Bool forceZeroRegionOfInterestOrigin; // @synthesize forceZeroRegionOfInterestOrigin=_forceZeroRegionOfInterestOrigin;
@property(nonatomic) unsigned long long maxEncoderPixels; // @synthesize maxEncoderPixels=_maxEncoderPixels;
@property(nonatomic) _Bool useVideoJitterForVideoPlayout; // @synthesize useVideoJitterForVideoPlayout=_useVideoJitterForVideoPlayout;
@property(nonatomic) double minPlaybackInterval; // @synthesize minPlaybackInterval=_minPlaybackInterval;
@property(nonatomic) int transportProtocolType; // @synthesize transportProtocolType=_transportProtocolType;
@property(nonatomic) _Bool rtxEnabled; // @synthesize rtxEnabled=_rtxEnabled;
@property(nonatomic) _Bool fecEnabled; // @synthesize fecEnabled=_fecEnabled;
@property(nonatomic) unsigned int audioIOSampleRate; // @synthesize audioIOSampleRate=_audioIOSampleRate;
@property(nonatomic) _Bool useInBandFEC; // @synthesize useInBandFEC=_useInBandFEC;
@property(nonatomic) int encoderUsage; // @synthesize encoderUsage=_encoderUsage;
@property(nonatomic) _Bool resetSendRTPTimestampOnStop; // @synthesize resetSendRTPTimestampOnStop=_resetSendRTPTimestampOnStop;
@property(nonatomic) id <VCMediaStreamSyncSource> syncSource; // @synthesize syncSource=_syncSource;
@property(nonatomic) _Bool rtcpPSFB_FIREnabled; // @synthesize rtcpPSFB_FIREnabled=_rtcpPSFB_FIREnabled;
@property(nonatomic) _Bool isVariableSliceModeEnabled; // @synthesize isVariableSliceModeEnabled=_isVariableSliceModeEnabled;
@property(nonatomic) _Bool temporalScalingEnabled; // @synthesize temporalScalingEnabled=_temporalScalingEnabled;
@property(nonatomic) unsigned int parameterSets; // @synthesize parameterSets=_parameterSets;
@property(retain, nonatomic) NSString *profileLevel; // @synthesize profileLevel=_profileLevel;
@property(retain, nonatomic) NSString *remoteDeviceName; // @synthesize remoteDeviceName=_remoteDeviceName;
@property(nonatomic) int hdrMode; // @synthesize hdrMode=_hdrMode;
@property(nonatomic) _Bool ltrpEnabled; // @synthesize ltrpEnabled=_ltrpEnabled;
@property(nonatomic) unsigned long long tilesPerFrame; // @synthesize tilesPerFrame=_tilesPerFrame;
@property(nonatomic) unsigned int pixelFormat; // @synthesize pixelFormat=_pixelFormat;
@property(nonatomic) unsigned long long customHeight; // @synthesize customHeight=_customHeight;
@property(nonatomic) unsigned long long customWidth; // @synthesize customWidth=_customWidth;
@property(nonatomic) unsigned int screenDisplayID; // @synthesize screenDisplayID=_screenDisplayID;
@property(nonatomic) long long captureSourceID; // @synthesize captureSourceID=_captureSourceID;
@property(nonatomic) _Atomic unsigned char *videoPriorityPointer; // @synthesize videoPriorityPointer=_videoPriorityPointer;
@property(nonatomic) int encodingMode; // @synthesize encodingMode=_encodingMode;
@property(nonatomic) unsigned long long sourceFramerate; // @synthesize sourceFramerate=_sourceFramerate;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(nonatomic) _Bool isVideoProtected; // @synthesize isVideoProtected=_isVideoProtected;
@property(nonatomic) unsigned long long cvoExtensionID; // @synthesize cvoExtensionID=_cvoExtensionID;
@property(nonatomic) _Bool enableCVO; // @synthesize enableCVO=_enableCVO;
@property(nonatomic) int remoteVideoInitialOrientation; // @synthesize remoteVideoInitialOrientation=_remoteVideoInitialOrientation;
@property(nonatomic) unsigned long long keyFrameInterval; // @synthesize keyFrameInterval=_keyFrameInterval;
@property(retain, nonatomic) NSData *featureBitfieldDecoder; // @synthesize featureBitfieldDecoder=_featureBitfieldDecoder;
@property(retain, nonatomic) NSData *featureBitfieldEncoder; // @synthesize featureBitfieldEncoder=_featureBitfieldEncoder;
@property(readonly, nonatomic) NSDictionary *txCodecFeatureListStrings; // @synthesize txCodecFeatureListStrings=_txCodecFeatureListStrings;
@property(readonly, nonatomic) NSDictionary *rxCodecFeatureListStrings; // @synthesize rxCodecFeatureListStrings=_rxCodecFeatureListStrings;
@property(nonatomic) unsigned long long rxMaxBitrate; // @synthesize rxMaxBitrate=_rxMaxBitrate;
@property(nonatomic) unsigned long long rxMinBitrate; // @synthesize rxMinBitrate=_rxMinBitrate;
@property(nonatomic) unsigned long long txInitialBitrate; // @synthesize txInitialBitrate=_txInitialBitrate;
@property(nonatomic) unsigned long long txMaxBitrate; // @synthesize txMaxBitrate=_txMaxBitrate;
@property(nonatomic) unsigned long long txMinBitrate; // @synthesize txMinBitrate=_txMinBitrate;
@property(nonatomic) unsigned long long framerate; // @synthesize framerate=_framerate;
@property(nonatomic) long long videoResolution; // @synthesize videoResolution=_videoResolution;
- (void)initializeParameterSets;
- (void)addTxCodecFeatureListString:(id)arg1 codecType:(long long)arg2;
- (void)addRxCodecFeatureListString:(id)arg1 codecType:(long long)arg2;
- (_Bool)updateWithClientDictionary:(id)arg1;
- (_Bool)applyVideoStreamClientDictionary:(id)arg1;
- (void)dealloc;
- (id)initWithClientDictionary:(id)arg1;
- (id)init;

@end

