//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <AVConference/NSCopying-Protocol.h>
#import <AVConference/VCAudioIOSink-Protocol.h>
#import <AVConference/VCAudioIOSource-Protocol.h>
#import <AVConference/VCBasebandCodecNotifications-Protocol.h>

@class NSString;
@protocol VCBasebandCodecNotifications;

@interface VCAudioRelayIO <NSCopying, VCBasebandCodecNotifications, VCAudioIOSink, VCAudioIOSource>
{
    _Bool _usePacketThread;
    struct PacketThread_s *_packetThread;
    _Bool _isRunning;
    struct tagVCAudioFrameFormat _clientFormat;
    struct tagVCAudioFrameFormat _relayFormat;
    struct tagVCAudioRelayIOContext _micContext;
    struct tagVCAudioRelayIOContext _speakerContext;
    unsigned int _micTimestamp;
    struct opaqueVCAudioBufferList *_micBuffer;
    float _micPowerRMS;
    unsigned int _speakerTimestamp;
    struct opaqueVCAudioBufferList *_speakerBuffer;
    float _speakerPowerRMS;
    CDUnknownFunctionPointerType _updateRemoteCodecInfoCallback;
    void *_updateRemoteCodecInfoContext;
    CDUnknownBlockType _startCompletionHandler;
    struct _VCRemoteCodecInfo _remoteCodecInfo;
    id _relay;
}

@property void *updateRemoteCodecInfoContext; // @synthesize updateRemoteCodecInfoContext=_updateRemoteCodecInfoContext;
@property CDUnknownFunctionPointerType updateRemoteCodecInfoCallback; // @synthesize updateRemoteCodecInfoCallback=_updateRemoteCodecInfoCallback;
@property(readonly, nonatomic) _Bool isRunning; // @synthesize isRunning=_isRunning;
@property(readonly) struct PacketThread_s *packetThread; // @synthesize packetThread=_packetThread;
@property _Bool usePacketThread; // @synthesize usePacketThread=_usePacketThread;
@property(copy) CDUnknownBlockType startCompletionHandler; // @synthesize startCompletionHandler=_startCompletionHandler;
@property float speakerPowerRMS; // @synthesize speakerPowerRMS=_speakerPowerRMS;
@property unsigned int speakerTimestamp; // @synthesize speakerTimestamp=_speakerTimestamp;
@property(readonly, nonatomic) struct opaqueVCAudioBufferList *speakerBuffer; // @synthesize speakerBuffer=_speakerBuffer;
@property float micPowerRMS; // @synthesize micPowerRMS=_micPowerRMS;
@property unsigned int micTimestamp; // @synthesize micTimestamp=_micTimestamp;
@property(readonly, nonatomic) struct opaqueVCAudioBufferList *micBuffer; // @synthesize micBuffer=_micBuffer;
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo *)arg1;
- (void)closeRecordings;
- (void)createRecordingsWithName:(id)arg1;
- (void)destroyPacketThread;
- (_Bool)createPacketThreadWithIOBufferDuration:(double)arg1 name:(id)arg2 error:(id *)arg3;
- (void)pullAudioSamples:(struct opaqueVCAudioBufferList *)arg1;
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList *)arg1;
- (void)internalPushAudioSamples:(struct opaqueVCAudioBufferList *)arg1;
@property(readonly) double preferredIODuration;
@property void *speakerCallbackContext;
@property CDUnknownFunctionPointerType speakerCallback;
@property void *micCallbackContext;
@property CDUnknownFunctionPointerType micCallback;
@property(readonly) const struct tagVCAudioFrameFormat *relayFormat;
@property(nonatomic) const struct tagVCAudioFrameFormat *clientFormat;
@property(readonly) const struct tagVCAudioRelayIOContext *speakerContext;
@property(readonly) const struct tagVCAudioRelayIOContext *micContext;
- (void)printStreamFormats;
- (void)createAudioBuffers;
- (void)createBuffersForIOContext:(struct tagVCAudioRelayIOContext *)arg1;
@property id <VCBasebandCodecNotifications> relay;
@property(nonatomic) const struct _VCRemoteCodecInfo *remoteCodecInfo;
- (_Bool)isEqualToRelayIO:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isInitialized;
- (void)initializeFormatContextPointers;
- (void)dealloc;
- (id)initWithMicContext:(const struct tagVCAudioRelayIOContext *)arg1 speakerContext:(const struct tagVCAudioRelayIOContext *)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

