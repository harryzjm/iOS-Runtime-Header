//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVCBasebandCongestionDetector, AVCStatisticsCollector, NSArray, NSData, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject, NSString, VCAudioIO, VCAudioRuleCollection, VCCallInfoBlob, VCNetworkFeedbackController, VCRedundancyControllerVideo, VCSecurityKeyManager, VCSessionMediaNegotiator, VCSessionParticipantOneToOneConfig;
@protocol OS_dispatch_queue, VCSessionParticipantDelegate, VCSessionParticipantStreamDelegate;

__attribute__((visibility("hidden")))
@interface VCSessionParticipant
{
    unsigned int _state;
    union tagNTP _creationTime;
    NSObject<OS_dispatch_queue> *_participantQueue;
    int _processId;
    id _delegate;
    id _streamDelegate;
    NSMutableDictionary *_participantStreamTokens;
    NSString *_uuid;
    NSString *_sessionUUID;
    NSString *_idsDestination;
    unsigned long long _idsParticipantID;
    NSData *_opaqueData;
    VCCallInfoBlob *_callInfoBlob;
    NSData *_mediaBlobCompressed;
    NSDictionary *_participantInfo;
    unsigned int _transportSessionID;
    VCAudioRuleCollection *_supportedAudioRules;
    int _deviceRole;
    long long _direction;
    NSMutableArray *_audioStreams;
    NSMutableArray *_videoStreams;
    AVCStatisticsCollector *_statisticsCollector;
    AVCBasebandCongestionDetector *_basebandCongestionDetector;
    unsigned int _cellularUniqueTag;
    double _lastParticipantMKMRecoveryTime;
    double _participantMKMRecoveryTimeout;
    float _volume;
    float _audioPosition;
    _Bool _isMuted;
    _Bool _audioEnabled;
    _Bool _videoEnabled;
    _Bool _screenEnabled;
    _Bool _audioPaused;
    _Bool _videoPaused;
    _Bool _audioPausedToStart;
    _Bool _videoPausedToStart;
    NSMutableDictionary *_mediaTypeSettingsDict;
    VCAudioIO *_audioIO;
    unsigned int _preferredIOSampleRate;
    unsigned int _preferredIOSamplesPerFrame;
    _Bool _oneToOneModeEnabled;
    _Bool _sharingEnabled;
    unsigned char _presentationState;
    VCSessionMediaNegotiator *_mediaNegotiator;
    struct tagVCMediaQueue *_mediaQueue;
    _Bool _localOnWiFi;
    VCRedundancyControllerVideo *_videoRedundancyController;
    id _reportingAgentWeak;
    VCSessionParticipantOneToOneConfig *_oneToOneConfig;
    _Bool _isGKVoiceChat;
    _Bool _isLowLatencyAudio;
    NSMutableDictionary *_streamGroups;
    NSMutableArray *_micStreamGroups;
    NSMutableArray *_videoStreamGroups;
    VCSecurityKeyManager *_securityKeyManager;
    VCNetworkFeedbackController *_networkFeedbackController;
    _Bool _hasScreenStreams;
}

+ (id)mediaTypesFromStreamGroupID:(unsigned int)arg1;
+ (unsigned int)mediaStreamGroupStateToVCStreamGroupState:(unsigned int)arg1;
+ (void)applyVideoNegotiatedSettings:(id)arg1 toStreamConfiguration:(id)arg2 withFeatureStringDictionary:(id)arg3;
+ (void)addCodecModesForPayload:(int)arg1 toCodecConfig:(id)arg2;
+ (id)streamGroupIDsFromParticipantData:(id)arg1;
+ (id)participantDataWithParticipantData:(id)arg1 isReinit:(_Bool)arg2;
+ (id)participantDataWithMediaNegotiatorVersion:(int)arg1 participantData:(id)arg2;
+ (id)participantDataWithParticipantInfo:(id)arg1;
+ (id)participantInfoWithParticipantData:(id)arg1;
@property(nonatomic, getter=isOneToOneModeEnabled) _Bool oneToOneModeEnabled; // @synthesize oneToOneModeEnabled=_oneToOneModeEnabled;
@property(readonly, nonatomic) _Bool hasScreenStreams; // @synthesize hasScreenStreams=_hasScreenStreams;
@property(retain, nonatomic) VCSessionParticipantOneToOneConfig *oneToOneConfig; // @synthesize oneToOneConfig=_oneToOneConfig;
@property(nonatomic, getter=isScreenEnabled) _Bool screenEnabled; // @synthesize screenEnabled=_screenEnabled;
@property(nonatomic) unsigned char presentationState; // @synthesize presentationState=_presentationState;
@property(nonatomic) _Bool sharingEnabled; // @synthesize sharingEnabled=_sharingEnabled;
@property(readonly) VCCallInfoBlob *callInfoBlob; // @synthesize callInfoBlob=_callInfoBlob;
@property(nonatomic) struct tagVCMediaQueue *mediaQueue; // @synthesize mediaQueue=_mediaQueue;
@property(nonatomic, getter=isLocalOnWiFi) _Bool localOnWiFi; // @synthesize localOnWiFi=_localOnWiFi;
@property(readonly, nonatomic) VCSessionMediaNegotiator *mediaNegotiator; // @synthesize mediaNegotiator=_mediaNegotiator;
@property(readonly, nonatomic) unsigned long long idsParticipantID; // @synthesize idsParticipantID=_idsParticipantID;
@property(readonly, nonatomic) VCAudioRuleCollection *supportedAudioRules; // @synthesize supportedAudioRules=_supportedAudioRules;
@property(nonatomic) unsigned int cellularUniqueTag; // @synthesize cellularUniqueTag=_cellularUniqueTag;
@property(retain, nonatomic) AVCBasebandCongestionDetector *basebandCongestionDetector; // @synthesize basebandCongestionDetector=_basebandCongestionDetector;
@property(retain, nonatomic) AVCStatisticsCollector *statisticsCollector; // @synthesize statisticsCollector=_statisticsCollector;
@property(readonly, nonatomic) float audioPosition; // @synthesize audioPosition=_audioPosition;
@property(readonly, nonatomic) float volume; // @synthesize volume=_volume;
@property(nonatomic, getter=isVideoPaused) _Bool videoPaused; // @synthesize videoPaused=_videoPaused;
@property(nonatomic, getter=isAudioPaused) _Bool audioPaused; // @synthesize audioPaused=_audioPaused;
@property(nonatomic, getter=isVideoEnabled) _Bool videoEnabled; // @synthesize videoEnabled=_videoEnabled;
@property(nonatomic, getter=isAudioEnabled) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(readonly, nonatomic) union tagNTP creationTime; // @synthesize creationTime=_creationTime;
@property(readonly, nonatomic) NSData *opaqueData; // @synthesize opaqueData=_opaqueData;
@property(readonly, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
- (void)stopVideoCaptureClient;
- (void)streamGroup:(id)arg1 remoteMediaStalled:(_Bool)arg2 duration:(double)arg3;
- (void)streamGroup:(id)arg1 didSuspendStreams:(_Bool)arg2;
- (void)didDecryptionTimeOutForMKMRecoveryForStreamGroup:(id)arg1;
- (void)streamGroup:(id)arg1 requestKeyFrameGenerationWithStreamID:(unsigned short)arg2 firType:(int)arg3;
- (void)streamGroup:(id)arg1 didRequestRedundancy:(_Bool)arg2;
- (void)didChangeActualNetworkBitrateForStreamGroup:(id)arg1;
- (void)didChangeReceivingStreamsForStreamGroup:(id)arg1;
- (void)streamGroup:(id)arg1 didSwitchFromStreamID:(unsigned short)arg2 toStreamID:(unsigned short)arg3;
- (void)streamGroup:(id)arg1 didRemotePauseChange:(_Bool)arg2;
- (void)streamGroup:(id)arg1 didRemoteEnableChange:(_Bool)arg2;
- (void)didMediaDecryptionTimeOutForStreamGroup:(id)arg1;
- (void)didChangeSendingStreamsForStreamGroup:(id)arg1;
- (void)streamGroup:(id)arg1 didChangePlayoutRTPTime:(CDStruct_1b6d18a9)arg2;
- (void)streamGroup:(id)arg1 didChangeMediaPriority:(unsigned char)arg2;
- (void)handleSymptomReportForDecryptionError;
- (void)handleRemoteOneToOneSwitchWithStreamGroup:(id)arg1 fromStreamID:(unsigned short)arg2 toStreamID:(unsigned short)arg3;
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo *)arg1;
- (void)sendAudioPowerSpectrumSourceRegistration:(_Bool)arg1;
- (void)audioPowerSpectrumSinkDidUnregister;
- (void)audioPowerSpectrumSinkDidRegister;
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;
- (void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2;
- (void)handleActiveConnectionChange:(id)arg1;
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList *)arg1;
- (void)pullAudioSamples:(struct opaqueVCAudioBufferList *)arg1;
- (void)didServerDie;
- (void)didResumeAudioIO:(id)arg1;
- (void)didSuspendAudioIO:(id)arg1;
- (void)didEncryptionKeyRollTimeout;
- (void)resetDecryptionTimeout;
- (_Bool)handleEncryptionInfoChange:(id)arg1;
- (void)vcMediaStreamServerDidDie:(id)arg1;
- (void)vcMediaStream:(id)arg1 requestKeyFrameGenerationWithStreamID:(unsigned short)arg2 firType:(int)arg3;
- (void)swapScreenStreamGroupSyncSourceWithState:(unsigned int)arg1;
- (_Bool)setupStreamGroupMediaSync;
- (_Bool)setupMediaSyncForStreamGroup:(id)arg1;
- (void)handleStreamGroupsActiveConnectionChange:(id)arg1;
- (void)collectAudioChannelMetrics:(CDStruct_b671a7c4 *)arg1;
- (void)collectVideoChannelMetrics:(CDStruct_b671a7c4 *)arg1;
- (void)createRedundancyControllers;
- (unsigned int)streamGroupStateFromStreamGroupID:(unsigned int)arg1;
- (void)setMediaState:(unsigned int)arg1 forMediaType:(unsigned int)arg2;
- (_Bool)setAudioPosition:(float)arg1;
- (_Bool)setVolume:(float)arg1;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_isMuted;
@property(readonly, nonatomic) NSArray *allParticipantStreamInfo;
@property(readonly, nonatomic) NSArray *allParticipantManagedStreamInfos;
@property(readonly, nonatomic) _Bool hasVideoStreams;
@property(readonly, nonatomic) NSArray *audioStreams;
- (void)updateAudioSpectrumState;
- (void)updateVideoPaused:(_Bool)arg1;
- (id)updateMediaState:(unsigned int)arg1 forStreamGroups:(id)arg2;
- (id)applyMediaState:(unsigned int)arg1 forMediaType:(unsigned int)arg2;
- (id)streamGroupsForIDs:(id)arg1;
- (id)streamGroupsForMediaType:(unsigned int)arg1;
- (void)applyScreenEnabledSetting:(_Bool)arg1;
- (id)applyVideoEnabledSetting:(_Bool)arg1;
- (void)stop;
- (void)start;
@property(nonatomic) id <VCSessionParticipantStreamDelegate> streamDelegate;
@property(readonly, nonatomic) id <VCSessionParticipantDelegate> delegate;
- (char *)participantStateToString:(unsigned int)arg1;
- (_Bool)setState:(unsigned int)arg1;
- (unsigned int)preferredIOSamplesPerFrameForGroupID:(unsigned int)arg1;
- (unsigned int)preferredIOSampleRateForGroupID:(unsigned int)arg1;
- (unsigned int)preferredRTPTimestampRateForGroupID:(unsigned int)arg1;
- (void)setupPreferredIOSettings;
- (void)setupMediaTypeSettingsWithConfig:(id)arg1;
- (_Bool)updateMediaStatesWithConfig:(id)arg1;
- (void)dealloc;
- (id)initWithConfig:(id)arg1 delegate:(id)arg2;
- (_Bool)dispatchedConfigureWithDeviceRole:(int)arg1 negotiatedVideoEnabled:(_Bool)arg2 negotiatedScreenEnabled:(_Bool)arg3 operatingMode:(int)arg4;
- (_Bool)configureWithDeviceRole:(int)arg1 negotiatedVideoEnabled:(_Bool)arg2 negotiatedScreenEnabled:(_Bool)arg3 operatingMode:(int)arg4;
- (_Bool)configureOneToOneWithConfig:(id)arg1;
- (_Bool)configureVideoWithDeviceRole:(int)arg1 streamInfoArray:(id)arg2;
- (id)newAudioRateControlConfigWithMediaControlInfoVersion:(unsigned char)arg1 isOneToOne:(_Bool)arg2;
- (id)newVideoRateControlConfigWithMediaControlInfoVersion:(unsigned char)arg1 enableMediaControlInfoGenerator:(_Bool)arg2 isOneToOne:(_Bool)arg3;
- (_Bool)configureAudioWithDeviceRole:(int)arg1;
- (_Bool)updateConfigurationWithDeviceRole:(int)arg1;
- (_Bool)configureAudioIOWithDeviceRole:(int)arg1 operatingMode:(int)arg2;
- (_Bool)completeStreamSetup:(id)arg1;
- (void)setupNetworkAddressesForMediaConfig:(id)arg1;
- (void)stopAudioDump;
- (void)startAudioDump;
- (id)getAudioDumpName;
- (_Bool)setupSecurityKeyHolderForStreamConfig:(id)arg1;
- (int)securityKeyHolderUsageForStreamConfigDirection:(long long)arg1;
@property(readonly, nonatomic) NSDictionary *participantStreamTokens; // @synthesize participantStreamTokens=_participantStreamTokens;
- (id)streamGroupWithID:(unsigned int)arg1;
- (id)captionsGroup;
- (id)microphoneGroup;
- (id)systemAudioGroup;
- (id)screenGroup;
- (long long)participantScreenToken;
- (id)cameraGroups;
- (long long)participantVideoToken;
- (long long)participantMicrophoneToken;
- (id)newOneToOneScreenStreamConfigWithStreamDirection:(long long)arg1 streamSsrc:(unsigned int)arg2 encodingType:(unsigned char)arg3;
- (id)newOneToOneVideoStreamConfigWithStreamDirection:(long long)arg1 streamSsrc:(unsigned int)arg2 encodingType:(unsigned char)arg3;
- (id)newOneToOneAudioStreamConfigWithAudioSettings:(id)arg1 streamDirection:(long long)arg2 streamSsrc:(unsigned int)arg3;
- (id)newOneToOneVideoStreamMultiwayConfiguration:(unsigned char)arg1;
- (id)newOneToOneScreenStreamMultiwayConfiguration:(unsigned char)arg1;
- (_Bool)setupAudioStreamConfiguration:(id)arg1 audioRules:(id)arg2;
- (void)onDidResumeAudio;
- (id)pauseVideo:(_Bool)arg1;
- (id)pauseAudioStreams:(_Bool)arg1;
- (_Bool)shouldSetPause:(_Bool)arg1 onStream:(id)arg2;
- (void)onPauseAudioStreams;
- (id)setPaused:(_Bool)arg1 onStreamGroups:(id)arg2;
- (id)setCameraStreamGroupsPaused:(_Bool)arg1;
- (id)setAudioStreamGroupsPaused:(_Bool)arg1;
- (id)stopVideoStreams;
- (id)stopAudioStreams;
- (id)stopMediaStreams:(id)arg1;
- (void)stopAudioIOCompletion;
- (void)stopSystemAudioCapture;
- (void)startSystemAudioCapture;
- (id)stopScreenGroup;
- (id)startScreenGroup;
- (id)startVideo;
- (id)startVideoStreams;
- (void)stopStreamGroups;
- (id)startStreamGroups;
- (id)updateActiveStateForStreamGroup:(id)arg1;
- (_Bool)isStreamGroupActive:(id)arg1;
- (_Bool)isActiveMediaType:(unsigned int)arg1;
- (id)updateStreamGroups:(id)arg1;
- (id)startStreamGroups:(id)arg1;
- (id)stopStreamGroups:(id)arg1;
- (id)startMicStreamGroups;
- (id)stopMicStreamGroups;
- (id)startAudioStreams;
- (id)startMediaStreams:(id)arg1;
- (id)stopAudioIO;
- (id)startAudioIO;
- (void)onStartAudioIO;
- (_Bool)isVideoStream:(id)arg1;
- (_Bool)isAudioStream:(id)arg1;
- (void)stopInternal;
- (void)stopOneToOneStreams;
- (id)oneToOneVideoStream;
- (id)generateEncryptionKey;
- (id)streamsToString;
@property(readonly, copy) NSString *description;
- (void)dispatchedSetMediaState:(unsigned int)arg1 forMediaType:(unsigned int)arg2;
- (void)dispatchedSetVideoPaused:(_Bool)arg1;
- (void)dispatchedSetAudioPaused:(_Bool)arg1;
- (void)dispatchedSetScreenEnabled:(_Bool)arg1;
- (void)dispatchedSetVideoEnabled:(_Bool)arg1;
- (void)dispatchedSetAudioEnabled:(_Bool)arg1;
- (void)dispatchedStop;
- (void)dispatchedStart;
- (id)stopMultiwayStreams;
- (void)startMultiwayStreams;
- (void)dispatchedStartOneToOneStreams;
- (void)startOneToOneStreams;
- (void)logAllStreamTokens;
- (void)callStreamDelegateWithBlock:(CDUnknownBlockType)arg1;
- (void)callDelegateWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) int operatingMode;
@property(nonatomic) struct opaqueRTCReporting *reportingAgent;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

