//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSString, TimingCollection, VCConnectionManager;
@protocol OS_dispatch_queue, VCConnectionProtocol;

__attribute__((visibility("hidden")))
@interface VCTransportSession : NSObject
{
    _Bool _isCallActive;
    _Bool _requiresWiFi;
    _Bool _useCompressedConnectionData;
    unsigned int _basebandNotificationRegistrationToken;
    NSObject<OS_dispatch_queue> *_stateQueue;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    NSObject *_connectionSetupPiggybackBlob;
    NSString *_localFrameworkVersion;
    NSString *_remoteFrameworkVersion;
    struct opaqueRTCReporting *_reportingAgent;
    TimingCollection *_perfTimings;
    VCConnectionManager *_connectionManager;
    CDUnknownBlockType _eventHandler;
    NSMutableArray *_streams;
    struct _opaque_pthread_mutex_t _stateLock;
    id <VCConnectionProtocol> _registeredConnection;
}

+ (int)vtpPacketTypeForStreamType:(unsigned int)arg1;
+ (unsigned int)trafficClassForStreamType:(unsigned int)arg1;
@property(retain, nonatomic) id <VCConnectionProtocol> registeredConnection; // @synthesize registeredConnection=_registeredConnection;
@property(retain, nonatomic) NSObject *connectionSetupPiggybackBlob; // @synthesize connectionSetupPiggybackBlob=_connectionSetupPiggybackBlob;
@property(readonly, nonatomic) unsigned int basebandNotificationRegistrationToken; // @synthesize basebandNotificationRegistrationToken=_basebandNotificationRegistrationToken;
@property(retain, nonatomic) TimingCollection *perfTimings; // @synthesize perfTimings=_perfTimings;
@property(nonatomic) _Bool requiresWiFi; // @synthesize requiresWiFi=_requiresWiFi;
@property(nonatomic) _Bool useCompressedConnectionData; // @synthesize useCompressedConnectionData=_useCompressedConnectionData;
@property(readonly, nonatomic) VCConnectionManager *connectionManager; // @synthesize connectionManager=_connectionManager;
@property(copy, nonatomic) CDUnknownBlockType eventHandler; // @synthesize eventHandler=_eventHandler;
@property(readonly) _Bool isIPv6;
@property(readonly) unsigned int networkMTU;
@property(readonly) int networkInterfaceType;
- (void)resetActiveConnection;
- (void)setOneToOneModeEnabled:(_Bool)arg1 isInitiator:(_Bool)arg2;
- (void)reportNetworkConditionsDegraded;
- (void)handleMediaReceivedOverPeerToPeerLinkWithConnectionId:(int)arg1;
- (void)handleMediaReceivedOverRelayLinkWithConnectionId:(int)arg1;
- (_Bool)getConnectionSetupData:(id *)arg1 withOptions:(id)arg2 error:(id *)arg3;
@property(readonly, nonatomic) unsigned int connectionSetupRTTEstimate;
@property(readonly, nonatomic) _Bool isRemoteOSPreLion;
@property(readonly, nonatomic) _Bool isHandoverSupported;
@property(readonly, nonatomic) int detailedErrorCode;
- (void)setConnectionSelectionVersionWithLocalFrameworkVersion:(id)arg1 remoteFrameworkVersion:(id)arg2;
@property(nonatomic, setter=setCallActive:) _Bool isCallActive;
- (int)deregisterNotificationForTransportStream:(struct OpaqueVCTransportStream *)arg1;
- (int)createVFD:(int *)arg1 forStreamType:(unsigned int)arg2;
- (int)createTransportStream:(struct OpaqueVCTransportStream **)arg1 withType:(unsigned int)arg2 options:(id)arg3;
- (void)handleTransportStreamDeactivated:(struct OpaqueVCTransportStream *)arg1;
- (void)callEventHandlerWithEvent:(unsigned int)arg1 info:(id)arg2;
- (void)stop;
- (void)start;
- (void)dealloc;
- (id)initWithNotificationQueue:(id)arg1 reportingAgent:(struct opaqueRTCReporting *)arg2;

@end

