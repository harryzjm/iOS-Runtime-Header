//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSObject.h>

#import <AVConference/RTCPReportProvider-Protocol.h>
#import <AVConference/VCMediaStreamProtocol-Protocol.h>
#import <AVConference/VCSecurityEventHandler-Protocol.h>

@class NSString, VCDatagramChannelIDS, VCMediaStreamConfig, VCWeakObjectHolder;
@protocol OS_dispatch_queue, RTCPReportProvider, VCMediaStreamDelegate, VCMediaStreamNotification, VCMomentsCollectorDelegate;

__attribute__((visibility("hidden")))
@interface VCMediaStream : NSObject <VCMediaStreamProtocol, RTCPReportProvider, VCSecurityEventHandler>
{
    NSObject<OS_dispatch_queue> *_delegateNotificationQueue;
    struct _opaque_pthread_mutex_t _streamLock;
    int _state;
    VCMediaStreamConfig *_streamConfig;
    VCDatagramChannelIDS *_datagramChannel;
    NSString *_idsDestination;
    id <VCMediaStreamDelegate> _delegate;
    id <VCMomentsCollectorDelegate> _momentsCollectorDelegate;
    NSString *_callID;
    struct tagHANDLE *_rtpHandle;
    _Bool _isSRTPInitialized;
    double _rtpTimeoutEnabledTime;
    double _rtcpTimeoutEnabledTime;
    double _lastRTPTimeoutReportTime;
    double _lastRTCPTimeoutReportTime;
    unsigned int _localSSRC;
    VCWeakObjectHolder *_notificationDelegate;
    VCWeakObjectHolder *_rtcpReportProvider;
}

+ (_Bool)isSameSRTPKey:(id)arg1 newKey:(id)arg2;
@property(readonly, nonatomic) unsigned int localSSRC; // @synthesize localSSRC=_localSSRC;
@property(retain, nonatomic) VCMediaStreamConfig *streamConfig; // @synthesize streamConfig=_streamConfig;
@property(nonatomic) int state; // @synthesize state=_state;
- (void)onRtcpEnabledChanged;
- (void)onRtcpSendIntervalChanged;
- (void)onResume;
- (void)onPause;
- (void)onStop;
- (void)onStart;
- (_Bool)onConfigureStreamWithConfiguration:(id)arg1 error:(id *)arg2;
- (id)supportedPayloads;
- (void)onCallIDChanged;
@property(nonatomic) id <VCMediaStreamNotification> notificationDelegate;
- (unsigned int)getExtendedSequenceNumberForSequenceNumber:(unsigned short)arg1;
- (unsigned int)getRTCPReportNTPTimeMiddle32ForReportId:(unsigned char)arg1;
- (_Bool)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT *)arg1 reportCount:(char *)arg2;
@property(nonatomic) id <RTCPReportProvider> rtcpReportProvider;
- (void)setRtcpSendInterval:(double)arg1;
- (void)setRtcpTimeOutInterval:(double)arg1;
- (void)setRtpTimeOutInterval:(double)arg1;
- (void)setRtcpTimeOutEnabled:(_Bool)arg1;
- (void)setRtpTimeOutEnabled:(_Bool)arg1;
- (void)setRtcpEnabled:(_Bool)arg1;
- (long long)streamDirection;
- (void)setStreamDirection:(long long)arg1;
- (id)setLocalParticipantInfo:(id)arg1 networkSockets:(id)arg2 withError:(id *)arg3;
- (void)setPause:(_Bool)arg1;
- (void)stop;
- (void)start;
- (_Bool)setStreamConfig:(id)arg1 withError:(id *)arg2;
- (int)getKeyDerivationCryptoSet:(CDStruct_839290c6 *)arg1 withKeyMaterial:(id)arg2;
- (void)handleEncryptionInfoChange:(id)arg1;
- (void)sendControlPacket;
- (id)rxNetworkPayloads;
- (void)registerRTPPayloadMappings;
- (_Bool)configureMediaStreamWithConfiguration:(id)arg1 error:(id *)arg2 rtpHandle:(struct tagHANDLE *)arg3;
- (char *)streamStateToString:(int)arg1;
- (void)unlock;
- (void)lock;
- (void)dealloc;
- (id)init;
- (id)setupRTPWithIPInfo:(id)arg1 error:(id *)arg2;
- (id)setupRTPWithIDSDestination:(id)arg1 error:(id *)arg2;
- (id)setupRTPWithError:(id *)arg1;
- (id)setupRTPWithLocalParticipantInfo:(id)arg1 error:(id *)arg2;
- (id)setupRTPWithSockets:(id)arg1 error:(id *)arg2;
- (int)setupSRTP;
- (_Bool)isSameSRTPConfig:(id)arg1;
- (int)getCryptoSet:(struct tagSRTPExchangeInfo *)arg1 withMasterKey:(id)arg2;
- (int)getSRTPMasterKeyLength:(long long)arg1;
- (int)SRTPCipherSuiteForVCMediaStreamCipherSuite:(long long)arg1;
@property(nonatomic) id <VCMomentsCollectorDelegate> momentsCollectorDelegate; // @synthesize momentsCollectorDelegate=_momentsCollectorDelegate;
@property(nonatomic) id <VCMediaStreamDelegate> delegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

