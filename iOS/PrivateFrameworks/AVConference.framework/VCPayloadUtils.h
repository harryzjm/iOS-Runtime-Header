//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface VCPayloadUtils : NSObject
{
}

+ (int)audioCodecBandwidthForVCAudioCodecBandwidth:(int)arg1;
+ (int)vcAudioCodecBandwidthForAudioCodecBandwidth:(int)arg1;
+ (unsigned int)bitrateForEVSCodecMode:(int)arg1;
+ (unsigned int)bitrateForAMRWBCodecMode:(int)arg1;
+ (unsigned int)bitrateForAMRCodecMode:(int)arg1;
+ (_Bool)supportsCodecBandwidthUpdateForCodecType:(long long)arg1;
+ (_Bool)supportsCodecRateModesForCodecType:(long long)arg1;
+ (unsigned int)bitrateForCodecType:(long long)arg1 mode:(int)arg2;
+ (int)payloadForCodecType:(long long)arg1;
+ (long long)codecTypeForPayload:(int)arg1;
+ (float)qualityForPayload:(int)arg1 forBitrate:(unsigned int)arg2;
+ (_Bool)shouldEnablePacketSizeLimitForPayload:(int)arg1;
+ (unsigned int)internalBundleFactorForPayload:(int)arg1;
+ (_Bool)canBundleExternallyForPayload:(int)arg1 forBundlingScheme:(int)arg2 operatingMode:(int)arg3;
+ (_Bool)shouldUseCookieForPayload:(int)arg1;
+ (_Bool)isCodecModeSupported:(int)arg1 forBandwidth:(int)arg2 withPayload:(int)arg3;
+ (_Bool)isAMRCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;
+ (_Bool)isEVSCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;
+ (int)codecRateModeForDesiredANBR:(unsigned int)arg1 payload:(int)arg2 supportedBitrates:(id)arg3 supportedBandwidths:(id)arg4;
+ (id)allowedBitratesForPayload:(int)arg1 supportedBitrates:(id)arg2 supportedBandwidths:(id)arg3;
+ (id)supportedCodecModesForBandwidth:(int)arg1 payload:(int)arg2;
+ (id)codecModesForEVS32kHz;
+ (id)codecModesForEVS16kHz;
+ (id)codecModesForEVS8kHz;
+ (id)codecModesForAMR16kHz;
+ (id)codecModesForAMR8kHz;
+ (int)codecBandwidthForPayload:(int)arg1;
+ (_Bool)canSetBitrateForPayload:(int)arg1;
+ (unsigned int)codecSamplesPerFrameForPayload:(int)arg1 blockSize:(double)arg2;
+ (unsigned int)audioCodecTypeForPayload:(int)arg1;
+ (unsigned int)sampleRateForCodecBandwidth:(int)arg1;
+ (unsigned int)sampleRateForPayload:(int)arg1;
+ (_Bool)isPayloadSupportedInFaceTime:(int)arg1;
+ (_Bool)isUseCaseWatchContinuity:(int)arg1 primaryPayload:(int)arg2;

@end

