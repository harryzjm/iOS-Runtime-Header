//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVCStatisticsCollector, NSNumber, NSObject, NSString, VCRedundancyControllerVideo, VCVideoCaptureConverter, VCVideoReceiverBase, VCVideoRule, VCVideoTransmitterBase;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, VCVideoReceiverFeedbackDelegate;

__attribute__((visibility("hidden")))
@interface VCVideoStream
{
    long long _type;
    NSObject<OS_dispatch_queue> *_lastDecodedFrameQueue;
    unsigned int _uplinkOperatingBitrate;
    struct __CVBuffer *_cachedRemoteVideoFrame;
    VCVideoTransmitterBase *_videoTransmitter;
    VCVideoReceiverBase *_videoReceiver;
    VCVideoRule *_videoRule;
    int _reportingModuleID;
    unsigned int _reportingDefaultRealtimePeriod;
    NSObject<OS_dispatch_semaphore> *_bufferQueueSemaphore;
    struct opaqueCMBufferQueue *_bufferQueue;
    VCVideoCaptureConverter *_captureConverter;
    _Bool _isServerBasedBandwidthProbingEnabled;
    _Bool _isEndToEndBasedBandwidthProbingEnabled;
    unsigned char _lastMediaPriority;
    NSNumber *_targetStreamID;
    unsigned short _currentStreamID;
    NSNumber *_sendingStreamID;
    _Bool _isCompoundStreamIDsIncreased;
    _Bool _shouldEnableFaceZoom;
    _Bool _didReceiveFirstFrame;
    _Atomic _Bool _isVideoCaptureRegistered;
    double _fecRatio;
    int _captureSource;
    int _streamInputCaptureSource;
    long long _captureSourceID;
    unsigned int _mediaQueueSizeInMillisecond;
    unsigned int _screenDisplayID;
    unsigned int _customWidth;
    unsigned int _customHeight;
    unsigned int _tilesPerFrame;
    unsigned int _initialTargetBitrate;
    struct OpaqueFigCFWeakReference *_weakStream;
    AVCStatisticsCollector *_statisticsCollector;
    VCRedundancyControllerVideo *_redundancyController;
    int _lastDisplayedFromImageQueueCount;
    int _lastDroppedFromImageQueueCount;
    double _lastDecodedVideoFrameTime;
    double _lastStatisticsCollectorVideoStallTotalUpdateTime;
    _Bool _isRemoteMediaStalled;
    double _lastMediaStallReportTime;
    unsigned int _rtpTimestampRate;
    unsigned short _temporalScalingBaseLayerStreamID;
    _Bool _isTemporalScalingEnabled;
    CDStruct_1b6d18a9 _lastSentFrameHostTimeBeforeStop;
    unsigned int _lastSentFrameRTPTimestampBeforeStop;
    id _videoStreamDelegate;
    struct tagVCVideoStreamDelegateRealtimeInstanceVTable _videoStreamDelegateFunctions;
    struct __CFDictionary *_hdrColorInfo;
    unsigned int _baseQualityIndex;
}

+ (_Bool)shouldRegisterReportingForStreamType:(long long)arg1;
+ (_Bool)shouldEnableRateControlForStreamType:(long long)arg1;
+ (_Bool)isFeatureListStringExpectedForStreamType:(long long)arg1;
+ (_Bool)isLowLatencyStreamType:(long long)arg1;
+ (id)capabilities;
+ (id)supportedVideoPayloads;
+ (void)terminateProcess:(id)arg1 terminateSource:(id)arg2 agent:(struct opaqueRTCReporting *)arg3;
+ (_Bool)shouldUseRandomRTPTimestampWithType:(long long)arg1;
+ (id)newFeatureListStringsWithConfiguration:(id)arg1;
@property(readonly, nonatomic) _Bool isTemporalScalingEnabled; // @synthesize isTemporalScalingEnabled=_isTemporalScalingEnabled;
@property(readonly) VCVideoTransmitterBase *videoTransmitter; // @synthesize videoTransmitter=_videoTransmitter;
@property(readonly) VCVideoReceiverBase *videoReceiver; // @synthesize videoReceiver=_videoReceiver;
@property(nonatomic) unsigned int customHeight; // @synthesize customHeight=_customHeight;
@property(nonatomic) unsigned int customWidth; // @synthesize customWidth=_customWidth;
@property(nonatomic) unsigned int screenDisplayID; // @synthesize screenDisplayID=_screenDisplayID;
@property(nonatomic) _Bool didReceiveFirstFrame; // @synthesize didReceiveFirstFrame=_didReceiveFirstFrame;
@property(nonatomic) _Bool shouldEnableFaceZoom; // @synthesize shouldEnableFaceZoom=_shouldEnableFaceZoom;
@property(readonly, nonatomic) _Bool isCompoundStreamIDsIncreased; // @synthesize isCompoundStreamIDsIncreased=_isCompoundStreamIDsIncreased;
@property(readonly, nonatomic) NSNumber *sendingStreamID; // @synthesize sendingStreamID=_sendingStreamID;
@property(nonatomic) _Bool isEndToEndBasedBandwidthProbingEnabled; // @synthesize isEndToEndBasedBandwidthProbingEnabled=_isEndToEndBasedBandwidthProbingEnabled;
@property(nonatomic) _Bool isServerBasedBandwidthProbingEnabled; // @synthesize isServerBasedBandwidthProbingEnabled=_isServerBasedBandwidthProbingEnabled;
@property(retain, nonatomic) NSNumber *targetStreamID; // @synthesize targetStreamID=_targetStreamID;
- (void)updateWindowState:(int)arg1 isLocal:(_Bool)arg2 windowRect:(struct CGRect)arg3;
- (void)redundancyController:(id)arg1 redundancyVectorDidChange:(CDStruct_d7e2e0ee)arg2;
- (void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2;
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;
- (void)rateAdaptation:(id)arg1 targetBitrateDidChange:(unsigned int)arg2 rateChangeCounter:(unsigned int)arg3;
- (void)handleActiveConnectionChange:(id)arg1;
- (void)collectTxChannelMetrics:(CDStruct_b671a7c4 *)arg1;
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1;
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1 interval:(float)arg2;
- (void)reactionDidStart:(id)arg1;
- (void)cameraAvailabilityDidChange:(_Bool)arg1;
- (void)thermalLevelDidChange:(int)arg1;
- (id)clientCaptureRule;
- (void)avConferenceScreenCaptureError:(id)arg1;
- (void)avConferencePreviewError:(id)arg1;
- (CDUnknownBlockType)copyOnVideoFrameBlock;
- (void)sourceFrameRateDidChange:(unsigned int)arg1;
- (_Bool)onVideoFrame:(struct opaqueCMSampleBuffer *)arg1 frameTime:(CDStruct_1b6d18a9)arg2 attribute:(CDStruct_51555cf6)arg3;
- (void)vcVideoReceiver:(id)arg1 didSwitchFromStreamID:(unsigned short)arg2 toStreamID:(unsigned short)arg3;
- (unsigned int)vcVideoReceiver:(id)arg1 receivedTMMBR:(unsigned int)arg2;
- (void)vcVideoReceiver:(id)arg1 downlinkQualityDidChange:(id)arg2;
- (void)vcVideoReceiverRequestKeyFrame:(id)arg1 rtcpPSFBType:(unsigned int)arg2;
- (void)vcVideoReceiver:(id)arg1 requestKeyFrameGenerationWithStreamID:(unsigned short)arg2 firType:(int)arg3;
@property(nonatomic, getter=getVideoReceiverFeedbackDelegate) id <VCVideoReceiverFeedbackDelegate> videoReceiverFeedbackDelegate;
- (void)stopSynchronization;
- (_Bool)startSynchronization:(id)arg1;
- (struct __CFDictionary *)getClientSpecificUserInfo;
- (_Bool)isClientSpecificUserInfoSupported:(int)arg1;
- (int)reportVideoStreamType;
- (struct __CFString *)getReportingClientName;
- (int)reportingClientTypeForClientName;
- (void)setVideoStreamDelegate:(id)arg1 delegateFunctions:(const struct tagVCVideoStreamDelegateRealtimeInstanceVTable *)arg2;
- (void)handleVTPSendFailedWithData:(void *)arg1;
@property(nonatomic) unsigned int targetBitrateChangeCounter;
@property(nonatomic) unsigned int targetMediaBitrate;
@property unsigned int lastSentAudioSampleTime;
@property double lastSentAudioHostTime;
- (void)setPeerSubscribedStreamIDs:(id)arg1;
- (void)setStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;
- (void)setTransmitterStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;
- (unsigned int)getMaxTemporalBitrateForStreamIDs:(id)arg1;
- (double)rtcpHeartbeatLeeway;
- (void)onSendRTCPPacket;
- (void)onRTCPTimeout;
- (void)onRTPTimeout;
- (void)onResumeWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)onPauseWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)onStopWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)onStartWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)deregisterAggregationHandlers;
- (void)registerAggregationHandlers;
- (void)setupInternalRedundancyControllerWithStreamConfig:(id)arg1;
- (_Bool)shouldReportNetworkInterfaceType;
- (_Bool)isTransportIPv6;
@property(readonly) unsigned int networkMTU;
- (void)gatherRealtimeStats:(struct __CFDictionary *)arg1;
- (void)setupReportingAgent;
- (void)collectImageQueuePerformanceMetrics:(struct __CFDictionary *)arg1;
- (_Bool)registerForVideoCapture;
- (_Bool)registerForCameraCaptureWithConfig:(id)arg1;
- (void)reportFailedToRegisterVideoFramesFromSource:(int)arg1 width:(int)arg2 height:(int)arg3 frameRate:(int)arg4;
- (void)deregisterForVideoCapture;
- (int)operatingModeForVideoStreamType:(long long)arg1;
- (_Bool)onConfigureStreamWithConfiguration:(id)arg1 error:(id *)arg2;
- (void)configureNetworkSampleRateScaleForStream:(id)arg1 transport:(id)arg2;
- (unsigned int)maxFramerateFromStreamConfigs:(id)arg1;
- (_Bool)configureStreamInputCaptureSourceWithStreamInputID:(long long)arg1 frameRate:(unsigned int)arg2;
- (void)deregisterCurrentStreamInputCaptureSource;
- (id)getReceiveStatsCollectorWithStreamConfig:(id)arg1;
- (id)getTransmitStatsCollectorWithStreamConfig:(id)arg1;
- (id)getTransmitMediaControllerWithStreamConfig:(id)arg1;
- (void)onCallIDChanged;
- (id)supportedPayloads;
- (void)setUplinkRetransmissionEnabled:(_Bool)arg1;
- (void)setJitterBufferMode:(int)arg1;
- (_Bool)enableRateControlFeebackInConfig:(id)arg1;
- (_Bool)setEncodingMode:(int)arg1;
- (_Bool)validateStreamConfiguration:(id)arg1 error:(id *)arg2;
- (_Bool)isLowLatencyStreamType;
@property(readonly, nonatomic) unsigned int lastDisplayedFrameRTPTimestamp;
- (void)setShouldEnableMLEnhance:(_Bool)arg1 streamID:(unsigned short)arg2;
- (void)cleanupBeforeReconfigure:(id)arg1;
- (_Bool)validateVideoStreamConfigurations:(id)arg1;
- (void)sendLastRemoteVideoFrame:(struct __CVBuffer *)arg1;
- (void)setFECRedundancyVector:(const CDStruct_d7e2e0ee *)arg1;
@property(nonatomic) double fecRatio;
- (void)generateKeyFrameWithFIRType:(int)arg1;
- (void)updateSourcePlayoutTimestamp:(CDStruct_1b6d18a9 *)arg1;
- (void)resetRemoteMediaStalled;
- (void)requestLastDecodedFrame;
- (void)updateVideoConfig:(id)arg1;
- (void)dealloc;
- (void)setupVideoStream;
- (id)initWithTransportSessionID:(unsigned int)arg1 idsParticipantID:(unsigned long long)arg2 ssrc:(unsigned int)arg3 streamToken:(long long)arg4;
- (id)init;
- (double)lastReceivedRTCPPacketTime;
- (double)lastReceivedRTPPacketTime;
- (_Bool)setRTPPayloads:(int *)arg1 numPayloads:(int)arg2 withError:(id *)arg3;
- (void)setVideoTransmitterConfigColorInfo:(id)arg1;
- (void)setupColorInfo:(id)arg1;
- (void)setMediaSuggestion:(struct VCRateControlMediaSuggestion *)arg1;
- (void)handleNWConnectionPacketEvent:(struct packet_id *)arg1 eventType:(int)arg2;
- (void)handleNWConnectionNotification:(struct ifnet_interface_advisory *)arg1;
- (struct tagVCVideoReceiverDelegateRealtimeInstanceVTable)videoReceiverDelegateFunctions;
- (void)stopRateAdaptation;
- (void)startRateAdaptationWithStreamConfig:(id)arg1;
- (void)enableRedundancyController:(id)arg1;
- (unsigned int)dumpIDFromCallID;
- (void)setupCompoundStreamIDsWithStreamIDs:(id)arg1;
- (void)destroyVideoModules;
- (void)destroyVideoReceiver;
- (void)updateVideoReceiver:(id)arg1;
- (_Bool)useUEPForVideoConfig:(int)arg1;
- (void)setupVideoReceiver:(id)arg1 withTransmitterHandle:(struct tagHANDLE *)arg2;
- (struct tagVCNACKGeneratorStoreBagsConfig)readServerPacketRetransmissionsForVideoStoreBagConfig:(id)arg1;
- (struct tagVCVideoReceiverConfig)videoReceiverConfigWithVideoStreamConfig:(id)arg1;
- (struct tagVCVideoStreamReceiverConfig)videoStreamReceiverConfigWithDumpID:(unsigned int)arg1 reportingAgent:(struct opaqueRTCReporting *)arg2;
- (void)cleaunpReceiverConfig:(struct tagVCVideoReceiverConfig *)arg1;
- (void)addReceiverStreamConfigsToReceiverConfig:(struct tagVCVideoReceiverConfig *)arg1 streamConfig:(id)arg2;
- (void)setupMultiwayVideoReceiverConfig:(struct tagVCVideoReceiverConfig *)arg1 forTransportStream:(id)arg2;
- (void)setupMultiwayVideoReceiverStreamSwitchInfo:(struct tagVCVideoReceiverStreamConfig *)arg1 forTransportStream:(id)arg2;
- (void)setupMultiwayVideoReceiverTemporalScalingConfig:(struct tagVCVideoReceiverStreamConfig *)arg1 forTransportStream:(id)arg2;
- (_Bool)isScreenConfig:(id)arg1;
- (id)newScreenCaptureConfigForVideoConfig:(id)arg1;
- (void)destroyVideoTransmitter;
- (void)initVideoTransmitter;
- (_Bool)isFECGeneratorEnabled;
- (id)newVideoTransmitterConfigWithVideoStreamConfig:(id)arg1;
- (void)overrideConfigWithDefaults;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

