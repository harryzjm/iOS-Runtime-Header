//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <StatusKitAgentCore/SKStatusPublishingDaemonProtocol-Protocol.h>

@class NSString, SKAInvitationManager, SKAStatusPublishingServiceClientConnection;
@protocol OS_dispatch_queue, SKAChannelManaging, SKADatabaseManaging, SKADatabaseProviding, SKAMessagingProviding, SKAStatusPublishingManaging;

@interface SKAStatusPublishingServiceClient : NSObject <SKStatusPublishingDaemonProtocol>
{
    _Bool _accountIsStatusKitCapable;
    _Bool _accountCheckCompleted;
    NSString *_statusTypeIdenfifier;
    SKAStatusPublishingServiceClientConnection *_clientConnection;
    id <SKADatabaseManaging> _databaseManager;
    id <SKADatabaseProviding> _databaseProvider;
    id <SKAMessagingProviding> _messagingProvider;
    SKAInvitationManager *_invitationManager;
    id <SKAChannelManaging> _channelManager;
    id <SKAStatusPublishingManaging> _publishingManager;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)logger;
+ (id)_dateCreatedDriftError;
+ (id)_unableToResolveSenderHandleError;
+ (id)_accountNotCapableError;
+ (id)_noUsersToShareWithError;
+ (id)_noPersonalChannelErrorForStatusTypeIdentifier:(id)arg1;
+ (id)_missingEntitlmentErrorForStatusTypeIdentifier:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool accountCheckCompleted; // @synthesize accountCheckCompleted=_accountCheckCompleted;
@property(nonatomic) _Bool accountIsStatusKitCapable; // @synthesize accountIsStatusKitCapable=_accountIsStatusKitCapable;
@property(retain, nonatomic) id <SKAStatusPublishingManaging> publishingManager; // @synthesize publishingManager=_publishingManager;
@property(retain, nonatomic) id <SKAChannelManaging> channelManager; // @synthesize channelManager=_channelManager;
@property(retain, nonatomic) SKAInvitationManager *invitationManager; // @synthesize invitationManager=_invitationManager;
@property(retain, nonatomic) id <SKAMessagingProviding> messagingProvider; // @synthesize messagingProvider=_messagingProvider;
@property(retain, nonatomic) id <SKADatabaseProviding> databaseProvider; // @synthesize databaseProvider=_databaseProvider;
@property(retain, nonatomic) id <SKADatabaseManaging> databaseManager; // @synthesize databaseManager=_databaseManager;
@property(retain, nonatomic) SKAStatusPublishingServiceClientConnection *clientConnection; // @synthesize clientConnection=_clientConnection;
@property(readonly, copy, nonatomic) NSString *statusTypeIdenfifier; // @synthesize statusTypeIdenfifier=_statusTypeIdenfifier;
- (double)_delayForStatusPublishRequest:(id)arg1;
- (double)_randomSecondaryDeviceRepublishDelay;
- (double)_secondaryDeviceRepublishMinDelayTime;
- (double)_secondaryDeviceRepublishMaxDelayTime;
- (double)_randomUnscheduledPublishDelay;
- (double)_randomScheduledPublishDelay;
- (double)_unscheduledPublishMaxDelayTime;
- (double)_scheduledPublishMaxDelayTime;
- (double)_serverBagTimeIntervalForKey:(id)arg1 withDefaultValue:(double)arg2;
- (id)_serverBagNumberForKey:(id)arg1;
- (void)accountIsStatusKitCapableWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSString *description;
- (void)registerForDelegateCallbacksWithStatusTypeIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeAllInvitedHandlesFromPersonalChannelWithStatusTypeIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeInvitedHandles:(id)arg1 statusTypeIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)inviteHandles:(id)arg1 fromSenderHandle:(id)arg2 withInvitationPayload:(id)arg3 statusTypeIdentifier:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)fetchHandleInvitability:(id)arg1 fromHandle:(id)arg2 forStatusTypeIdentifier:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)isHandleInviteable:(id)arg1 fromHandle:(id)arg2 forStatusTypeIdentifier:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)isHandleInvited:(id)arg1 fromSenderHandle:(id)arg2 forStatusTypeIdentifier:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)invitedHandlesForStatusTypeIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)publishStatusRequest:(id)arg1 statusTypeIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)initWithXPCConnection:(id)arg1 queue:(id)arg2 databaseManager:(id)arg3 invitationManager:(id)arg4 publishingManager:(id)arg5 channelManager:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

