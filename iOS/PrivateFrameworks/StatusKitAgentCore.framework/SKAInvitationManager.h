//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <StatusKitAgentCore/SKAInvitationManaging-Protocol.h>

@class NSString;
@protocol OS_dispatch_queue, SKAAccountProviding, SKAChannelManaging, SKADatabaseManaging, SKAInvitationManagingDelegate, SKAMessagingProviding;

@interface SKAInvitationManager : NSObject <SKAInvitationManaging>
{
    id <SKAInvitationManagingDelegate> _delegate;
    id <SKADatabaseManaging> _databaseManager;
    id <SKAMessagingProviding> _messagingProvider;
    id <SKAChannelManaging> _channelManager;
    id <SKAAccountProviding> _accountProvider;
    NSObject<OS_dispatch_queue> *_backgroundCleanupQueue;
}

+ (id)logger;
+ (id)_unableToFindAnyExistingInvitationToDeleteError;
+ (id)_unableToFindExistingInvitationForHandlesError:(id)arg1;
+ (id)_keyRollFailedErrorWithUnderlyingError:(id)arg1;
+ (id)_noPersonalChannelErrorForStatusTypeIdentifier:(id)arg1;
+ (id)_invalidInvitedHandlesError;
+ (id)_invalidSenderHandleError;
- (void).cxx_destruct;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *backgroundCleanupQueue; // @synthesize backgroundCleanupQueue=_backgroundCleanupQueue;
@property(retain, nonatomic) id <SKAAccountProviding> accountProvider; // @synthesize accountProvider=_accountProvider;
@property(retain, nonatomic) id <SKAChannelManaging> channelManager; // @synthesize channelManager=_channelManager;
@property(retain, nonatomic) id <SKAMessagingProviding> messagingProvider; // @synthesize messagingProvider=_messagingProvider;
@property(retain, nonatomic) id <SKADatabaseManaging> databaseManager; // @synthesize databaseManager=_databaseManager;
@property(nonatomic) __weak id <SKAInvitationManagingDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)_shouldReauthForError:(id)arg1;
- (void)_createPersonalChannelForStatusTypeIdentifier:(id)arg1 databaseContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_findOrCreatePersonalChannelForStatusTypeIdentifier:(id)arg1 databaseContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)_updateOrCreateInvitedUserWithHandle:(id)arg1 senderHandle:(id)arg2 onChannel:(id)arg3 withInvitationPayload:(id)arg4 databaseContext:(id)arg5;
- (id)_addInvitedHandles:(id)arg1 senderHandle:(id)arg2 toDatabaseForPersonalChannel:(id)arg3 withInvitationPayload:(id)arg4 databaseContext:(id)arg5;
- (id)_ratchetEncryptionKeyForwardOrKeyRollForPersonalChannel:(id)arg1 databaseContext:(id)arg2 invitationWasSentViaKeyRoll:(_Bool *)arg3 error:(id *)arg4;
- (void)fetchHandleInvitability:(id)arg1 fromHandle:(id)arg2 forStatusTypeIdentifier:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_isHandleInviteable:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)isHandleInviteable:(id)arg1 fromHandle:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)handleIncomingInvitationMessage:(id)arg1 fromHandle:(id)arg2 toHandle:(id)arg3 messageGuid:(id)arg4;
- (_Bool)_validateInvitedHandle:(id)arg1;
- (id)_validateInvitedHandles:(id)arg1;
- (_Bool)_sendInvitationMessageForChannel:(id)arg1 toInvitedUsers:(id)arg2 subscriptionKeys:(id)arg3 error:(id *)arg4;
- (_Bool)_rollEncryptionKeyForChannel:(id)arg1 databaseContext:(id)arg2 error:(id *)arg3;
- (void)rollPersonalChannelWithStatusTypeIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)rollEncryptionKeyForPersonalChannelWithStatusTypeIdentifier:(id)arg1 error:(id *)arg2;
- (id)resolveSenderHandleWithPreferredSenderHandle:(id)arg1;
- (void)revokeInvitationFromPersonalChannelWithStatusTypeIdentifier:(id)arg1 forHandles:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)revokeAllInvitationsFromPersonalChannelWithStatusTypeIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendInvitationForPersonalChannelWithStatusTypeIdentifier:(id)arg1 toHandles:(id)arg2 fromSenderHandle:(id)arg3 withInvitationPayload:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (id)initWithMessagingProvider:(id)arg1 databaseManager:(id)arg2 accountProvider:(id)arg3 channelManager:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

