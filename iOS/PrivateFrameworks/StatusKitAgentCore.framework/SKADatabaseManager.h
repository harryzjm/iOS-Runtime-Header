//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <StatusKitAgentCore/SKADatabaseManaging-Protocol.h>

@class NSString;
@protocol SKADatabaseManagingDelegate, SKADatabaseProviding;

@interface SKADatabaseManager : NSObject <SKADatabaseManaging>
{
    id <SKADatabaseProviding> _databaseProvider;
    id <SKADatabaseManagingDelegate> _delegate;
}

+ (id)logger;
- (void).cxx_destruct;
@property(readonly, nonatomic) __weak id <SKADatabaseManagingDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) id <SKADatabaseProviding> databaseProvider; // @synthesize databaseProvider=_databaseProvider;
- (void)deviceToDeviceEncryptedDatabaseCapableWithCompletion:(CDUnknownBlockType)arg1;
- (void)cleanupOldChannelsForHandle:(id)arg1 statusTypeIdentifier:(id)arg2 databaseContext:(id)arg3;
- (void)cleanupDecommisionedChannelsWithDatabaseContext:(id)arg1;
- (void)cleanupOldReceivedInvitationsForChannelIdentifier:(id)arg1 excludingInvitation:(id)arg2 databaseContext:(id)arg3;
- (id)receivedInvitationsForChannel:(id)arg1 databaseContext:(id)arg2;
- (id)_existingReceivedInvitationsForChannelIdentifier:(id)arg1 sortedByDateReceived:(_Bool)arg2 databaseContect:(id)arg3;
- (id)createReceivedInvitationForChannel:(id)arg1 senderHandle:(id)arg2 invitedHandle:(id)arg3 invitationIdentifier:(id)arg4 dateInvitationCreated:(id)arg5 incomingRatchetState:(id)arg6 invitationPayload:(id)arg7 databaseContext:(id)arg8;
- (id)_existingReceivedInvitationsForHandle:(id)arg1 statusTypeIdentifier:(id)arg2 databaseContext:(id)arg3;
- (id)_existingRemovedUsersForHandle:(id)arg1 statusTypeIdentifier:(id)arg2 databaseContext:(id)arg3;
- (_Bool)deleteRemovedUserWithHandle:(id)arg1 statusTypeIdentifier:(id)arg2 databaseContext:(id)arg3;
- (id)existingRemovedUserWithHandle:(id)arg1 statusTypeIdentifier:(id)arg2 withDatabaseContext:(id)arg3;
- (id)createRemovedUserWithHandle:(id)arg1 dateRemoved:(id)arg2 statusTypeIdentifier:(id)arg3 databaseContext:(id)arg4;
- (_Bool)incrementPendingPublishRequestRetryCountWithUniqueIdentifier:(id)arg1 databaseContext:(id)arg2;
- (_Bool)deletePendingPublishRequestWithWithUniqueIdentifier:(id)arg1 databaseContext:(id)arg2;
- (id)existingPendingPublishRequestsWithDatabaseContext:(id)arg1;
- (id)existingPendingPublishRequestsForStatusTypeIdentifier:(id)arg1 withDatabaseContext:(id)arg2;
- (id)existingPendingPublishRequestForUniqueIdentifier:(id)arg1 withDatabaseContext:(id)arg2;
- (id)createPendingPublishRequestWithUniqueIdentifier:(id)arg1 dateCreated:(id)arg2 payloadData:(id)arg3 statusTypeIdentifier:(id)arg4 databaseContext:(id)arg5;
- (id)_existingPendingPublishRequestsWithDatabaseContext:(id)arg1;
- (id)_existingPendingPublishRequestsForStatusTypeIdentifier:(id)arg1 databaseContext:(id)arg2;
- (id)_existingPendingPublishRequestForUniqueIdentifier:(id)arg1 databaseContext:(id)arg2;
- (void)cleanupOldStatusUpdatesForChannelIdentifier:(id)arg1 excludingStatusUniqueIdentifier:(id)arg2 databaseContext:(id)arg3;
- (id)existingStatusForUniqueIdentifier:(id)arg1 databaseContext:(id)arg2;
- (id)existingStatusForChannel:(id)arg1 databaseContext:(id)arg2;
- (id)createStatusWithUniqueIdentifier:(id)arg1 dateCreated:(id)arg2 datePublished:(id)arg3 dateReceived:(id)arg4 dateExpired:(id)arg5 rawData:(id)arg6 channelIdentifier:(id)arg7 databaseContext:(id)arg8;
- (_Bool)deleteAllInvitedUsersForPersonalChannel:(id)arg1 databaseContext:(id)arg2;
- (_Bool)deleteInvitedUserForHandle:(id)arg1 personalChannel:(id)arg2 databaseContext:(id)arg3;
- (id)_existingInvitedUsersForInvitedHandle:(id)arg1 channel:(id)arg2 databaseContext:(id)arg3;
- (id)_existingInvitedUsersForDatabaseInvitedUser:(id)arg1 databaseChannel:(id)arg2 databaseContext:(id)arg3;
- (id)existingInvitedUsersForPersonalChannel:(id)arg1 databaseContext:(id)arg2;
- (id)existingInvitedUsersForInvitedHandle:(id)arg1 onChannel:(id)arg2 databaseContext:(id)arg3;
- (id)updateInvitationPayload:(id)arg1 onExistingInvitedUser:(id)arg2 channel:(id)arg3 databaseContext:(id)arg4;
- (_Bool)copyInvitedUsersFromChannel:(id)arg1 toChannel:(id)arg2 databaseContext:(id)arg3;
- (id)createInvitedUserWithHandle:(id)arg1 senderHandle:(id)arg2 invitationPayload:(id)arg3 channel:(id)arg4 databaseContext:(id)arg5;
- (id)existingRecentTransientSubscriptionHistoriesWithLimit:(long long)arg1 databaseContext:(id)arg2;
- (id)createOrUpdateTransientSubscriptionHistoryForChannelIdentifier:(id)arg1 lastSubscriptionDate:(id)arg2 databaseContext:(id)arg3;
- (id)_existingTransientSubscriptionHistoryWithLimit:(long long)arg1 orderedByLastSubscriptionDateAscending:(_Bool)arg2 databaseContext:(id)arg3;
- (id)_existingTransientSubscriptionHistoryForChannelIdentifier:(id)arg1 databaseContext:(id)arg2;
- (_Bool)deleteSubscriptionAssertionWithSubscriptionIdentifier:(id)arg1 applicationIdentifier:(id)arg2 databaseContext:(id)arg3;
- (id)createSubscriptionAssertionForSubscriptionIdentifier:(id)arg1 applicationIdentifier:(id)arg2 statusTypeIdentifier:(id)arg3 databaseContext:(id)arg4;
- (id)_existingSubscriptionAssertionsForStatusTypeIdentifier:(id)arg1 applicationIdentifier:(id)arg2 databaseContext:(id)arg3;
- (id)existingSubscriptionAssertionsForStatusTypeIdentifier:(id)arg1 applicationIdentifier:(id)arg2 databaseContext:(id)arg3;
- (id)existingSubscriptionAssertionForSubscriptionIdentifier:(id)arg1 applicationIdentifier:(id)arg2 databaseContext:(id)arg3;
- (id)_existingSubscriptionAssertionForSubscriptionIdentifier:(id)arg1 applicationIdentifier:(id)arg2 databaseContext:(id)arg3;
- (id)allPersistentSubscriptionAssertionChannelIdentifiersWithDatabaseContext:(id)arg1;
- (id)generatedEncryptionKeysForPersonalChannel:(id)arg1 databaseContext:(id)arg2;
- (id)createGeneratedEncryptionKeyWithOriginalOutgoingRatchetState:(id)arg1 personalChannel:(id)arg2 databaseContext:(id)arg3;
- (_Bool)decomissionAllPersonalChannelsWithStatusTypeIdentifier:(id)arg1 databaseContext:(id)arg2;
- (id)updatePersonalChannel:(id)arg1 withCurrentOutgoingRatchetState:(id)arg2 databaseContext:(id)arg3;
- (id)createChannelForStatusTypeIdentifier:(id)arg1 channelIdentifier:(id)arg2 databaseContext:(id)arg3;
- (id)createPersonalChannelForStatusTypeIdentifier:(id)arg1 channelIdentifier:(id)arg2 channelToken:(id)arg3 databaseContext:(id)arg4;
- (id)allExistingChannelsForStatusTypeIdentifier:(id)arg1 includingPersonalChannel:(_Bool)arg2 databaseContext:(id)arg3;
- (id)allExistingChannelsForHandle:(id)arg1 statusTypeIdentifier:(id)arg2 databaseContext:(id)arg3;
- (id)existingChannelForHandle:(id)arg1 statusTypeIdentifier:(id)arg2 databaseContext:(id)arg3;
- (id)_existingChannelsForChannelIdentifier:(id)arg1 databaseContext:(id)arg2;
- (id)_existingPersonalChannelForDatabaseChannel:(id)arg1 databaseContext:(id)arg2;
- (id)_existingChannelsForDatabaseChannel:(id)arg1 databaseContext:(id)arg2;
- (id)existingChannelForSubscriptionIdentifier:(id)arg1 databaseContext:(id)arg2;
- (_Bool)deletePersonalChannelForStatusTypeIdentifier:(id)arg1 databaseContext:(id)arg2;
- (id)_existingPersonalChannelsForStatusTypeIdentifier:(id)arg1 databaseContext:(id)arg2;
- (id)_existingDecomissionedPersonalChannelsWithDatabaseContext:(id)arg1;
- (id)_existingPersonalChannelForStatusTypeIdentifier:(id)arg1 databaseContext:(id)arg2;
- (id)existingPersonalChannelForStatusTypeIdentifier:(id)arg1 databaseContext:(id)arg2;
- (id)newBackgroundContext;
- (id)initWithDatabaseProvider:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

