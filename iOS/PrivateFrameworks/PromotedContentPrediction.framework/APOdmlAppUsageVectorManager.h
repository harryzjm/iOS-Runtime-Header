//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class APOdmlUnfairLock, APOdmlVector, APOdmlXpcLifecycleHandler, NSArray, NSMutableDictionary, NSString;

@interface APOdmlAppUsageVectorManager : NSObject
{
    _Bool _weightByDuration;
    NSString *_version;
    APOdmlVector *_appUsageVector;
    double _vectorWeightTotal;
    APOdmlUnfairLock *_setVectorAndWeightLock;
    NSMutableDictionary *_adamIDtoBundleID;
    APOdmlXpcLifecycleHandler *_task;
    double _lookbackPeriod;
    long long _maxQueryElements;
    double _exponentialDecayConstant;
    NSArray *_appUsageEvents;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSArray *appUsageEvents; // @synthesize appUsageEvents=_appUsageEvents;
@property(nonatomic) _Bool weightByDuration; // @synthesize weightByDuration=_weightByDuration;
@property(nonatomic) double exponentialDecayConstant; // @synthesize exponentialDecayConstant=_exponentialDecayConstant;
@property(nonatomic) long long maxQueryElements; // @synthesize maxQueryElements=_maxQueryElements;
@property(nonatomic) double lookbackPeriod; // @synthesize lookbackPeriod=_lookbackPeriod;
@property(retain, nonatomic) APOdmlXpcLifecycleHandler *task; // @synthesize task=_task;
@property(retain, nonatomic) NSMutableDictionary *adamIDtoBundleID; // @synthesize adamIDtoBundleID=_adamIDtoBundleID;
@property(retain, nonatomic) APOdmlUnfairLock *setVectorAndWeightLock; // @synthesize setVectorAndWeightLock=_setVectorAndWeightLock;
@property(nonatomic) double vectorWeightTotal; // @synthesize vectorWeightTotal=_vectorWeightTotal;
@property(retain, nonatomic) APOdmlVector *appUsageVector; // @synthesize appUsageVector=_appUsageVector;
@property(retain, nonatomic) NSString *version; // @synthesize version=_version;
- (id)adamIDForBundleID:(id)arg1;
- (id)bundleIdForAdamId:(id)arg1;
- (void)buildBundleIDtoAdamIDCache:(id)arg1;
- (id)appUsageEventsBetween:(id)arg1 and:(id)arg2 withLimit:(unsigned long long)arg3;
- (id)appUsageEventsForLookbackPeriod:(double)arg1;
- (id)updateVector:(id)arg1 withVector:(id)arg2 usingWeight:(double)arg3;
- (double)weightForEvents:(id)arg1;
- (id)pullUsageEvents;
- (id)normalizedAppUsageVector:(id *)arg1;
- (void)updateUsageVectorsWithAppVector:(id)arg1;
- (id)initWithVersion:(id)arg1 lookbackPeriod:(id)arg2 maxQueryElements:(id)arg3 task:(id)arg4 exponentialDecayConstant:(id)arg5 weightByDuration:(id)arg6;

@end

