//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MAAutoAssetInfoDesire, MAAutoAssetInfoEnd, MAAutoAssetInfoFound, MAAutoAssetInfoInstance, MAAutoAssetInfoListen, MAAutoAssetPolicy, MAAutoAssetProgress, MAAutoAssetSelector, MAAutoAssetStatus, MAAutoAssetSummary, MADAutoAssetDescriptor, MAMsuDownloadOptions, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, SUCoreFSM, SUCoreLog, SUCorePersistedState;

__attribute__((visibility("hidden")))
@interface MADAutoAssetJob : NSObject
{
    _Bool _stagerJob;
    _Bool _stagerJobDownloadContent;
    _Bool _stagerJobResultsReported;
    _Bool _aggregatedClientAssetPolicySpecified;
    _Bool _clientRequestedOperation;
    _Bool _holdingLookupGrant;
    _Bool _rampingForeground;
    _Bool _rampingForegroundLatched;
    _Bool _schedulerTriggerReceived;
    _Bool _downloadingUserInitiated;
    _Bool _boostedToUserInitiated;
    _Bool _checkingAssetContent;
    _Bool _determiningAssetContent;
    _Bool _lockingAssetContent;
    _Bool _wasPatched;
    MAAutoAssetSelector *_autoAssetSelector;
    NSString *_autoAssetUUID;
    MAAutoAssetInfoInstance *_autoAssetInstance;
    NSString *_latestSafeSummary;
    MAAutoAssetSummary *_latestAutoAssetSummary;
    NSString *_stagerAssetTargetOSVersion;
    NSString *_stagerAssetTargetBuildVersion;
    MADAutoAssetJob *_bondedWithJob;
    SUCoreLog *_logger;
    NSMutableArray *_activeJobTasks;
    NSDictionary *_stateTable;
    SUCoreFSM *_autoJobFSM;
    SUCorePersistedState *_persistedState;
    MAAutoAssetInfoInstance *_activeInstance;
    MAAutoAssetInfoDesire *_activeDesire;
    MAAutoAssetInfoFound *_activeFound;
    MAAutoAssetInfoEnd *_activeEnd;
    MAAutoAssetInfoListen *_activeListen;
    MAAutoAssetPolicy *_aggregatedClientAssetPolicy;
    NSString *_jobCreationTriggeringLayer;
    NSMutableDictionary *_onFilesystemByVersion;
    NSString *_checkUUIDBasePortion;
    NSString *_checkUUID;
    MAMsuDownloadOptions *_catalogDownloadOptions;
    MAMsuDownloadOptions *_assetDownloadOptions;
    MADAutoAssetDescriptor *_baseForPatch;
    MADAutoAssetDescriptor *_foundNewerPatch;
    MADAutoAssetDescriptor *_foundNewerFull;
    MADAutoAssetDescriptor *_newerFoundAssetDescriptor;
    MADAutoAssetDescriptor *_downloadingAssetDescriptor;
    NSString *_latestInstalledAssetVersion;
    NSString *_latestInstalledAssetBuild;
    MAAutoAssetStatus *_currentStatus;
    long long _progressReportPhase;
    MAAutoAssetProgress *_lastReportedPatchProgress;
    MAAutoAssetSelector *_resultSelector;
    MAAutoAssetInfoInstance *_resultInstance;
    MAAutoAssetInfoFound *_resultFound;
    MAAutoAssetInfoEnd *_resultEnd;
    MAAutoAssetInfoListen *_resultListen;
    long long _simulateOperation;
    long long _simulateEnd;
    long long _simulateTriggered;
    MADAutoAssetDescriptor *_simulateDescriptor;
    MADAutoAssetDescriptor *_simulateBaseForPatch;
}

+ (id)_getAutoAssetJobStateTable;
- (void).cxx_destruct;
@property(retain, nonatomic) MADAutoAssetDescriptor *simulateBaseForPatch; // @synthesize simulateBaseForPatch=_simulateBaseForPatch;
@property(retain, nonatomic) MADAutoAssetDescriptor *simulateDescriptor; // @synthesize simulateDescriptor=_simulateDescriptor;
@property(nonatomic) long long simulateTriggered; // @synthesize simulateTriggered=_simulateTriggered;
@property(nonatomic) long long simulateEnd; // @synthesize simulateEnd=_simulateEnd;
@property(nonatomic) long long simulateOperation; // @synthesize simulateOperation=_simulateOperation;
@property(retain, nonatomic) MAAutoAssetInfoListen *resultListen; // @synthesize resultListen=_resultListen;
@property(retain, nonatomic) MAAutoAssetInfoEnd *resultEnd; // @synthesize resultEnd=_resultEnd;
@property(retain, nonatomic) MAAutoAssetInfoFound *resultFound; // @synthesize resultFound=_resultFound;
@property(retain, nonatomic) MAAutoAssetInfoInstance *resultInstance; // @synthesize resultInstance=_resultInstance;
@property(retain, nonatomic) MAAutoAssetSelector *resultSelector; // @synthesize resultSelector=_resultSelector;
@property(retain, nonatomic) MAAutoAssetProgress *lastReportedPatchProgress; // @synthesize lastReportedPatchProgress=_lastReportedPatchProgress;
@property(nonatomic) long long progressReportPhase; // @synthesize progressReportPhase=_progressReportPhase;
@property(retain, nonatomic) MAAutoAssetStatus *currentStatus; // @synthesize currentStatus=_currentStatus;
@property(retain, nonatomic) NSString *latestInstalledAssetBuild; // @synthesize latestInstalledAssetBuild=_latestInstalledAssetBuild;
@property(retain, nonatomic) NSString *latestInstalledAssetVersion; // @synthesize latestInstalledAssetVersion=_latestInstalledAssetVersion;
@property(nonatomic) _Bool wasPatched; // @synthesize wasPatched=_wasPatched;
@property(nonatomic) _Bool lockingAssetContent; // @synthesize lockingAssetContent=_lockingAssetContent;
@property(nonatomic) _Bool determiningAssetContent; // @synthesize determiningAssetContent=_determiningAssetContent;
@property(nonatomic) _Bool checkingAssetContent; // @synthesize checkingAssetContent=_checkingAssetContent;
@property(nonatomic) _Bool boostedToUserInitiated; // @synthesize boostedToUserInitiated=_boostedToUserInitiated;
@property(nonatomic) _Bool downloadingUserInitiated; // @synthesize downloadingUserInitiated=_downloadingUserInitiated;
@property(nonatomic) _Bool schedulerTriggerReceived; // @synthesize schedulerTriggerReceived=_schedulerTriggerReceived;
@property(retain, nonatomic) MADAutoAssetDescriptor *downloadingAssetDescriptor; // @synthesize downloadingAssetDescriptor=_downloadingAssetDescriptor;
@property(retain, nonatomic) MADAutoAssetDescriptor *newerFoundAssetDescriptor; // @synthesize newerFoundAssetDescriptor=_newerFoundAssetDescriptor;
@property(retain, nonatomic) MADAutoAssetDescriptor *foundNewerFull; // @synthesize foundNewerFull=_foundNewerFull;
@property(retain, nonatomic) MADAutoAssetDescriptor *foundNewerPatch; // @synthesize foundNewerPatch=_foundNewerPatch;
@property(retain, nonatomic) MADAutoAssetDescriptor *baseForPatch; // @synthesize baseForPatch=_baseForPatch;
@property(retain, nonatomic) MAMsuDownloadOptions *assetDownloadOptions; // @synthesize assetDownloadOptions=_assetDownloadOptions;
@property(retain, nonatomic) MAMsuDownloadOptions *catalogDownloadOptions; // @synthesize catalogDownloadOptions=_catalogDownloadOptions;
@property(nonatomic) _Bool rampingForegroundLatched; // @synthesize rampingForegroundLatched=_rampingForegroundLatched;
@property(nonatomic) _Bool rampingForeground; // @synthesize rampingForeground=_rampingForeground;
@property(nonatomic) _Bool holdingLookupGrant; // @synthesize holdingLookupGrant=_holdingLookupGrant;
@property(retain, nonatomic) NSString *checkUUID; // @synthesize checkUUID=_checkUUID;
@property(retain, nonatomic) NSString *checkUUIDBasePortion; // @synthesize checkUUIDBasePortion=_checkUUIDBasePortion;
@property(retain, nonatomic) NSMutableDictionary *onFilesystemByVersion; // @synthesize onFilesystemByVersion=_onFilesystemByVersion;
@property(retain, nonatomic) NSString *jobCreationTriggeringLayer; // @synthesize jobCreationTriggeringLayer=_jobCreationTriggeringLayer;
@property(nonatomic) _Bool clientRequestedOperation; // @synthesize clientRequestedOperation=_clientRequestedOperation;
@property(nonatomic) _Bool aggregatedClientAssetPolicySpecified; // @synthesize aggregatedClientAssetPolicySpecified=_aggregatedClientAssetPolicySpecified;
@property(retain, nonatomic) MAAutoAssetPolicy *aggregatedClientAssetPolicy; // @synthesize aggregatedClientAssetPolicy=_aggregatedClientAssetPolicy;
@property(retain, nonatomic) MAAutoAssetInfoListen *activeListen; // @synthesize activeListen=_activeListen;
@property(retain, nonatomic) MAAutoAssetInfoEnd *activeEnd; // @synthesize activeEnd=_activeEnd;
@property(retain, nonatomic) MAAutoAssetInfoFound *activeFound; // @synthesize activeFound=_activeFound;
@property(retain, nonatomic) MAAutoAssetInfoDesire *activeDesire; // @synthesize activeDesire=_activeDesire;
@property(retain, nonatomic) MAAutoAssetInfoInstance *activeInstance; // @synthesize activeInstance=_activeInstance;
@property(retain, nonatomic) SUCorePersistedState *persistedState; // @synthesize persistedState=_persistedState;
@property(retain, nonatomic) SUCoreFSM *autoJobFSM; // @synthesize autoJobFSM=_autoJobFSM;
@property(readonly, retain, nonatomic) NSDictionary *stateTable; // @synthesize stateTable=_stateTable;
@property(retain, nonatomic) NSMutableArray *activeJobTasks; // @synthesize activeJobTasks=_activeJobTasks;
@property(readonly, retain, nonatomic) SUCoreLog *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) MADAutoAssetJob *bondedWithJob; // @synthesize bondedWithJob=_bondedWithJob;
@property(retain, nonatomic) NSString *stagerAssetTargetBuildVersion; // @synthesize stagerAssetTargetBuildVersion=_stagerAssetTargetBuildVersion;
@property(retain, nonatomic) NSString *stagerAssetTargetOSVersion; // @synthesize stagerAssetTargetOSVersion=_stagerAssetTargetOSVersion;
@property(nonatomic) _Bool stagerJobResultsReported; // @synthesize stagerJobResultsReported=_stagerJobResultsReported;
@property(nonatomic) _Bool stagerJobDownloadContent; // @synthesize stagerJobDownloadContent=_stagerJobDownloadContent;
@property(nonatomic) _Bool stagerJob; // @synthesize stagerJob=_stagerJob;
@property(retain, nonatomic) MAAutoAssetSummary *latestAutoAssetSummary; // @synthesize latestAutoAssetSummary=_latestAutoAssetSummary;
@property(retain, nonatomic) NSString *latestSafeSummary; // @synthesize latestSafeSummary=_latestSafeSummary;
@property(retain, nonatomic) MAAutoAssetInfoInstance *autoAssetInstance; // @synthesize autoAssetInstance=_autoAssetInstance;
@property(readonly, retain, nonatomic) NSString *autoAssetUUID; // @synthesize autoAssetUUID=_autoAssetUUID;
@property(readonly, retain, nonatomic) MAAutoAssetSelector *autoAssetSelector; // @synthesize autoAssetSelector=_autoAssetSelector;
- (id)summaryOfJob;
- (id)currentJobInformation:(id *)arg1;
- (void)trackAnomaly:(long long)arg1 forReason:(id)arg2;
- (long long)errorCodeFromUnderling:(id)arg1;
- (void)simulateEnd:(long long)arg1;
- (void)simulateSet:(id)arg1;
- (id)progressReportPhaseName;
- (void)latchWhetherDownloadingUserInitiated;
- (void)statusChangeReportCurrent:(id)arg1;
- (void)statusChangeJobFinished:(id)arg1 withResponseError:(id)arg2;
- (void)statusChangeSuccessfullyDownloaded:(id)arg1;
- (void)statusChangeSuccesfullyPatched:(id)arg1;
- (void)statusChangeDownloadProgress:(id)arg1;
- (void)statusChangeStartingAssetDownload:(id)arg1 downloadingPatch:(_Bool)arg2;
- (void)statusChangeCatalogFoundSame:(id)arg1;
- (void)statusChangeCatalogFoundNewer:(id)arg1;
- (void)statusChange:(id)arg1 catalogFailure:(long long)arg2 forReason:(id)arg3;
- (void)statusChange:(id)arg1 catalogAnomaly:(long long)arg2 forReason:(id)arg3;
- (id)_baseAnalyticsData:(id)arg1;
- (void)_extendAssetDownloadOptionsWithAnalyticsData:(id)arg1 forDescriptor:(id)arg2 withBaseForPatch:(id)arg3;
- (void)_extendCatalogDownloadOptionsWithAnalyticsData:(id)arg1;
- (void)requestDownloadManagerCancelDownload:(id)arg1 forDescriptor:(id)arg2;
- (void)requestDownloadManagerConfigDownload:(id)arg1 forDescriptor:(id)arg2;
- (void)requestDownloadManagerAssetDownload:(id)arg1 forDescriptor:(id)arg2 withBaseForPatch:(id)arg3;
- (void)requestDownloadManagerCatalogLookup:(id)arg1;
- (void)releaseLookupGrant;
- (void)obtainLookupGrant;
- (_Bool)isMorePreferredFormat:(id)arg1 comparedTo:(id)arg2;
- (id)newSessionID;
- (id)newAssetDownloadOptions;
- (id)newCatalogDownloadOptions;
- (void)downloadCatalog:(id)arg1;
- (void)refreshDownloadedToManager;
- (void)refreshFoundToManager;
- (void)refreshOnFilesystemFromManager;
- (_Bool)isFoundAlreadyOnFilesystem;
- (id)latestInstalledOnFilesystem;
- (id)installedOnFilesystemWithVersion:(id)arg1;
- (void)updateResultPropertiesWithDescriptor:(id)arg1;
- (void)checkFilesystemAndDecidePurgeOrLookup;
- (id)decideFollowupBoost:(id)arg1 forJobEvent:(id)arg2 boostEvent:(id)arg3 noBoostEvent:(id)arg4;
- (void)stagerJobDownloadDone:(id)arg1 reportingError:(id)arg2;
- (void)stagerJobDetermineDone:(id)arg1 reportingError:(id)arg2;
- (void)stagerJobDone:(id)arg1 reportingError:(id)arg2;
- (void)stagerJobReportProgress:(id)arg1 reportingError:(id)arg2;
- (void)doneWithAllJobs:(id)arg1 withLookupError:(id)arg2;
- (void)doneWithAllJobs:(id)arg1;
- (void)replyToJobsWhenContentDownloaded:(id)arg1;
- (void)replyToJobsWhenLookupFailed:(id)arg1 withLookupError:(id)arg2;
- (void)replyToJobsWhenCatalogDownloaded:(id)arg1;
- (void)foundAndDownloaded:(id)arg1 forJobParam:(id)arg2 wasPatched:(_Bool)arg3;
- (_Bool)anyJobInterestedInContent;
- (void)addClientRequestAndMergeNeeds:(id)arg1 forJobEvent:(id)arg2;
- (id)mostSpecificSelectorToReport;
- (void)desireChangedToUserInitiated;
- (id)removeCurrentJobTask;
- (id)getCurrentJobTask;
- (void)setCurrentJobTask:(id)arg1;
- (void)addToActiveJobTasks:(id)arg1;
- (void)replyToClientForJobParam:(id)arg1 withResponseError:(id)arg2;
- (void)autoAssetJobFinished;
- (void)finishJobTaskForJobParam:(id)arg1 withResponseError:(id)arg2;
- (void)finishJobTaskForJobParam:(id)arg1 withUnderlyingError:(id)arg2 fromAction:(id)arg3;
- (long long)actionUnknownAction:(id)arg1 error:(id *)arg2;
- (long long)action_ReleaseGrantJobFailedCanceled:(id)arg1 error:(id *)arg2;
- (long long)action_JobFailedCanceled:(id)arg1 error:(id *)arg2;
- (long long)action_FailRequestCanceling:(id)arg1 error:(id *)arg2;
- (long long)action_ReleaseGrantCanceling:(id)arg1 error:(id *)arg2;
- (long long)action_CancelAssetDownload:(id)arg1 error:(id *)arg2;
- (long long)action_CheckSimulateEndStatusRequest:(id)arg1 error:(id *)arg2;
- (long long)action_RecordSimulateOperation:(id)arg1 error:(id *)arg2;
- (long long)action_JobEndedSchedule:(id)arg1 error:(id *)arg2;
- (long long)action_JobPostponedSchedule:(id)arg1 error:(id *)arg2;
- (long long)action_ReleaseGrantJobFailedSchedule:(id)arg1 error:(id *)arg2;
- (long long)action_JobFailedSchedule:(id)arg1 error:(id *)arg2;
- (long long)action_JobRevokedSchedule:(id)arg1 error:(id *)arg2;
- (long long)action_JobNoNewerSchedule:(id)arg1 error:(id *)arg2;
- (long long)action_JobSuccessAlreadyDownloaded:(id)arg1 error:(id *)arg2;
- (long long)action_JobSuccessDownloadedSchedule:(id)arg1 error:(id *)arg2;
- (long long)action_JobSuccessPatchedSchedule:(id)arg1 error:(id *)arg2;
- (long long)action_JobSuccessFoundSameSchedule:(id)arg1 error:(id *)arg2;
- (long long)action_JobFailedAwaiting:(id)arg1 error:(id *)arg2;
- (long long)action_JobSuccessDownloadedAwaiting:(id)arg1 error:(id *)arg2;
- (long long)action_JobSuccessPatchedAwaiting:(id)arg1 error:(id *)arg2;
- (long long)action_LookupFailedContinue:(id)arg1 error:(id *)arg2;
- (long long)action_LookupRevokedContinue:(id)arg1 error:(id *)arg2;
- (long long)action_LookupNoNewerContinue:(id)arg1 error:(id *)arg2;
- (long long)action_LookupSuccessContinue:(id)arg1 error:(id *)arg2;
- (long long)action_ReportFailureUserInitiated:(id)arg1 error:(id *)arg2;
- (long long)action_NowUserInitiated:(id)arg1 error:(id *)arg2;
- (long long)action_BoostAndRequestLookupGrant:(id)arg1 error:(id *)arg2;
- (long long)action_BoostToUserInitiated:(id)arg1 error:(id *)arg2;
- (long long)action_FailedPatchDecideTryFull:(id)arg1 error:(id *)arg2;
- (long long)action_ReportDownloadProgress:(id)arg1 error:(id *)arg2;
- (long long)action_UserInitiatedDownloadNewestFull:(id)arg1 error:(id *)arg2;
- (long long)action_DownloadNewestFull:(id)arg1 error:(id *)arg2;
- (long long)action_DownloadNewestPatch:(id)arg1 error:(id *)arg2;
- (long long)action_PersistedDecideDownload:(id)arg1 error:(id *)arg2;
- (long long)action_RequestSpecificPersisted:(id)arg1 error:(id *)arg2;
- (long long)action_DecideDownloadOrPostpone:(id)arg1 error:(id *)arg2;
- (long long)action_ReportCatalogDecideFound:(id)arg1 error:(id *)arg2;
- (long long)action_RemoveClientDecideInterest:(id)arg1 error:(id *)arg2;
- (long long)action_RemoveClient:(id)arg1 error:(id *)arg2;
- (long long)action_AdoptRegister:(id)arg1 error:(id *)arg2;
- (long long)action_MergeContinueLockDecideBoost:(id)arg1 error:(id *)arg2;
- (long long)action_MergeAddLockDecideBoost:(id)arg1 error:(id *)arg2;
- (long long)action_MergeRemoveLockDecideInterest:(id)arg1 error:(id *)arg2;
- (long long)action_MergeRemoveLock:(id)arg1 error:(id *)arg2;
- (long long)action_MergeContinueLock:(id)arg1 error:(id *)arg2;
- (long long)action_MergeAddLock:(id)arg1 error:(id *)arg2;
- (long long)action_MergeNeedsDecideLookupBoost:(id)arg1 error:(id *)arg2;
- (long long)action_MergeNeedsDecideBoost:(id)arg1 error:(id *)arg2;
- (long long)action_MergeNeedsDecideLookup:(id)arg1 error:(id *)arg2;
- (long long)action_MergeNeeds:(id)arg1 error:(id *)arg2;
- (long long)action_AddTask:(id)arg1 error:(id *)arg2;
- (long long)action_DecideDonePurging:(id)arg1 error:(id *)arg2;
- (long long)action_DecideStartupDownloading:(id)arg1 error:(id *)arg2;
- (long long)action_StagerDownloadDecideFilesystem:(id)arg1 error:(id *)arg2;
- (long long)action_StagerDetermineDecideFilesystem:(id)arg1 error:(id *)arg2;
- (long long)action_DownloadCatalog:(id)arg1 error:(id *)arg2;
- (long long)action_RequestLookupGrant:(id)arg1 error:(id *)arg2;
- (long long)action_AddTaskLockDecideFilesystem:(id)arg1 error:(id *)arg2;
- (long long)action_AddTaskInterestDecideFilesystem:(id)arg1 error:(id *)arg2;
- (long long)action_AddTaskDetermineDecideFilesystem:(id)arg1 error:(id *)arg2;
- (long long)action_AddTaskCheckDecideFilesystem:(id)arg1 error:(id *)arg2;
- (long long)action_AddTaskDecideFilesystem:(id)arg1 error:(id *)arg2;
- (id)clientName;
- (id)_updateLatestSummary;
- (id)_summary;
- (id)summary;
@property(readonly, copy) NSString *description;
- (void)cancelAutoAssetJob;
- (void)startStagerDownloadForStaging:(id)arg1 withAssetTargetBuildVersion:(id)arg2 withControlInformation:(id)arg3;
- (void)startStagerDetermineIfAvailable:(id)arg1 withAssetTargetBuildVersion:(id)arg2 withControlInformation:(id)arg3;
- (void)persistedStateForDownloadJob:(id)arg1;
- (void)exclusiveLookupForAssetTypeGranted:(id)arg1;
- (void)handleDownloadAssetJobFinished:(id)arg1 downloadError:(id)arg2;
- (void)handleDownloadAssetProgressForJob:(id)arg1 withProgress:(id)arg2;
- (void)handleDownloadConfigJobFinished:(id)arg1 configError:(id)arg2;
- (void)handleDownloadCatalogJobFinished:(id)arg1 withCatalog:(id)arg2 downloadError:(id)arg3;
- (void)handleSimulateOperation:(id)arg1;
- (void)clientRequestedStatus:(id)arg1;
- (void)handleClientRequest:(id)arg1 withControlInformation:(id)arg2;
- (void)startResumingInFlightDownload:(id)arg1 withControlInformation:(id)arg2;
- (void)startScheduleTriggeredSelector:(id)arg1 withControlInformation:(id)arg2;
- (void)startHandlingClientRequest:(id)arg1 withControlInformation:(id)arg2;
- (id)initForInstance:(id)arg1 orForSelector:(id)arg2 orForDescriptor:(id)arg3 withBaseForPatchDescriptor:(id)arg4 withAutoAssetUUID:(id)arg5 asStagerJob:(_Bool)arg6;
- (id)initForDescriptor:(id)arg1 baseForPatchDescriptor:(id)arg2 withAutoAssetUUID:(id)arg3;
- (id)initForSelector:(id)arg1 withAutoAssetUUID:(id)arg2 asStagerJob:(_Bool)arg3;
- (id)initForSelector:(id)arg1 withAutoAssetUUID:(id)arg2;
- (id)initForInstance:(id)arg1 withAutoAssetUUID:(id)arg2;
- (long long)performAction:(id)arg1 onEvent:(id)arg2 inState:(id)arg3 withInfo:(id)arg4 nextState:(id)arg5 error:(id *)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

