//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MADAutoAssetPersisted, NSMutableArray, NSMutableDictionary, NSTimer, SUCoreLog;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MADAutoAssetScheduler : NSObject
{
    _Bool _globalActivityInterval;
    _Bool _tickerIntervalReRegistering;
    _Bool _activityTickerFired;
    SUCoreLog *_logger;
    NSObject<OS_dispatch_queue> *_schedulerQueue;
    MADAutoAssetPersisted *_persistedState;
    NSMutableArray *_jobsAwaitingTrigger;
    long long _jobsAwaitingPushTrigger;
    NSMutableDictionary *_jobsBySelector;
    long long _activityIntervalSecs;
    long long _tickerIntervalSecs;
    long long _pushDelaySecs;
    long long _pushCounter;
    long long _scheduledJobsXPCActivity;
    NSTimer *_scheduledJobsBackupTriggerTimer;
    long long _pushJobsXPCActivity;
}

+ (void)forceGlobalForget:(id)arg1;
+ (id)jobsAwaitingTrigger;
+ (void)addScheduledJobs:(id)arg1 basedOnControl:(id)arg2;
+ (long long)tickerIntervalForActivityIntervalSecs:(long long)arg1;
+ (id)nameForXPCStatus:(long long)arg1;
+ (id)migrateMismatchedPersistedStateVersion:(id)arg1 forEntryID:(id)arg2 withMismatchedState:(id)arg3;
+ (void)controlEliminateSelector:(id)arg1;
+ (void)schedulePushNotifications:(id)arg1;
+ (void)scheduleSelector:(id)arg1 triggeringAtIntervalSecs:(long long)arg2;
+ (void)resumeFromPersisted;
+ (id)autoAssetScheduler;
- (void).cxx_destruct;
@property(nonatomic) long long pushJobsXPCActivity; // @synthesize pushJobsXPCActivity=_pushJobsXPCActivity;
@property(retain, nonatomic) NSTimer *scheduledJobsBackupTriggerTimer; // @synthesize scheduledJobsBackupTriggerTimer=_scheduledJobsBackupTriggerTimer;
@property(nonatomic) long long scheduledJobsXPCActivity; // @synthesize scheduledJobsXPCActivity=_scheduledJobsXPCActivity;
@property(nonatomic) long long pushCounter; // @synthesize pushCounter=_pushCounter;
@property(nonatomic) long long pushDelaySecs; // @synthesize pushDelaySecs=_pushDelaySecs;
@property(nonatomic) _Bool activityTickerFired; // @synthesize activityTickerFired=_activityTickerFired;
@property(nonatomic) _Bool tickerIntervalReRegistering; // @synthesize tickerIntervalReRegistering=_tickerIntervalReRegistering;
@property(nonatomic) long long tickerIntervalSecs; // @synthesize tickerIntervalSecs=_tickerIntervalSecs;
@property(nonatomic) long long activityIntervalSecs; // @synthesize activityIntervalSecs=_activityIntervalSecs;
@property(nonatomic) _Bool globalActivityInterval; // @synthesize globalActivityInterval=_globalActivityInterval;
@property(retain, nonatomic) NSMutableDictionary *jobsBySelector; // @synthesize jobsBySelector=_jobsBySelector;
@property(nonatomic) long long jobsAwaitingPushTrigger; // @synthesize jobsAwaitingPushTrigger=_jobsAwaitingPushTrigger;
@property(retain, nonatomic) NSMutableArray *jobsAwaitingTrigger; // @synthesize jobsAwaitingTrigger=_jobsAwaitingTrigger;
@property(readonly, retain, nonatomic) MADAutoAssetPersisted *persistedState; // @synthesize persistedState=_persistedState;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *schedulerQueue; // @synthesize schedulerQueue=_schedulerQueue;
@property(readonly, retain, nonatomic) SUCoreLog *logger; // @synthesize logger=_logger;
- (id)summary;
- (id)description;
- (void)_performPushNotificationOperations;
- (void)_performPushNotificationActivityOperations;
- (void)_performTickerOperations:(long long)arg1;
- (void)_performActivityOperations;
- (void)_setActivityCriteria:(id)arg1 pushNotificationInitiated:(_Bool)arg2 withActivityDelay:(long long)arg3;
- (void)_startPushBackupTrigger;
- (void)_registerForAndStartPushActivity:(long long)arg1;
- (void)_startActivityBackupTrigger;
- (void)_registerForAndStartActivity:(long long)arg1;
- (void)_eliminateSpecificSelector:(id)arg1;
- (void)_eliminateSelector:(id)arg1;
- (void)_schedulePushNotifications:(id)arg1;
- (void)_scheduleSelector:(id)arg1 triggeringAtIntervalSecs:(long long)arg2 withRemainingSecs:(long long)arg3 forPushedJob:(_Bool)arg4;
- (id)init;

@end

