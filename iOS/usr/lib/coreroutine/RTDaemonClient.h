//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <coreroutine/NSXPCConnectionDelegate-Protocol.h>
#import <coreroutine/RTDaemonClientRegistrarScenarioTriggerProtocol-Protocol.h>
#import <coreroutine/RTDaemonClientRegistrarVehicleEventProtocol-Protocol.h>
#import <coreroutine/RTDaemonProtocol-Protocol.h>

@class NSMutableDictionary, NSString, NSXPCConnection, RTAccountManager, RTAssetManager, RTAuthorizationManager, RTContactsManager, RTDaemonClientRegistrarScenarioTrigger, RTDaemonClientRegistrarVehicleEvent, RTDeviceLocationPredictor, RTDiagnostics, RTEntitlementProvider, RTEventAgentManager, RTEventModelProvider, RTFingerprintManager, RTHintManager, RTLearnedLocationManager, RTLocationManager, RTLocationStore, RTMapServiceManager, RTMetricManager, RTPlaceInferenceManager, RTPurgeManager, RTScenarioTriggerManager, RTVehicleLocationProvider, RTVisitManager, RTWiFiManager;
@protocol OS_dispatch_queue, RTClientListenerProtocol;

@interface RTDaemonClient : NSObject <RTDaemonClientRegistrarVehicleEventProtocol, RTDaemonClientRegistrarScenarioTriggerProtocol, RTDaemonProtocol, NSXPCConnectionDelegate>
{
    _Bool _targetUserSession;
    _Bool _enabled;
    _Bool _supported;
    _Bool _monitorVisits;
    _Bool _leechVisits;
    _Bool _leechLowConfidenceVisits;
    int _processIdentifier;
    NSXPCConnection *_xpcConnection;
    NSString *_restorationIdentifier;
    id <RTClientListenerProtocol> _clientManagerDelegate;
    NSMutableDictionary *_restorationData;
    RTEntitlementProvider *_entitlementProvider;
    NSMutableDictionary *_vendedClassesStoreManagerDict;
    RTDaemonClientRegistrarVehicleEvent *_vehicleEventRegistrar;
    RTDaemonClientRegistrarScenarioTrigger *_scenarioTriggerRegistrar;
    RTAccountManager *_accountManager;
    RTAssetManager *_assetManager;
    RTAuthorizationManager *_authorizationManager;
    RTContactsManager *_contactsManager;
    RTDeviceLocationPredictor *_deviceLocationPredictor;
    RTDiagnostics *_diagnostics;
    RTEventAgentManager *_eventAgentManager;
    RTEventModelProvider *_eventModelProvider;
    RTFingerprintManager *_fingerprintManager;
    RTHintManager *_hintManager;
    RTLearnedLocationManager *_learnedLocationManager;
    RTLocationManager *_locationManager;
    RTLocationStore *_locationStore;
    RTMapServiceManager *_mapServiceManager;
    RTMetricManager *_metricManager;
    RTPlaceInferenceManager *_placeInferenceManager;
    RTPurgeManager *_purgeManager;
    RTScenarioTriggerManager *_scenarioTriggerManager;
    RTVehicleLocationProvider *_vehicleLocationProvider;
    RTVisitManager *_visitManager;
    RTWiFiManager *_wifiManager;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_executablePath;
    NSString *_executableName;
    NSString *_signingIdentifier;
    NSString *_bundleIdentifier;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(copy, nonatomic) NSString *signingIdentifier; // @synthesize signingIdentifier=_signingIdentifier;
@property(nonatomic) int processIdentifier; // @synthesize processIdentifier=_processIdentifier;
@property(copy, nonatomic) NSString *executableName; // @synthesize executableName=_executableName;
@property(copy, nonatomic) NSString *executablePath; // @synthesize executablePath=_executablePath;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) RTWiFiManager *wifiManager; // @synthesize wifiManager=_wifiManager;
@property(retain, nonatomic) RTVisitManager *visitManager; // @synthesize visitManager=_visitManager;
@property(retain, nonatomic) RTVehicleLocationProvider *vehicleLocationProvider; // @synthesize vehicleLocationProvider=_vehicleLocationProvider;
@property(retain, nonatomic) RTScenarioTriggerManager *scenarioTriggerManager; // @synthesize scenarioTriggerManager=_scenarioTriggerManager;
@property(retain, nonatomic) RTPurgeManager *purgeManager; // @synthesize purgeManager=_purgeManager;
@property(retain, nonatomic) RTPlaceInferenceManager *placeInferenceManager; // @synthesize placeInferenceManager=_placeInferenceManager;
@property(retain, nonatomic) RTMetricManager *metricManager; // @synthesize metricManager=_metricManager;
@property(retain, nonatomic) RTMapServiceManager *mapServiceManager; // @synthesize mapServiceManager=_mapServiceManager;
@property(retain, nonatomic) RTLocationStore *locationStore; // @synthesize locationStore=_locationStore;
@property(retain, nonatomic) RTLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property(retain, nonatomic) RTLearnedLocationManager *learnedLocationManager; // @synthesize learnedLocationManager=_learnedLocationManager;
@property(retain, nonatomic) RTHintManager *hintManager; // @synthesize hintManager=_hintManager;
@property(retain, nonatomic) RTFingerprintManager *fingerprintManager; // @synthesize fingerprintManager=_fingerprintManager;
@property(retain, nonatomic) RTEventModelProvider *eventModelProvider; // @synthesize eventModelProvider=_eventModelProvider;
@property(retain, nonatomic) RTEventAgentManager *eventAgentManager; // @synthesize eventAgentManager=_eventAgentManager;
@property(retain, nonatomic) RTDiagnostics *diagnostics; // @synthesize diagnostics=_diagnostics;
@property(retain, nonatomic) RTDeviceLocationPredictor *deviceLocationPredictor; // @synthesize deviceLocationPredictor=_deviceLocationPredictor;
@property(retain, nonatomic) RTContactsManager *contactsManager; // @synthesize contactsManager=_contactsManager;
@property(retain, nonatomic) RTAuthorizationManager *authorizationManager; // @synthesize authorizationManager=_authorizationManager;
@property(retain, nonatomic) RTAssetManager *assetManager; // @synthesize assetManager=_assetManager;
@property(retain, nonatomic) RTAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(retain, nonatomic) RTDaemonClientRegistrarScenarioTrigger *scenarioTriggerRegistrar; // @synthesize scenarioTriggerRegistrar=_scenarioTriggerRegistrar;
@property(retain, nonatomic) RTDaemonClientRegistrarVehicleEvent *vehicleEventRegistrar; // @synthesize vehicleEventRegistrar=_vehicleEventRegistrar;
@property(retain, nonatomic) NSMutableDictionary *vendedClassesStoreManagerDict; // @synthesize vendedClassesStoreManagerDict=_vendedClassesStoreManagerDict;
@property(retain, nonatomic) RTEntitlementProvider *entitlementProvider; // @synthesize entitlementProvider=_entitlementProvider;
@property(nonatomic) _Bool leechLowConfidenceVisits; // @synthesize leechLowConfidenceVisits=_leechLowConfidenceVisits;
@property(nonatomic) _Bool leechVisits; // @synthesize leechVisits=_leechVisits;
@property(nonatomic) _Bool monitorVisits; // @synthesize monitorVisits=_monitorVisits;
@property(nonatomic) _Bool supported; // @synthesize supported=_supported;
@property _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) _Bool targetUserSession; // @synthesize targetUserSession=_targetUserSession;
@property(retain, nonatomic) NSMutableDictionary *restorationData; // @synthesize restorationData=_restorationData;
@property(nonatomic) __weak id <RTClientListenerProtocol> clientManagerDelegate; // @synthesize clientManagerDelegate=_clientManagerDelegate;
@property(copy, nonatomic) NSString *restorationIdentifier; // @synthesize restorationIdentifier=_restorationIdentifier;
@property(retain, nonatomic) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
- (void)fetchFormattedPostalAddressesFromMeCard:(CDUnknownBlockType)arg1;
- (void)fetchEnumerableObjectsWithOptions:(id)arg1 offset:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchEstimatedLocationAtDate:(id)arg1 options:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchStoredLocationsWithContext:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)userInteractionWithPredictedLocationOfInterest:(id)arg1 interaction:(unsigned long long)arg2 feedback:(id)arg3 geoMapItem:(id)arg4 reply:(CDUnknownBlockType)arg5;
- (void)extendLifetimeOfVisitsWithIdentifiers:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)removeVisitWithIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)removeLocationOfInterestWithIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)updateLocationOfInterestWithIdentifier:(id)arg1 customLabel:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)updateLocationOfInterestWithIdentifier:(id)arg1 type:(long long)arg2 customLabel:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)updateLocationOfInterestWithIdentifier:(id)arg1 type:(long long)arg2 reply:(CDUnknownBlockType)arg3;
- (void)updateLocationOfInterestWithIdentifier:(id)arg1 mapItemStorage:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)updateLocationOfInterestWithIdentifier:(id)arg1 type:(long long)arg2 mapItemStorage:(id)arg3 customLabel:(id)arg4 reply:(CDUnknownBlockType)arg5;
- (void)addLocationOfInterestOfType:(long long)arg1 mapItemStorage:(id)arg2 customLabel:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)vehicleEventRegistrar:(id)arg1 didReceiveVehicleEvents:(id)arg2 error:(id)arg3;
- (void)fetchAutomaticVehicleEventDetectionSupportedWithReply:(CDUnknownBlockType)arg1;
- (void)stopMonitoringVehicleEventsWithReply:(CDUnknownBlockType)arg1;
- (void)startMonitoringVehicleEventsWithReply:(CDUnknownBlockType)arg1;
- (void)_startMonitoringVehicleEvents;
- (void)engageInVehicleEventWithIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)updateVehicleEventWithIdentifier:(id)arg1 location:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)updateVehicleEventWithIdentifier:(id)arg1 geoMapItem:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)updateVehicleEventWithIdentifier:(id)arg1 photo:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)updateVehicleEventWithIdentifier:(id)arg1 notes:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)clearAllVehicleEventsWithReply:(CDUnknownBlockType)arg1;
- (void)vehicleEventAtLocation:(id)arg1 notes:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchLastVehicleEventsWithReply:(CDUnknownBlockType)arg1;
- (void)launchClient;
- (void)restore;
- (_Bool)hasReasonToOutliveClientConnection;
- (void)fetchPredictedLocationsOfInterestBetweenStartDate:(id)arg1 endDate:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchPredictedExitDatesFromLocation:(id)arg1 onDate:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)scenarioTriggerRegistrar:(id)arg1 didReceiveScenarioTriggers:(id)arg2 error:(id)arg3;
- (void)fetchMonitoredScenarioTriggerTypesWithReply:(CDUnknownBlockType)arg1;
- (void)stopMonitoringScenarioTriggerOfType:(unsigned long long)arg1 reply:(CDUnknownBlockType)arg2;
- (void)startMonitoringScenarioTriggerOfType:(unsigned long long)arg1 reply:(CDUnknownBlockType)arg2;
- (void)fetchTransitionsBetweenStartDate:(id)arg1 endDate:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchLocationsOfInterestVisitedBetweenStartDate:(id)arg1 endDate:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchLocationOfInterestWithIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)fetchLocationOfInterestAtLocation:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)shutdown;
- (void)onAuthorizationNotification:(id)arg1;
- (void)fetchPathToDiagnosticFilesWithReply:(CDUnknownBlockType)arg1;
- (void)fetchStoredVisitsWithOptions:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)onVisitManagerNotification:(id)arg1;
- (void)_onVisitManagerNotification:(id)arg1;
- (void)stopLeechingLowConfidenceVisitsWithReply:(CDUnknownBlockType)arg1;
- (void)startLeechingLowConfidenceVisitsWithReply:(CDUnknownBlockType)arg1;
- (void)stopLeechingVisitsWithReply:(CDUnknownBlockType)arg1;
- (void)startLeechingVisitsWithReply:(CDUnknownBlockType)arg1;
- (void)stopMonitoringVisitsWithReply:(CDUnknownBlockType)arg1;
- (void)startMonitoringVisitsWithReply:(CDUnknownBlockType)arg1;
- (void)performBluePOIQueryLookingBack:(double)arg1 lookingAhead:(double)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchCurrentPredictedLocationsOfInterestLookingBack:(double)arg1 lookingAhead:(double)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchPredictedLocationsOfInterestOnDate:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)fetchPredictedLocationsOfInterestAssociatedToTitle:(id)arg1 location:(id)arg2 calendarIdentifier:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)fetchLocationsOfInterestAssociatedToIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)fetchRoutineModeFromLocation:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)updateCloudSyncProvisionedForAccount:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;
- (void)fetchCloudSyncAuthorizationStateWithReply:(CDUnknownBlockType)arg1;
- (void)clearRoutineWithReply:(CDUnknownBlockType)arg1;
- (void)setRoutineEnabled:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;
- (void)fetchRoutineEnabledWithReply:(CDUnknownBlockType)arg1;
- (void)fetchPlaceInferencesWithOptions:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)fetchNextPredictedLocationsOfInterestFromLocation:(id)arg1 startDate:(id)arg2 timeInterval:(double)arg3 reply:(CDUnknownBlockType)arg4;
- (void)fetchAllLocationsOfInterestForSettingsWithReply:(CDUnknownBlockType)arg1;
- (void)fetchLocationsOfInterestOfType:(long long)arg1 reply:(CDUnknownBlockType)arg2;
- (void)fetchLocationsOfInterestWithinDistance:(double)arg1 ofLocation:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(_Bool)arg3;
@property(readonly, copy) NSString *description;
- (id)initWithQueue:(id)arg1 restorationData:(id)arg2 accountManager:(id)arg3 assetManager:(id)arg4 authorizationManager:(id)arg5 contactsManager:(id)arg6 deviceLocationPredictor:(id)arg7 diagnostics:(id)arg8 eventAgentManager:(id)arg9 eventModelProvider:(id)arg10 fingerprintManager:(id)arg11 hintManager:(id)arg12 learnedLocationManager:(id)arg13 locationManager:(id)arg14 locationStore:(id)arg15 mapServiceManager:(id)arg16 metricManager:(id)arg17 placeInferenceManager:(id)arg18 purgeManager:(id)arg19 scenarioTriggerManager:(id)arg20 vehicleLocationProvider:(id)arg21 visitManager:(id)arg22 wifiManager:(id)arg23;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

