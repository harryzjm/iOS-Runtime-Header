//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <coreroutine/CLLocationManagerRoutineDelegate-Protocol.h>
#import <coreroutine/RTPurgable-Protocol.h>

@class CLLocation, CLLocationManager, CLLocationManagerRoutine, NSMutableArray, NSObject, NSString, RTAuthorizationManager, RTInvocationDispatcher, RTLocationStore, RTPlatform, RTPowerAssertion;
@protocol OS_dispatch_source;

@interface RTLocationManager <CLLocationManagerRoutineDelegate, RTPurgable>
{
    _Bool _updating;
    _Bool _leechingLocations;
    _Bool _monitoringLocations;
    _Bool _enabled;
    _Bool _supported;
    _Bool _locationStoreAvailable;
    _Bool _persistingLocations;
    CLLocation *_lastLocation;
    NSMutableArray *_currentLocationHandlers;
    NSObject<OS_dispatch_source> *_stopUpdatingLocationTimer;
    RTPowerAssertion *_powerAssertion;
    RTInvocationDispatcher *_dispatcher;
    CLLocationManager *_locationManager;
    CLLocationManagerRoutine *_locationManagerRoutine;
    RTAuthorizationManager *_authorizationManager;
    RTLocationStore *_locationStore;
    RTPlatform *_platform;
}

+ (_Bool)supportsNotificationName:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(retain, nonatomic) RTPlatform *platform; // @synthesize platform=_platform;
@property(retain, nonatomic) RTLocationStore *locationStore; // @synthesize locationStore=_locationStore;
@property(retain, nonatomic) RTAuthorizationManager *authorizationManager; // @synthesize authorizationManager=_authorizationManager;
@property(nonatomic) _Bool persistingLocations; // @synthesize persistingLocations=_persistingLocations;
@property(nonatomic) _Bool locationStoreAvailable; // @synthesize locationStoreAvailable=_locationStoreAvailable;
@property(nonatomic) _Bool supported; // @synthesize supported=_supported;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(retain, nonatomic) CLLocationManagerRoutine *locationManagerRoutine; // @synthesize locationManagerRoutine=_locationManagerRoutine;
@property(retain, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property(retain, nonatomic) RTInvocationDispatcher *dispatcher; // @synthesize dispatcher=_dispatcher;
@property(retain, nonatomic) RTPowerAssertion *powerAssertion; // @synthesize powerAssertion=_powerAssertion;
@property(nonatomic) _Bool monitoringLocations; // @synthesize monitoringLocations=_monitoringLocations;
@property(nonatomic) _Bool leechingLocations; // @synthesize leechingLocations=_leechingLocations;
@property(nonatomic) _Bool updating; // @synthesize updating=_updating;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *stopUpdatingLocationTimer; // @synthesize stopUpdatingLocationTimer=_stopUpdatingLocationTimer;
@property(retain, nonatomic) NSMutableArray *currentLocationHandlers; // @synthesize currentLocationHandlers=_currentLocationHandlers;
@property(retain, nonatomic) CLLocation *lastLocation; // @synthesize lastLocation=_lastLocation;
- (void).cxx_destruct;
- (void)submitHarvestSample:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_stopUpdatingMicroLocation;
- (void)stopUpdatingMicroLocation;
- (void)_startUpdatingMicroLocationForLocationOfInterestWithIdentifier:(id)arg1;
- (void)startUpdatingMicroLocationForLocationOfInterestWithIdentifier:(id)arg1;
- (void)_fetchPredictedApplicationsAtLocation:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)fetchPredictedApplicationsAtLocation:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_requestCurrentMicroLocation;
- (void)requestCurrentMicroLocation;
- (void)onAuthorizationNotification:(id)arg1;
- (void)purgeManager:(id)arg1 performPurgeOfType:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)onUserSessionChangeNotification:(id)arg1;
- (void)onLocationStoreNotification:(id)arg1;
- (void)_removeLocationsPredating:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)internalRemoveObserver:(id)arg1 name:(id)arg2;
- (void)internalAddObserver:(id)arg1 name:(id)arg2;
- (void)onStopUpdatingLocationTimerExpiry;
- (void)fetchStoredLocationsFromDate:(id)arg1 toDate:(id)arg2 uncertainty:(double)arg3 limit:(unsigned long long)arg4 handler:(CDUnknownBlockType)arg5;
- (void)_fetchStoredLocationsFromDate:(id)arg1 toDate:(id)arg2 uncertainty:(double)arg3 limit:(unsigned long long)arg4 handler:(CDUnknownBlockType)arg5;
- (void)fetchCachedLocationWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchCurrentLocationWithHandler:(CDUnknownBlockType)arg1;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)_storeLocations:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)shouldPersistLocations;
- (void)shouldMonitorLocations;
- (void)shouldLeechLocations;
- (void)stopUpdatingLocation;
- (void)startUpdatingLocation;
- (void)dealloc;
- (void)_shutdown;
- (void)_setup;
- (void)_createLocationManager;
- (void)_unregisterNotifications;
- (void)_registerNotifications;
- (void)performBlockOnMainThreadAndWait:(CDUnknownBlockType)arg1;
- (id)initWithAuthorizationManager:(id)arg1 locationStore:(id)arg2 platform:(id)arg3 routineLocationManager:(id)arg4;
- (id)init;
- (void)injectLocations:(id)arg1 handler:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

