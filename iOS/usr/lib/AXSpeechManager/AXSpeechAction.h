//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSAttributedString, NSMutableArray, NSString;

@interface AXSpeechAction : NSObject
{
    NSString *_string;
    double _pitch;
    double _volume;
    double _speakingRate;
    NSString *_language;
    _Bool _shouldQueue;
    _Bool _cannotInterrupt;
    _Bool _shouldDetectLanguage;
    _Bool _shouldProcessEmoji;
    _Bool _shouldProcessEmoticons;
    _Bool _shouldPrecomposeString;
    CDUnknownBlockType _completionCallback;
    CDUnknownBlockType _onPauseCallback;
    CDUnknownBlockType _onResumeCallback;
    CDUnknownBlockType _onWillSpeakRangeCallback;
    CDUnknownBlockType _onSpeechStartCallback;
    _Bool _ignoreCustomSubstitutions;
    _Bool _synthesizeSilently;
    _Bool _useMonarchStyleSpeechRate;
    NSString *_voiceIdentifier;
    long long _state;
    CDUnknownBlockType _audioBufferCallback;
    NSAttributedString *_attributedString;
    long long _wordCallbackPostProcessedOffset;
    NSString *_finalSpokenString;
    NSString *_processedString;
    NSMutableArray *_emojiRangeReplacements;
}

+ (void)test_setUseMaxSpeechRate:(_Bool)arg1;
+ (id)actionWithAttributedString:(id)arg1 shouldQueue:(_Bool)arg2;
+ (id)actionWithString:(id)arg1 shouldQueue:(_Bool)arg2;
@property(retain, nonatomic) NSMutableArray *emojiRangeReplacements; // @synthesize emojiRangeReplacements=_emojiRangeReplacements;
@property(retain, nonatomic) NSString *processedString; // @synthesize processedString=_processedString;
@property(retain, nonatomic) NSString *finalSpokenString; // @synthesize finalSpokenString=_finalSpokenString;
@property(nonatomic) long long wordCallbackPostProcessedOffset; // @synthesize wordCallbackPostProcessedOffset=_wordCallbackPostProcessedOffset;
@property(nonatomic) double volume; // @synthesize volume=_volume;
@property(nonatomic) double pitch; // @synthesize pitch=_pitch;
@property(nonatomic) _Bool useMonarchStyleSpeechRate; // @synthesize useMonarchStyleSpeechRate=_useMonarchStyleSpeechRate;
@property(nonatomic) double speakingRate; // @synthesize speakingRate=_speakingRate;
@property(copy, nonatomic) CDUnknownBlockType onSpeechStartCallback; // @synthesize onSpeechStartCallback=_onSpeechStartCallback;
@property(copy, nonatomic) CDUnknownBlockType onWillSpeakRangeCallback; // @synthesize onWillSpeakRangeCallback=_onWillSpeakRangeCallback;
@property(copy, nonatomic) CDUnknownBlockType onResumeCallback; // @synthesize onResumeCallback=_onResumeCallback;
@property(copy, nonatomic) CDUnknownBlockType onPauseCallback; // @synthesize onPauseCallback=_onPauseCallback;
@property(copy, nonatomic) CDUnknownBlockType completionCallback; // @synthesize completionCallback=_completionCallback;
@property(copy, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
@property(copy, nonatomic) NSString *string; // @synthesize string=_string;
@property(copy, nonatomic) CDUnknownBlockType audioBufferCallback; // @synthesize audioBufferCallback=_audioBufferCallback;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *voiceIdentifier; // @synthesize voiceIdentifier=_voiceIdentifier;
@property(retain, nonatomic) NSString *language; // @synthesize language=_language;
@property(nonatomic) _Bool synthesizeSilently; // @synthesize synthesizeSilently=_synthesizeSilently;
@property(nonatomic) _Bool ignoreCustomSubstitutions; // @synthesize ignoreCustomSubstitutions=_ignoreCustomSubstitutions;
@property(nonatomic) _Bool shouldPrecomposeString; // @synthesize shouldPrecomposeString=_shouldPrecomposeString;
@property(nonatomic) _Bool shouldProcessEmoticons; // @synthesize shouldProcessEmoticons=_shouldProcessEmoticons;
@property(nonatomic) _Bool shouldProcessEmoji; // @synthesize shouldProcessEmoji=_shouldProcessEmoji;
@property(nonatomic) _Bool shouldDetectLanguage; // @synthesize shouldDetectLanguage=_shouldDetectLanguage;
@property(nonatomic) _Bool cannotInterrupt; // @synthesize cannotInterrupt=_cannotInterrupt;
@property(nonatomic) _Bool shouldQueue; // @synthesize shouldQueue=_shouldQueue;
- (void).cxx_destruct;
- (id)description;
- (id)_detectLanguageFromContent;
- (void)preprocessAction;
- (id)init;

@end

