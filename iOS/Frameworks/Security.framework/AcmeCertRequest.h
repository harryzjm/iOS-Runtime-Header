//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSData, NSDictionary, NSString, SecJWSEncoder;
@protocol OS_dispatch_queue, OS_xpc_object;

__attribute__((visibility("hidden")))
@interface AcmeCertRequest : NSObject
{
    _Bool _logAcmeCSR;
    _Bool _permitLocalIssuer;
    _Bool _requireAttestation;
    long long _state;
    NSObject<OS_dispatch_queue> *_queue;
    NSArray *_subject;
    NSDictionary *_parameters;
    NSDictionary *_keyParams;
    NSArray *_attestationOids;
    NSArray *_attestationChain;
    NSData *_attestation;
    NSData *_csr;
    NSString *_nonce;
    NSString *_location;
    NSString *_account;
    NSString *_token;
    NSString *_timestamp;
    NSArray *_authorizations;
    NSString *_authorizationURL;
    NSString *_challengeURL;
    NSString *_finalizeOrderURL;
    NSString *_orderURL;
    NSString *_certificateURL;
    NSString *_nextMessageURL;
    NSString *_acmeNewAccountURL;
    NSString *_acmeNewNonceURL;
    NSString *_acmeNewOrderURL;
    NSObject<OS_dispatch_queue> *_xpc_queue;
    NSObject<OS_xpc_object> *_connection;
    SecJWSEncoder *_encoder;
    struct __SecKey *_publicKey;
    struct __SecKey *_privateKey;
    struct __SecCertificate *_certificate;
    struct __SecIdentity *_identity;
}

- (void).cxx_destruct;
@property struct __SecIdentity *identity; // @synthesize identity=_identity;
@property struct __SecCertificate *certificate; // @synthesize certificate=_certificate;
@property struct __SecKey *privateKey; // @synthesize privateKey=_privateKey;
@property struct __SecKey *publicKey; // @synthesize publicKey=_publicKey;
@property(retain) SecJWSEncoder *encoder; // @synthesize encoder=_encoder;
@property(retain) NSObject<OS_xpc_object> *connection; // @synthesize connection=_connection;
@property(retain) NSObject<OS_dispatch_queue> *xpc_queue; // @synthesize xpc_queue=_xpc_queue;
@property(retain) NSString *acmeNewOrderURL; // @synthesize acmeNewOrderURL=_acmeNewOrderURL;
@property(retain) NSString *acmeNewNonceURL; // @synthesize acmeNewNonceURL=_acmeNewNonceURL;
@property(retain) NSString *acmeNewAccountURL; // @synthesize acmeNewAccountURL=_acmeNewAccountURL;
@property(retain) NSString *nextMessageURL; // @synthesize nextMessageURL=_nextMessageURL;
@property(retain) NSString *certificateURL; // @synthesize certificateURL=_certificateURL;
@property(retain) NSString *orderURL; // @synthesize orderURL=_orderURL;
@property(retain) NSString *finalizeOrderURL; // @synthesize finalizeOrderURL=_finalizeOrderURL;
@property(retain) NSString *challengeURL; // @synthesize challengeURL=_challengeURL;
@property(retain) NSString *authorizationURL; // @synthesize authorizationURL=_authorizationURL;
@property(retain) NSArray *authorizations; // @synthesize authorizations=_authorizations;
@property(retain) NSString *timestamp; // @synthesize timestamp=_timestamp;
@property(retain) NSString *token; // @synthesize token=_token;
@property(retain) NSString *account; // @synthesize account=_account;
@property(retain) NSString *location; // @synthesize location=_location;
@property(retain) NSString *nonce; // @synthesize nonce=_nonce;
@property(retain) NSData *csr; // @synthesize csr=_csr;
@property(retain) NSData *attestation; // @synthesize attestation=_attestation;
@property(retain) NSArray *attestationChain; // @synthesize attestationChain=_attestationChain;
@property(retain) NSArray *attestationOids; // @synthesize attestationOids=_attestationOids;
@property(retain) NSDictionary *keyParams; // @synthesize keyParams=_keyParams;
@property(retain) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(retain) NSArray *subject; // @synthesize subject=_subject;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property _Bool requireAttestation; // @synthesize requireAttestation=_requireAttestation;
@property _Bool permitLocalIssuer; // @synthesize permitLocalIssuer=_permitLocalIssuer;
@property _Bool logAcmeCSR; // @synthesize logAcmeCSR=_logAcmeCSR;
@property long long state; // @synthesize state=_state;
- (struct __SecIdentity *)identityWithError:(id *)arg1;
- (id)executeRequest;
- (_Bool)valueForBooleanDefault:(id)arg1;
- (id)processReply:(id)arg1;
- (id)acmeRequest;
- (id)pollForStatus:(id)arg1 until:(id)arg2;
- (id)sendRequestToXPCService:(id)arg1 response:(id *)arg2;
- (int)errorStatusWithHTTPErrorCode:(int)arg1;
- (id)attestationChainPEMRepresentation;
- (id)createCertificate;
- (id)createAttestation;
- (id)attestationObjectWithCertificates:(id)arg1;
- (id)requestAttestationChainWithError:(id *)arg1;
- (_Bool)deviceAttestationSupported;
- (id)createCSR;
- (id)createKeyPair;
- (id)sanitizeParameters;
- (id)sanitizeSubject;
- (id)serialNumber;
- (void)dealloc;
- (id)initWithSubject:(id)arg1 parameters:(id)arg2;

@end

