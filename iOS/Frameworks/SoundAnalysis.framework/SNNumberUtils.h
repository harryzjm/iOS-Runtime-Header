//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface SNNumberUtils : NSObject
{
}

+ (long long)gcdOfInt64:(long long)arg1 andOther:(long long)arg2;
+ (_Bool)validateNumberIsNegative:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsPositive:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsUInt8:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsInt8:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsUInt16:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsInt16:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsUInt32:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsInt32:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsUInt64:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsInt64:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsUnsignedInteger:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsInteger:(id)arg1 error:(id *)arg2;
+ (_Bool)validateNumberIsDouble:(id)arg1 error:(id *)arg2;
+ (_Bool)numberIsNegative:(id)arg1;
+ (_Bool)numberIsPositive:(id)arg1;
+ (_Bool)numberIsUInt8:(id)arg1;
+ (_Bool)numberIsInt8:(id)arg1;
+ (_Bool)numberIsUInt16:(id)arg1;
+ (_Bool)numberIsInt16:(id)arg1;
+ (_Bool)numberIsUInt32:(id)arg1;
+ (_Bool)numberIsInt32:(id)arg1;
+ (_Bool)numberIsUInt64:(id)arg1;
+ (_Bool)numberIsInt64:(id)arg1;
+ (_Bool)numberIsUnsignedInteger:(id)arg1;
+ (_Bool)numberIsInteger:(id)arg1;
+ (_Bool)numberIsDouble:(id)arg1;
+ (_Bool)thoroughlyCheckNumber:(id)arg1 isEqualToNumber:(id)arg2;
+ (id)numberClampedToSaturatedUInt8:(id)arg1;
+ (id)numberClampedToSaturatedInt8:(id)arg1;
+ (id)numberClampedToSaturatedUInt16:(id)arg1;
+ (id)numberClampedToSaturatedInt16:(id)arg1;
+ (id)numberClampedToSaturatedUInt32:(id)arg1;
+ (id)numberClampedToSaturatedInt32:(id)arg1;
+ (id)numberClampedToSaturatedUInt64:(id)arg1;
+ (id)numberClampedToSaturatedInt64:(id)arg1;
+ (id)numberClampedToSaturatedUnsignedInteger:(id)arg1;
+ (id)numberClampedToSaturatedInteger:(id)arg1;
+ (unsigned char)saturatedUInt8FromNumber:(id)arg1;
+ (BOOL)saturatedInt8FromNumber:(id)arg1;
+ (unsigned short)saturatedUInt16FromNumber:(id)arg1;
+ (short)saturatedInt16FromNumber:(id)arg1;
+ (unsigned int)saturatedUInt32FromNumber:(id)arg1;
+ (int)saturatedInt32FromNumber:(id)arg1;
+ (unsigned long long)saturatedUInt64FromNumber:(id)arg1;
+ (long long)saturatedInt64FromNumber:(id)arg1;
+ (unsigned long long)saturatedUnsignedIntegerFromNumber:(id)arg1;
+ (long long)saturatedIntegerFromNumber:(id)arg1;
- (id)init;

@end

