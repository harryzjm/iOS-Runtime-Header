//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVSystemController, NSNumber, NSString;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface AVSystemVolumeController : NSObject
{
    NSObject<OS_dispatch_queue> *_systemControllerQueue;
    _Bool _observingSystemController;
    _Bool _prefersSystemVolumeHUDHidden;
    _Bool _changingVolume;
    _Bool _currentRouteHasVolumeControl;
    _Bool _volumeChangesThrottled;
    _Bool _fullyInitialized;
    float _volume;
    AVSystemController *_sharedSystemController;
    NSNumber *_targetVolumeInternal;
    NSNumber *_maximumTargetVolumeSinceChangingVolumeBegan;
    NSString *_volumeCategory;
    NSString *_uniqueIdentifier;
    NSString *_windowSceneSessionIdentifier;
}

+ (id)windowSceneVolumeHUDAssertions;
+ (id)volumeController;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *windowSceneSessionIdentifier; // @synthesize windowSceneSessionIdentifier=_windowSceneSessionIdentifier;
@property(readonly, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(nonatomic, getter=isFullyInitialized) _Bool fullyInitialized; // @synthesize fullyInitialized=_fullyInitialized;
@property(readonly, nonatomic) NSString *volumeCategory; // @synthesize volumeCategory=_volumeCategory;
@property(retain, nonatomic) NSNumber *maximumTargetVolumeSinceChangingVolumeBegan; // @synthesize maximumTargetVolumeSinceChangingVolumeBegan=_maximumTargetVolumeSinceChangingVolumeBegan;
@property(retain, nonatomic) NSNumber *targetVolumeInternal; // @synthesize targetVolumeInternal=_targetVolumeInternal;
@property(nonatomic) _Bool volumeChangesThrottled; // @synthesize volumeChangesThrottled=_volumeChangesThrottled;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(nonatomic) _Bool currentRouteHasVolumeControl; // @synthesize currentRouteHasVolumeControl=_currentRouteHasVolumeControl;
@property(nonatomic, getter=isChangingVolume) _Bool changingVolume; // @synthesize changingVolume=_changingVolume;
@property(retain, nonatomic) AVSystemController *sharedSystemController; // @synthesize sharedSystemController=_sharedSystemController;
@property(nonatomic) _Bool prefersSystemVolumeHUDHidden; // @synthesize prefersSystemVolumeHUDHidden=_prefersSystemVolumeHUDHidden;
- (void)_performOnMainThread:(CDUnknownBlockType)arg1;
- (void)_applyProposedVolumeImmediately;
- (void)_applyProposedVolumeIfNeeded;
- (void)_handleCurrentRouteHasVolumeControlDidChangeNotification:(id)arg1;
- (void)_handleSystemVolumeDidChangeNotification:(id)arg1;
- (void)_handleSystemControllerServerDiedNotification;
- (void)_unobserveSystemControllerIfNeeded;
- (void)_observeSystemControllerIfNeeded;
- (void)_setupSystemController;
- (id)_requestSharedSystemController;
- (void)_postNotificationForNameIfFullyInitialized:(id)arg1 userInfo:(id)arg2;
- (id)currentSystemController;
- (void)setVolume:(float)arg1 shouldShowHUD:(_Bool)arg2;
- (void)setSystemVolumeHUDEnabled:(_Bool)arg1 forWindowSceneSessionIdentifier:(id)arg2;
- (void)setSystemVolumeHUDEnabled:(_Bool)arg1 forSceneVolumeHudAssertion:(id)arg2;
- (void)_removeVolumeHUDAssertionsForClientID:(id)arg1;
- (void)setClientWithIdentifier:(id)arg1 forWindowSceneSessionWithIdentifier:(id)arg2;
- (void)endChangingVolume;
- (void)beginChangingVolume;
- (void)setTargetVolume:(float)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

