//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AVKit/AVPlayerViewControllerContentViewDelegate-Protocol.h>
#import <AVKit/AVRoutePickerViewInternalDelegate-Protocol.h>
#import <AVKit/AVScrubbing-Protocol.h>
#import <AVKit/AVTransportControlsViewDelegate-Protocol.h>

@class AVNowPlayingInfoController, AVObservationController, AVPictureInPictureController, AVPlaybackControlsView, AVPlaybackControlsVisibilityControllerItem, AVPlayerController, AVPlayerControllerTimeResolver, AVPlayerControllerVolumeAnimator, AVPlayerViewController, AVRouteDetectorCoordinator, AVSecondScreenContentViewConnection, AVTimeFormatter, AVTurboModePlaybackControlsPlaceholderView, NSArray, NSNumber, NSString, NSTimer, NSUUID, UIAlertController, UIViewPropertyAnimator;
@protocol AVVolumeController;

__attribute__((visibility("hidden")))
@interface AVPlaybackControlsController : NSObject <AVTransportControlsViewDelegate, AVRoutePickerViewInternalDelegate, AVPlayerViewControllerContentViewDelegate, AVScrubbing>
{
    _Bool _playerViewControllerIsBeingTransitionedWithResizing;
    _Bool _playerViewControllerIsPresentingFullScreen;
    _Bool _playerViewControllerIsPresentedFullScreen;
    _Bool _playerViewControllerHasInvalidViewControllerHierarchy;
    _Bool _entersFullScreenWhenPlaybackBegins;
    _Bool _allowsEnteringFullScreen;
    _Bool _showsMinimalPlaybackControlsWhenEmbeddedInline;
    _Bool _inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused;
    _Bool _volumeControlsCanShowSlider;
    _Bool _showsPictureInPictureButton;
    _Bool _showsPlaybackControls;
    _Bool _hasCustomPlaybackControls;
    _Bool _canIncludePlaybackControlsWhenInline;
    _Bool _showsVideoGravityButton;
    _Bool _requiresLinearPlayback;
    _Bool _updatesNowPlayingInfoCenter;
    _Bool _showsDoneButtonWhenFullScreen;
    _Bool _playbackControlsIncludeTransportControls;
    _Bool _playbackControlsIncludeDisplayModeControls;
    _Bool _playbackControlsIncludeVolumeControls;
    _Bool _playbackControlsIncludeStartContentTransitionButtons;
    _Bool _playbackControlsShouldControlSystemVolume;
    _Bool _forcePlaybackControlsHidden;
    _Bool _showsTimecodes;
    _Bool _startLeftwardContentTransitionButtonEnabled;
    _Bool _startRightwardContentTransitionButtonEnabled;
    _Bool _showsLoadingIndicator;
    _Bool _prefersVolumeSliderExpanded;
    _Bool _canIncludeVideoGravityButton;
    _Bool _hasStartedUpdates;
    _Bool _coveringWindow;
    _Bool _hasPlaybackBegunSincePlayerControllerBecameReadyToPlay;
    _Bool _hasBecomeReadyToPlay;
    _Bool _multipleRoutesDetected;
    _Bool _resumingUpdates;
    _Bool _prefersMuted;
    _Bool _playbackSuspendedForScrubbing;
    _Bool _hasSeekableLiveStreamingContent;
    _Bool _scrubbingOrSeeking;
    _Bool _shouldIgnoreTimeResolverUpdates;
    _Bool _videoScaled;
    AVPlayerController *_playerController;
    long long _preferredUnobscuredArea;
    NSArray *_customControlItems;
    CDUnknownBlockType _playButtonHandlerForLazyPlayerLoading;
    CDUnknownBlockType _contentTransitionAction;
    AVPictureInPictureController *_pictureInPictureController;
    id <AVVolumeController> _volumeController;
    AVNowPlayingInfoController *_nowPlayingInfoControllerIfLoaded;
    AVSecondScreenContentViewConnection *_secondScreenConnection;
    AVPlayerViewController *_playerViewController;
    AVPlaybackControlsView *_playbackControlsView;
    AVTurboModePlaybackControlsPlaceholderView *_turboModePlaybackControlsPlaceholderView;
    AVObservationController *_observationController;
    AVObservationController *_playbackControlsObservationController;
    AVPlayerControllerTimeResolver *_timeResolver;
    AVTimeFormatter *_elapsedTimeFormatter;
    AVTimeFormatter *_remainingTimeFormatter;
    UIAlertController *_routePickerAlertController;
    AVRouteDetectorCoordinator *_routeDetectorCoordinator;
    id _AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver;
    NSTimer *_loadingIndicatorTimer;
    UIViewPropertyAnimator *_collapseExpandSliderAnimator;
    AVPlayerControllerVolumeAnimator *_volumeAnimator;
    NSUUID *_playerMuteFadeAnimationID;
    AVPlaybackControlsVisibilityControllerItem *_playbackControlsContainerVisibilityItem;
    AVPlaybackControlsVisibilityControllerItem *_volumeControlsContainerVisibilityItem;
    NSArray *_allVisibilityControllerItems;
    NSNumber *_pendingOrientationChange;
    double _loadingIndicatorTimerDelay;
    long long _timeControlStatus;
    long long _videoGravityButtonType;
    NSString *_uniqueIdentifer;
    NSString *_windowSceneSessionIdentifier;
    struct CGRect _playbackViewFrame;
}

+ (id)keyPathsForValuesAffectingNeedsTimeResolver;
+ (id)keyPathsForValuesAffectingPlayButtonsShowPauseGlyph;
+ (id)keyPathsForValuesAffectingCanShowLoadingIndicator;
+ (id)keyPathsForValuesAffectingShowsStartContentTransitionButtons;
+ (id)keyPathsForValuesAffectingShowsSkipButtons;
+ (id)keyPathsForValuesAffectingSeekingEnabled;
+ (id)keyPathsForValuesAffectingMaximumTime;
+ (id)keyPathsForValuesAffectingMinimumTime;
+ (id)keyPathsForValuesAffectingCurrentTime;
+ (id)keyPathsForValuesAffectingShowsMediaSelectionButton;
+ (id)keyPathsForValuesAffectingShouldEnterFullScreenWhenPlaybackBegins;
+ (id)keyPathsForValuesAffectingShowsTransportControls;
+ (id)keyPathsForValuesAffectingProminentPlayButtonCanShowPauseGlyph;
+ (id)keyPathsForValuesAffectingShowsProminentPlayButton;
+ (id)keyPathsForValuesAffectingShowsRoutePickerView;
+ (id)keyPathsForValuesAffectingFullScreen;
@property(retain, nonatomic) NSString *windowSceneSessionIdentifier; // @synthesize windowSceneSessionIdentifier=_windowSceneSessionIdentifier;
@property(readonly, nonatomic) NSString *uniqueIdentifer; // @synthesize uniqueIdentifer=_uniqueIdentifer;
@property(nonatomic, getter=isVideoScaled) _Bool videoScaled; // @synthesize videoScaled=_videoScaled;
@property(nonatomic) struct CGRect playbackViewFrame; // @synthesize playbackViewFrame=_playbackViewFrame;
@property(nonatomic) long long videoGravityButtonType; // @synthesize videoGravityButtonType=_videoGravityButtonType;
@property(nonatomic) _Bool shouldIgnoreTimeResolverUpdates; // @synthesize shouldIgnoreTimeResolverUpdates=_shouldIgnoreTimeResolverUpdates;
@property(nonatomic, getter=isScrubbingOrSeeking) _Bool scrubbingOrSeeking; // @synthesize scrubbingOrSeeking=_scrubbingOrSeeking;
@property(nonatomic) _Bool hasSeekableLiveStreamingContent; // @synthesize hasSeekableLiveStreamingContent=_hasSeekableLiveStreamingContent;
@property(nonatomic) long long timeControlStatus; // @synthesize timeControlStatus=_timeControlStatus;
@property(nonatomic, getter=isPlaybackSuspendedForScrubbing) _Bool playbackSuspendedForScrubbing; // @synthesize playbackSuspendedForScrubbing=_playbackSuspendedForScrubbing;
@property(nonatomic) _Bool prefersMuted; // @synthesize prefersMuted=_prefersMuted;
@property(nonatomic, getter=isResumingUpdates) _Bool resumingUpdates; // @synthesize resumingUpdates=_resumingUpdates;
@property(nonatomic) double loadingIndicatorTimerDelay; // @synthesize loadingIndicatorTimerDelay=_loadingIndicatorTimerDelay;
@property(nonatomic) _Bool multipleRoutesDetected; // @synthesize multipleRoutesDetected=_multipleRoutesDetected;
@property(nonatomic) _Bool hasBecomeReadyToPlay; // @synthesize hasBecomeReadyToPlay=_hasBecomeReadyToPlay;
@property(nonatomic) _Bool hasPlaybackBegunSincePlayerControllerBecameReadyToPlay; // @synthesize hasPlaybackBegunSincePlayerControllerBecameReadyToPlay=_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay;
@property(nonatomic, getter=isCoveringWindow) _Bool coveringWindow; // @synthesize coveringWindow=_coveringWindow;
@property(nonatomic) _Bool hasStartedUpdates; // @synthesize hasStartedUpdates=_hasStartedUpdates;
@property(retain, nonatomic) NSNumber *pendingOrientationChange; // @synthesize pendingOrientationChange=_pendingOrientationChange;
@property(nonatomic) _Bool canIncludeVideoGravityButton; // @synthesize canIncludeVideoGravityButton=_canIncludeVideoGravityButton;
@property(nonatomic) _Bool prefersVolumeSliderExpanded; // @synthesize prefersVolumeSliderExpanded=_prefersVolumeSliderExpanded;
@property(nonatomic) _Bool showsLoadingIndicator; // @synthesize showsLoadingIndicator=_showsLoadingIndicator;
@property(readonly, nonatomic) NSArray *allVisibilityControllerItems; // @synthesize allVisibilityControllerItems=_allVisibilityControllerItems;
@property(readonly, nonatomic) AVPlaybackControlsVisibilityControllerItem *volumeControlsContainerVisibilityItem; // @synthesize volumeControlsContainerVisibilityItem=_volumeControlsContainerVisibilityItem;
@property(readonly, nonatomic) AVPlaybackControlsVisibilityControllerItem *playbackControlsContainerVisibilityItem; // @synthesize playbackControlsContainerVisibilityItem=_playbackControlsContainerVisibilityItem;
@property(retain, nonatomic) NSUUID *playerMuteFadeAnimationID; // @synthesize playerMuteFadeAnimationID=_playerMuteFadeAnimationID;
@property(retain, nonatomic) AVPlayerControllerVolumeAnimator *volumeAnimator; // @synthesize volumeAnimator=_volumeAnimator;
@property(nonatomic) __weak UIViewPropertyAnimator *collapseExpandSliderAnimator; // @synthesize collapseExpandSliderAnimator=_collapseExpandSliderAnimator;
@property(nonatomic) __weak NSTimer *loadingIndicatorTimer; // @synthesize loadingIndicatorTimer=_loadingIndicatorTimer;
@property(retain, nonatomic) id AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver; // @synthesize AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver=_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver;
@property(retain, nonatomic) AVRouteDetectorCoordinator *routeDetectorCoordinator; // @synthesize routeDetectorCoordinator=_routeDetectorCoordinator;
@property(nonatomic) __weak UIAlertController *routePickerAlertController; // @synthesize routePickerAlertController=_routePickerAlertController;
@property(readonly, nonatomic) AVTimeFormatter *remainingTimeFormatter; // @synthesize remainingTimeFormatter=_remainingTimeFormatter;
@property(readonly, nonatomic) AVTimeFormatter *elapsedTimeFormatter; // @synthesize elapsedTimeFormatter=_elapsedTimeFormatter;
@property(retain, nonatomic) AVPlayerControllerTimeResolver *timeResolver; // @synthesize timeResolver=_timeResolver;
@property(retain, nonatomic) AVObservationController *playbackControlsObservationController; // @synthesize playbackControlsObservationController=_playbackControlsObservationController;
@property(readonly, nonatomic) AVObservationController *observationController; // @synthesize observationController=_observationController;
@property(nonatomic) __weak AVTurboModePlaybackControlsPlaceholderView *turboModePlaybackControlsPlaceholderView; // @synthesize turboModePlaybackControlsPlaceholderView=_turboModePlaybackControlsPlaceholderView;
@property(retain, nonatomic) AVPlaybackControlsView *playbackControlsView; // @synthesize playbackControlsView=_playbackControlsView;
@property(readonly, nonatomic) __weak AVPlayerViewController *playerViewController; // @synthesize playerViewController=_playerViewController;
@property(retain, nonatomic) AVSecondScreenContentViewConnection *secondScreenConnection; // @synthesize secondScreenConnection=_secondScreenConnection;
@property(retain, nonatomic) AVNowPlayingInfoController *nowPlayingInfoControllerIfLoaded; // @synthesize nowPlayingInfoControllerIfLoaded=_nowPlayingInfoControllerIfLoaded;
@property(retain, nonatomic) id <AVVolumeController> volumeController; // @synthesize volumeController=_volumeController;
@property(retain, nonatomic) AVPictureInPictureController *pictureInPictureController; // @synthesize pictureInPictureController=_pictureInPictureController;
@property(copy, nonatomic) CDUnknownBlockType contentTransitionAction; // @synthesize contentTransitionAction=_contentTransitionAction;
@property(nonatomic, getter=isStartRightwardContentTransitionButtonEnabled) _Bool startRightwardContentTransitionButtonEnabled; // @synthesize startRightwardContentTransitionButtonEnabled=_startRightwardContentTransitionButtonEnabled;
@property(nonatomic, getter=isStartLeftwardContentTransitionButtonEnabled) _Bool startLeftwardContentTransitionButtonEnabled; // @synthesize startLeftwardContentTransitionButtonEnabled=_startLeftwardContentTransitionButtonEnabled;
@property(copy, nonatomic) CDUnknownBlockType playButtonHandlerForLazyPlayerLoading; // @synthesize playButtonHandlerForLazyPlayerLoading=_playButtonHandlerForLazyPlayerLoading;
@property(nonatomic) _Bool showsTimecodes; // @synthesize showsTimecodes=_showsTimecodes;
@property(nonatomic) _Bool forcePlaybackControlsHidden; // @synthesize forcePlaybackControlsHidden=_forcePlaybackControlsHidden;
@property(nonatomic) _Bool playbackControlsShouldControlSystemVolume; // @synthesize playbackControlsShouldControlSystemVolume=_playbackControlsShouldControlSystemVolume;
@property(nonatomic) _Bool playbackControlsIncludeStartContentTransitionButtons; // @synthesize playbackControlsIncludeStartContentTransitionButtons=_playbackControlsIncludeStartContentTransitionButtons;
@property(nonatomic) _Bool playbackControlsIncludeVolumeControls; // @synthesize playbackControlsIncludeVolumeControls=_playbackControlsIncludeVolumeControls;
@property(nonatomic) _Bool playbackControlsIncludeDisplayModeControls; // @synthesize playbackControlsIncludeDisplayModeControls=_playbackControlsIncludeDisplayModeControls;
@property(nonatomic) _Bool playbackControlsIncludeTransportControls; // @synthesize playbackControlsIncludeTransportControls=_playbackControlsIncludeTransportControls;
@property(nonatomic) _Bool showsDoneButtonWhenFullScreen; // @synthesize showsDoneButtonWhenFullScreen=_showsDoneButtonWhenFullScreen;
@property(nonatomic) _Bool updatesNowPlayingInfoCenter; // @synthesize updatesNowPlayingInfoCenter=_updatesNowPlayingInfoCenter;
@property(nonatomic) _Bool requiresLinearPlayback; // @synthesize requiresLinearPlayback=_requiresLinearPlayback;
@property(nonatomic) _Bool showsVideoGravityButton; // @synthesize showsVideoGravityButton=_showsVideoGravityButton;
@property(nonatomic) _Bool canIncludePlaybackControlsWhenInline; // @synthesize canIncludePlaybackControlsWhenInline=_canIncludePlaybackControlsWhenInline;
@property(nonatomic) _Bool hasCustomPlaybackControls; // @synthesize hasCustomPlaybackControls=_hasCustomPlaybackControls;
@property(nonatomic) _Bool showsPlaybackControls; // @synthesize showsPlaybackControls=_showsPlaybackControls;
@property(nonatomic) _Bool showsPictureInPictureButton; // @synthesize showsPictureInPictureButton=_showsPictureInPictureButton;
@property(copy, nonatomic) NSArray *customControlItems; // @synthesize customControlItems=_customControlItems;
@property(nonatomic) _Bool volumeControlsCanShowSlider; // @synthesize volumeControlsCanShowSlider=_volumeControlsCanShowSlider;
@property(nonatomic) _Bool inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused; // @synthesize inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused=_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused;
@property(nonatomic) _Bool showsMinimalPlaybackControlsWhenEmbeddedInline; // @synthesize showsMinimalPlaybackControlsWhenEmbeddedInline=_showsMinimalPlaybackControlsWhenEmbeddedInline;
@property(nonatomic) _Bool allowsEnteringFullScreen; // @synthesize allowsEnteringFullScreen=_allowsEnteringFullScreen;
@property(nonatomic) long long preferredUnobscuredArea; // @synthesize preferredUnobscuredArea=_preferredUnobscuredArea;
@property(nonatomic) _Bool entersFullScreenWhenPlaybackBegins; // @synthesize entersFullScreenWhenPlaybackBegins=_entersFullScreenWhenPlaybackBegins;
@property(nonatomic) _Bool playerViewControllerHasInvalidViewControllerHierarchy; // @synthesize playerViewControllerHasInvalidViewControllerHierarchy=_playerViewControllerHasInvalidViewControllerHierarchy;
@property(nonatomic) _Bool playerViewControllerIsPresentedFullScreen; // @synthesize playerViewControllerIsPresentedFullScreen=_playerViewControllerIsPresentedFullScreen;
@property(nonatomic) _Bool playerViewControllerIsPresentingFullScreen; // @synthesize playerViewControllerIsPresentingFullScreen=_playerViewControllerIsPresentingFullScreen;
@property(nonatomic) _Bool playerViewControllerIsBeingTransitionedWithResizing; // @synthesize playerViewControllerIsBeingTransitionedWithResizing=_playerViewControllerIsBeingTransitionedWithResizing;
@property(nonatomic) __weak AVPlayerController *playerController; // @synthesize playerController=_playerController;
- (void).cxx_destruct;
- (void)_updateSecondScreenConnectionReadyToConnect;
- (void)_updateEdgeInsetsForLetterboxedContentInContentView:(id)arg1;
- (void)_updateNowPlayingInfoCenter;
- (void)_updatePrefersInspectionSuspended;
- (void)_updateHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:(_Bool)arg1 playing:(_Bool)arg2 userDidEndTappingProminentPlayButton:(_Bool)arg3;
- (void)_updateVideoGravityButtonType;
- (void)_updateScrubberAndTimeLabels;
- (void)_updateOrCreateTimeResolverIfNeeded;
- (void)_updateContainerInclusion;
- (void)_updateControlInclusion;
- (void)updateControlsInclusion;
- (void)_updateSkipButtonsEnableLongPress;
- (void)_startObservingPotentiallyUnimplementedPlayerControllerProperties;
- (void)_startObservingForPlaybackViewUpdates;
- (void)_updatePlaybackControlsVisibleAndObservingUpdates;
- (void)_seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (void)_observeBoolForKeyPath:(id)arg1 usingKeyValueObservationController:(id)arg2 observationHandler:(CDUnknownBlockType)arg3;
- (_Bool)_hasVisibilityControllerItemThatPrefersVisible;
- (void)_bindInclusionOfControlItems:(id)arg1 toKeyPath:(id)arg2;
- (void)_bindEnabledStateOfControls:(id)arg1 toKeyPath:(id)arg2;
- (void)startContentTransitionButtonTouchUpInside:(id)arg1;
- (void)skipButtonForcePressChanged:(id)arg1;
- (void)skipButtonLongPressEnded:(id)arg1;
- (void)skipButtonLongPressTriggered:(id)arg1;
- (void)skipButtonTouchUpInside:(id)arg1;
- (void)prominentPlayButtonTouchUpInside:(id)arg1;
- (id)overrideRoutingContextUIDForRoutePickerView:(id)arg1;
- (unsigned long long)overrideRouteSharingPolicyForRoutePickerView:(id)arg1;
- (void)routePickerViewDidEndPresentingRoutes:(id)arg1;
- (void)routePickerViewWillBeginPresentingRoutes:(id)arg1;
- (void)_updateVolumeSliderValueWithSystemVolume:(float)arg1 animated:(_Bool)arg2;
- (id)_volumeButtonMicaPackageState;
- (void)_updateVolumeButtonGlyph;
- (void)_showOrHideDisplayModeControls;
- (void)_showOrHideAudioControls;
- (_Bool)_prefersVolumeSliderExpandedAutomatically;
- (void)volumeButtonPanChanged:(id)arg1;
- (void)endChangingVolume;
- (void)beginChangingVolume;
- (void)volumeButtonLongPressTriggered:(id)arg1;
- (void)volumeButtonTapTriggered:(id)arg1;
- (void)volumeSliderValueDidChange:(id)arg1;
- (void)handleCurrentRouteSupportsVolumeControlChanged:(id)arg1;
- (void)handleVolumeChange:(id)arg1;
- (void)endScrubbing;
- (void)scrubToTime:(double)arg1 resolution:(double)arg2;
- (void)beginScrubbing;
- (void)transportControls:(id)arg1 scrubberDidEndScrubbing:(id)arg2;
- (void)transportControls:(id)arg1 scrubberDidScrub:(id)arg2;
- (void)transportControls:(id)arg1 scrubberDidBeginScrubbing:(id)arg2;
- (void)transportControlsNeedsLayoutIfNeeded:(id)arg1;
- (void)secondScreenConnectionDidResignActive:(id)arg1;
- (void)secondScreenConnectionDidBecomeActive:(id)arg1;
- (void)playerViewControllerContentViewDidUpdateScrollingStatus:(id)arg1;
- (id)playerViewControllerContentViewOverrideLayoutClass:(id)arg1;
- (_Bool)playerViewControllerContentViewIsBeingTransitionedFromFullScreen:(id)arg1;
- (_Bool)playerViewControllerContentViewHasActiveTransition:(id)arg1;
- (void)playerViewControllerContentViewDidChangeVideoGravity:(id)arg1;
- (_Bool)playerViewControllerContentViewShouldApplyAutomaticVideoGravity:(id)arg1;
- (struct UIEdgeInsets)playerViewControllerContentViewEdgeInsetsForLetterboxedVideo:(id)arg1;
- (void)playerViewControllerContentViewDidLayoutSubviews:(id)arg1;
- (void)playerViewControllerContentViewDidMoveToSuperviewOrWindow:(id)arg1;
- (void)playerViewControllerContentViewPlaybackContentContainerViewChanged:(id)arg1;
- (_Bool)playerViewControllerContentViewIsPlayingOnSecondScreen:(id)arg1;
- (void)playerViewControllerContentView:(id)arg1 willLoadTurboModePlaceholderView:(id)arg2;
- (void)playerViewControllerContentView:(id)arg1 willLoadPlaybackControlsView:(id)arg2;
- (void)turboModePlaybackControlsPlaceholderViewDidLoad:(id)arg1;
- (void)playbackControlsViewDidLoad:(id)arg1;
@property(readonly, nonatomic) _Bool tapGestureRecognizersCanReceiveTouches;
@property(readonly, nonatomic) _Bool needsTimeResolver;
@property(readonly, nonatomic) _Bool playButtonsShowPauseGlyph;
@property(readonly, nonatomic) _Bool canShowLoadingIndicator;
@property(readonly, nonatomic) _Bool showsStartContentTransitionButtons;
@property(readonly, nonatomic) _Bool showsSkipButtons;
@property(readonly, nonatomic, getter=isSeekingEnabled) _Bool seekingEnabled;
@property(readonly, nonatomic) double maximumTime;
@property(readonly, nonatomic) double minimumTime;
@property(readonly, nonatomic) double currentTime;
@property(readonly, nonatomic) double targetTime;
@property(readonly, nonatomic) _Bool showsMediaSelectionButton;
@property(readonly, nonatomic) _Bool shouldEnterFullScreenWhenPlaybackBegins;
@property(readonly, nonatomic) _Bool showsTransportControls;
@property(readonly, nonatomic) _Bool prominentPlayButtonCanShowPauseGlyph;
@property(readonly, nonatomic) _Bool showsProminentPlayButton;
@property(readonly, nonatomic) _Bool showsRoutePickerView;
@property(readonly, nonatomic) _Bool entersFullScreenWhenTapped;
@property(readonly, nonatomic, getter=isFullScreen) _Bool fullScreen;
- (void)toggleMuted;
- (void)startUpdatesIfNeeded;
- (void)dealloc;
- (id)initWithPlayerViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

