//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SafariServices/WBSCertificateWarningPageHandler-Protocol.h>

@class NSString, NSTimer, NSURL, NSURLRequest, UINavigationController, WKWebView, _WKRemoteObjectInterface;
@protocol WBSCertificateWarningPagePresenter, _SFDialogPresenting, _SFPageLoadErrorControllerDelegate;

@interface _SFPageLoadErrorController : NSObject <WBSCertificateWarningPageHandler>
{
    _Bool _reloadAfterResume;
    WKWebView *_webView;
    NSTimer *_crashCountResetTimer;
    id <WBSCertificateWarningPagePresenter> _certificateWarningPagePresenterProxy;
    _WKRemoteObjectInterface *_certificateWarningPageHandlerInterface;
    struct __SecTrust *_certificateTrust;
    CDUnknownBlockType _certificateRecoveryAttempter;
    NSURL *_certificateFailingURL;
    UINavigationController *_certificateNavigationViewController;
    _Bool _reloadingFailedRequest;
    id <_SFPageLoadErrorControllerDelegate> _delegate;
    NSURLRequest *_failedRequest;
    unsigned long long _crashesSinceLastSuccessfulLoad;
    id <_SFDialogPresenting> _dialogPresenter;
}

@property(nonatomic) __weak id <_SFDialogPresenting> dialogPresenter; // @synthesize dialogPresenter=_dialogPresenter;
@property(readonly, nonatomic) unsigned long long crashesSinceLastSuccessfulLoad; // @synthesize crashesSinceLastSuccessfulLoad=_crashesSinceLastSuccessfulLoad;
@property(readonly, nonatomic) NSURLRequest *failedRequest; // @synthesize failedRequest=_failedRequest;
@property(readonly, nonatomic) _Bool reloadingFailedRequest; // @synthesize reloadingFailedRequest=_reloadingFailedRequest;
@property(nonatomic) __weak id <_SFPageLoadErrorControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)openClockSettings;
- (void)_dismissCertificateViewButtonTapped;
- (void)showCertificateInformation;
- (void)visitInsecureWebsite;
- (void)visitInsecureWebsiteWithTemporaryBypass;
- (void)goBackButtonClicked;
- (void)scheduleResetCrashCount;
- (_Bool)updateCrashesAndShowCrashError:(id)arg1 URLString:(id)arg2;
- (void)_resetCrashCountSoon;
- (void)clearCrashCountResetTimer;
- (void)_resetCrashCount:(id)arg1;
- (void)_showRepeatedWebProcessCrashError:(id)arg1 URLString:(id)arg2;
- (void)addDownloadFailedAlertWithDescription:(id)arg1;
- (void)addInvalidProfileAlert;
- (void)addInvalidURLAlert;
- (void)handleClientCertificateAuthenticationChallenge:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)handleSubframeCertificateError:(id)arg1;
- (void)handleFrameLoadError:(id)arg1;
- (void)reloadAfterError;
- (void)clearFailedRequest;
- (void)addDisallowedFileURLAlert;
- (void)addDisallowedUseOfJavaScriptAlert;
- (void)_handleFrameLoadError:(id)arg1 forURL:(id)arg2 recoveryAttempter:(CDUnknownBlockType)arg3;
- (id)_titleForError:(id)arg1;
- (void)_setFailedRequest:(id)arg1;
- (void)_reachabilityChanged:(id)arg1;
- (_Bool)_handleCertificateError:(id)arg1 forURL:(id)arg2 isMainFrame:(_Bool)arg3 recoveryAttempter:(CDUnknownBlockType)arg4;
- (void)_loadCertificateWarningPageForContext:(id)arg1;
- (id)_certificateWarningPagePresenterProxy;
- (void)showErrorPageWithTitle:(id)arg1 bodyText:(id)arg2 forError:(id)arg3;
- (void)showErrorPageWithTitle:(id)arg1 bodyText:(id)arg2 learnMoreLink:(id)arg3 forError:(id)arg4;
- (void)addAlertWithTitle:(id)arg1 bodyText:(id)arg2;
- (void)addFormAlertWithTitle:(id)arg1 decisionHandler:(CDUnknownBlockType)arg2;
- (void)performAction:(int)arg1 forAlert:(id)arg2;
- (void)_continueWithoutCredentialsUsingAlertContext:(id)arg1;
- (void)_continueAfterCertificateAlertWithURL:(id)arg1 trust:(struct __SecTrust *)arg2 recoveryAttempter:(CDUnknownBlockType)arg3;
- (void)addAlert:(id)arg1;
- (void)addDialog:(id)arg1;
- (id)_genericMessageForError:(id)arg1;
- (id)_specializedMessageForError:(id)arg1 URL:(id)arg2;
- (void)_clearCertificateWarningPageHandlerInterface;
- (void)_setUpCertificateWarningPageHandlerInterface;
- (void)dealloc;
- (id)initWithWebView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

