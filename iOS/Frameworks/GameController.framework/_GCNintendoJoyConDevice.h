//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GCDeviceBattery, GCHapticCapabilityGraph, NSArray, NSMapTable, NSSet, NSString, _GCDeviceConfiguration, _GCHIDServiceInfo, _GCNintendoFusedJoyConDevice, _GCNintendoJoyConDeviceManager;
@protocol GCBatteryServiceServerInterface, NSObject><NSCopying><NSSecureCoding, _GCDeviceDriverConnection, _GCDeviceManager, _GCGamepadEventSourceDescription;

__attribute__((visibility("hidden")))
@interface _GCNintendoJoyConDevice : NSObject
{
    _GCNintendoJoyConDeviceManager *_manager;
    _GCHIDServiceInfo *_serviceInfo;
    id <_GCDeviceDriverConnection> _driverConnection;
    id _driverConnectionInvalidationRegistration;
    NSMapTable *_clients;
    long long _indicatedPlayerIndex;
    NSMapTable *_clientPlayerIndicatorEndpoints;
    CDUnknownBlockType _batteryComponentBatteryUpdatedHandler;
    id <GCBatteryServiceServerInterface> _batteryServiceServer;
    GCDeviceBattery *_battery;
    NSMapTable *_clientBatteryEndpoints;
    NSArray *_hapticEngines;
    GCHapticCapabilityGraph *_hapticCapabilityGraph;
    unsigned char _type;
    unsigned char _inputMode;
    id <NSObject><NSCopying><NSSecureCoding> _identifier;
    _GCDeviceConfiguration *_configuration;
    _GCNintendoFusedJoyConDevice *_fusionDevice;
}

+ (id)getHapticCapabilityGraph:(_Bool)arg1;
+ (id)getHapticActuators:(_Bool)arg1;
- (void).cxx_destruct;
@property(nonatomic) __weak _GCNintendoFusedJoyConDevice *fusionDevice; // @synthesize fusionDevice=_fusionDevice;
@property(retain, nonatomic) _GCDeviceConfiguration *configuration; // @synthesize configuration=_configuration;
@property(readonly, nonatomic) id <_GCDeviceDriverConnection> driverConnection; // @synthesize driverConnection=_driverConnection;
@property(nonatomic) unsigned char inputMode; // @synthesize inputMode=_inputMode;
@property(readonly, nonatomic) unsigned char type; // @synthesize type=_type;
@property(readonly) __weak id <_GCDeviceManager> manager; // @synthesize manager=_manager;
@property(readonly, copy) id <NSObject><NSCopying><NSSecureCoding> identifier; // @synthesize identifier=_identifier;
- (void)activateLogical;
@property(readonly) NSSet *underlyingDevices;
- (id)propertyForKey:(id)arg1;
@property(readonly) NSSet *components;
- (void)playerIndicatorXPCProxyServerEndpoint:(id)arg1 didReceivePlayerIndexChange:(long long)arg2;
@property(readonly, nonatomic) CDStruct_f4b747e6 buttonsColor;
@property(readonly, nonatomic) CDStruct_f4b747e6 bodyColor;
- (void)setDriverConnection:(id)arg1;
- (id)init;
- (id)initWithHIDDevice:(id)arg1 manager:(id)arg2;
- (id)makeControllerForClient:(id)arg1;
- (void)_removeClient:(id)arg1;
- (void)_addClient:(id)arg1;
@property(readonly, nonatomic) GCHapticCapabilityGraph *hapticCapabilityGraph;
@property(readonly, nonatomic) NSArray *hapticEngines;
@property(readonly, nonatomic) GCDeviceBattery *battery;
- (void)propagateBattery:(id)arg1;
- (id)readBattery;
@property(copy, nonatomic) CDUnknownBlockType deviceBatteryServiceConnectedHandler;
@property(copy, nonatomic) CDUnknownBlockType deviceBatteryComponentBatteryUpdatedHandler;
@property long long indicatedPlayerIndex;
@property(readonly) id <_GCGamepadEventSourceDescription> gamepadEventSource;
- (void)homeButtonLongPressGesture:(_Bool)arg1;
- (void)updateBattery:(unsigned char)arg1 isCharging:(_Bool)arg2;
- (id)hapticDriver;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

