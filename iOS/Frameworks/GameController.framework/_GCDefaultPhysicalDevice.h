//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GCDeviceBattery, GCDeviceLight, GCHapticCapabilityGraph, NSArray, NSSet, NSString, _GCHIDServiceInfo;
@protocol GCAdaptiveTriggersServiceServerInterface, GCBatteryServiceServerInterface, GCGameIntentServiceServerInterface, GCLightServiceServerInterface, GCMotionServiceServerInterface, NSObject><NSCopying><NSSecureCoding, _GCDefaultPhysicalDeviceDelegate, _GCDeviceDriverConnection, _GCDeviceManager, _GCGamepadEventSourceDescription, _GCMotionEventSourceDescription;

__attribute__((visibility("hidden")))
@interface _GCDefaultPhysicalDevice : NSObject
{
    id <_GCDeviceDriverConnection> _driverConnection;
    id _driverConnectionInvalidationRegistration;
    id <_GCDeviceDriverConnection> _filterConnection;
    id _filterConnectionInvalidationRegistration;
    CDUnknownBlockType _lightComponentServiceConnectedHandler;
    CDUnknownBlockType _adaptiveTriggersComponentServiceConnectedHandler;
    CDUnknownBlockType _adaptiveTriggersComponentStatusUpdatedHandler;
    CDUnknownBlockType _motionComponentServiceConnectedHandler;
    CDUnknownBlockType _batteryComponentServiceConnectedHandler;
    CDUnknownBlockType _batteryComponentBatteryUpdatedHandler;
    long long _cachedIntentEvent;
    CDUnknownBlockType _gameIntentComponentGameIntentTriggeredHandler;
    unsigned long long _cachedGlyphFlags;
    id <NSObject><NSCopying><NSSecureCoding> _identifier;
    id <_GCDeviceManager> _manager;
    id <_GCDefaultPhysicalDeviceDelegate> _delegate;
    id <GCAdaptiveTriggersServiceServerInterface> _adaptiveTriggersServiceServer;
    id <GCLightServiceServerInterface> _lightServiceServer;
    id <GCMotionServiceServerInterface> _motionServiceServer;
    id <GCBatteryServiceServerInterface> _batteryServiceServer;
    id <GCGameIntentServiceServerInterface> _gameIntentServiceServer;
    _GCHIDServiceInfo *_serviceInfo;
}

+ (id)identifierForService:(id)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) _GCHIDServiceInfo *serviceInfo; // @synthesize serviceInfo=_serviceInfo;
@property(readonly, nonatomic) id <GCGameIntentServiceServerInterface> gameIntentServiceServer; // @synthesize gameIntentServiceServer=_gameIntentServiceServer;
@property(readonly, nonatomic) id <GCBatteryServiceServerInterface> batteryServiceServer; // @synthesize batteryServiceServer=_batteryServiceServer;
@property(readonly, nonatomic) id <GCMotionServiceServerInterface> motionServiceServer; // @synthesize motionServiceServer=_motionServiceServer;
@property(readonly, nonatomic) id <GCLightServiceServerInterface> lightServiceServer; // @synthesize lightServiceServer=_lightServiceServer;
@property(readonly, nonatomic) id <GCAdaptiveTriggersServiceServerInterface> adaptiveTriggersServiceServer; // @synthesize adaptiveTriggersServiceServer=_adaptiveTriggersServiceServer;
@property(nonatomic) __weak id <_GCDefaultPhysicalDeviceDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) __weak id <_GCDeviceManager> manager; // @synthesize manager=_manager;
@property(readonly, copy) id <NSObject><NSCopying><NSSecureCoding> identifier; // @synthesize identifier=_identifier;
- (void)updateGlyphFlags;
- (void)eaAccessoriesDidChange;
- (id)propertyForKey:(id)arg1;
@property(readonly) NSSet *components;
- (id)driverConnection;
- (void)setDriverConnection:(id)arg1;
- (void)setFilterConnection:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
- (id)redactedDescription;
@property(readonly, copy) NSString *description;
- (_Bool)conformsToProtocol:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)_workaround_backbone_97462229:(id)arg1;
- (id)initWithHIDDevice:(id)arg1 manager:(id)arg2;
@property(readonly) id <_GCGamepadEventSourceDescription> gamepadEventSource;
- (_Bool)supportsGamepad;
@property(nonatomic) _Bool sensorsActive;
@property(readonly, nonatomic) id <_GCMotionEventSourceDescription> motionEventSource;
@property(copy, nonatomic) CDUnknownBlockType deviceMotionServiceConnectedHandler;
- (_Bool)supportsMotion;
@property long long indicatedPlayerIndex;
- (_Bool)supportsPlayerIndicator;
@property(retain, nonatomic) GCDeviceLight *light;
@property(copy, nonatomic) CDUnknownBlockType deviceLightServiceConnectedHandler;
- (_Bool)supportsLight;
@property(readonly, nonatomic) NSArray *triggerStatuses;
@property(copy, nonatomic) CDUnknownBlockType deviceAdaptiveTriggersComponentStatusUpdatedHandler;
- (void)setAdaptiveTriggersPayload:(id)arg1 forIndex:(int)arg2;
@property(copy, nonatomic) CDUnknownBlockType deviceAdaptiveTriggersServiceConnectedHandler;
- (_Bool)supportsAdaptiveTriggers;
- (void)updateAdaptiveTriggerStatusWithLeftMode:(unsigned char)arg1 leftStatus:(unsigned char)arg2 leftArmPosition:(unsigned char)arg3 rightMode:(unsigned char)arg4 rightStatus:(unsigned char)arg5 rightArmPosition:(unsigned char)arg6;
@property(readonly, nonatomic) GCDeviceBattery *battery;
@property(copy, nonatomic) CDUnknownBlockType deviceBatteryComponentBatteryUpdatedHandler;
@property(copy, nonatomic) CDUnknownBlockType deviceBatteryServiceConnectedHandler;
- (_Bool)supportsBattery;
- (void)updateBattery:(unsigned char)arg1 isCharging:(_Bool)arg2;
@property(readonly, nonatomic) GCHapticCapabilityGraph *hapticCapabilityGraph;
@property(readonly, nonatomic) NSArray *hapticEngines;
- (_Bool)supportsHapticCapabilities;
@property(copy, nonatomic) CDUnknownBlockType deviceGameIntentComponentGameIntentTriggeredHandler;
- (void)setEnableGlobalGameControllerFunctionality:(_Bool)arg1;
- (void)triggerGameIntentWithEvent:(long long)arg1;
- (unsigned long long)getGlyphFlags;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

