//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GCExtendedGamepad, GCGamepad, GCMicroGamepad, GCMotion, GCStereoAR, NSMutableArray, NSString;
@protocol GCNamedProfile, OS_dispatch_queue;

@interface GCController : NSObject
{
    NSString *_description;
    _Bool _allHIDDevicesConnected;
    _Bool _forwarded;
    _Bool _snapshot;
    _Bool _physicalDeviceUsesCompass;
    _Bool _published;
    unsigned int _service;
    NSString *_vendorName;
    NSString *_debugName;
    CDUnknownBlockType _controllerPausedHandler;
    NSObject<OS_dispatch_queue> *_handlerQueue;
    long long _playerIndex;
    NSString *_productCategory;
    id <GCNamedProfile> _profile;
    NSMutableArray *_hidServices;
    NSString *_physicalDeviceUniqueID;
    unsigned long long _deviceHash;
}

+ (_Bool)supportsSecureCoding;
+ (id)controllerWithStereoAR;
+ (id)controllerWithExtendedGamepad;
+ (id)controllerWithMicroGamepad;
+ (void)stopWirelessControllerDiscovery;
+ (void)startWirelessControllerDiscoveryWithCompletionHandler:(CDUnknownBlockType)arg1;
+ (void)_startWirelessControllerDiscoveryWithCompanions:(_Bool)arg1 btClassic:(_Bool)arg2 btle:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (id)controllers;
+ (void)__daemon__appDidEnterBackground;
+ (void)__daemon__appWillEnterForeground;
+ (void)__daemon__controllerWithUDID:(unsigned long long)arg1 setValue:(float)arg2 forElement:(int)arg3;
+ (void)__daemon__removeController:(id)arg1;
+ (void)__daemon__addController:(id)arg1;
+ (void)__daemon__requestConnectedHostUpdatesWithHandler:(CDUnknownBlockType)arg1;
+ (void)__daemon__setUserActivityUserInfo:(id)arg1;
+ (void)__daemon__startBonjourService;
+ (void)__setLogger__:(CDUnknownBlockType)arg1;
+ (void)__openXPC_and_CBApplicationDidBecomeActive__;
+ (void)__openXPC__;
+ (void)__open__;
@property(getter=isPublished) _Bool published; // @synthesize published=_published;
@property(nonatomic) unsigned long long deviceHash; // @synthesize deviceHash=_deviceHash;
@property(nonatomic) _Bool physicalDeviceUsesCompass; // @synthesize physicalDeviceUsesCompass=_physicalDeviceUsesCompass;
@property(retain, nonatomic) NSString *physicalDeviceUniqueID; // @synthesize physicalDeviceUniqueID=_physicalDeviceUniqueID;
@property(nonatomic) unsigned int service; // @synthesize service=_service;
@property(retain, nonatomic) NSMutableArray *hidServices; // @synthesize hidServices=_hidServices;
@property(retain, nonatomic) id <GCNamedProfile> profile; // @synthesize profile=_profile;
@property(retain, nonatomic) NSString *productCategory; // @synthesize productCategory=_productCategory;
@property(nonatomic) long long playerIndex; // @synthesize playerIndex=_playerIndex;
@property(readonly, getter=isSnapshot) _Bool snapshot; // @synthesize snapshot=_snapshot;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *handlerQueue; // @synthesize handlerQueue=_handlerQueue;
@property(copy, nonatomic) CDUnknownBlockType controllerPausedHandler; // @synthesize controllerPausedHandler=_controllerPausedHandler;
@property(copy, nonatomic) NSString *debugName; // @synthesize debugName=_debugName;
- (void).cxx_destruct;
- (void)clearServiceRef;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)_setSnapshot:(_Bool)arg1;
- (id)capture;
- (id)description;
@property(readonly, retain, nonatomic) GCMotion *motion;
@property(readonly, retain, nonatomic) GCStereoAR *stereoAR;
@property(readonly, retain, nonatomic) GCExtendedGamepad *extendedGamepad;
@property(readonly, retain, nonatomic) GCMicroGamepad *microGamepad;
@property(readonly, retain, nonatomic) GCGamepad *gamepad;
- (unsigned int)sampleRate;
- (void)addServiceRefs:(id)arg1;
- (void)removeServiceRef:(struct __IOHIDServiceClient *)arg1;
- (void *)createInputBufferForDevice:(struct __IOHIDDevice *)arg1 withSize:(unsigned long long)arg2;
- (_Bool)hasServiceRef:(struct __IOHIDServiceClient *)arg1;
- (_Bool)isEqualToController:(id)arg1;
- (_Bool)supportsMotionLite;
@property(readonly, nonatomic, getter=isAttachedToDevice) _Bool attachedToDevice;
@property(getter=areAllHIDDevicesConnected) _Bool allHIDDevicesConnected; // @synthesize allHIDDevicesConnected=_allHIDDevicesConnected;
@property(copy, nonatomic) NSString *vendorName; // @synthesize vendorName=_vendorName;
- (_Bool)displayTrueSiriRemoteName;
@property(nonatomic, getter=isForwarded) _Bool forwarded; // @synthesize forwarded=_forwarded;
- (id)initWithServiceRef:(struct __IOHIDServiceClient *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithProfile:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType __deprecated_controllerPausedHandler;

@end

