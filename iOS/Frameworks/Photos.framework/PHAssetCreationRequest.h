//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Photos/PHInsertChangeRequest-Protocol.h>

@class NSDictionary, NSManagedObjectID, NSMutableArray, NSMutableDictionary, NSNumber, NSString, PHAssetCreationAdjustmentBakeInOptions, PHAssetCreationDerivativeContext, PHAssetCreationMetadataCopyOptions, PHAssetCreationPhotoStreamPublishingRequest, PHAssetResourceBag, PHMomentShare, PHRelationshipChangeRequestHelper;

@interface PHAssetCreationRequest <PHInsertChangeRequest>
{
    NSMutableArray *_assetResources;
    PHAssetResourceBag *_assetResourceBag;
    NSMutableDictionary *_movedFiles;
    _Bool _duplicateAllowsPrivateMetadata;
    _Bool _shouldCreateScreenshot;
    PHAssetCreationDerivativeContext *_derivativeContext;
    _Bool _duplicateLivePhotoAsStill;
    _Bool _duplicateAsOriginal;
    _Bool _duplicateSinglePhotoFromBurst;
    _Bool _duplicateSpatialOverCaptureResources;
    _Bool _duplicateAsAlternateAsset;
    _Bool _createAsCompanionSyncedAsset;
    short _importedBy;
    unsigned short _duplicateAssetPhotoLibraryType;
    NSString *_importSessionID;
    NSString *_conversationID;
    NSDictionary *_customAssetProperties;
    PHMomentShare *_momentShare;
    PHAssetCreationPhotoStreamPublishingRequest *__photoStreamPublishingRequest;
    NSManagedObjectID *_limitedLibraryFetchFilterObjectID;
    NSNumber *_assetExistsWithSyndicationIdentifier;
    NSString *_syndicationIdentifier;
    PHRelationshipChangeRequestHelper *_momentShareHelper;
    NSString *_duplicateAssetIdentifier;
    PHAssetCreationAdjustmentBakeInOptions *_adjustmentBakeInOptions;
    PHAssetCreationMetadataCopyOptions *_metadataCopyOptions;
    NSString *_forcePairingIdentifier;
    NSString *_momentShareUUID;
    NSString *_guestAssetUUID;
    NSString *_importedByBundleIdentifier;
    CDStruct_1b6d18a9 _duplicateStillSourceTime;
}

+ (long long)_originalResourceTypeFromAdjustedResourceType:(long long)arg1 sourceAssetIsLoopingVideo:(_Bool)arg2;
+ (id)_uuidForAssetWithSyndicationIdentifier:(id)arg1 inLibrary:(id)arg2;
+ (id)_jpegDataFromRAWData:(id)arg1 derivativeContext:(id)arg2;
+ (id)_imageIOThumbnailCreationOptionsFromDerivativeContext:(id)arg1;
+ (id)_creationOptionsFromExternalResource:(id)arg1 andSourceUrl:(id)arg2;
+ (_Bool)supportsImportAssetResourceTypes:(id)arg1;
+ (_Bool)supportsAssetResourceTypes:(id)arg1;
+ (id)creationRequestForAssetCopyFromAsset:(id)arg1;
+ (id)creationRequestForAssetCopyFromAsset:(id)arg1 options:(id)arg2;
+ (id)creationRequestForAssetFromGuestAsset:(id)arg1 checkForMomentShareAsset:(_Bool)arg2;
+ (id)creationRequestForAssetFromGuestAsset:(id)arg1;
+ (id)creationRequestForAssetFromAssetBundle:(id)arg1;
+ (id)creationRequestForAssetFromVideoComplementBundle:(id)arg1;
+ (id)creationRequestForAssetWithSyndicationIdentifier:(id)arg1;
+ (id)creationRequestForAssetFromVideoAtFileURL:(id)arg1;
+ (id)creationRequestForAssetFromImageAtFileURL:(id)arg1;
+ (id)creationRequestForAssetFromImage:(id)arg1;
+ (id)creationRequestForAssetFromScreenshotImage:(id)arg1;
+ (id)creationRequestForAssetFromImageData:(id)arg1 usingUUID:(id)arg2;
+ (id)creationRequestForAssetFromImageData:(id)arg1;
+ (id)creationRequestForAssetWithUUID:(id)arg1;
+ (id)creationRequestForAsset;
+ (id)_creationRequestForAssetUsingUUID:(id)arg1;
- (void).cxx_destruct;
@property(nonatomic) _Bool createAsCompanionSyncedAsset; // @synthesize createAsCompanionSyncedAsset=_createAsCompanionSyncedAsset;
@property(copy, nonatomic) NSString *importedByBundleIdentifier; // @synthesize importedByBundleIdentifier=_importedByBundleIdentifier;
@property(readonly, nonatomic) NSString *guestAssetUUID; // @synthesize guestAssetUUID=_guestAssetUUID;
@property(readonly, nonatomic) NSString *momentShareUUID; // @synthesize momentShareUUID=_momentShareUUID;
@property(readonly, nonatomic) NSString *forcePairingIdentifier; // @synthesize forcePairingIdentifier=_forcePairingIdentifier;
@property(copy, nonatomic, setter=_setMetadataCopyOptions:) PHAssetCreationMetadataCopyOptions *metadataCopyOptions; // @synthesize metadataCopyOptions=_metadataCopyOptions;
@property(copy, nonatomic, setter=_setAdjustmentBakeInOptions:) PHAssetCreationAdjustmentBakeInOptions *adjustmentBakeInOptions; // @synthesize adjustmentBakeInOptions=_adjustmentBakeInOptions;
@property(nonatomic, setter=_setDuplicateAsAlternateAsset:) _Bool duplicateAsAlternateAsset; // @synthesize duplicateAsAlternateAsset=_duplicateAsAlternateAsset;
@property(nonatomic, setter=_setDuplicateSpatialOverCaptureResources:) _Bool duplicateSpatialOverCaptureResources; // @synthesize duplicateSpatialOverCaptureResources=_duplicateSpatialOverCaptureResources;
@property(nonatomic, setter=_setDuplicateSinglePhotoFromBurst:) _Bool duplicateSinglePhotoFromBurst; // @synthesize duplicateSinglePhotoFromBurst=_duplicateSinglePhotoFromBurst;
@property(nonatomic, setter=_setDuplicateAsOriginal:) _Bool duplicateAsOriginal; // @synthesize duplicateAsOriginal=_duplicateAsOriginal;
@property(nonatomic, setter=_setDuplicateLivePhotoAsStill:) _Bool duplicateLivePhotoAsStill; // @synthesize duplicateLivePhotoAsStill=_duplicateLivePhotoAsStill;
@property(nonatomic, setter=_setDuplicateStillSourceTime:) CDStruct_1b6d18a9 duplicateStillSourceTime; // @synthesize duplicateStillSourceTime=_duplicateStillSourceTime;
@property(nonatomic, setter=_setDuplicateAssetPhotoLibraryType:) unsigned short duplicateAssetPhotoLibraryType; // @synthesize duplicateAssetPhotoLibraryType=_duplicateAssetPhotoLibraryType;
@property(retain, nonatomic, setter=_setDuplicateAssetIdentifier:) NSString *duplicateAssetIdentifier; // @synthesize duplicateAssetIdentifier=_duplicateAssetIdentifier;
@property(readonly, nonatomic) PHRelationshipChangeRequestHelper *momentShareHelper; // @synthesize momentShareHelper=_momentShareHelper;
@property(retain, nonatomic) NSString *syndicationIdentifier; // @synthesize syndicationIdentifier=_syndicationIdentifier;
@property(retain, nonatomic) NSNumber *assetExistsWithSyndicationIdentifier; // @synthesize assetExistsWithSyndicationIdentifier=_assetExistsWithSyndicationIdentifier;
@property(retain, nonatomic, getter=_limitedLibraryFetchFilterObjectID, setter=_setLimitedLibraryFetchFilterObjectID:) NSManagedObjectID *limitedLibraryFetchFilterObjectID; // @synthesize limitedLibraryFetchFilterObjectID=_limitedLibraryFetchFilterObjectID;
@property(retain, nonatomic, setter=_setPhotoStreamPublishingRequest:) PHAssetCreationPhotoStreamPublishingRequest *_photoStreamPublishingRequest; // @synthesize _photoStreamPublishingRequest=__photoStreamPublishingRequest;
@property(retain, nonatomic) NSDictionary *customAssetProperties; // @synthesize customAssetProperties=_customAssetProperties;
@property(retain, nonatomic) NSString *conversationID; // @synthesize conversationID=_conversationID;
@property(retain, nonatomic) NSString *importSessionID; // @synthesize importSessionID=_importSessionID;
@property(nonatomic) short importedBy; // @synthesize importedBy=_importedBy;
@property(readonly, nonatomic) long long accessScopeOptionsRequirement;
- (_Bool)isDuplicateAssetCreationRequest;
@property(nonatomic, getter=_shouldCreateScreenshot, setter=_setShouldCreateScreenshot:) _Bool shouldCreateScreenshot;
@property(nonatomic, setter=_setDuplicateAllowsPrivateMetadata:) _Bool duplicateAllowsPrivateMetadata;
- (_Bool)isNew;
@property(retain, nonatomic) PHMomentShare *momentShare; // @synthesize momentShare=_momentShare;
- (id)_mutableMomentShareObjectIDsAndUUIDs;
- (void)_prepareMomentShareHelperIfNeeded;
- (void)performTransactionCompletionHandlingInPhotoLibrary:(id)arg1;
- (_Bool)applyMutationsToManagedObject:(id)arg1 photoLibrary:(id)arg2 error:(id *)arg3;
- (id)createManagedObjectForInsertIntoPhotoLibrary:(id)arg1 error:(id *)arg2;
- (_Bool)_validateNewObjectUUID:(id)arg1 inPhotoLibrary:(id)arg2 error:(id *)arg3;
- (_Bool)validateInsertIntoPhotoLibrary:(id)arg1 error:(id *)arg2;
- (_Bool)_populateDuplicatingAssetCreationRequest:(id)arg1 photoLibrary:(id)arg2 error:(id *)arg3;
- (void)_updateMutationsForDuplicatingPrivateMetadataFromAsset:(id)arg1;
- (id)duplicatedAssetResourcesFromAsset:(id)arg1 stillSourceTime:(CDStruct_1b6d18a9)arg2 flattenLivePhotoIntoStillPhoto:(_Bool)arg3 duplicateAsOriginal:(_Bool)arg4 duplicateWithAdjustmentsBakedIn:(_Bool)arg5 duplicatePhotoAsData:(_Bool)arg6 error:(id *)arg7;
- (void)encodeToXPCDict:(id)arg1;
- (id)initWithXPCDict:(id)arg1 request:(id)arg2 clientAuthorization:(id)arg3;
- (long long)_mediaTypeForCreatedAsset;
- (id)placeholderForCreatedAsset;
- (void)_addResourceWithType:(long long)arg1 data:(id)arg2 orFileURL:(id)arg3 options:(id)arg4;
- (void)addResourceWithType:(long long)arg1 data:(id)arg2 options:(id)arg3;
- (void)addResourceWithType:(long long)arg1 fileURL:(id)arg2 options:(id)arg3;
- (id)initWithHelper:(id)arg1;
- (id)initForNewObjectWithUUID:(id)arg1;
- (id)initForNewObject;
- (id)_createAssetFromValidatedResources:(id)arg1 withUUID:(id)arg2 assetAlreadyExistsAsPlaceholder:(_Bool)arg3 inPhotoLibrary:(id)arg4 error:(id *)arg5;
- (id)createAssetFromValidatedResources:(id)arg1 withUUID:(id)arg2 assetAlreadyExistsAsPlaceholder:(_Bool)arg3 inPhotoLibrary:(id)arg4 error:(id *)arg5;
- (void)finalizeRequestWithBatchSuccess:(_Bool)arg1;
- (void)performConcurrentWork;
- (struct CGImageSource *)_imageSourceForDerivatives;
- (void)_setupDerivativeCreationContextForAsset:(id)arg1 imageSource:(struct CGImageSource *)arg2 imageData:(id)arg3;
- (id)_externalLivePhotoResourceForAsset:(id)arg1;
- (_Bool)_writeDataToDisk:(id)arg1 imageUTIType:(id)arg2 exifProperties:(id)arg3 mainFileURL:(id)arg4 thumbnailData:(id)arg5;
- (_Bool)_accessWritableURLForUUID:(id)arg1 imageUTI:(id)arg2 originalFilename:(id)arg3 photoLibrary:(id)arg4 withHandler:(CDUnknownBlockType)arg5;
- (id)_managedAssetFromPrimaryResourceData:(id)arg1 withUUID:(id)arg2 photoLibrary:(id)arg3 mainFileMetadata:(id *)arg4 getImageSource:(struct CGImageSource **)arg5 imageData:(id *)arg6;
- (short)_savedAssetTypeForAsset;
- (id)_exifPropertiesFromSourceImageDataExifProperties:(id)arg1;
- (_Bool)_createOriginalResourceForAsset:(id)arg1 fromValidatedResource:(id)arg2 resourceType:(unsigned int)arg3 photoLibrary:(id)arg4 destinationURL:(id)arg5 error:(id *)arg6;
- (_Bool)_createAudioResourceForAsset:(id)arg1 fromValidatedResources:(id)arg2 photoLibrary:(id)arg3 error:(id *)arg4;
- (_Bool)_createXmpResourceForAsset:(id)arg1 fromValidatedResources:(id)arg2 photoLibrary:(id)arg3 error:(id *)arg4;
- (_Bool)_createSocResourceForAsset:(id)arg1 fromValidatedResources:(id)arg2 photoLibrary:(id)arg3 error:(id *)arg4;
- (_Bool)_createRAWSidecarForAsset:(id)arg1 fromValidatedResources:(id)arg2 mainFileMetadata:(id)arg3 photoLibrary:(id)arg4 error:(id *)arg5;
- (_Bool)_createAssetAsPhotoIris:(id)arg1 fromValidatedResources:(id)arg2 mainFileMetadata:(id)arg3 error:(id *)arg4;
- (id)_ingestOriginalFromSrcURL:(id)arg1 toDstURL:(id)arg2 useSecureMove:(_Bool)arg3 resource:(id)arg4 resourceType:(unsigned int)arg5 asset:(id)arg6 error:(id *)arg7;
- (_Bool)_ingestOriginalInPlaceSrcURL:(id)arg1 dstURL:(id)arg2 asset:(id)arg3 error:(id *)arg4;
- (_Bool)_createAssetAsAdjusted:(id)arg1 fromValidatedResources:(id)arg2 mainFileMetadata:(id)arg3 error:(id *)arg4;
- (id)makeSubstitueRenderImageFileFromPath:(id)arg1 primaryResource:(id)arg2 fileSuffix:(id)arg3 error:(id *)arg4;
- (id)_secureMove:(_Bool)arg1 assetResource:(id)arg2 photoLibrary:(id)arg3 error:(id *)arg4;
- (id)_secureMove:(_Bool)arg1 fileAtURL:(id)arg2 toURL:(id)arg3 capabilities:(id)arg4 error:(id *)arg5;
@property(readonly, nonatomic) NSDictionary *_movedFiles;
- (void)_resetMovedFiles;
- (_Bool)_restoreMovedFilesOnFailure;
- (void)_didMoveFileFromURL:(id)arg1 toURL:(id)arg2;
- (void)_copyMediaAnalysisProperties:(id)arg1;
- (void)_copyUserSpecificMetadataFromAsset:(id)arg1;
- (void)_copyMetadataFromAsset:(id)arg1;

// Remaining properties
@property(readonly, nonatomic, getter=isClientEntitled) _Bool clientEntitled;
@property(readonly, nonatomic) NSString *clientName;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) _Bool isNewRequest;
@property(readonly, nonatomic) NSString *managedEntityName;
@property(readonly, getter=isMutated) _Bool mutated;
@property(readonly, nonatomic) NSManagedObjectID *objectID;
@property(nonatomic) _Bool shouldPerformConcurrentWork;
@property(readonly) Class superclass;

@end

