//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSDictionary, NSIndexSet, NSString, NSUndoManager, RTIInputSystemSourceSession, UIColor, UIContextMenuInteraction, UIGestureRecognizer, UIImage, UIInputContextHistory, UITextInputAssistantItem, UITextInputPasswordRules, UITextInteractionAssistant, UITextPosition, UITextRange, UIView, UIWKTextInteractionAssistant, UIWebFormAccessory, UIWebTouchEventsGestureRecognizer, WKBrowsingContextController, WKDateTimeInputControl, WKFormSelectControl, _UISupplementalLexicon;
@protocol NSObject><NSCopying, UITextInputDelegate, UITextInputSuggestionDelegate, UITextInputTokenizer, WKFormControl;

__attribute__((visibility("hidden")))
@interface WKContentView
{
    struct RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>> _page;
    struct WeakObjCPtr<WKWebView> _webView;
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForImmediatelyResettableGestures;
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForDelayedResettableGestures;
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForSyntheticTapGestures;
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForImmediatelyResettableGestures;
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForDelayedResettableGestures;
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForSyntheticTapGestures;
    struct optional<WTF::HashSet<WTF::RetainPtr<WKDeferringGestureRecognizer>>> _failedTouchStartDeferringGestures;
    struct RetainPtr<WKDeferringGestureRecognizer> _imageAnalysisDeferringGestureRecognizer;
    struct unique_ptr<WebKit::GestureRecognizerConsistencyEnforcer, std::default_delete<WebKit::GestureRecognizerConsistencyEnforcer>> _gestureRecognizerConsistencyEnforcer;
    struct RetainPtr<UIWebTouchEventsGestureRecognizer> _touchEventGestureRecognizer;
    _Bool _touchEventsCanPreventNativeGestures;
    _Bool _preventsPanningInXAxis;
    _Bool _preventsPanningInYAxis;
    struct RetainPtr<WKSyntheticTapGestureRecognizer> _singleTapGestureRecognizer;
    struct RetainPtr<WKHighlightLongPressGestureRecognizer> _highlightLongPressGestureRecognizer;
    struct RetainPtr<UILongPressGestureRecognizer> _longPressGestureRecognizer;
    struct RetainPtr<WKSyntheticTapGestureRecognizer> _doubleTapGestureRecognizer;
    struct RetainPtr<UITapGestureRecognizer> _nonBlockingDoubleTapGestureRecognizer;
    struct RetainPtr<UITapGestureRecognizer> _doubleTapGestureRecognizerForDoubleClick;
    struct RetainPtr<UITapGestureRecognizer> _twoFingerDoubleTapGestureRecognizer;
    struct RetainPtr<UITapGestureRecognizer> _twoFingerSingleTapGestureRecognizer;
    struct RetainPtr<WKInspectorNodeSearchGestureRecognizer> _inspectorNodeSearchGestureRecognizer;
    struct RetainPtr<WKTouchActionGestureRecognizer> _touchActionGestureRecognizer;
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionLeftSwipeGestureRecognizer;
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionRightSwipeGestureRecognizer;
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionUpSwipeGestureRecognizer;
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionDownSwipeGestureRecognizer;
    struct RetainPtr<WKMouseGestureRecognizer> _mouseGestureRecognizer;
    struct RetainPtr<WKMouseGestureRecognizer> _alternateMouseGestureRecognizer;
    unsigned char _mouseEventPolicy;
    struct RetainPtr<UIIndirectScribbleInteraction> _scribbleInteraction;
    struct RetainPtr<UIPointerInteraction> _pointerInteraction;
    _Bool _hasOutstandingPointerInteractionRequest;
    struct optional<std::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (UIPointerRegion *)>>> _deferredPointerInteractionRequest;
    struct RetainPtr<UIWKTextInteractionAssistant> _textInteractionAssistant;
    struct OptionSet<WebKit::SuppressSelectionAssistantReason> _suppressSelectionAssistantReasons;
    struct RetainPtr<UITextInputTraits> _traits;
    struct RetainPtr<UIWebFormAccessory> _formAccessoryView;
    struct RetainPtr<_UIHighlightView> _highlightView;
    struct RetainPtr<UIView> _interactionViewsContainerView;
    RetainPtr_f11d553d _contextMenuHintContainerView;
    struct WeakObjCPtr<UIScrollView> _scrollViewForTargetedPreview;
    struct CGPoint _scrollViewForTargetedPreviewInitialOffset;
    RetainPtr_f11d553d _dragPreviewContainerView;
    RetainPtr_f11d553d _dropPreviewContainerView;
    struct RetainPtr<NSString> _markedText;
    struct RetainPtr<WKActionSheetAssistant> _actionSheetAssistant;
    struct RetainPtr<WKAirPlayRoutePicker> _airPlayRoutePicker;
    struct RetainPtr<WKFormInputSession> _formInputSession;
    struct RetainPtr<WKFileUploadPanel> _fileUploadPanel;
    // Error: parsing type: '{FrameInfoData="isMainFrame"B"request"{ResourceRequest="m_url"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"m_timeoutInterval"d"m_firstPartyForCookies"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"m_httpMethod"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_initiatorIdentifier"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_cachePartition"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_httpHeaderFields"{HTTPHeaderMap="m_commonHeaders"{Vector<WebCore::HTTPHeaderMap::CommonHeader, 0UL, WTF::CrashOnOverflow, 6UL, WTF::FastMalloc>="m_buffer"^{CommonHeader}"m_capacity"I"m_size"I}"m_uncommonHeaders"{Vector<WebCore::HTTPHeaderMap::UncommonHeader, 0UL, WTF::CrashOnOverflow, 0UL, WTF::FastMalloc>="m_buffer"^{UncommonHeader}"m_capacity"I"m_size"I}}"m_responseContentDispositionEncodingFallbackArray"{Vector<WTF::String, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{String}"m_capacity"I"m_size"I}"m_httpBody"{RefPtr<WebCore::FormData, WTF::RawPtrTraits<WebCore::FormData>, WTF::DefaultRefDerefTraits<WebCore::FormData>>="m_ptr"^{FormData}}"m_cachePolicy"C"m_sameSiteDisposition"C"m_priority"C"m_requester"C"m_inspectorInitiatorNodeIdentifier"{optional<int>=""(?="__null_state_"c"__val_"i)"__engaged_"B}"m_allowCookies"b1"m_resourceRequestUpdated"b1"m_platformRequestUpdated"b1"m_resourceRequestBodyUpdated"b1"m_platformRequestBodyUpdated"b1"m_hiddenFromInspector"b1"m_isTopSite"b1"m_isAppInitiated"b1"m_systemPreviewInfo"{optional<WebCore::SystemPreviewInfo>=""(?="__null_state_"c"__val_"{SystemPreviewInfo="element"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}}"previewRect"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"isPreview"B})"__engaged_"B}"m_nsRequest"{RetainPtr<NSURLRequest>="m_ptr"^v}}"securityOrigin"{SecurityOriginData="protocol"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"host"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"port"{optional<unsigned short>=""(?="__null_state_"c"__val_"S)"__engaged_"B}}"frameName"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"frameID"{optional<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>>=""(?="__null_state_"c"__val_"{ObjectIdentifier<WebCore::FrameIdentifierType>="m_identifier"Q})"__engaged_"B}"parentFrameID"{optional<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>>=""(?="__null_state_"c"__val_"{ObjectIdentifier<WebCore::FrameIdentifierType>="m_identifier"Q})"__engaged_"B}}', name: _frameInfoForFileUploadPanel
    struct RetainPtr<WKShareSheet> _shareSheet;
    struct RetainPtr<WKContactPicker> _contactPicker;
    struct RetainPtr<UIGestureRecognizer> _previewGestureRecognizer;
    struct RetainPtr<UIGestureRecognizer> _previewSecondaryGestureRecognizer;
    struct Vector<bool, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _focusStateStack;
    struct RetainPtr<UIContextMenuInteraction> _contextMenuInteraction;
    struct RetainPtr<WKContextMenuElementInfo> _contextMenuElementInfo;
    _Bool _showLinkPreviews;
    struct RetainPtr<UIViewController> _contextMenuLegacyPreviewController;
    struct RetainPtr<UIMenu> _contextMenuLegacyMenu;
    _Bool _contextMenuHasRequestedLegacyData;
    _Bool _contextMenuActionProviderDelegateNeedsOverride;
    _Bool _isDisplayingContextMenuWithAnimation;
    struct RetainPtr<UIPreviewItemController> _previewItemController;
    struct RefPtr<WebCore::TextIndicator, WTF::RawPtrTraits<WebCore::TextIndicator>, WTF::DefaultRefDerefTraits<WebCore::TextIndicator>> _textIndicator;
    struct RetainPtr<WebTextIndicatorLayer> _textIndicatorLayer;
    struct RetainPtr<UITargetedPreview> _contextMenuInteractionTargetedPreview;
    struct unique_ptr<WebKit::SmartMagnificationController, std::default_delete<WebKit::SmartMagnificationController>> _smartMagnificationController;
    struct WeakObjCPtr<id<UITextInputDelegate>> _inputDelegate;
    ObjectIdentifier_e7ec9792 _latestTapID;
    struct TapHighlightInformation _tapHighlightInformation;
    struct WebAutocorrectionContext _lastAutocorrectionContext;
    struct WKAutoCorrectionData _autocorrectionData;
    // Error: parsing type: '{InteractionInformationAtPosition="request"{InteractionInformationRequest="point"{IntPoint="m_x"i"m_y"i}"includeSnapshot"B"includeLinkIndicator"B"includeCaretContext"B"includeHasDoubleClickHandler"B"includeImageData"B"linkIndicatorShouldHaveLegacyMargins"B"disallowUserAgentShadowContent"B}"canBeValid"B"nodeAtPositionHasDoubleClickHandler"{optional<bool>=""(?="__null_state_"c"__val_"B)"__engaged_"B}"selectability"C"isSelected"B"prefersDraggingOverTextSelection"B"isNearMarkedText"B"touchCalloutEnabled"B"isLink"B"isImage"B"isAttachment"B"isAnimatedImage"B"isPausedVideo"B"isElement"B"isContentEditable"B"containerScrollingNodeID"Q"isDataDetectorLink"B"preventTextInteraction"B"elementContainsImageOverlay"B"shouldNotUseIBeamInEditableContent"B"isImageOverlayText"B"isVerticalWritingMode"B"adjustedPointForNodeRespondingToClickEvents"{FloatPoint="m_x"f"m_y"f}"url"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"imageURL"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"imageMIMEType"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"title"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"idAttribute"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"bounds"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"image"{RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>>="m_ptr"^{ShareableBitmap}}"textBefore"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"textAfter"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"caretLength"f"lineCaretExtent"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"cursor"{optional<WebCore::Cursor>=""(?="__null_state_"c"__val_"{Cursor="m_type"i"m_image"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"m_hotSpot"{IntPoint="m_x"i"m_y"i}"m_platformCursor"^v})"__engaged_"B}"linkIndicator"{TextIndicatorData="selectionRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"textBoundingRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"contentImageWithoutSelectionRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"textRectsInBoundingRectCoordinates"{Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{FloatRect}"m_capacity"I"m_size"I}"contentImageScaleFactor"f"contentImageWithHighlight"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"contentImageWithoutSelection"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"contentImage"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"estimatedBackgroundColor"{Color="m_colorAndFlags"Q}"presentationTransition"C"options"{OptionSet<WebCore::TextIndicatorOption>="m_storage"S}}"dataDetectorIdentifier"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"dataDetectorResults"{RetainPtr<NSArray>="m_ptr"^v}"dataDetectorBounds"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"elementContext"{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}})"__engaged_"B}"hostImageOrVideoElementContext"{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}})"__engaged_"B}}', name: _positionInformation
    // Error: parsing type: '{FocusedElementInformation="interactionRect"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"elementContext"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}}"lastInteractionLocation"{IntPoint="m_x"i"m_y"i}"minimumScaleFactor"d"maximumScaleFactor"d"maximumScaleFactorIgnoringAlwaysScalable"d"nodeFontSize"d"hasNextNode"B"nextNodeRect"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"hasPreviousNode"B"previousNodeRect"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"isAutocorrect"B"isRTL"B"isMultiSelect"B"isReadOnly"B"allowsUserScaling"B"allowsUserScalingIgnoringAlwaysScalable"B"insideFixedPosition"B"autocapitalizeType"C"elementType"i"inputMode"C"enterKeyHint"C"formAction"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"selectOptions"{Vector<WebKit::OptionItem, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{OptionItem}"m_capacity"I"m_size"I}"selectedIndex"i"value"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"valueAsNumber"d"title"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"acceptsAutofilledLoginCredentials"B"isAutofillableUsernameField"B"representingPageURL"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"autofillFieldName"i"placeholder"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"label"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"ariaLabel"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"hasSuggestions"B"isFocusingWithDataListDropdown"B"colorValue"{Color="m_colorAndFlags"Q}"suggestedColors"{Vector<WebCore::Color, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{Color}"m_capacity"I"m_size"I}"shouldSynthesizeKeyEventsForEditing"B"isSpellCheckingEnabled"B"shouldAvoidResizingWhenInputViewBoundsChange"B"shouldAvoidScrollingWhenFocusedContentIsVisible"B"shouldUseLegacySelectPopoverDismissalBehaviorInDataActivation"B"isFocusingWithValidationMessage"B"preventScroll"B"identifier"{MonotonicObjectIdentifier<WebKit::FocusedElementInformationIdentifierType>="m_identifier"Q}"containerScrollingNodeID"Q}', name: _focusedElementInformation
    struct RetainPtr<NSObject<WKFormPeripheral>> _inputPeripheral;
    struct BlockPtr<void (WebEvent *, bool)> _keyWebEventHandler;
    struct CGPoint _lastInteractionLocation;
    struct MonotonicObjectIdentifier<WebKit::TransactionIDType> _layerTreeTransactionIdAtLastInteractionStart;
    struct WKSelectionDrawingInfo _lastSelectionDrawingInfo;
    struct RetainPtr<WKTextRange> _cachedSelectedTextRange;
    struct optional<WebKit::InteractionInformationRequest> _lastOutstandingPositionInformationRequest;
    unsigned long long _positionInformationCallbackDepth;
    struct Vector<std::optional<std::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)>>>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _pendingPositionInformationHandlers;
    struct unique_ptr<WebKit::InputViewUpdateDeferrer, std::default_delete<WebKit::InputViewUpdateDeferrer>> _inputViewUpdateDeferrer;
    struct RetainPtr<WKKeyboardScrollViewAnimator> _keyboardScrollingAnimator;
    struct Vector<WTF::BlockPtr<void ()>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _actionsToPerformAfterEditorStateUpdate;
    struct RetainPtr<UIView<WKFormControl>> _dataListTextSuggestionsInputView;
    struct RetainPtr<NSArray<UITextSuggestion *>> _dataListTextSuggestions;
    struct WeakObjCPtr<WKDataListSuggestionsControl> _dataListSuggestionsControl;
    _Bool _isEditable;
    _Bool _showingTextStyleOptions;
    _Bool _hasValidPositionInformation;
    _Bool _isTapHighlightIDValid;
    _Bool _isTapHighlightFading;
    _Bool _potentialTapInProgress;
    _Bool _isDoubleTapPending;
    _Bool _longPressCanClick;
    _Bool _hasTapHighlightForPotentialTap;
    _Bool _selectionNeedsUpdate;
    _Bool _shouldRestoreSelection;
    _Bool _usingGestureForSelection;
    _Bool _inspectorNodeSearchEnabled;
    _Bool _isChangingFocusUsingAccessoryTab;
    _Bool _didAccessoryTabInitiateFocus;
    _Bool _isExpectingFastSingleTapCommit;
    _Bool _showDebugTapHighlightsForFastClicking;
    _Bool _textInteractionDidChangeFocusedElement;
    _Bool _treatAsContentEditableUntilNextEditorStateUpdate;
    _Bool _isWaitingOnPositionInformation;
    _Bool _autocorrectionContextNeedsUpdate;
    int _commitPotentialTapPointerId;
    _Bool _keyboardDidRequestDismissal;
    _Bool _candidateViewNeedsUpdate;
    _Bool _seenHardwareKeyDownInNonEditableElement;
    _Bool _becomingFirstResponder;
    _Bool _resigningFirstResponder;
    _Bool _needsDeferredEndScrollingSelectionUpdate;
    _Bool _isChangingFocus;
    _Bool _isFocusingElementWithKeyboard;
    _Bool _isBlurringFocusedElement;
    _Bool _isRelinquishingFirstResponderToFocusedElement;
    _Bool _unsuppressSoftwareKeyboardAfterNextAutocorrectionContextUpdate;
    _Bool _isUnsuppressingSoftwareKeyboardUsingLastAutocorrectionContext;
    _Bool _waitingForKeyboardToStartAnimatingInAfterElementFocus;
    _Bool _shouldZoomToFocusRectAfterShowingKeyboard;
    _Bool _isHidingKeyboard;
    _Bool _focusRequiresStrongPasswordAssistance;
    _Bool _waitingForEditDragSnapshot;
    long long _dropAnimationCount;
    _Bool _hasSetUpInteractions;
    unsigned long long _ignoreSelectionCommandFadeCount;
    unsigned long long _activeTextInteractionCount;
    long long _suppressNonEditableSingleTapTextInteractionCount;
    struct CompletionHandler<void (WebCore::DOMPasteAccessResponse)> _domPasteRequestHandler;
    struct optional<WebCore::DOMPasteAccessCategory> _domPasteRequestCategory;
    struct BlockPtr<void (UIWKAutocorrectionContext *)> _pendingAutocorrectionContextHandler;
    struct CompletionHandler<void ()> _pendingRunModalJavaScriptDialogCallback;
    struct RetainPtr<NSDictionary> _additionalContextForStrongPasswordAssistance;
    struct optional<int> _lastInsertedCharacterToOverrideCharacterBeforeSelection;
    unsigned int _selectionChangeNestingLevel;
    struct DragDropInteractionState _dragDropInteractionState;
    struct RetainPtr<UIDragInteraction> _dragInteraction;
    struct RetainPtr<UIDropInteraction> _dropInteraction;
    _Bool _isAnimatingDragCancel;
    _Bool _shouldRestoreCalloutBarAfterDrop;
    struct RetainPtr<UIView> _visibleContentViewSnapshot;
    struct RetainPtr<UIView> _unselectedContentSnapshot;
    struct RetainPtr<_UITextDragCaretView> _editDropCaretView;
    struct BlockPtr<void ()> _actionToPerformAfterReceivingEditDragSnapshot;
    struct RetainPtr<WKImageAnalysisGestureRecognizer> _imageAnalysisGestureRecognizer;
    struct RetainPtr<UILongPressGestureRecognizer> _imageAnalysisTimeoutGestureRecognizer;
    struct optional<WTF::ObjectIdentifier<WebKit::ImageAnalysisRequestIdentifierType>> _pendingImageAnalysisRequestIdentifier;
    // Error: parsing type: '{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}})"__engaged_"B}', name: _elementPendingImageAnalysis
    struct Vector<WTF::BlockPtr<void (WebKit::ProceedWithTextSelectionInImage)>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _actionsToPerformAfterPendingImageAnalysis;
    _Bool _contextMenuWasTriggeredByImageAnalysisTimeout;
    _Bool _isProceedingWithTextSelectionInImage;
    struct RetainPtr<VKCImageAnalyzer> _imageAnalyzer;
    struct RetainPtr<QLPreviewController> _visualSearchPreviewController;
    RetainPtr_337fe565 _visualSearchPreviewImage;
    struct RetainPtr<NSURL> _visualSearchPreviewImageURL;
    struct RetainPtr<NSString> _visualSearchPreviewTitle;
    struct CGRect _visualSearchPreviewImageBounds;
    _Bool _waitingForDynamicImageAnalysisContextMenuActions;
    struct optional<WebKit::ImageAnalysisContextMenuActionData> _imageAnalysisContextMenuActionData;
    unsigned int _fullscreenVideoImageAnalysisRequestIdentifier;
    struct RetainPtr<VKCImageAnalysisInteraction> _imageAnalysisInteraction;
    struct RetainPtr<NSMutableSet<UIButton *>> _imageAnalysisActionButtons;
    struct FloatRect _imageAnalysisInteractionBounds;
    // Error: parsing type: '{optional<WebKit::RemoveBackgroundData>=""(?="__null_state_"c"__val_"{RemoveBackgroundData="element"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}}"image"{RetainPtr<CGImage *>="m_ptr"^v}"preferredMIMEType"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}})"__engaged_"B}', name: _removeBackgroundData
    struct unique_ptr<WebKit::PageClientImpl, std::default_delete<WebKit::PageClientImpl>> _pageClient;
    struct RetainPtr<WKBrowsingContextController> _browsingContextController;
    struct RetainPtr<UIView> _rootContentView;
    struct RetainPtr<UIView> _fixedClippingView;
    struct RetainPtr<WKInspectorIndicationView> _inspectorIndicationView;
    struct RetainPtr<WKInspectorHighlightView> _inspectorHighlightView;
    struct RetainPtr<_UILayerHostView> _visibilityPropagationViewForWebProcess;
    struct RetainPtr<_UILayerHostView> _visibilityPropagationViewForGPUProcess;
    struct HistoricalVelocityData _historicalKinematicData;
    struct RetainPtr<NSUndoManager> _undoManager;
    struct RetainPtr<WKQuirkyNSUndoManager> _quirkyUndoManager;
    struct Lock _pendingBackgroundPrintFormattersLock;
    struct RetainPtr<NSMutableSet> _pendingBackgroundPrintFormatters;
    unsigned long long _pdfPrintCallbackID;
    struct Vector<WTF::RetainPtr<NSURL>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _temporaryURLsToDeleteWhenDeallocated;
    _Bool _sizeChangedSinceLastVisibleContentRectUpdate;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) _Bool sizeChangedSinceLastVisibleContentRectUpdate; // @synthesize sizeChangedSinceLastVisibleContentRectUpdate=_sizeChangedSinceLastVisibleContentRectUpdate;
@property(readonly, nonatomic, getter=isResigningFirstResponder) _Bool resigningFirstResponder; // @synthesize resigningFirstResponder=_resigningFirstResponder;
- (void)_screenCapturedDidChange:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (double)_targetContentZoomScaleForRect:(const struct FloatRect *)arg1 currentScale:(double)arg2 fitEntireRect:(_Bool)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5;
- (double)_contentZoomScale;
- (double)_initialScaleFactor;
- (void)_zoomToInitialScaleWithOrigin:(struct CGPoint)arg1;
- (void)_zoomOutWithOrigin:(struct CGPoint)arg1;
- (_Bool)_zoomToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 fitEntireRect:(_Bool)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 minimumScrollDistance:(double)arg6;
- (void)_zoomToFocusRect:(struct CGRect)arg1 selectionRect:(struct CGRect)arg2 fontSize:(float)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 allowScaling:(_Bool)arg6 forceScroll:(_Bool)arg7;
- (_Bool)_scrollToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 minimumScrollDistance:(double)arg3;
- (void)_setAcceleratedCompositingRootView:(id)arg1;
- (void)_layerTreeCommitComplete;
- (void)_didCommitLayerTree:(const void *)arg1;
- (void)_gpuProcessDidCreateContextForVisibilityPropagation;
- (void)_webProcessDidCreateContextForVisibilityPropagation;
- (void)_didRelaunchProcess;
- (void)_processWillSwap;
- (void)_gpuProcessDidExit;
- (void)_processDidExit;
- (unique_ptr_7306e13f)_createDrawingAreaProxy:(void *)arg1;
- (void)_resetPrintingState;
- (void)_webViewDestroyed;
- (void)_accessibilityRegisterUIProcessTokens;
- (void)_updateRemoteAccessibilityRegistration:(_Bool)arg1;
- (void)_setAccessibilityWebProcessToken:(id)arg1;
- (void)_updateForScreen:(id)arg1;
- (void)_windowDidMoveToScreenNotification:(id)arg1;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (_Bool)canBecomeFocused;
@property(readonly, nonatomic) long long interfaceOrientation;
@property(readonly, nonatomic) NSUndoManager *undoManagerForWebView;
- (void)didZoomToScale:(double)arg1;
- (void)willStartZoomOrScroll;
- (void)didInterruptScrolling;
- (void)didFinishScrolling;
- (void)didUpdateVisibleRect:(struct CGRect)arg1 unobscuredRect:(struct CGRect)arg2 contentInsets:(struct UIEdgeInsets)arg3 unobscuredRectInScrollViewCoordinates:(struct CGRect)arg4 obscuredInsets:(struct UIEdgeInsets)arg5 unobscuredSafeAreaInsets:(struct UIEdgeInsets)arg6 inputViewBounds:(struct CGRect)arg7 scale:(double)arg8 minimumScale:(double)arg9 viewStability:(OptionSet_5ff1ced1)arg10 enclosedInScrollableAncestorView:(_Bool)arg11 sendEvenIfUnchanged:(_Bool)arg12;
- (struct CGRect)_computeUnobscuredContentRectRespectingInputViewBounds:(struct CGRect)arg1 inputViewBounds:(struct CGRect)arg2;
- (void)_didExitStableState;
- (void)updateFixedClippingView:(struct FloatRect)arg1;
@property(nonatomic, getter=isShowingInspectorIndication) _Bool showingInspectorIndication;
- (void)_hideInspectorHighlight;
- (void)_showInspectorHighlight:(const void *)arg1;
@property(readonly, nonatomic) _Bool isFocusingElement;
- (struct OpaqueWKPage *)_pageRef;
@property(readonly, nonatomic) WKBrowsingContextController *browsingContextController;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (id)rootContentView;
- (id)webView;
@property(readonly, nonatomic) void *page;
- (void)_removeTemporaryDirectoriesWhenDeallocated:(void *)arg1;
- (void)_removeTemporaryFilesIfNecessary;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 processPool:(NakedRef_6f117943)arg2 configuration:(void *)arg3 webView:(id)arg4;
- (void)_removeVisibilityPropagationViewForGPUProcess;
- (void)_removeVisibilityPropagationViewForWebProcess;
- (void)_setupVisibilityPropagationViewForGPUProcess;
- (void)_setupVisibilityPropagationViewForWebProcess;
- (id)_commonInitializationWithProcessPool:(void *)arg1 configuration:(void *)arg2;
- (void)_wk_requestDocumentForPrintFormatter:(id)arg1;
- (void)_waitForDrawToPDFCallbackForPrintFormatterIfNeeded:(id)arg1;
- (unsigned long long)_wk_pageCountForPrintFormatter:(id)arg1;
@property(readonly, nonatomic) _Bool _wk_printFormatterRequiresMainThread;
- (optional_76f06855)_frameIdentifierForPrintFormatter:(id)arg1;
@property(readonly, nonatomic, getter=isImageBacked) _Bool imageBacked;
@property(readonly, nonatomic) _Bool _shouldAvoidSecurityHeuristicScoreUpdates;
- (void)uninstallImageAnalysisInteraction;
- (void)installImageAnalysisInteraction:(id)arg1;
- (void)cancelTextRecognitionForVideoInElementFullscreen;
- (void)beginTextRecognitionForVideoInElementFullscreen:(const void *)arg1 bounds:(struct FloatRect)arg2;
@property(readonly, nonatomic) _Bool isTextRecognitionInFullscreenVideoEnabled;
- (void)cancelTextRecognitionForFullscreenVideo:(id)arg1;
- (void)beginTextRecognitionForFullscreenVideo:(const void *)arg1 playerViewController:(id)arg2;
- (_Bool)imageAnalysisInteraction:(id)arg1 shouldBeginAtPoint:(struct CGPoint)arg2 forAnalysisType:(unsigned long long)arg3;
- (struct CGRect)contentsRectForImageAnalysisInteraction:(id)arg1;
- (void)actionSheetAssistant:(id)arg1 copySubject:(id)arg2 sourceMIMEType:(id)arg3;
- (_Bool)actionSheetAssistantShouldIncludeCopySubjectAction:(id)arg1;
- (void)captureTextFromCameraForWebView:(id)arg1;
- (void)imageAnalysisGestureDidTimeOut:(id)arg1;
- (void)imageAnalysisGestureDidFail:(id)arg1;
- (void)_completeImageAnalysisRequestForContextMenu:(struct CGImage *)arg1 requestIdentifier:(ObjectIdentifier_073ef476)arg2 hasTextResults:(_Bool)arg3;
- (void)imageAnalysisGestureDidBegin:(id)arg1;
- (void)requestTextRecognition:(id)arg1 imageData:(const void *)arg2 sourceLanguageIdentifier:(id)arg3 targetLanguageIdentifier:(id)arg4 completionHandler:(void *)arg5;
- (_Bool)validateImageAnalysisRequestIdentifier:(ObjectIdentifier_073ef476)arg1;
- (void)updateImageAnalysisForContextMenuPresentation:(id)arg1;
- (RetainPtr_acb19053)createImageAnalyzerRequest:(unsigned long long)arg1 image:(struct CGImage *)arg2;
- (RetainPtr_acb19053)createImageAnalyzerRequest:(unsigned long long)arg1 image:(struct CGImage *)arg2 imageURL:(id)arg3;
- (void)_cancelImageAnalysis;
- (void)_tearDownImageAnalysis;
- (void)_setUpImageAnalysis;
- (_Bool)hasPendingImageAnalysisRequest;
- (id)imageAnalyzer;
- (void)actionSheetAssistant:(id)arg1 lookUpImage:(id)arg2 imageURL:(id)arg3 title:(id)arg4 imageBounds:(struct CGRect)arg5;
- (_Bool)actionSheetAssistant:(id)arg1 shouldIncludeLookUpImageActionForElement:(id)arg2;
- (void)actionSheetAssistant:(id)arg1 showTextForImage:(id)arg2 imageURL:(id)arg3 title:(id)arg4 imageBounds:(struct CGRect)arg5;
- (_Bool)actionSheetAssistant:(id)arg1 shouldIncludeShowTextActionForElement:(id)arg2;
- (id)provideDataForItem:(id)arg1;
- (id)previewController:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewController:(id)arg1;
- (void)previewControllerDidDismiss:(id)arg1;
- (id)previewController:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewController:(id)arg1 frameForPreviewItem:(id)arg2 inSourceView:(id *)arg3;
- (void)presentVisualSearchPreviewControllerForImage:(id)arg1 imageURL:(id)arg2 title:(id)arg3 imageBounds:(struct CGRect)arg4 appearanceActions:(unsigned long long)arg5;
- (id)machineReadableCodeSubMenuForImageContextMenu;
- (struct CGImage *)copySubjectResultForImageContextMenu;
- (_Bool)hasVisualSearchResultsForImageContextMenu;
- (_Bool)hasSelectableTextForImageContextMenu;
- (void)requestRectForFoundTextRange:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (long long)compareFoundRange:(id)arg1 toRange:(id)arg2 inDocument:(id)arg3;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2 inDocument:(id)arg3;
@property(readonly, nonatomic) _Bool supportsTextReplacement;
- (void)didEndTextSearchOperation;
- (void)didBeginTextSearchOperation;
- (void)clearAllDecoratedFoundText;
- (void)scrollRangeToVisible:(id)arg1 inDocument:(id)arg2;
- (void)decorateFoundTextRange:(id)arg1 inDocument:(id)arg2 usingStyle:(long long)arg3;
- (void)replaceFoundTextInRange:(id)arg1 inDocument:(id)arg2 withText:(id)arg3;
- (void)performTextSearchWithQueryString:(id)arg1 usingOptions:(id)arg2 resultAggregator:(id)arg3;
- (void)_findSelectedForWebView:(id)arg1;
- (void)useSelectionForFindForWebView:(id)arg1;
- (void)startFadeOut;
- (void)teardownTextIndicatorLayer;
- (void)setTextIndicatorAnimationProgress:(float)arg1;
- (void)clearTextIndicator:(unsigned char)arg1;
- (void)setUpTextIndicator:(Ref_72f36232)arg1;
- (void)_invokeAllActionsToPerformAfterPendingImageAnalysis:(_Bool)arg1;
- (void)_doAfterPendingImageAnalysis:(CDUnknownBlockType)arg1;
- (void)_endImageAnalysisGestureDeferral:(_Bool)arg1;
- (void)_writePromisedAttachmentToPasteboard:(void *)arg1;
- (void)_didExitFullscreen;
- (void)_didEnterFullscreen;
- (void)indirectScribbleInteraction:(id)arg1 didFinishWritingInElement:(id)arg2;
- (void)indirectScribbleInteraction:(id)arg1 willBeginWritingInElement:(id)arg2;
- (struct CGRect)indirectScribbleInteraction:(id)arg1 frameForElement:(id)arg2;
- (void)indirectScribbleInteraction:(id)arg1 focusElementIfNeeded:(id)arg2 referencePoint:(struct CGPoint)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)indirectScribbleInteraction:(id)arg1 isElementFocused:(id)arg2;
- (void)indirectScribbleInteraction:(id)arg1 requestElementsInRect:(struct CGRect)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_elementForTextInputContextIsFocused:(id)arg1;
- (id)_textInputContextByScribbleIdentifier:(id)arg1;
- (void)cleanUpScribbleInteraction;
- (void)setUpScribbleInteraction;
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;
- (id)pointerRegionForPositionInformation:(void *)arg1 point:(struct CGPoint)arg2;
- (void)_pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setUpPointerInteraction;
- (void)_showMediaControlsContextMenu:(struct FloatRect *)arg1 items:(void *)arg2 completionHandler:(void *)arg3;
- (void)_setMouseEventPolicy:(unsigned char)arg1;
- (void)_configureMouseGestureRecognizer;
- (void)mouseGestureRecognizerChanged:(id)arg1;
- (void)setUpMouseGestureRecognizer;
- (_Bool)shouldUseMouseGestureRecognizer;
- (void)setContinuousSpellCheckingEnabled:(_Bool)arg1;
- (id)appHighlightMenu;
- (id)menuWithInlineAction:(id)arg1 image:(id)arg2 identifier:(id)arg3 handler:(void *)arg4;
- (void)buildMenuForWebViewWithBuilder:(id)arg1;
- (void)dropInteraction:(id)arg1 sessionDidEnd:(id)arg2;
- (void)_dropInteraction:(id)arg1 delayedPreviewProviderForDroppingItem:(id)arg2 previewProvider:(CDUnknownBlockType)arg3;
- (id)dropInteraction:(id)arg1 previewForDroppingItem:(id)arg2 withDefault:(id)arg3;
- (void)dropInteraction:(id)arg1 concludeDrop:(id)arg2;
- (void)dropInteraction:(id)arg1 item:(id)arg2 willAnimateDropWithAnimator:(id)arg3;
- (void)dropInteraction:(id)arg1 performDrop:(id)arg2;
- (void)dropInteraction:(id)arg1 sessionDidExit:(id)arg2;
- (id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2;
- (void)dropInteraction:(id)arg1 sessionDidEnter:(id)arg2;
- (_Bool)dropInteraction:(id)arg1 canHandleSession:(id)arg2;
- (long long)_dropInteraction:(id)arg1 dataOwnerForSession:(id)arg2;
- (void)dragInteraction:(id)arg1 sessionDidTransferItems:(id)arg2;
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;
- (_Bool)_dragInteraction:(id)arg1 item:(id)arg2 shouldDelaySetDownAnimationWithCompletion:(CDUnknownBlockType)arg3;
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (void)_dragInteraction:(id)arg1 prepareForSession:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_dragInteraction:(id)arg1 itemsForAddingToSession:(id)arg2 withTouchAtPoint:(struct CGPoint)arg3 completion:(CDUnknownBlockType)arg4;
- (long long)_dragInteraction:(id)arg1 dataOwnerForSession:(id)arg2;
- (_Bool)_dragInteraction:(id)arg1 shouldDelayCompetingGestureRecognizer:(id)arg2;
- (_Bool)_handleDropByInsertingImagePlaceholders:(id)arg1 session:(id)arg2;
- (void)removeTextPlaceholder:(id)arg1 willInsertText:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)insertTextPlaceholderWithSize:(struct CGSize)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)selectPositionAtPoint:(struct CGPoint)arg1 withContextRequest:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)requestDocumentContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)adjustSelectionWithDelta:(struct _NSRange)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)presentContextMenu:(id)arg1 atLocation:(struct CGPoint)arg2;
- (void)_removeContextMenuHintContainerIfPossible;
- (id)_createTargetedContextMenuHintPreviewIfPossible;
- (_Bool)positionInformationHasImageOverlayDataDetector;
- (id)_createTargetedContextMenuHintPreviewForFocusedElement;
@property(readonly, nonatomic) _Bool supportsImagePaste;
- (id)_autofillContext;
- (id)textEffectsWindow;
- (void)cancelActiveTextInteractionGestures;
- (id)_itemsForBeginningOrAddingToSessionWithRegistrationLists:(id)arg1 stagedDragSource:(const void *)arg2;
- (void)_restoreCalloutBarIfNeeded;
- (id)currentDragOrDropSession;
- (OptionSet_401d6bae)_allowedDragSourceActions;
- (unsigned long long)_dragDestinationActionForDropSession:(id)arg1;
- (void)_prepareToDragPromisedAttachment:(const void *)arg1;
- (void)_didChangeDragCaretRect:(struct CGRect)arg1 currentRect:(struct CGRect)arg2;
- (void)_didPerformDragOperation:(_Bool)arg1;
- (void)_deliverDelayedDropPreviewIfPossible:(optional_2e6e99e4)arg1;
- (void)_didReceiveEditDragSnapshot:(optional_2e6e99e4)arg1;
- (void)_willReceiveEditDragSnapshot;
- (void)cleanUpDragSourceSessionState;
- (struct DragData)dragDataForDropSession:(id)arg1 dragDestinationAction:(unsigned long long)arg2;
- (void)computeClientAndGlobalPointsForDropSession:(id)arg1 outClientPoint:(struct CGPoint *)arg2 outGlobalPoint:(struct CGPoint *)arg3;
- (void)_didHandleDragStartRequest:(_Bool)arg1;
- (void)_didHandleAdditionalDragItemsRequest:(_Bool)arg1;
- (void)_startDrag:(RetainPtr_c27edd19)arg1 item:(const void *)arg2;
- (void)teardownDragAndDropInteractions;
- (void)setUpDragAndDropInteractions;
- (id)webViewUIDelegate;
- (double)dragLiftDelay;
- (void)_didChangeDragInteractionPolicy;
- (_Bool)deferringGestureRecognizer:(id)arg1 shouldDeferOtherGestureRecognizer:(id)arg2;
- (void)deferringGestureRecognizer:(id)arg1 didEndTouchesWithEvent:(id)arg2;
- (void)deferringGestureRecognizer:(id)arg1 didTransitionToState:(long long)arg2;
- (_Bool)deferringGestureRecognizer:(id)arg1 willBeginTouchesWithEvent:(id)arg2;
- (void)_updateTargetedPreviewScrollViewUsingContainerScrollingNodeID:(unsigned long long)arg1;
- (void)_updateFrameOfContainerForContextMenuHintPreviewsIfNeeded;
- (void)_removeContainerForContextMenuHintPreviews;
- (id)containerForContextMenuHintPreviews;
- (void)_removeContainerForDragPreviews;
- (id)containerForDragPreviews;
- (void)_removeContainerForDropPreviews;
- (id)containerForDropPreviews;
- (RetainPtr_f11d553d)_createPreviewContainerWithLayerName:(id)arg1;
- (unsigned char)_dataOwnerForPasteboard:(_Bool)arg1;
- (_Bool)shouldDeferGestureDueToImageAnalysis:(id)arg1;
@property(readonly, nonatomic) _Bool _shouldUseLegacySelectPopoverDismissalBehavior;
@property(readonly, nonatomic) _Bool _shouldAvoidScrollingWhenFocusedContentIsVisible;
@property(readonly, nonatomic) _Bool _shouldAvoidResizingWhenInputViewBoundsChange;
@property(readonly, nonatomic) _Bool _shouldUseContextMenusForFormControls;
@property(readonly, nonatomic) _Bool _shouldUseContextMenus;
- (void)_targetedPreviewContainerDidRemoveLastSubview:(id)arg1;
- (void)actionSheetAssistantDidDismissContextMenu:(id)arg1;
- (void)actionSheetAssistantDidShowContextMenu:(id)arg1;
- (void)removeContextMenuViewIfPossibleForActionSheetAssistant:(id)arg1;
- (id)createTargetedContextMenuHintForActionSheetAssistant:(id)arg1;
- (void)actionSheetAssistant:(id)arg1 getAlternateURLForImage:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)selectedTextForActionSheetAssistant:(id)arg1;
- (id)dataDetectionContextForActionSheetAssistant:(id)arg1 positionInformation:(const void *)arg2;
- (id)dataDetectionContextForPositionInformation:(const void *)arg1;
- (void)actionSheetAssistantDidStopInteraction:(id)arg1;
- (void)actionSheetAssistant:(id)arg1 willStartInteractionWithElement:(id)arg2;
- (RetainPtr_f649c0c3)actionSheetAssistant:(id)arg1 decideActionsForElement:(id)arg2 defaultActions:(RetainPtr_f649c0c3)arg3;
- (struct CGRect)unoccludedWindowBoundsForActionSheetAssistant:(id)arg1;
- (_Bool)actionSheetAssistant:(id)arg1 showCustomSheetForElement:(id)arg2;
- (_Bool)actionSheetAssistant:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2;
- (void)actionSheetAssistant:(id)arg1 shareElementWithImage:(id)arg2 rect:(struct CGRect)arg3;
- (void)actionSheetAssistant:(id)arg1 shareElementWithURL:(id)arg2 rect:(struct CGRect)arg3;
- (void)actionSheetAssistant:(id)arg1 openElementAtLocation:(struct CGPoint)arg2;
- (void)actionSheetAssistant:(id)arg1 performAction:(_Bool)arg2;
- (void)updatePositionInformationForActionSheetAssistant:(id)arg1;
-     // Error parsing type: {optional<WebKit::InteractionInformationAtPosition>=(?=c{InteractionInformationAtPosition={InteractionInformationRequest={IntPoint=ii}BBBBBBB}B{optional<bool>=(?=cB)B}CBBBBBBBBBBBQBBBBBB{FloatPoint=ff}{URL={String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}b1b1b1b3b26IIIIIII}{URL={String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}b1b1b1b3b26IIIIIII}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{IntRect={IntPoint=ii}{IntSize=ii}}{RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>>=^{ShareableBitmap}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}f{FloatRect={FloatPoint=ff}{FloatSize=ff}}{optional<WebCore::Cursor>=(?=c{Cursor=i{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{IntPoint=ii}^v})B}{TextIndicatorData={FloatRect={FloatPoint=ff}{FloatSize=ff}}{FloatRect={FloatPoint=ff}{FloatSize=ff}}{FloatRect={FloatPoint=ff}{FloatSize=ff}}{Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>=^{FloatRect}II}f{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{Color=Q}C{OptionSet<WebCore::TextIndicatorOption>=S}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{RetainPtr<NSArray>=^v}{IntRect={IntPoint=ii}{IntSize=ii}}{optional<WebCore::ElementContext>=(?=c{ElementContext={FloatRect={FloatPoint=ff}{FloatSize=ff}}{ObjectIdentifier<WebCore::PageIdentifierType>=Q}{ProcessQualified<WTF::UUID>={UUID=T}{ObjectIdentifier<WebCore::ProcessIdentifierType>=Q}}{ObjectIdentifier<WebCore::ElementIdentifierType>=Q}})B}{optional<WebCore::ElementContext>=(?=c{ElementContext={FloatRect={FloatPoint=ff}{FloatSize=ff}}{ObjectIdentifier<WebCore::PageIdentifierType>=Q}{ProcessQualified<WTF::UUID>={UUID=T}{ObjectIdentifier<WebCore::ProcessIdentifierType>=Q}}{ObjectIdentifier<WebCore::ElementIdentifierType>=Q}})B}})B}24@0:8@16, name: positionInformationForActionSheetAssistant:
- (_Bool)isAnyTouchOverActiveArea:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 isInterruptingMomentumScrollingWithEvent:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldIgnoreWebTouchWithEvent:(id)arg2;
- (void)_preserveFocusWithToken:(id)arg1 destructively:(_Bool)arg2;
- (void)stopRelinquishingFirstResponderToFocusedElement;
- (void)startRelinquishingFirstResponderToFocusedElement;
- (_Bool)_restoreFocusWithToken:(id)arg1;
- (id)inputLabelText;
- (void)contactPickerDidDismiss:(id)arg1;
- (void)contactPickerDidPresent:(id)arg1;
- (void)_showContactPicker:(const void *)arg1 completionHandler:(void *)arg2;
- (void)shareSheet:(id)arg1 willShowActivityItems:(id)arg2;
- (void)shareSheetDidDismiss:(id)arg1;
- (void)_showShareSheet:(const void *)arg1 inRect:(optional_1d8eff86)arg2 completionHandler:(void *)arg3;
- (_Bool)fileUploadPanelDestinationIsManaged:(id)arg1;
- (void)fileUploadPanelDidDismiss:(id)arg1;
- (void)_showRunOpenPanel:(struct OpenPanelParameters *)arg1 frameInfo:(const void *)arg2 resultListener:(struct WebOpenPanelResultListenerProxy *)arg3;
- (void)_showPlaybackTargetPicker:(_Bool)arg1 fromRect:(const struct IntRect *)arg2 routeSharingPolicy:(unsigned char)arg3 routingContextUID:(id)arg4;
- (void)updateTextSuggestionsForInputDelegate;
@property(retain, nonatomic) NSArray *dataListTextSuggestions;
@property(retain, nonatomic) UIView<WKFormControl> *dataListTextSuggestionsInputView;
- (void)_stopSuppressingSelectionAssistantForReason:(unsigned char)arg1;
- (void)_startSuppressingSelectionAssistantForReason:(unsigned char)arg1;
- (_Bool)_shouldSuppressSelectionCommands;
- (_Bool)hasHiddenContentEditable;
- (void)prepareSelectionForContextMenuWithLocationInView:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)requestRVItemInSelectedRangeWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)supportsTextSelectionWithCharacterGranularity;
- (_Bool)shouldAllowHidingSelectionCommands;
- (void)_updateChangedSelection:(_Bool)arg1;
- (void)_updateChangedSelection;
- (void)selectWordForReplacement;
- (void)_selectionChanged;
- (void)_updateSelectionAssistantSuppressionState;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)reloadContextViewForPresentedListViewController;
- (void)updateCurrentFocusedElementInformation:(void *)arg1;
- (void)_updateInitialWritingDirectionIfNecessary;
- (void)_didUpdateEditorState;
- (void)doAfterEditorStateUpdateAfterFocusingElement:(CDUnknownBlockType)arg1;
- (void)_requestDOMPasteAccessForCategory:(unsigned char)arg1 elementRect:(const struct IntRect *)arg2 originIdentifier:(const void *)arg3 completionHandler:(void *)arg4;
- (void)_didUpdateInputMode:(unsigned char)arg1;
- (void)_hardwareKeyboardAvailabilityChanged;
@property(readonly, nonatomic) _Bool shouldIgnoreKeyboardWillHideNotification;
- (void)_updateInputContextAfterBlurringAndRefocusingElement;
- (void)_elementDidBlur;
- (void)_elementDidFocus:(const void *)arg1 userIsInteracting:(_Bool)arg2 blurPreviousNode:(_Bool)arg3 activityStateChanges:(OptionSet_05ce0fa5)arg4 userObject:(id)arg5;
- (_Bool)_shouldShowKeyboardForElementIgnoringInputMode:(const void *)arg1;
- (_Bool)_shouldShowKeyboardForElement:(const void *)arg1;
- (void *)focusedSelectElementOptions;
@property(readonly, nonatomic) const void *focusedElementInformation;
- (_Bool)_formControlRefreshEnabled;
- (void)_hideKeyboard;
- (void)_showKeyboard;
- (void)takeTraitsFrom:(id)arg1;
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)hasSelection;
- (id)fontForCaretSelection;
- (id)textColorForCaretSelection;
- (void)selectAll;
- (_Bool)hasContent;
- (void)setMarkedText:(id)arg1;
- (id)wordRangeContainingCaretSelection;
- (id)wordContainingCaretSelection;
- (unsigned short)characterBeforeCaretSelection;
- (void)moveForward:(unsigned int)arg1;
- (void)moveBackward:(unsigned int)arg1;
- (id)metadataDictionariesForDictationResults;
@property(nonatomic) long long selectionGranularity;
- (id)automaticallySelectedOverlay;
- (void)setBottomBufferHeight:(double)arg1;
- (id)_moveToEndOfDocument:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfLine:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfParagraph:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfWord:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfDocument:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfLine:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfParagraph:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfWord:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveRight:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveLeft:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveDown:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveUp:(_Bool)arg1 withHistory:(id)arg2;
- (void)_transpose;
- (void)_deleteToEndOfParagraph;
- (void)_deleteForwardAndNotify:(_Bool)arg1;
- (void)_deleteToEndOfLine;
- (void)_deleteToStartOfLine;
- (void)_deleteForwardByWord;
- (void)_deleteByWord;
- (void)executeEditCommandWithCallback:(id)arg1;
- (void)keyboardScrollViewAnimatorDidFinishScrolling:(id)arg1;
- (void)keyboardScrollViewAnimatorWillScroll:(id)arg1;
- (double)keyboardScrollViewAnimator:(id)arg1 distanceForIncrement:(unsigned char)arg2 inDirection:(unsigned char)arg3;
- (_Bool)isScrollableForKeyboardScrollViewAnimator:(id)arg1;
- (void)dismissFilePicker;
- (id)filePickerAcceptedTypeIdentifiers;
- (_Bool)_interpretKeyEvent:(id)arg1 isCharEvent:(_Bool)arg2;
- (void)_didHandleKeyEvent:(id)arg1 eventWasHandled:(_Bool)arg2;
- (void)handleKeyWebEvent:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)handleKeyWebEvent:(id)arg1;
- (void)generateSyntheticEditingCommand:(unsigned char)arg1;
- (void)_handleKeyUIEvent:(id)arg1;
- (_Bool)requiresKeyEvents;
- (_Bool)shouldSuppressUpdateCandidateView;
- (void)modifierFlagsDidChangeFrom:(long long)arg1 to:(long long)arg2;
- (void)_didFinishTextInteractionInTextInputContext:(id)arg1;
- (void)_willBeginTextInteractionInTextInputContext:(id)arg1;
- (void)_requestTextInputContextsInRect:(struct CGRect)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_focusTextInputContext:(id)arg1 placeCaretAt:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)_isTextInputContextFocused:(id)arg1;
- (struct CGRect)rectContainingCaretSelection;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(_Bool)arg2;
- (id)selectedDOMRange;
- (struct _NSRange)_markedTextNSRange;
- (struct CGRect)rectForNSRange:(struct _NSRange)arg1;
- (struct _NSRange)selectionRange;
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (void)_updateTextInputTraits:(id)arg1;
- (id)textInputTraits;
- (void)removeEmojiAlternatives;
- (void)addTextAlternatives:(id)arg1;
@property(readonly, nonatomic) _Bool hasText;
- (void)insertText:(id)arg1 alternatives:(id)arg2 style:(long long)arg3;
- (void)insertText:(id)arg1;
- (_Bool)_shouldSimulateKeyboardInputOnTextInsertion;
- (void)deleteBackward;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
- (void)_setMarkedText:(id)arg1 highlights:(const void *)arg2 selectedRange:(struct _NSRange)arg3;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (id)markedText;
- (_Bool)hasMarkedText;
@property(copy) UITextRange *selectedTextRange;
- (id)selectionRectsForRange:(id)arg1;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (struct FloatRect)_scaledCaretRectForSelectionEnd:(struct FloatRect)arg1;
- (struct FloatRect)_scaledCaretRectForSelectionStart:(struct FloatRect)arg1;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textInRange:(id)arg1;
- (void)insertTextSuggestion:(id)arg1;
- (void)_didChangeWebViewEditability;
- (void)willFinishIgnoringCalloutBarFadeAfterPerformingAction;
- (void)endSelectionChange;
- (void)beginSelectionChange;
- (_Bool)_allowAnimatedUpdateSelectionRectViews;
- (void)_updateAccessory;
- (void)accessoryOpen;
@property(readonly, nonatomic) UIWebFormAccessory *formAccessoryView;
- (void)accessoryAutoFill;
- (void)accessoryTab:(_Bool)arg1;
- (void)updateFocusedElementFocusedWithDataListDropdown:(_Bool)arg1;
- (void)updateFocusedElementSelectedIndex:(unsigned int)arg1 allowsMultipleSelection:(_Bool)arg2;
- (void)updateFocusedElementValueAsColor:(id)arg1;
- (void)updateFocusedElementValue:(id)arg1;
- (void)accessoryDone;
- (void)accessoryClear;
- (void)_setDoubleTapGesturesEnabled:(_Bool)arg1;
- (struct Color)_tapHighlightColorForFastClick:(_Bool)arg1;
- (void)_becomeFirstResponderWithSelectionMovingForward:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_previousAccessoryTabForWebView:(id)arg1;
- (void)_nextAccessoryTabForWebView:(id)arg1;
- (void)_didCommitLoadForMainFrame;
- (void)_didStartProvisionalLoadForMainFrame;
- (void)runModalJavaScriptDialog:(void *)arg1;
- (void)unsuppressSoftwareKeyboardUsingLastAutocorrectionContextIfNeeded;
- (void)updateSoftwareKeyboardSuppressionStateFromWebView;
- (void)_handleAutocorrectionContext:(const void *)arg1;
- (void)requestAutocorrectionContextWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_cancelPendingAutocorrectionContextHandler;
- (void)_invokePendingAutocorrectionContextHandler:(id)arg1;
- (void)applyAutocorrection:(id)arg1 toString:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)requestDictationContext:(CDUnknownBlockType)arg1;
- (void)replaceDictatedText:(id)arg1 withText:(id)arg2;
- (void)didInsertFinalDictationResult;
- (void)willInsertFinalDictationResult;
- (struct CGRect)textLastRect;
- (struct CGRect)textFirstRect;
- (_Bool)_selectionAtDocumentStart;
- (unsigned int)_characterInRelationToCaretSelection:(int)arg1;
- (void)updateSelectionWithExtentPoint:(struct CGPoint)arg1 withBoundary:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateSelectionWithExtentPoint:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)beginSelectionInDirection:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)selectTextWithGranularity:(long long)arg1 atPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)moveSelectionAtBoundary:(long long)arg1 inDirection:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)selectPositionAtBoundary:(long long)arg1 inDirection:(long long)arg2 fromPoint:(struct CGPoint)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_selectPositionAtPoint:(struct CGPoint)arg1 stayingWithinFocusedElement:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)selectPositionAtPoint:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)_handleTapOverImageAnalysisInteractionButton:(struct CGPoint)arg1;
- (void)doAfterComputingImageAnalysisResultsForBackgroundRemoval:(void *)arg1;
- (id)removeBackgroundMenu;
- (void)_requestEvasionRectsAboveSelectionIfNeeded:(void *)arg1;
- (void)requestRectsToEvadeForSelectionCommandsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)requestPreferredArrowDirectionForEditMenuWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)requestAutocorrectionRectsForString:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) const void *autocorrectionData;
- (void)moveByOffset:(long long)arg1;
- (void)changeSelectionWithTouchesFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2 withGesture:(long long)arg3 withState:(long long)arg4;
- (void)changeSelectionWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 baseIsStart:(_Bool)arg3 withFlags:(long long)arg4;
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3 withFlags:(long long)arg4;
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3;
- (_Bool)_hasFocusedElement;
- (void)_didPerformAction:(SEL)arg1 sender:(id)arg2;
- (void)_willPerformAction:(SEL)arg1 sender:(id)arg2;
- (_Bool)_handleDOMPasteRequestWithResult:(unsigned char)arg1;
- (void)_accessibilityClearSelection;
- (void)_accessibilityStoreSelection;
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2;
- (void)_accessibilityRetrieveRectsEnclosingSelectionOffset:(long long)arg1 withGranularity:(long long)arg2;
- (void)accessibilityRetrieveSpeakSelectionContent;
- (void)_defineForWebView:(id)arg1;
- (void)_showDictionary:(id)arg1;
- (void)_showTextStyleOptionsForWebView:(id)arg1;
- (void)toggleUnderlineForWebView:(id)arg1;
- (void)toggleItalicsForWebView:(id)arg1;
- (void)toggleBoldfaceForWebView:(id)arg1;
- (_Bool)shouldSynthesizeKeyEvents;
- (void)selectAllForWebView:(id)arg1;
- (void)selectForWebView:(id)arg1;
- (void)_pasteAsQuotationForWebView:(id)arg1;
- (void)pasteForWebView:(id)arg1;
- (void)cutForWebView:(id)arg1;
- (void)copyForWebView:(id)arg1;
- (void)_keyboardDidRequestDismissal:(id)arg1;
- (void)_didHideMenu:(id)arg1;
- (void)_willHideMenu:(id)arg1;
- (id)targetForActionForWebView:(SEL)arg1 withSender:(id)arg2;
- (id)targetForAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)canPerformActionForWebView:(SEL)arg1 withSender:(id)arg2;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)shouldAllowAppHighlightCreation;
- (void)tintColorDidChange;
- (void)_updateInteractionTintColor:(id)arg1;
- (id)_cascadeInteractionTintColor;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIColor *insertionPointColor;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;
- (void)toggleStrikeThroughForWebView:(id)arg1;
- (void)_setTextColorForWebView:(id)arg1 sender:(id)arg2;
- (void)_setFontSizeForWebView:(double)arg1 sender:(id)arg2;
- (void)_setFontForWebView:(id)arg1 sender:(id)arg2;
- (void)decreaseSizeForWebView:(id)arg1;
- (void)increaseSizeForWebView:(id)arg1;
- (void)_toggleStrikeThroughForWebView:(id)arg1;
- (void)_changeListTypeForWebView:(id)arg1;
- (void)_decreaseListLevelForWebView:(id)arg1;
- (void)_increaseListLevelForWebView:(id)arg1;
- (void)pasteAndMatchStyleForWebView:(id)arg1;
- (void)_pasteAndMatchStyleForWebView:(id)arg1;
- (void)alignJustifiedForWebView:(id)arg1;
- (void)_alignJustifiedForWebView:(id)arg1;
- (void)alignCenterForWebView:(id)arg1;
- (void)_alignCenterForWebView:(id)arg1;
- (void)alignRightForWebView:(id)arg1;
- (void)_alignRightForWebView:(id)arg1;
- (void)alignLeftForWebView:(id)arg1;
- (void)_alignLeftForWebView:(id)arg1;
- (void)outdentForWebView:(id)arg1;
- (void)_outdentForWebView:(id)arg1;
- (void)indentForWebView:(id)arg1;
- (void)_indentForWebView:(id)arg1;
- (void)insertNestedUnorderedListForWebView:(id)arg1;
- (void)_insertNestedUnorderedListForWebView:(id)arg1;
- (void)insertNestedOrderedListForWebView:(id)arg1;
- (void)_insertNestedOrderedListForWebView:(id)arg1;
- (void)insertUnorderedListForWebView:(id)arg1;
- (void)_insertUnorderedListForWebView:(id)arg1;
- (void)insertOrderedListForWebView:(id)arg1;
- (void)_insertOrderedListForWebView:(id)arg1;
- (void)replaceForWebView:(id)arg1;
- (void)_transliterateChineseForWebView:(id)arg1;
- (void)_promptForReplaceForWebView:(id)arg1;
- (void)selectWordBackward;
- (void)replaceText:(id)arg1 withText:(id)arg2;
- (_Bool)isReplaceAllowed;
- (void)makeTextWritingDirectionRightToLeftForWebView:(id)arg1;
- (void)makeTextWritingDirectionLeftToRightForWebView:(id)arg1;
- (void)makeTextWritingDirectionNaturalForWebView:(id)arg1;
- (id)alternativesForSelectedText;
- (id)selectedText;
- (void)_addShortcutForWebView:(id)arg1;
- (void)_translateForWebView:(id)arg1;
- (void)_shareForWebView:(id)arg1;
- (void)_lookupForWebView:(id)arg1;
- (void)_pasteAndMatchStyle:(id)arg1;
- (void)_pasteAsQuotation:(id)arg1;
- (void)_changeListType:(id)arg1;
- (void)_decreaseListLevel:(id)arg1;
- (void)_increaseListLevel:(id)arg1;
- (void)_insertNestedUnorderedList:(id)arg1;
- (void)_insertNestedOrderedList:(id)arg1;
- (void)_insertUnorderedList:(id)arg1;
- (void)_insertOrderedList:(id)arg1;
- (void)_toggleStrikeThrough:(id)arg1;
- (void)_outdent:(id)arg1;
- (void)_indent:(id)arg1;
- (void)_alignRight:(id)arg1;
- (void)_alignLeft:(id)arg1;
- (void)_alignJustified:(id)arg1;
- (void)_alignCenter:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)pasteAndMatchStyle:(id)arg1;
- (void)decreaseSize:(id)arg1;
- (void)increaseSize:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)replace:(id)arg1;
- (void)paste:(id)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (void)_previousAccessoryTab:(id)arg1;
- (void)_nextAccessoryTab:(id)arg1;
- (void)_transliterateChinese:(id)arg1;
- (void)_showTextStyleOptions:(id)arg1;
- (void)_share:(id)arg1;
- (void)_promptForReplace:(id)arg1;
- (void)_translate:(id)arg1;
- (void)_lookup:(id)arg1;
- (void)_define:(id)arg1;
- (void)_addShortcut:(id)arg1;
- (void)_findSelected:(id)arg1;
- (void)useSelectionForFind:(id)arg1;
- (void)captureTextFromCamera:(id)arg1;
- (id)supportedPasteboardTypesForCurrentSelection;
@property(readonly, nonatomic) UIView *inputAccessoryViewForWebView;
- (id)inputAccessoryView;
@property(readonly, nonatomic) UITextInputAssistantItem *inputAssistantItemForWebView;
- (id)inputAssistantItem;
- (_Bool)requiresAccessoryView;
- (_Bool)_elementTypeRequiresAccessoryView:(int)arg1;
- (void)_didEndScrollingOrZooming;
- (void)scrollViewWillStartPanOrPinchGesture;
- (void)_willStartScrollingOrZooming;
- (void)_positionInformationDidChange:(const void *)arg1;
- (void)_invalidateCurrentPositionInformation;
- (void)clearSelection;
- (void)pasteWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setUpTextSelectionAssistant;
- (void)_attemptSyntheticClickAtLocation:(struct CGPoint)arg1 modifierFlags:(long long)arg2;
- (void)_twoFingerDoubleTapRecognized:(id)arg1;
- (void)_nonBlockingDoubleTapRecognized:(id)arg1;
- (void)_resetIsDoubleTapPending;
- (void)_doubleTapRecognized:(id)arg1;
- (void)_singleTapRecognized:(id)arg1;
- (void)_didCompleteSyntheticClick;
- (void)_didNotHandleTapAsClick:(const struct IntPoint *)arg1;
- (void)_commitPotentialTapFailed;
- (void)_doubleTapDidFail:(id)arg1;
- (void)_singleTapDidReset:(id)arg1;
- (void)_singleTapIdentified:(id)arg1;
- (void)_endPotentialTapAndEnableDoubleTapGesturesIfNecessary;
- (void)_longPressRecognized:(id)arg1;
- (void)_twoFingerSingleTapGestureRecognized:(id)arg1;
- (void)_doubleTapRecognizedForDoubleClick:(id)arg1;
- (void)_highlightLongPressRecognized:(id)arg1;
- (ObjectIdentifier_e7ec9792)nextTapIdentifier;
- (id)webSelectionRects;
- (id)webSelectionRectsForSelectionGeometries:(const void *)arg1;
- (_Bool)textInteractionGesture:(long long)arg1 shouldBeginAtPoint:(struct CGPoint)arg2;
- (_Bool)pointIsNearMarkedText:(struct CGPoint)arg1;
- (_Bool)hasSelectablePositionAtPoint:(struct CGPoint)arg1;
- (_Bool)canShowNonEmptySelectionView;
- (void)_fadeTapHighlightViewIfNeeded;
- (void)_finishInteraction;
- (void)_cancelInteraction;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)_shouldToggleSelectionCommandsAfterTapAt:(struct CGPoint)arg1;
- (_Bool)_pointIsInsideSelectionRect:(struct CGPoint)arg1 outBoundingRect:(struct FloatRect *)arg2;
- (id)_uiTextSelectionRects;
- (id)_dataDetectionResults;
- (void)_invokeAndRemovePendingHandlersValidForCurrentPositionInformation;
- (_Bool)_currentPositionInformationIsApproximatelyValidForRequest:(const struct InteractionInformationRequest *)arg1 radiusForApproximation:(int)arg2;
- (_Bool)_hasValidOutstandingPositionInformationRequest:(const struct InteractionInformationRequest *)arg1;
- (_Bool)_currentPositionInformationIsValidForRequest:(const struct InteractionInformationRequest *)arg1;
- (void)requestAsynchronousPositionInformationUpdate:(struct InteractionInformationRequest)arg1;
- (_Bool)ensurePositionInformationIsUpToDate:(struct InteractionInformationRequest)arg1;
- (void)doAfterPositionInformationUpdate:(CDUnknownBlockType)arg1 forRequest:(struct InteractionInformationRequest)arg2;
- (SEL)_actionForLongPress;
- (SEL)_actionForLongPressFromPositionInformation:(const void *)arg1;
- (void)_showDataDetectorsUIForPositionInformation:(const void *)arg1;
- (void)_showDataDetectorsUI;
- (void)_showLinkSheet;
- (void)_showAttachmentSheet;
- (void)_showImageSheet;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)_shouldAdditionallyRecognizeGestureRecognizer:(id)arg1 simultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;
- (struct CGRect)_selectionClipRect;
@property(readonly, nonatomic) UIView *inputViewForWebView;
- (id)inputView;
- (void)resetShouldZoomToFocusRectAfterShowingKeyboard;
- (void)_zoomToRevealFocusedElement;
- (void)_zoomToFocusRectAfterShowingKeyboardIfNeeded;
- (void)_keyboardDidShow;
- (void)_keyboardWillShow;
- (struct FloatRect)rectToRevealWhenZoomingToFocusedElement;
- (_Bool)_requiresKeyboardResetOnReload;
- (_Bool)_requiresKeyboardWhenFirstResponder;
- (_Bool)_disableAutomaticKeyboardUI;
- (_Bool)_shouldShowAutomaticKeyboardUIIgnoringInputMode;
- (_Bool)shouldShowAutomaticKeyboardUI;
- (void)_scrollingNodeScrollingDidEnd:(unsigned long long)arg1;
- (void)_scrollingNodeScrollingWillBegin:(unsigned long long)arg1;
- (void)_didScroll;
- (void)_cancelTouchEventGestureRecognizer;
- (void)_cancelLongPressGestureRecognizer;
- (void)_handleSmartMagnificationInformationForPotentialTap:(ObjectIdentifier_e7ec9792)arg1 renderRect:(const struct FloatRect *)arg2 fitEntireRect:(_Bool)arg3 viewportMinimumScale:(double)arg4 viewportMaximumScale:(double)arg5 nodeIsRootLevel:(_Bool)arg6;
- (void)_disableDoubleTapGesturesDuringTapIfNecessary:(ObjectIdentifier_e7ec9792)arg1;
- (_Bool)_mayDisableDoubleTapGesturesDuringSingleTap;
- (void)_didGetTapHighlightForRequest:(ObjectIdentifier_e7ec9792)arg1 color:(const struct Color *)arg2 quads:(const void *)arg3 topLeftRadius:(const struct IntSize *)arg4 topRightRadius:(const struct IntSize *)arg5 bottomLeftRadius:(const struct IntSize *)arg6 bottomRightRadius:(const struct IntSize *)arg7 nodeHasBuiltInClickHandling:(_Bool)arg8;
- (void)_showTapHighlight;
@property(readonly, nonatomic) UIGestureRecognizer *imageAnalysisGestureRecognizer;
@property(readonly, nonatomic) struct CGRect tapHighlightViewRect;
- (void)_updateTapHighlight;
- (_Bool)_isTouchEndDeferringGesture:(id)arg1;
- (_Bool)_isTouchStartDeferringGesture:(id)arg1;
- (void)_doneDeferringTouchEnd:(_Bool)arg1;
- (void)_doneDeferringTouchStart:(_Bool)arg1;
- (id)_touchEndDeferringGestures;
- (id)_touchStartDeferringGestures;
@property(readonly, nonatomic) NSArray *deferringGestures;
@property(readonly, nonatomic) void *gestureRecognizerConsistencyEnforcer;
@property(readonly, nonatomic) UIWebTouchEventsGestureRecognizer *touchEventGestureRecognizer;
- (void)_webTouchEvent:(const void *)arg1 preventsNativeGestures:(_Bool)arg2;
- (void)_inspectorNodeSearchRecognized:(id)arg1;
- (void)_resetPanningPreventionFlags;
- (id)touchActionActiveTouches;
- (_Bool)gestureRecognizerMayDoubleTapToZoomWebView:(id)arg1;
- (_Bool)gestureRecognizerMayPinchToZoomWebView:(id)arg1;
- (_Bool)gestureRecognizerMayPanWebView:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceivePress:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)_handleTouchActionsForTouchEvent:(const void *)arg1;
- (void)_webTouchEventsRecognized:(id)arg1;
- (_Bool)_touchEventsMustRequireGestureRecognizerToFail:(id)arg1;
- (optional_53a37146)activeTouchIdentifierForGestureRecognizer:(id)arg1;
- (void)cancelPointersForGestureRecognizer:(id)arg1;
- (_Bool)resignFirstResponderForWebView;
- (void)endEditingAndUpdateFocusAppearanceWithReason:(long long)arg1;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponderForWebView;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponderForWebView;
- (_Bool)canBecomeFirstResponder;
- (void)_resetInputViewDeferral;
- (void)_scheduleResetInputViewDeferralAfterBecomingFirstResponder;
- (void)_cancelPreviousResetInputViewDeferralRequest;
- (void)_endEditing;
- (_Bool)setIsEditable:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isEditable;
@property(readonly, nonatomic) _Bool shouldHideSelectionWhenScrolling;
@property(readonly, nonatomic) struct CGPoint lastInteractionLocation;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) const void *positionInformation;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_disableInspectorNodeSearch;
- (void)_enableInspectorNodeSearch;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)scrollSelectionToVisible:(_Bool)arg1;
- (void)cancelAutoscroll;
- (void)startAutoscroll:(struct CGPoint)arg1;
- (struct CGRect)unobscuredContentRect;
- (id)_scroller;
- (double)inverseScale;
- (id)unscaledView;
- (void)_updateLongPressAndHighlightLongPressGestures;
- (void)_didChangeLinkPreviewAvailability;
- (void)_addDefaultGestureRecognizers;
- (void)_removeDefaultGestureRecognizers;
- (void)_cancelPendingKeyEventHandler;
- (void)cleanUpInteractionPreviewContainers;
- (void)cleanUpInteraction;
- (void)setUpInteraction;
- (void)_createAndConfigureLongPressGestureRecognizer;
- (void)_createAndConfigureHighlightLongPressGestureRecognizer;
- (void)_createAndConfigureDoubleTapGestureRecognizer;
- (id)_formInputSession;
@property(readonly, nonatomic) _Bool preventsPanningInYAxis;
@property(readonly, nonatomic) _Bool preventsPanningInXAxis;
@property(readonly, nonatomic) UIWKTextInteractionAssistant *textInteractionAssistant;
@property(readonly, nonatomic) _Bool isShowingDataListSuggestions;
- (void)_setDataListSuggestionsControl:(id)arg1;
- (void)_selectDataListOption:(long long)arg1;
- (void)_simulateSelectionStart;
- (void)_dismissContactPickerWithContacts:(id)arg1;
- (id)_contentsOfUserInterfaceItem:(id)arg1;
- (double)timePickerValueMinute;
- (double)timePickerValueHour;
- (void)setTimePickerValueToHour:(long long)arg1 minute:(long long)arg2;
@property(readonly, nonatomic) NSString *formInputLabel;
@property(readonly, nonatomic) NSString *selectFormPopoverTitle;
@property(readonly, nonatomic) NSString *textContentTypeForTesting;
- (void)setSelectedColorForColorPicker:(id)arg1;
- (_Bool)selectFormAccessoryHasCheckedItemAtRow:(long long)arg1;
- (void)selectFormAccessoryPickerRow:(long long)arg1;
- (void)_simulateLongPressActionAtLocation:(struct CGPoint)arg1;
- (void)_simulateElementAction:(long long)arg1 atLocation:(struct CGPoint)arg2;
- (void)_simulateTextEntered:(id)arg1;
@property(readonly, nonatomic, getter=isAnimatingDragCancel) _Bool animatingDragCancel;
@property(readonly, nonatomic) WKFormSelectControl *selectControl;
@property(readonly, nonatomic) WKDateTimeInputControl *dateTimeInputControl;
- (void)_doAfterReceivingEditDragSnapshotForTesting:(CDUnknownBlockType)arg1;
- (void)_previewItemControllerDidCancelPreview:(id)arg1;
- (id)_presentationRectsForPreviewItemController:(id)arg1;
- (id)_presentationSnapshotForPreviewItemController:(id)arg1;
- (void)_previewItemController:(id)arg1 didDismissPreview:(id)arg2 committing:(_Bool)arg3;
- (void)_interactionStoppedFromPreviewItemController:(id)arg1;
- (void)_interactionStartedFromPreviewItemController:(id)arg1;
- (void)_previewItemController:(id)arg1 commitPreview:(id)arg2;
- (id)_presentedViewControllerForPreviewItemController:(id)arg1;
- (struct CGRect)_presentationRectForPreviewItemController:(id)arg1;
- (id)_dataForPreviewItemController:(id)arg1 atPosition:(struct CGPoint)arg2 type:(long long *)arg3;
- (_Bool)_interactionShouldBeginFromPreviewItemController:(id)arg1 forPosition:(struct CGPoint)arg2;
- (void)contextMenuInteraction:(id)arg1 willEndForConfiguration:(id)arg2 animator:(id)arg3;
- (void)contextMenuInteraction:(id)arg1 willPerformPreviewActionForMenuWithConfiguration:(id)arg2 animator:(id)arg3;
- (id)_contextMenuInteraction:(id)arg1 styleForMenuWithConfiguration:(id)arg2;
- (id)contextMenuInteraction:(id)arg1 configuration:(id)arg2 dismissalPreviewForItemWithIdentifier:(id)arg3;
- (void)contextMenuInteraction:(id)arg1 willDisplayMenuForConfiguration:(id)arg2 animator:(id)arg3;
- (id)contextMenuInteraction:(id)arg1 configuration:(id)arg2 highlightPreviewForItemWithIdentifier:(id)arg3;
- (id)_contextMenuInteraction:(id)arg1 overrideSuggestedActionsForConfiguration:(id)arg2;
- (void)continueContextMenuInteractionWithDataDetectors:(CDUnknownBlockType)arg1;
- (void)continueContextMenuInteraction:(CDUnknownBlockType)arg1;
- (id)placeholderForDynamicallyInsertedImageAnalysisActions;
- (void)_contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint)arg2 completion:(CDUnknownBlockType)arg3;
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint)arg2;
- (void)assignLegacyDataForContextMenuInteraction;
- (void)_unregisterPreview;
- (void)_registerPreview;
@property(readonly, nonatomic) UIContextMenuInteraction *contextMenuInteraction;
- (id)textInteractionAssistantContextMenuInteraction;

// Remaining properties
@property(copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property(readonly, nonatomic) RTIInputSystemSourceSession *_rtiSourceSession;
@property(nonatomic) long long _textInputSource;
@property(nonatomic) _Bool acceptsDictationSearchResults;
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsInitialEmojiKeyboard;
@property(nonatomic) _Bool acceptsPayloads;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(readonly, nonatomic) long long cursorBehavior;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isDevicePasscodeEntry) _Bool devicePasscodeEntry;
@property(nonatomic) _Bool disableHandwritingKeyboard;
@property(nonatomic) _Bool disableInputBars;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureEditsUsingPlainText;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) struct UIEdgeInsets floatingKeyboardEdgeInsets;
@property(nonatomic) _Bool forceDefaultDictationInfo;
@property(nonatomic) long long forceDictationKeyboardType;
@property(nonatomic) _Bool forceDisableDictation;
@property(nonatomic) _Bool forceEnableDictation;
@property(nonatomic) _Bool forceFloatingKeyboard;
@property(nonatomic) _Bool forceSpellingDictation;
@property(nonatomic) _Bool hasDefaultContents;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidePrediction;
@property(retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isCarPlayIdiom;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool loadKeyboardsForSiriLanguage;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) _Bool preferOnlineDictation;
@property(nonatomic) long long preferredKeyboardStyle;
@property(copy, nonatomic) NSString *recentInputIdentifier;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(readonly) id <NSObject><NSCopying> selectedTextSearchDocument;
@property(nonatomic) long long selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBorderColor;
@property(nonatomic) double selectionBorderWidth;
@property(nonatomic) double selectionCornerRadius;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) struct UIEdgeInsets selectionEdgeInsets;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) _Bool showDictationButton;
@property(nonatomic) long long smartDashesType;
@property(nonatomic) long long smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;
@property(retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property(retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(copy, nonatomic) NSString *textContentType;
@property(readonly, nonatomic) id <UITextInputSuggestionDelegate> textInputSuggestionDelegate;
@property(readonly, nonatomic) UIView *textInputView;
@property(nonatomic) int textLoupeVisibility;
@property(readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property(nonatomic) long long textScriptType;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(retain, nonatomic) UIColor *underlineColorForSpelling;
@property(retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property(nonatomic) _Bool useAutomaticEndpointing;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) struct _NSRange validTextRange;

@end

