//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

__attribute__((visibility("hidden")))
@interface VNFaceLandmarkDetectorDNN
{
    struct shared_ptr<vision::mod::LandmarkDetectorDNN> _landmarkDetector;
    struct vector<_Geometry2D_point2D_, std::allocator<_Geometry2D_point2D_>> _landmarkPoints65;
}

+ (const void *)_requestConstellationToDetectorConstellationMap;
+ (id)outputBlobNames;
+ (id)inputBlobNames;
+ (id)configurationOptionKeysForDetectorKey;
+ (void)recordDefaultConfigurationOptionsInDictionary:(id)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)releaseResources;
- (id)processRegionOfInterest:(struct CGRect)arg1 croppedPixelBuffer:(const struct __CVBuffer *)arg2 options:(id)arg3 qosClass:(unsigned int)arg4 warningRecorder:(id)arg5 error:(id *)arg6 progressHandler:(CDUnknownBlockType)arg7;
- (_Bool)createRegionOfInterestCrop:(struct CGRect)arg1 options:(id)arg2 warningRecorder:(id)arg3 pixelBuffer:(struct __CVBuffer **)arg4 error:(id *)arg5 progressHandler:(CDUnknownBlockType)arg6;
- (_Bool)translateAndNormalizeLandmarkPointsWrtLLCofAlignedFaceBBox:(void *)arg1 imageBuffer:(id)arg2 outputFace:(id)arg3 error:(id *)arg4;
- (_Bool)getLandmarkOcclusionFlags:(void *)arg1 forConstellation:(int)arg2 error:(id *)arg3;
- (_Bool)getLandmarkErrorEstimates:(void *)arg1 forConstellation:(int)arg2 error:(id *)arg3;
- (_Bool)getLandmarkPoints:(void *)arg1 forConstellation:(int)arg2 error:(id *)arg3;
- (_Bool)getConstellation:(unsigned long long *)arg1 cvmlConstellation:(int *)arg2 fromOptions:(id)arg3 error:(id *)arg4;
@property(readonly) void *landmarkPoints65;

@end

