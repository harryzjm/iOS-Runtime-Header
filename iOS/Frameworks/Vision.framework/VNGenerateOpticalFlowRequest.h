//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface VNGenerateOpticalFlowRequest
{
    _Bool _enableFiltering;
    float _filterLumaWeight;
    float _filterChromaWeight;
    float _filterOcclusionWeight;
    unsigned long long _levelCount;
    unsigned long long _warpCount;
    unsigned long long _filterSize;
    unsigned long long _filterSamplingDensity;
}

@property(nonatomic) float filterOcclusionWeight; // @synthesize filterOcclusionWeight=_filterOcclusionWeight;
@property(nonatomic) float filterChromaWeight; // @synthesize filterChromaWeight=_filterChromaWeight;
@property(nonatomic) float filterLumaWeight; // @synthesize filterLumaWeight=_filterLumaWeight;
@property(nonatomic) unsigned long long filterSamplingDensity; // @synthesize filterSamplingDensity=_filterSamplingDensity;
@property(nonatomic) unsigned long long filterSize; // @synthesize filterSize=_filterSize;
@property(nonatomic) _Bool enableFiltering; // @synthesize enableFiltering=_enableFiltering;
@property(nonatomic) unsigned long long warpCount; // @synthesize warpCount=_warpCount;
@property(nonatomic) unsigned long long levelCount; // @synthesize levelCount=_levelCount;
- (_Bool)_validateParameters:(id *)arg1;
- (_Bool)internalPerformRevision:(unsigned long long)arg1 inContext:(id)arg2 error:(id *)arg3;
- (_Bool)wantsSequencedRequestObservationsRecording;
- (_Bool)willAcceptCachedResultsFromRequestWithConfiguration:(id)arg1;
- (_Bool)allowsCachingOfResults;
- (_Bool)_calculateLKTVectorResult:(struct __CVBuffer *)arg1 fromPixelBuffer:(struct __CVBuffer *)arg2 toPixelBuffer:(struct __CVBuffer *)arg3 ofWidth:(unsigned long long)arg4 height:(unsigned long long)arg5 error:(id *)arg6;
- (id)_initializedLKTMetalContextAndReturnError:(id *)arg1;
- (struct __CVBuffer *)_createLKTVectorResultPixelBufferForImageWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 error:(id *)arg3;
- (struct __CVBuffer *)_createLKTPixelBufferFromPixelRegionOfInterest:(struct CGRect)arg1 inImageBuffer:(id)arg2 error:(id *)arg3;
- (id)initWithTargetedImageSpecifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

