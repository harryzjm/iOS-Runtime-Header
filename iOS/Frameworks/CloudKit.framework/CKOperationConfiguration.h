//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudKit/NSCopying-Protocol.h>
#import <CloudKit/NSSecureCoding-Protocol.h>

@class CKContainer, CKSchedulerActivity, NSDictionary, NSMutableDictionary, NSNumber, NSString;
@protocol OS_xpc_object;

@interface CKOperationConfiguration : NSObject <NSSecureCoding, NSCopying>
{
    _Bool _allowsCellularAccess;
    _Bool _allowsExpensiveNetworkAccess;
    _Bool _longLived;
    _Bool _preferAnonymousRequests;
    _Bool _automaticallyRetryNetworkFailures;
    _Bool _xpcActivityAutomaticallyDefer;
    _Bool _discretionarySchedulingForEntireOperation;
    _Bool _allowsBackgroundNetworking;
    _Bool _isCloudKitSupportOperation;
    _Bool _hasQualityOfService;
    _Bool _hasContainer;
    _Bool _hasAllowsCellularAccess;
    _Bool _hasAllowsExpensiveNetworkAccess;
    _Bool _hasLongLived;
    _Bool _hasTimeoutIntervalForRequest;
    _Bool _hasTimeoutIntervalForResource;
    _Bool _hasAutomaticallyRetryNetworkFailures;
    _Bool _hasDiscretionaryNetworkBehavior;
    _Bool _hasXPCActivity;
    _Bool _hasXPCActivityAutomaticallyDefer;
    _Bool _hasSchedulerActivity;
    _Bool _hasDiscretionarySchedulingForEntireOperation;
    _Bool _hasPreferAnonymousRequests;
    _Bool _hasAllowsBackgroundNetworking;
    _Bool _hasSourceApplicationBundleIdentifier;
    _Bool _hasSourceApplicationSecondaryIdentifier;
    _Bool _hasApplicationBundleIdentifierOverrideForContainerAccess;
    _Bool _hasApplicationBundleIdentifierOverrideForNetworkAttribution;
    _Bool _hasAdditionalRequestHTTPHeaders;
    _Bool _hasIsCloudKitSupportOperation;
    _Bool _hasCacheDeleteAvailableSpaceClass;
    CKContainer *_container;
    long long _qualityOfService;
    double _timeoutIntervalForRequest;
    double _timeoutIntervalForResource;
    unsigned long long _discretionaryNetworkBehavior;
    NSObject<OS_xpc_object> *_xpcActivity;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_sourceApplicationSecondaryIdentifier;
    NSString *_applicationBundleIdentifierOverrideForContainerAccess;
    NSString *_applicationBundleIdentifierOverrideForNetworkAttribution;
    NSDictionary *_additionalRequestHTTPHeaders;
    NSNumber *_cacheDeleteAvailableSpaceClass;
    NSMutableDictionary *_unitTestOverrides;
    CKSchedulerActivity *_schedulerActivity;
}

+ (_Bool)supportsSecureCoding;
- (void).cxx_destruct;
@property(copy, nonatomic) CKSchedulerActivity *schedulerActivity; // @synthesize schedulerActivity=_schedulerActivity;
@property(retain, nonatomic) NSMutableDictionary *unitTestOverrides; // @synthesize unitTestOverrides=_unitTestOverrides;
@property(nonatomic) _Bool hasDiscretionaryNetworkBehavior; // @synthesize hasDiscretionaryNetworkBehavior=_hasDiscretionaryNetworkBehavior;
@property(nonatomic) _Bool hasAutomaticallyRetryNetworkFailures; // @synthesize hasAutomaticallyRetryNetworkFailures=_hasAutomaticallyRetryNetworkFailures;
@property(nonatomic) _Bool hasAllowsExpensiveNetworkAccess; // @synthesize hasAllowsExpensiveNetworkAccess=_hasAllowsExpensiveNetworkAccess;
@property(nonatomic) _Bool hasQualityOfService; // @synthesize hasQualityOfService=_hasQualityOfService;
@property(retain, nonatomic) NSObject<OS_xpc_object> *xpcActivity; // @synthesize xpcActivity=_xpcActivity;
- (id)CKDescriptionPropertiesWithPublic:(_Bool)arg1 private:(_Bool)arg2 shouldExpand:(_Bool)arg3;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(copy, nonatomic) NSDictionary *additionalRequestHTTPHeaders; // @synthesize additionalRequestHTTPHeaders=_additionalRequestHTTPHeaders;
- (void)setApplicationBundleIdentifierOverride:(id)arg1;
@property(copy, nonatomic) NSString *applicationBundleIdentifierOverrideForNetworkAttribution; // @synthesize applicationBundleIdentifierOverrideForNetworkAttribution=_applicationBundleIdentifierOverrideForNetworkAttribution;
@property(copy, nonatomic) NSString *applicationBundleIdentifierOverrideForContainerAccess; // @synthesize applicationBundleIdentifierOverrideForContainerAccess=_applicationBundleIdentifierOverrideForContainerAccess;
@property(copy, nonatomic) NSString *_sourceApplicationSecondaryIdentifier; // @synthesize _sourceApplicationSecondaryIdentifier;
@property(copy, nonatomic) NSString *sourceApplicationSecondaryIdentifier;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(nonatomic) _Bool allowsBackgroundNetworking; // @synthesize allowsBackgroundNetworking=_allowsBackgroundNetworking;
@property(copy, nonatomic) NSNumber *cacheDeleteAvailableSpaceClass; // @synthesize cacheDeleteAvailableSpaceClass=_cacheDeleteAvailableSpaceClass;
@property(nonatomic) _Bool isCloudKitSupportOperation; // @synthesize isCloudKitSupportOperation=_isCloudKitSupportOperation;
@property(nonatomic) _Bool preferAnonymousRequests; // @synthesize preferAnonymousRequests=_preferAnonymousRequests;
@property(nonatomic) _Bool discretionarySchedulingForEntireOperation; // @synthesize discretionarySchedulingForEntireOperation=_discretionarySchedulingForEntireOperation;
@property(nonatomic) _Bool xpcActivityAutomaticallyDefer; // @synthesize xpcActivityAutomaticallyDefer=_xpcActivityAutomaticallyDefer;
@property(nonatomic) unsigned long long discretionaryNetworkBehavior; // @synthesize discretionaryNetworkBehavior=_discretionaryNetworkBehavior;
@property(nonatomic) _Bool automaticallyRetryNetworkFailures; // @synthesize automaticallyRetryNetworkFailures=_automaticallyRetryNetworkFailures;
@property(nonatomic) double timeoutIntervalForResource; // @synthesize timeoutIntervalForResource=_timeoutIntervalForResource;
@property(nonatomic) double timeoutIntervalForRequest; // @synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest;
@property(nonatomic, getter=isLongLived) _Bool longLived; // @synthesize longLived=_longLived;
@property(nonatomic) _Bool allowsExpensiveNetworkAccess; // @synthesize allowsExpensiveNetworkAccess=_allowsExpensiveNetworkAccess;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) long long qualityOfService; // @synthesize qualityOfService=_qualityOfService;
@property(retain, nonatomic) CKContainer *container; // @synthesize container=_container;
- (id)resolveAgainstGenericConfiguration:(id)arg1;
- (id)init;

@end

