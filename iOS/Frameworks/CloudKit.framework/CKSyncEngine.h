//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudKit/CKPropertiesDescription-Protocol.h>

@class CKDatabase, CKNotificationListener, CKSyncEngineMetadata, NSOperationQueue, NSString;
@protocol CKSyncEngineDataSource, OS_dispatch_queue, OS_xpc_object;

@interface CKSyncEngine : NSObject <CKPropertiesDescription>
{
    _Bool _ignoringSystemConditions;
    _Bool _allowMetadataCallbackDeferral;
    _Bool _waitingForIdentityUpdate;
    _Bool _waitingForHSA2;
    _Bool _useUniqueActivityIdentifiers;
    _Bool _skipRetryOnOperationError;
    _Bool _automaticSyncingEnabled;
    _Bool _needsToReloadAccount;
    id <CKSyncEngineDataSource> _dataSource;
    CKDatabase *_database;
    CKSyncEngineMetadata *_metadata;
    unsigned long long _lastNotifiedMetadataChangeCount;
    CKNotificationListener *_notificationListener;
    NSOperationQueue *_operationQueue;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_batchCreationQueue;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    unsigned long long _maxRecordCountPerBatch;
    unsigned long long _maxRecordBytesPerBatch;
    unsigned long long _maxZoneCountPerBatch;
    NSObject<OS_xpc_object> *_xpcActivityCriteriaOverrides;
    long long _lastKnownAccountStatus;
    long long _priority;
    NSString *_databaseSubscriptionIDOverride;
    CDUnknownBlockType _updateMetadataBlock;
}

+ (_Bool)shouldDeferAfterError:(id)arg1;
+ (void)unregisterActivitiesWithDatabase:(id)arg1 ignoringSystemConditions:(_Bool)arg2;
+ (id)earliestStartDateAfterError:(id)arg1;
+ (void)setFastErrorRetry:(_Bool)arg1;
+ (_Bool)fastErrorRetry;
+ (id)saveSubscriptionActivityIdentifierInDatabase:(id)arg1 ignoringSystemConditions:(_Bool)arg2;
+ (id)syncActivityIdentifierInDatabase:(id)arg1 ignoringSystemConditions:(_Bool)arg2;
- (void).cxx_destruct;
@property(nonatomic) _Bool needsToReloadAccount; // @synthesize needsToReloadAccount=_needsToReloadAccount;
@property(nonatomic, getter=isAutomaticSyncingEnabled) _Bool automaticSyncingEnabled; // @synthesize automaticSyncingEnabled=_automaticSyncingEnabled;
@property(nonatomic) _Bool skipRetryOnOperationError; // @synthesize skipRetryOnOperationError=_skipRetryOnOperationError;
@property(retain, nonatomic) NSString *databaseSubscriptionIDOverride; // @synthesize databaseSubscriptionIDOverride=_databaseSubscriptionIDOverride;
@property(nonatomic) long long priority; // @synthesize priority=_priority;
@property(nonatomic) long long lastKnownAccountStatus; // @synthesize lastKnownAccountStatus=_lastKnownAccountStatus;
@property(nonatomic, getter=isWaitingForHSA2) _Bool waitingForHSA2; // @synthesize waitingForHSA2=_waitingForHSA2;
@property(nonatomic, getter=isWaitingForIdentityUpdate) _Bool waitingForIdentityUpdate; // @synthesize waitingForIdentityUpdate=_waitingForIdentityUpdate;
@property(retain, nonatomic) NSObject<OS_xpc_object> *xpcActivityCriteriaOverrides; // @synthesize xpcActivityCriteriaOverrides=_xpcActivityCriteriaOverrides;
@property(nonatomic) _Bool allowMetadataCallbackDeferral; // @synthesize allowMetadataCallbackDeferral=_allowMetadataCallbackDeferral;
@property(nonatomic) unsigned long long maxZoneCountPerBatch; // @synthesize maxZoneCountPerBatch=_maxZoneCountPerBatch;
@property(nonatomic) unsigned long long maxRecordCountPerBatch; // @synthesize maxRecordCountPerBatch=_maxRecordCountPerBatch;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) CKNotificationListener *notificationListener; // @synthesize notificationListener=_notificationListener;
@property(retain, nonatomic) CKSyncEngineMetadata *metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) CKDatabase *database; // @synthesize database=_database;
@property(readonly, nonatomic) __weak id <CKSyncEngineDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void)accountChangedNotification:(id)arg1;
- (void)identityUpdateNotification:(id)arg1;
- (_Bool)hasSchedulerActivityWithIdentifier:(id)arg1;
- (void)submitActivityIfNecessaryWithIdentifier:(id)arg1 earliestStartDate:(id)arg2 priority:(long long)arg3 userRequestedBackupTask:(_Bool)arg4;
- (void)performSyncActivity:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)unregisterActivities;
- (void)saveSubscriptionIfNecessaryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)didReceiveDatabaseNotification:(id)arg1;
- (id)databaseSubscriptionWithID:(id)arg1;
- (id)databaseSubscription;
- (id)defaultDatabaseSubscription;
- (id)defaultDatabaseSubscriptionID;
- (void)setNeedsToFetchChanges;
- (_Bool)needsToFetchChangesForZoneIDs:(id)arg1;
- (_Bool)_isFetchChangesErrorAdopterVisible:(id)arg1;
- (void)_updateDataSourceForFailedToFetchChangesForRecordZoneID:(id)arg1 error:(id)arg2;
- (id)_adopterVisibleFetchChangesErrorForZoneID:(id)arg1 error:(id)arg2;
- (id)existingOperationToFetchChangesForZoneIDs:(id)arg1 includingExecutingOperations:(_Bool)arg2;
- (void)_fetchChangesForZoneIDs:(id)arg1 ifNecessary:(_Bool)arg2 operationGroup:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)fetchChangesForZoneIDs:(id)arg1 group:(id)arg2 ifNecessary:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)fetchChangesForZoneIDs:(id)arg1 group:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)fetchChangesForZoneIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchChangesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)nextBatchOfRecordsToModifyWithCustomBatchingInZoneIDs:(id)arg1;
- (_Bool)hasPendingModifications;
- (unsigned long long)numberOfModifyPendingRecordsOperations;
- (id)existingOperationToModifyRecordBatchesForZoneIDs:(id)arg1 includingExecutingOperations:(_Bool)arg2;
- (void)modifyPendingChangesInZoneIDs:(id)arg1 group:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)modifyPendingChangesInZoneIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)modifyPendingChangesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)addRecordZonesToSave:(id)arg1 recordZoneIDsToDelete:(id)arg2;
- (void)addRecordIDsToSave:(id)arg1 recordIDsToDelete:(id)arg2;
@property(nonatomic) _Bool useOpportunisticPushTopic;
- (id)userRequestedBackupActivityIdentifier;
- (id)saveSubscriptionActivityIdentifier;
- (id)syncActivityIdentifier;
- (id)redactedDescription;
@property(readonly, copy) NSString *description;
- (void)CKDescribePropertiesUsing:(id)arg1;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1;
- (id)initWithDatabase:(id)arg1 dataSource:(id)arg2 metadata:(id)arg3 machServiceName:(id)arg4 priority:(long long)arg5 xpcActivityCriteriaOverrides:(id)arg6;
- (id)initWithDatabase:(id)arg1 dataSource:(id)arg2 metadata:(id)arg3 machServiceName:(id)arg4 priority:(long long)arg5;
- (id)initWithDatabase:(id)arg1 dataSource:(id)arg2 metadata:(id)arg3 machServiceName:(id)arg4;
- (id)initWithDatabase:(id)arg1 dataSource:(id)arg2 metadata:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

