//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CloudKit/CKFetchRecordsOperationCallbacks-Protocol.h>
#import <CloudKit/CKOperationInMemoryAssets-Protocol.h>

@class CKFetchRecordsOperationInfo, NSArray, NSDictionary, NSMutableDictionary, NSMutableSet;
@protocol CKFetchRecordsOperationCallbacks;

@interface CKFetchRecordsOperation <CKFetchRecordsOperationCallbacks, CKOperationInMemoryAssets>
{
    _Bool _isFetchCurrentUserOperation;
    _Bool _shouldFetchAssetContent;
    _Bool _shouldFetchAssetContentInMemory;
    _Bool _dropInMemoryAssetContentASAP;
    NSMutableDictionary *_assetInfoByArrayIndexByRecordKeyByRecordID;
    CDUnknownBlockType _perRecordProgressBlock;
    CDUnknownBlockType _perRecordCompletionBlock;
    CDUnknownBlockType _fetchRecordsCompletionBlock;
    NSArray *_recordIDs;
    NSArray *_desiredKeys;
    NSMutableSet *_packagesToDestroy;
    NSMutableDictionary *_recordErrors;
    NSDictionary *_webSharingIdentityDataByRecordID;
    NSDictionary *_assetTransferOptionsByRecordTypeAndKey;
    NSMutableDictionary *_recordIDsToRecords;
    NSDictionary *_desiredPackageFileIndices;
    NSDictionary *_recordIDsToETags;
    NSDictionary *_recordIDsToVersionETags;
}

+ (void)applyDaemonCallbackInterfaceTweaks:(id)arg1;
+ (id)fetchCurrentUserRecordOperation;
- (void).cxx_destruct;
@property(copy, nonatomic) NSDictionary *recordIDsToVersionETags; // @synthesize recordIDsToVersionETags=_recordIDsToVersionETags;
@property(copy, nonatomic) NSDictionary *recordIDsToETags; // @synthesize recordIDsToETags=_recordIDsToETags;
@property(copy, nonatomic) NSDictionary *desiredPackageFileIndices; // @synthesize desiredPackageFileIndices=_desiredPackageFileIndices;
@property(retain, nonatomic) NSMutableDictionary *recordIDsToRecords; // @synthesize recordIDsToRecords=_recordIDsToRecords;
@property(copy, nonatomic) NSDictionary *assetTransferOptionsByRecordTypeAndKey; // @synthesize assetTransferOptionsByRecordTypeAndKey=_assetTransferOptionsByRecordTypeAndKey;
@property(nonatomic) _Bool dropInMemoryAssetContentASAP; // @synthesize dropInMemoryAssetContentASAP=_dropInMemoryAssetContentASAP;
@property(nonatomic) _Bool shouldFetchAssetContentInMemory; // @synthesize shouldFetchAssetContentInMemory=_shouldFetchAssetContentInMemory;
@property(nonatomic) _Bool shouldFetchAssetContent; // @synthesize shouldFetchAssetContent=_shouldFetchAssetContent;
@property(retain, nonatomic) NSDictionary *webSharingIdentityDataByRecordID; // @synthesize webSharingIdentityDataByRecordID=_webSharingIdentityDataByRecordID;
@property(nonatomic) _Bool isFetchCurrentUserOperation; // @synthesize isFetchCurrentUserOperation=_isFetchCurrentUserOperation;
@property(copy, nonatomic) NSArray *desiredKeys; // @synthesize desiredKeys=_desiredKeys;
@property(copy, nonatomic) NSArray *recordIDs; // @synthesize recordIDs=_recordIDs;
@property(retain, nonatomic) NSMutableDictionary *assetInfoByArrayIndexByRecordKeyByRecordID; // @synthesize assetInfoByArrayIndexByRecordKeyByRecordID=_assetInfoByArrayIndexByRecordKeyByRecordID;
- (id)activityCreate;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)handleAssetDataForRecordID:(id)arg1 recordKey:(id)arg2 arrayIndex:(long long)arg3 data:(id)arg4 offset:(unsigned long long)arg5;
- (void)handleFetchForRecordID:(id)arg1 didProgress:(double)arg2;
- (void)handleFetchForRecordID:(id)arg1 record:(id)arg2 error:(id)arg3;
- (_Bool)claimPackagesInRecord:(id)arg1 error:(id *)arg2;
- (void)performCKOperation;
- (_Bool)CKOperationShouldRun:(id *)arg1;
- (_Bool)hasCKOperationCallbacksSet;
- (void)fillFromOperationInfo:(id)arg1;
- (void)fillOutOperationInfo:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType fetchRecordsCompletionBlock; // @synthesize fetchRecordsCompletionBlock=_fetchRecordsCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType perRecordCompletionBlock; // @synthesize perRecordCompletionBlock=_perRecordCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType perRecordProgressBlock; // @synthesize perRecordProgressBlock=_perRecordProgressBlock;
- (id)initWithRecordIDs:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) id <CKFetchRecordsOperationCallbacks> clientOperationCallbackProxy; // @dynamic clientOperationCallbackProxy;
@property(readonly, nonatomic) CKFetchRecordsOperationInfo *operationInfo; // @dynamic operationInfo;

@end

