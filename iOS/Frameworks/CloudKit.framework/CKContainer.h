//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKContainerID, CKContainerImplementation, CKContainerOptions, CKContainerSetupInfo, CKConvenienceConfiguration, CKDatabase, NSMutableArray, NSString;

@interface CKContainer : NSObject
{
    int _scopedIdentityUpdateToken;
    CKDatabase *_organizationCloudDatabase;
    CKDatabase *_privateCloudDatabase;
    CKDatabase *_publicCloudDatabase;
    CKDatabase *_sharedCloudDatabase;
    NSMutableArray *_codeServices;
    CKContainerImplementation *_implementation;
    CKConvenienceConfiguration *_convenienceConfiguration;
}

+ (id)instanceMethodSignatureForSelector:(SEL)arg1;
+ (id)importantUserRecordAccessQueue;
+ (id)_CKXPCClientToDiscretionaryDaemonInterface;
+ (id)uploadRequestFetchAllNotificationName;
+ (id)matterhornName;
+ (id)containerIDForContainerIdentifier:(id)arg1;
+ (id)containerIDForContainerIdentifier:(id)arg1 environment:(long long)arg2;
+ (id)containerWithIdentifier:(id)arg1;
+ (id)defaultContainer;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)currentProcessCanUseCloudKit;
- (void).cxx_destruct;
@property(retain, nonatomic) CKConvenienceConfiguration *convenienceConfiguration; // @synthesize convenienceConfiguration=_convenienceConfiguration;
@property(readonly, nonatomic) CKContainerImplementation *implementation; // @synthesize implementation=_implementation;
@property(nonatomic) int scopedIdentityUpdateToken; // @synthesize scopedIdentityUpdateToken=_scopedIdentityUpdateToken;
@property(retain, nonatomic) NSMutableArray *codeServices; // @synthesize codeServices=_codeServices;
@property(retain, nonatomic) CKDatabase *sharedCloudDatabase; // @synthesize sharedCloudDatabase=_sharedCloudDatabase;
@property(retain, nonatomic) CKDatabase *publicCloudDatabase; // @synthesize publicCloudDatabase=_publicCloudDatabase;
@property(retain, nonatomic) CKDatabase *privateCloudDatabase; // @synthesize privateCloudDatabase=_privateCloudDatabase;
- (void)cancelUploadRequests;
- (void)manuallyTriggerUploadRequests;
- (void)unregisterFromUploadRequestsWithMachServiceName:(id)arg1;
- (void)unregisterFromUploadRequests;
- (void)registerForPackageUploadRequests:(CDUnknownBlockType)arg1 machServiceName:(id)arg2;
- (void)registerForPackageUploadRequests:(CDUnknownBlockType)arg1;
- (void)registerForAssetUploadRequests:(CDUnknownBlockType)arg1 machServiceName:(id)arg2;
- (void)registerForAssetUploadRequests:(CDUnknownBlockType)arg1;
- (void)fetchOrgAdminUserRecordIDWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2;
- (void)fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchCurrentDeviceIDWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)wipeAllCachesAndDie;
- (id)serverPreferredPushEnvironmentWithError:(id *)arg1;
- (void)serverPreferredPushEnvironmentWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)accountInfoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)statusGroupsForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setApplicationPermission:(unsigned long long)arg1 enabled:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)submitEventMetric:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)submitEventMetric:(id)arg1;
- (void)fetchShareParticipantWithLookupInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)getNewWebSharingIdentityDataWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchLongLivedOperationWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchAllLongLivedOperationIDsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)acceptShareMetadata:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchShareMetadataWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchShareParticipantWithUserRecordID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchShareParticipantWithPhoneNumber:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchShareParticipantWithEmailAddress:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)discoverUserIdentityWithUserRecordID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)discoverUserIdentityWithPhoneNumber:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)discoverUserIdentityWithEmailAddress:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)discoverAllIdentitiesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchUserRecordIDWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)requestApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)statusForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)accountStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)addOperation:(id)arg1;
@property(readonly, copy, nonatomic) CKContainerSetupInfo *setupInfo;
@property(copy, nonatomic) NSString *sourceApplicationSecondaryIdentifier;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifier;
@property(readonly, copy, nonatomic) CKContainerOptions *options;
@property(readonly, copy, nonatomic) CKContainerID *containerID;
@property(readonly, copy, nonatomic) NSString *containerIdentifier;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)codeServiceWithName:(id)arg1 databaseScope:(long long)arg2 serviceInstanceURL:(id)arg3;
- (id)codeServiceWithName:(id)arg1 serviceInstanceURL:(id)arg2;
- (id)codeServiceWithName:(id)arg1 databaseScope:(long long)arg2;
- (id)codeServiceWithName:(id)arg1;
- (id)databaseWithDatabaseScope:(long long)arg1;
@property(readonly, nonatomic) CKDatabase *organizationCloudDatabase; // @synthesize organizationCloudDatabase=_organizationCloudDatabase;
- (id)initWithImplementation:(id)arg1 convenienceConfiguration:(id)arg2;
- (void)dealloc;
- (id)_initUnconfiguredContainerWithImplementation:(id)arg1;
- (id)initWithContainerID:(id)arg1;
- (id)initWithContainerID:(id)arg1 options:(id)arg2;
- (id)initWithContainerSetupInfo:(id)arg1;
- (id)_initWithContainerIdentifier:(id)arg1;
- (void)discoverUserInfoWithUserRecordID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)discoverUserInfoWithEmailAddress:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)discoverAllContactUserInfosWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

