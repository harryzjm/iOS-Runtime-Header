//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudKit/CKRecordValue-Protocol.h>
#import <CloudKit/NSSecureCoding-Protocol.h>

@class CKRecord, CKSQLite, NSArray, NSData, NSString;

@interface CKPackage : NSObject <NSSecureCoding, CKRecordValue>
{
    struct _OpaquePCSShareProtection *_recordPCS;
    _Bool _open;
    _Bool _wasCached;
    _Bool _uploaded;
    _Bool _downloaded;
    _Bool _hasSize;
    _Bool _shouldReadRawEncryptedData;
    NSString *_UUID;
    NSString *_rootDatabasePath;
    long long _state;
    NSData *_archiverInfo;
    CKSQLite *_sqlite;
    unsigned long long _nextItemIndex;
    unsigned long long _size;
    long long _storageGroupingPolicy;
    long long _uploadRank;
    long long _packageID;
    NSArray *_assets;
    CKRecord *_record;
    NSString *_recordKey;
}

+ (void)gcPackagesInDirectory:(id)arg1 dbInUseBlock:(CDUnknownBlockType)arg2;
+ (_Bool)supportsSecureCoding;
+ (void)destroyClientPackageWithDatabaseBasePath:(id)arg1 UUID:(id)arg2;
+ (id)clientPackageDatabaseDirectory;
+ (id)packageProcessBasePath;
+ (id)stagingPathSuffixForCloudKitCachesDirectoryWithBundleIdentifier:(id)arg1;
+ (id)packageInDaemonWithBasePath:(id)arg1 error:(id *)arg2;
+ (id)packageInClientWithBasePath:(id)arg1 error:(id *)arg2;
+ (id)packageWithPackage:(id)arg1 error:(id *)arg2;
+ (id)packageWithError:(id *)arg1;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *recordKey; // @synthesize recordKey=_recordKey;
@property(nonatomic) __weak CKRecord *record; // @synthesize record=_record;
@property(copy, nonatomic) NSArray *assets; // @synthesize assets=_assets;
@property(nonatomic) long long packageID; // @synthesize packageID=_packageID;
@property(nonatomic) long long uploadRank; // @synthesize uploadRank=_uploadRank;
@property(nonatomic) long long storageGroupingPolicy; // @synthesize storageGroupingPolicy=_storageGroupingPolicy;
@property(nonatomic) _Bool shouldReadRawEncryptedData; // @synthesize shouldReadRawEncryptedData=_shouldReadRawEncryptedData;
@property(nonatomic) _Bool hasSize; // @synthesize hasSize=_hasSize;
@property(nonatomic) _Bool downloaded; // @synthesize downloaded=_downloaded;
@property(nonatomic) _Bool uploaded; // @synthesize uploaded=_uploaded;
@property(nonatomic) _Bool wasCached; // @synthesize wasCached=_wasCached;
@property(nonatomic) unsigned long long size; // @synthesize size=_size;
@property(nonatomic, getter=isOpen) _Bool open; // @synthesize open=_open;
@property(nonatomic) unsigned long long nextItemIndex; // @synthesize nextItemIndex=_nextItemIndex;
@property(retain, nonatomic) CKSQLite *sqlite; // @synthesize sqlite=_sqlite;
@property(copy, nonatomic) NSData *archiverInfo; // @synthesize archiverInfo=_archiverInfo;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(copy, nonatomic) NSString *rootDatabasePath; // @synthesize rootDatabasePath=_rootDatabasePath;
@property(copy, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(nonatomic) struct _OpaquePCSShareProtection *recordPCS; // @synthesize recordPCS=_recordPCS;
- (double)earliestUploadReceiptExpiration;
@property(copy, nonatomic) NSString *databaseBasePath;
- (_Bool)claimOwnershipWithError:(id *)arg1;
@property(copy, nonatomic) NSData *signature;
- (id)performTransactionBlock:(CDUnknownBlockType)arg1;
- (id)testAddSectionConstraintViolation:(id)arg1;
- (_Bool)addSection:(id)arg1;
- (id)sectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)sectionCount;
- (_Bool)updateItemsAtIndexes:(id)arg1 fileURLs:(id)arg2;
- (_Bool)updateItemAtIndex:(long long)arg1 withFileURL:(id)arg2;
- (_Bool)updateItemAtIndex:(long long)arg1 withSignature:(id)arg2 size:(unsigned long long)arg3 itemID:(unsigned long long)arg4 sectionIndex:(unsigned long long)arg5;
- (_Bool)addItem:(id)arg1;
- (id)itemEnumeratorForSectionAtIndex:(unsigned long long)arg1;
- (id)itemEnumerator;
- (id)itemAtIndex:(unsigned long long)arg1;
- (id)_itemOrNilAtIndex:(unsigned long long)arg1;
- (id)_itemWithColumnsByName:(id)arg1;
- (unsigned long long)itemCountWithError:(id *)arg1;
- (unsigned long long)itemCount;
- (void)close;
- (_Bool)openWithError:(id *)arg1;
@property(readonly, copy) NSString *description;
- (id)CKDescriptionPropertiesWithPublic:(_Bool)arg1 private:(_Bool)arg2 shouldExpand:(_Bool)arg3;
- (void)releaseDB;
- (void)removeDB;
- (void)releaseDBWithRemove:(_Bool)arg1;
- (_Bool)prepareDBWithError:(id *)arg1;
- (_Bool)setArchiverInfo:(id)arg1 error:(id *)arg2;
- (void)handleChangeStateAction:(long long)arg1;
- (_Bool)handleChangeStateAction:(long long)arg1 error:(id *)arg2;
- (_Bool)movePackagesDatabaseInDirection:(_Bool)arg1 error:(id *)arg2;
- (id)_packageDatabasePath;
- (id)_packageDatabasePathWithState:(long long)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initUnreachablePackageWithUUID:(id)arg1;
- (id)_initWithBasePath:(id)arg1 UUID:(id)arg2;
- (id)init;
- (_Bool)removeDBAndDeleteFilesWithError:(id *)arg1;
- (id)clonedPackageInDaemonWithBasePath:(id)arg1 filesDuplicatedIntoDirectory:(id)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

