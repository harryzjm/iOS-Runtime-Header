//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudKit/CKXPCContainerScopedClient-Protocol.h>

@class CKAccountOverrideInfo, CKContainer, CKContainerID, CKContainerOptions, CKContainerSetupInfo, CKDatabaseImplementation, CKEntitlements, CKOperationFlowControlManager, CKRecordID, CKUploadRequestManager, NSLock, NSMutableArray, NSNumber, NSOperationQueue, NSString, NSXPCConnection;
@protocol CKXPCContainerScopedDaemon, NSObject, OS_dispatch_queue;

@interface CKContainerImplementation : NSObject <CKXPCContainerScopedClient>
{
    CKRecordID *_containerScopedUserID_locked;
    CKRecordID *_orgAdminUserID_locked;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_sourceApplicationSecondaryIdentifier;
    _Bool _hasCachedSetupInfo;
    _Bool _captureResponseHTTPHeaders;
    _Bool _hasValidContainerScopedDaemonProxyCreator;
    _Bool _hasValidDiscretionaryXPCConnection;
    int _statusReportToken;
    CKUploadRequestManager *_uploadRequestManager;
    NSString *_personaIdentifier;
    CKContainer *_unconfiguredWrappingContainer;
    CKContainerID *_containerID;
    CKContainerOptions *_options;
    CKDatabaseImplementation *_privateCloudDatabaseImplementation;
    CKDatabaseImplementation *_publicCloudDatabaseImplementation;
    CKDatabaseImplementation *_sharedCloudDatabaseImplementation;
    CKDatabaseImplementation *_organizationCloudDatabaseImplementation;
    NSMutableArray *_codeServiceImplementations;
    NSXPCConnection *_discretionaryXPCConnection;
    NSOperationQueue *_throttlingOperationQueue;
    NSOperationQueue *_backgroundThrottlingOperationQueue;
    NSOperationQueue *_discretionaryThrottlingOperationQueue;
    CKOperationFlowControlManager *_flowControlManager;
    CKContainerSetupInfo *_cachedSetupInfo;
    CKEntitlements *_resolvedEntitlements;
    NSNumber *_fakeDeviceToDeviceEncryptionAvailability;
    NSObject<OS_dispatch_queue> *_underlyingDispatchQueue;
    id <CKXPCContainerScopedDaemon> _containerScopedDaemonProxyCreator;
    id <NSObject> _connectionInterruptedObserver;
    NSOperationQueue *_convenienceOperationQueue;
    NSMutableArray *_sandboxExtensionHandles;
    unsigned long long _stateHandle;
    CKAccountOverrideInfo *_accountOverrideInfo;
    NSLock *_daemonConnectionLock;
}

+ (void)initialize;
- (void).cxx_destruct;
@property(nonatomic) _Bool captureResponseHTTPHeaders; // @synthesize captureResponseHTTPHeaders=_captureResponseHTTPHeaders;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *underlyingDispatchQueue; // @synthesize underlyingDispatchQueue=_underlyingDispatchQueue;
@property(retain, nonatomic) NSNumber *fakeDeviceToDeviceEncryptionAvailability; // @synthesize fakeDeviceToDeviceEncryptionAvailability=_fakeDeviceToDeviceEncryptionAvailability;
@property(retain, nonatomic) CKEntitlements *resolvedEntitlements; // @synthesize resolvedEntitlements=_resolvedEntitlements;
@property(nonatomic) _Bool hasCachedSetupInfo; // @synthesize hasCachedSetupInfo=_hasCachedSetupInfo;
@property(retain, nonatomic) CKContainerSetupInfo *cachedSetupInfo; // @synthesize cachedSetupInfo=_cachedSetupInfo;
@property(nonatomic) int statusReportToken; // @synthesize statusReportToken=_statusReportToken;
@property(retain, nonatomic) CKOperationFlowControlManager *flowControlManager; // @synthesize flowControlManager=_flowControlManager;
@property(retain, nonatomic) NSOperationQueue *discretionaryThrottlingOperationQueue; // @synthesize discretionaryThrottlingOperationQueue=_discretionaryThrottlingOperationQueue;
@property(retain, nonatomic) NSOperationQueue *backgroundThrottlingOperationQueue; // @synthesize backgroundThrottlingOperationQueue=_backgroundThrottlingOperationQueue;
@property(retain, nonatomic) NSOperationQueue *throttlingOperationQueue; // @synthesize throttlingOperationQueue=_throttlingOperationQueue;
@property(retain, nonatomic) NSXPCConnection *discretionaryXPCConnection; // @synthesize discretionaryXPCConnection=_discretionaryXPCConnection;
@property(retain, nonatomic) NSMutableArray *codeServiceImplementations; // @synthesize codeServiceImplementations=_codeServiceImplementations;
@property(retain, nonatomic) CKDatabaseImplementation *organizationCloudDatabaseImplementation; // @synthesize organizationCloudDatabaseImplementation=_organizationCloudDatabaseImplementation;
@property(retain, nonatomic) CKDatabaseImplementation *sharedCloudDatabaseImplementation; // @synthesize sharedCloudDatabaseImplementation=_sharedCloudDatabaseImplementation;
@property(retain, nonatomic) CKDatabaseImplementation *publicCloudDatabaseImplementation; // @synthesize publicCloudDatabaseImplementation=_publicCloudDatabaseImplementation;
@property(retain, nonatomic) CKDatabaseImplementation *privateCloudDatabaseImplementation; // @synthesize privateCloudDatabaseImplementation=_privateCloudDatabaseImplementation;
@property(copy, nonatomic) CKContainerOptions *options; // @synthesize options=_options;
@property(copy, nonatomic) CKContainerID *containerID; // @synthesize containerID=_containerID;
@property(nonatomic) __weak CKContainer *unconfiguredWrappingContainer; // @synthesize unconfiguredWrappingContainer=_unconfiguredWrappingContainer;
@property(copy, nonatomic) NSString *personaIdentifier; // @synthesize personaIdentifier=_personaIdentifier;
- (void)registerForAssetRequests:(CDUnknownBlockType)arg1 packageRequests:(CDUnknownBlockType)arg2 machServiceName:(id)arg3;
@property(readonly, nonatomic) CKUploadRequestManager *uploadRequestManager; // @synthesize uploadRequestManager=_uploadRequestManager;
- (void)cancelUploadRequests;
- (void)manuallyTriggerUploadRequests;
- (void)unregisterFromUploadRequestsWithMachServiceName:(id)arg1;
- (void)unregisterFromUploadRequests;
- (void)registerForPackageUploadRequests:(CDUnknownBlockType)arg1 machServiceName:(id)arg2;
- (void)registerForPackageUploadRequests:(CDUnknownBlockType)arg1;
- (void)registerForAssetUploadRequests:(CDUnknownBlockType)arg1 machServiceName:(id)arg2;
- (void)registerForAssetUploadRequests:(CDUnknownBlockType)arg1;
- (void)fetchLongLivedOperationWithID:(id)arg1 wrappingContainer:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)fetchAllLongLivedOperationIDsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)requestApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)statusForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)reloadAccountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)accountInfoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)accountStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchXPCCriteriaWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)getNewWebSharingIdentityDataWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)decryptPersonalInfoOnShare:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)acceptShareMetadata:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)fetchShareMetadataWithURL:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)fetchShareParticipantWithUserRecordID:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)fetchShareParticipantWithPhoneNumber:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)fetchShareParticipantWithEmailAddress:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)fetchShareParticipantWithLookupInfo:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)discoverUserIdentityWithUserRecordID:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)discoverUserIdentityWithPhoneNumber:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)discoverUserIdentityWithEmailAddress:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)discoverAllIdentitiesWithWrappingContainer:(id)arg1 convenienceConfiguration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)fetchOrgAdminUserRecordIDWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchUserRecordIDWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) CKRecordID *orgAdminUserID;
@property(retain, nonatomic) CKRecordID *containerScopedUserID;
- (id)applicationBundleIdentifierForPush;
- (id)primaryIdentifier;
- (void)dumpDaemonStatusReport;
- (void)dumpDaemonStatusReportToFileHandle:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)CKStatusReportArray;
- (void)fetchFrameworkCachesDirectoryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)deviceCountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_submitEventMetric:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)submitEventMetric:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)submitEventMetric:(id)arg1;
- (void)fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchCurrentDeviceIDWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchServerEnvironment:(CDUnknownBlockType)arg1;
- (void)representativeDataclassEnabledWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)clearPILSCacheForLookupInfos:(id)arg1;
- (void)clearContainerFromMetadataCache;
- (void)wipeAllCachesAndDie;
- (void)setSourceApplicationSecondaryIdentifier:(id)arg1;
- (id)sourceApplicationSecondaryIdentifier;
- (void)setSourceApplicationBundleIdentifier:(id)arg1;
- (id)sourceApplicationBundleIdentifier;
- (id)untrustedEntitlements;
- (void)fetchCurrentUserBoundaryKeyWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dropDetachedContainersWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)getOutstandingOperationCountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setFakeResponseOperationResult:(id)arg1 forNextRequestOfClassName:(id)arg2 forItemID:(id)arg3 withLifetime:(int)arg4;
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2;
- (void)serverPreferredPushEnvironmentSynchronous:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)serverPreferredPushEnvironmentWithError:(id *)arg1;
- (void)serverPreferredPushEnvironmentWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)tossConfigWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)resetAllApplicationPermissionsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setApplicationPermission:(unsigned long long)arg1 enabled:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)statusGroupsForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_scheduleConvenienceOperation:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3;
- (void)addOperation:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3;
- (void)consumeSandboxExtensions:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (id)_discretionaryDaemonMachServiceConnection;
@property(readonly, copy, nonatomic) NSString *containerIdentifier;
- (id)deviceContext;
- (id)setupInfo;
- (id)description;
- (id)CKPropertiesDescription;
- (void)dealloc;
- (id)codeServiceImplementationWithName:(id)arg1 databaseScope:(long long)arg2 serviceInstanceURL:(id)arg3;
- (id)codeServiceImplementationWithName:(id)arg1 serviceInstanceURL:(id)arg2;
- (id)codeServiceImplementationWithName:(id)arg1 databaseScope:(long long)arg2;
- (id)codeServiceImplementationWithName:(id)arg1;
- (id)initWithContainerID:(id)arg1 options:(id)arg2 unconfiguredWrappingContainer:(id)arg3;

@end

