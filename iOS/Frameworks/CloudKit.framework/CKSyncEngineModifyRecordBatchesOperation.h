//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSOperation.h>

@class CKDatabase, CKOperationGroup, NSError, NSOperationQueue, NSSet;

@interface CKSyncEngineModifyRecordBatchesOperation : NSOperation
{
    _Bool _isExecuting;
    _Bool _isFinished;
    CKDatabase *_database;
    CKOperationGroup *_group;
    CDUnknownBlockType _populateNextBatchBlock;
    CDUnknownBlockType _perRecordProgressBlock;
    CDUnknownBlockType _perRecordSaveCompletionBlock;
    CDUnknownBlockType _batchCompletionBlock;
    CDUnknownBlockType _modifyRecordBatchesCompletionBlock;
    CDUnknownBlockType _willEnqueueOperationBlock;
    NSError *_error;
    NSSet *_zoneIDs;
    NSOperationQueue *_operationQueue;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool isFinished; // @synthesize isFinished=_isFinished;
@property(nonatomic) _Bool isExecuting; // @synthesize isExecuting=_isExecuting;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSSet *zoneIDs; // @synthesize zoneIDs=_zoneIDs;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(copy, nonatomic) CDUnknownBlockType willEnqueueOperationBlock; // @synthesize willEnqueueOperationBlock=_willEnqueueOperationBlock;
@property(copy, nonatomic) CDUnknownBlockType modifyRecordBatchesCompletionBlock; // @synthesize modifyRecordBatchesCompletionBlock=_modifyRecordBatchesCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType batchCompletionBlock; // @synthesize batchCompletionBlock=_batchCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType perRecordSaveCompletionBlock; // @synthesize perRecordSaveCompletionBlock=_perRecordSaveCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType perRecordProgressBlock; // @synthesize perRecordProgressBlock=_perRecordProgressBlock;
@property(copy, nonatomic) CDUnknownBlockType populateNextBatchBlock; // @synthesize populateNextBatchBlock=_populateNextBatchBlock;
@property(retain, nonatomic) CKOperationGroup *group; // @synthesize group=_group;
@property(readonly, nonatomic) CKDatabase *database; // @synthesize database=_database;
- (id)operationToModifyBatch:(id)arg1;
- (void)addNextModifyOperationOrFinishIfNoRemainingWork;
- (id)cancelledError;
- (void)finishWithError:(id)arg1;
- (void)cancel;
- (void)start;
- (_Bool)isAsynchronous;
- (id)init;
- (id)initWithDatabase:(id)arg1;

@end

