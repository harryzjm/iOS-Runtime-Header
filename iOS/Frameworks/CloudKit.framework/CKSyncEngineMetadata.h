//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudKit/NSSecureCoding-Protocol.h>

@class CKServerChangeToken, NSArray, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet;
@protocol OS_dispatch_queue;

@interface CKSyncEngineMetadata : NSObject <NSSecureCoding>
{
    _Bool _needsToFetchDatabaseChanges;
    _Bool _needsToSaveDatabaseSubscription;
    CKServerChangeToken *_serverChangeTokenForDatabase;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableSet *_zoneIDsNeedingToFetchChangesSet;
    NSMutableDictionary *_serverChangeTokensByZoneID;
    NSMutableDictionary *_zonesToSaveDictionary;
    NSMutableOrderedSet *_zoneIDsToDeleteSet;
    NSMutableOrderedSet *_pendingModificationsSet;
    NSMutableOrderedSet *_inFlightModificationsSet;
    unsigned long long _internalChangeCount;
    NSMutableOrderedSet *_fakeRecordIDsToSaveForSerializationTests;
    NSMutableOrderedSet *_fakeRecordIDsToDeleteForSerializationTests;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSMutableOrderedSet *fakeRecordIDsToDeleteForSerializationTests; // @synthesize fakeRecordIDsToDeleteForSerializationTests=_fakeRecordIDsToDeleteForSerializationTests;
@property(retain, nonatomic) NSMutableOrderedSet *fakeRecordIDsToSaveForSerializationTests; // @synthesize fakeRecordIDsToSaveForSerializationTests=_fakeRecordIDsToSaveForSerializationTests;
@property(nonatomic) unsigned long long internalChangeCount; // @synthesize internalChangeCount=_internalChangeCount;
@property(retain, nonatomic) NSMutableOrderedSet *inFlightModificationsSet; // @synthesize inFlightModificationsSet=_inFlightModificationsSet;
@property(retain, nonatomic) NSMutableOrderedSet *pendingModificationsSet; // @synthesize pendingModificationsSet=_pendingModificationsSet;
@property(retain, nonatomic) NSMutableOrderedSet *zoneIDsToDeleteSet; // @synthesize zoneIDsToDeleteSet=_zoneIDsToDeleteSet;
@property(retain, nonatomic) NSMutableDictionary *zonesToSaveDictionary; // @synthesize zonesToSaveDictionary=_zonesToSaveDictionary;
@property(retain, nonatomic) NSMutableDictionary *serverChangeTokensByZoneID; // @synthesize serverChangeTokensByZoneID=_serverChangeTokensByZoneID;
@property(retain, nonatomic) NSMutableSet *zoneIDsNeedingToFetchChangesSet; // @synthesize zoneIDsNeedingToFetchChangesSet=_zoneIDsNeedingToFetchChangesSet;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
@property(nonatomic) _Bool needsToSaveDatabaseSubscription; // @synthesize needsToSaveDatabaseSubscription=_needsToSaveDatabaseSubscription;
@property(nonatomic) _Bool needsToFetchDatabaseChanges; // @synthesize needsToFetchDatabaseChanges=_needsToFetchDatabaseChanges;
@property(retain, nonatomic) CKServerChangeToken *serverChangeTokenForDatabase; // @synthesize serverChangeTokenForDatabase=_serverChangeTokenForDatabase;
- (_Bool)needsToDeleteZoneID:(id)arg1;
@property(readonly, nonatomic) NSArray *zoneIDsToDelete;
- (void)setNeedsToDelete:(_Bool)arg1 zoneIDs:(id)arg2;
- (_Bool)needsToSaveZone:(id)arg1;
@property(readonly, nonatomic) NSArray *zonesToSave;
- (void)setNeedsToSave:(_Bool)arg1 zones:(id)arg2;
@property(readonly, nonatomic) NSArray *zoneIDsNeedingToFetchChanges;
- (_Bool)needsToFetchChangesForZoneID:(id)arg1;
- (void)setNeedsToFetchChanges:(_Bool)arg1 forRecordZoneID:(id)arg2;
- (id)serverChangeTokenForRecordZoneID:(id)arg1;
- (void)setServerChangeToken:(id)arg1 forRecordZoneID:(id)arg2;
- (id)pendingRecordIDsWithModificationType:(long long)arg1;
- (id)recordIDsToDelete;
- (id)recordIDsToSave;
@property(readonly, nonatomic) NSArray *inFlightRecordModifications;
@property(readonly, nonatomic) NSArray *pendingRecordModifications;
- (void)removeInFlightRecordModifications:(id)arg1;
- (void)removePendingRecordModifications:(id)arg1;
- (void)markRecordModifications:(id)arg1 inFlight:(_Bool)arg2;
- (void)addPendingRecordModifications:(id)arg1;
@property(readonly, nonatomic) unsigned long long changeCount;
- (void)getDataRepresentation:(CDUnknownBlockType)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)CKDescriptionPropertiesWithPublic:(_Bool)arg1 private:(_Bool)arg2 shouldExpand:(_Bool)arg3;
- (id)description;
- (id)init;
- (void)commonInit;
- (id)initWithData:(id)arg1;

@end

