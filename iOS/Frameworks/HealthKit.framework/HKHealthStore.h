//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <HealthKit/HKHealthStoreClientInterface-Protocol.h>
#import <HealthKit/HKQueryDelegate-Protocol.h>
#import <HealthKit/_HKXPCExportable-Protocol.h>

@class HKHealthServicesManager, HKHealthStoreIdentifier, HKProfileIdentifier, NSBundle, NSMutableSet, NSSet, NSString, _HKXPCConnection;
@protocol HDHealthStoreServerInterface, OS_dispatch_queue, _HKAuthorizationPresentationController, _HKDocumentPickerPresentationController;

@interface HKHealthStore : NSObject <HKHealthStoreClientInterface, _HKXPCExportable, HKQueryDelegate>
{
    struct os_unfair_lock_s _lock;
    NSObject<OS_dispatch_queue> *_connectionQueue;
    _HKXPCConnection *_healthdConnection;
    NSBundle *_sourceBundle;
    NSString *_sourceBundleIdentifier;
    NSString *_debugIdentifier;
    HKProfileIdentifier *_profileIdentifier;
    unsigned int _applicationSDKVersion;
    id <HDHealthStoreServerInterface> _serverProxy;
    id <_HKAuthorizationPresentationController> _authorizationPresentationController;
    id <_HKDocumentPickerPresentationController> _documentPickerPresentationController;
    CDUnknownBlockType _authorizationDelegateTransactionErrorHandler;
    HKHealthServicesManager *_healthServicesManager;
    NSMutableSet *_queries;
    _Bool _resumeRequired;
    _Bool _resumed;
    NSString *_writeAuthorizationUsageDescriptionOverride;
    NSString *_readAuthorizationUsageDescriptionOverride;
    NSString *_clinicalReadAuthorizationUsageDescriptionOverride;
    NSString *_researchStudyUsageDescriptionOverride;
    NSString *_daemonLaunchDarwinNotificationName;
    NSObject<OS_dispatch_queue> *_clientQueue;
    HKHealthStoreIdentifier *_identifier;
}

+ (_Bool)_applicationHasRunningWorkout;
+ (_Bool)isHealthDataAvailable;
- (void).cxx_destruct;
@property(readonly, copy) HKHealthStoreIdentifier *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
@property(copy, nonatomic) NSString *daemonLaunchDarwinNotificationName; // @synthesize daemonLaunchDarwinNotificationName=_daemonLaunchDarwinNotificationName;
@property(copy, nonatomic) NSString *researchStudyUsageDescriptionOverride; // @synthesize researchStudyUsageDescriptionOverride=_researchStudyUsageDescriptionOverride;
@property(copy, nonatomic) NSString *clinicalReadAuthorizationUsageDescriptionOverride; // @synthesize clinicalReadAuthorizationUsageDescriptionOverride=_clinicalReadAuthorizationUsageDescriptionOverride;
@property(copy, nonatomic) NSString *readAuthorizationUsageDescriptionOverride; // @synthesize readAuthorizationUsageDescriptionOverride=_readAuthorizationUsageDescriptionOverride;
@property(copy, nonatomic) NSString *writeAuthorizationUsageDescriptionOverride; // @synthesize writeAuthorizationUsageDescriptionOverride=_writeAuthorizationUsageDescriptionOverride;
- (void)restoreEntitlement:(id)arg1;
- (void)dropEntitlement:(id)arg1;
- (void)badgeHealthAppForEmergencyContactsConsolidationWithCompletion:(CDUnknownBlockType)arg1;
- (void)deleteMedicalIDDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)deleteMedicalIDData;
- (void)updateMedicalIDData:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateMedicalIDData:(id)arg1;
- (void)fetchMedicalIDEmergencyContactsWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchMedicalIDDataCreateIfNecessary:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)fetchMedicalIDDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)clientRemote_conceptIndexManagerDidBecomeQuiescentWithSamplesProcessedCount:(long long)arg1;
- (void)clientRemote_unitPreferencesDidUpdate;
- (void)setServerURL:(id)arg1 forAssetType:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchServerURLForAssetType:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getHealthLiteValueForKey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setHealthLiteValue:(id)arg1 forKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_prepareObjectsForSaving:(id)arg1 errorOut:(id *)arg2;
- (CDUnknownBlockType)_objectCompletionOnClientQueue:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)_actionCompletionOnClientQueue:(CDUnknownBlockType)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (void)connectionInterrupted;
- (void)connectionInvalidated;
- (id)exportedInterface;
- (id)remoteInterface;
- (void)splitTotalEnergy:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 resultsHandler:(CDUnknownBlockType)arg4;
- (void)_removePreferredUnitForType:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setPreferredUnit:(id)arg1 forType:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)preferredUnitsForQuantityTypes:(id)arg1 version:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)preferredUnitsForQuantityTypes:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_closeTransactionWithType:(id)arg1 anchor:(id)arg2 ackTime:(id)arg3;
- (void)disableAllBackgroundDeliveryWithCompletion:(CDUnknownBlockType)arg1;
- (void)disableBackgroundDeliveryForType:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)enableBackgroundDeliveryForType:(id)arg1 frequency:(long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)_setBackgroundDeliveryFrequencyDataType:(id)arg1 frequency:(long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)closeTransactionForType:(id)arg1 anchor:(id)arg2 ackTime:(id)arg3 query:(id)arg4;
- (void)queryDidFinishExecuting:(id)arg1;
- (void)recoverActiveWorkoutSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)startWatchAppWithWorkoutConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)resumeWorkoutSession:(id)arg1;
- (void)pauseWorkoutSession:(id)arg1;
- (void)endWorkoutSession:(id)arg1;
- (void)startWorkoutSession:(id)arg1;
- (void)_replaceWorkout:(id)arg1 withWorkout:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)addSamples:(id)arg1 toWorkout:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)supportsHealthRecords;
- (_Bool)_setCharacteristic:(id)arg1 forDataType:(id)arg2 error:(id *)arg3;
- (id)_characteristicForDataType:(id)arg1 error:(id *)arg2;
- (_Bool)_setActivityMoveMode:(long long)arg1 error:(id *)arg2;
- (id)_activityMoveModeWithError:(id *)arg1;
- (id)activityMoveModeWithError:(id *)arg1;
- (_Bool)_setUserEnteredMenstrualPeriodLengthCharacteristicQuantity:(id)arg1 error:(id *)arg2;
- (id)_userEnteredMenstrualPeriodLengthCharacteristicQuantityWithError:(id *)arg1;
- (_Bool)_setUserEnteredMenstrualCycleLengthCharacteristicQuantity:(id)arg1 error:(id *)arg2;
- (id)_userEnteredMenstrualCycleLengthCharacteristicQuantityWithError:(id *)arg1;
- (_Bool)_setHeightCharacteristicQuantity:(id)arg1 error:(id *)arg2;
- (id)_heightCharacteristicQuantityWithError:(id *)arg1;
- (_Bool)_setLeanBodyMassCharacteristicQuantity:(id)arg1 error:(id *)arg2;
- (id)_leanBodyMassCharacteristicQuantityWithError:(id *)arg1;
- (_Bool)_setBodyMassCharacteristicQuantity:(id)arg1 error:(id *)arg2;
- (id)_bodyMassCharacteristicQuantityWithError:(id *)arg1;
- (_Bool)_setCardioFitnessMedicationsUse:(unsigned long long)arg1 error:(id *)arg2;
- (id)_cardioFitnessMedicationsUseWithError:(id *)arg1;
- (_Bool)_setWheelchairUse:(long long)arg1 error:(id *)arg2;
- (id)wheelchairUseWithError:(id *)arg1;
- (_Bool)_setFitzpatrickSkinType:(long long)arg1 error:(id *)arg2;
- (id)fitzpatrickSkinTypeWithError:(id *)arg1;
- (_Bool)_setBloodType:(long long)arg1 error:(id *)arg2;
- (id)bloodTypeWithError:(id *)arg1;
- (_Bool)_setBiologicalSex:(long long)arg1 error:(id *)arg2;
- (id)biologicalSexWithError:(id *)arg1;
- (_Bool)_setDateOfBirthComponents:(id)arg1 error:(id *)arg2;
- (id)dateOfBirthComponentsWithError:(id *)arg1;
- (id)dateOfBirthWithError:(id *)arg1;
@property(readonly, copy, getter=_queries) NSSet *queries;
- (void)stopQuery:(id)arg1;
- (void)executeQuery:(id)arg1 activationHandler:(CDUnknownBlockType)arg2;
- (void)executeQuery:(id)arg1;
- (void)_removeQuery:(id)arg1;
- (void)_addQuery:(id)arg1;
- (void)deleteObjectsOfType:(id)arg1 predicate:(id)arg2 options:(unsigned long long)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)deleteObjects:(id)arg1 options:(unsigned long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)deleteObject:(id)arg1 options:(unsigned long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)deleteObjectsOfType:(id)arg1 predicate:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)_deleteObjects:(id)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)deleteObjects:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)deleteObject:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)_sendNextObjectBatch:(id)arg1 lastRange:(struct _NSRange)arg2 server:(id)arg3 transaction:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_saveObjects:(id)arg1 atomically:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)saveObjects:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)saveObject:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)earliestPermittedSampleDate;
- (void)clientRemote_presentAuthorizationWithSession:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)clientRemote_presentAuthorizationWithRequestRecord:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_healthDataAuthorizationPresentationRequestForRecord:(id)arg1;
- (id)_clinicalAuthorizationPresentationRequestForRecord:(id)arg1;
- (void)_clientQueue_invokeAuthorizationDelegateTransactionErrorHandlerWithError:(id)arg1;
- (void)endAuthorizationDelegateTransactionWithSessionIdentifier:(id)arg1 error:(id)arg2;
- (void)beginAuthorizationDelegateTransactionWithSessionIdentifier:(id)arg1 sourceHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)_throwIfParentTypeNotRequestedForSharing:(_Bool)arg1 types:(id)arg2;
- (void)_throwIfClinicalTypesRequestedToShare:(id)arg1;
- (void)_throwIfAuthorizationDisallowedForSharing:(_Bool)arg1 types:(id)arg2;
- (void)handleAuthorizationForExtensionWithCompletion:(CDUnknownBlockType)arg1;
- (void)_validateHealthDataPurposeStringsForSharingTypes:(id)arg1 readingTypes:(id)arg2 isResearchStudy:(_Bool)arg3;
- (void)_validateClinicalHealthRecordsPurposeStringsForSharingTypes:(id)arg1 readingTypes:(id)arg2;
- (id)_researchStudyUsageDescription;
- (id)_clientClinicalReadAuthorizationUsageDescription;
- (id)_clientReadAuthorizationUsageDescription;
- (id)_clientWriteAuthorizationUsageDescription;
- (void)_validatePurposeStringsForSharingTypes:(id)arg1 readingTypes:(id)arg2;
- (void)_validateAuthorizationRequiredTypes;
- (void)requestAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 shouldPrompt:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_validateAuthorizationRequestWithShareTypes:(id)arg1 readTypes:(id)arg2;
- (void)requestAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)getRequestStatusForAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (long long)authorizationStatusForType:(id)arg1;
- (void)saveObjects:(id)arg1 deleteObjects:(id)arg2 associations:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)associateSampleUUIDs:(id)arg1 withSampleUUID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)deleteClientSourceWithCompletion:(CDUnknownBlockType)arg1;
- (void)deleteObjectsWithUUIDs:(id)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)deleteAllSamplesWithTypes:(id)arg1 sourceBundleIdentifier:(id)arg2 options:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchTaskServerEndpointForIdentifier:(id)arg1 pluginURL:(id)arg2 taskUUID:(id)arg3 configuration:(id)arg4 endpointHandler:(CDUnknownBlockType)arg5 errorHandler:(CDUnknownBlockType)arg6;
- (void)fetchPluginServiceEndpointForIdentifier:(id)arg1 endpointHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)_serverProxyWithCompletion:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)_discardServerProxiesForServer:(id)arg1;
- (void)resume;
@property(readonly, nonatomic) HKHealthServicesManager *healthServicesManager;
@property(copy) NSString *debugIdentifier;
- (id)_sourceBundleOrDefaultBundle;
@property(retain) NSBundle *sourceBundle;
@property(copy) NSString *sourceBundleIdentifier;
@property(copy) HKProfileIdentifier *profileIdentifier;
@property(readonly, nonatomic) unsigned int applicationSDKVersion;
- (void)unitTest_setApplicationSDKVersion:(unsigned int)arg1;
- (void)_setConfigurationPropertyUsingBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)unitTest_replaceListenerEndpoint:(id)arg1;
- (void)_connectionQueue_setUpWithEndpoint:(id)arg1;
- (void)_faultIfInnappropriateHost;
- (id)initWithListenerEndpoint:(id)arg1 debugIdentifier:(id)arg2;
- (id)initWithListenerEndpoint:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (id)_initWithIdentifier:(id)arg1;
- (id)init;
- (void)removeHealthServicePairing:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)addHealthServicePairing:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)healthPeripheralsWithFilter:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;
- (void)healthServicePairingsWithHandler:(CDUnknownBlockType)arg1;
- (void)unregisterPeripheralIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)registerPeripheralIdentifier:(id)arg1 name:(id)arg2 services:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)endHealthServiceSession:(id)arg1;
- (void)startHealthServiceSession:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)endHealthServiceDiscovery:(id)arg1;
- (void)startHealthServiceDiscovery:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)profileIdentifierForNRDeviceUUID:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, copy, nonatomic) NSString *firstName;
- (void)disableCloudSyncAndDeleteAllCloudDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchCloudSyncRequiredWithCompletion:(CDUnknownBlockType)arg1;
- (void)forceCloudSyncDataUploadForProfileWithCompletion:(CDUnknownBlockType)arg1;
- (void)forceCloudSyncWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)forceCloudSyncWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)getHealthDirectorySizeInBytesWithCompletion:(CDUnknownBlockType)arg1;
- (void)allSourcesWithCompletion:(CDUnknownBlockType)arg1;
- (void)deleteSourceWithBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)hasSampleWithBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_currentWorkoutSnapshotWithCompletion:(CDUnknownBlockType)arg1;
- (void)_firstPartyWorkoutSnapshotWithCompletion:(CDUnknownBlockType)arg1;
- (void)_activeWorkoutApplicationIdentifierWithCompletion:(CDUnknownBlockType)arg1;
- (void)generateFakeDataForActivityType:(long long)arg1 minutes:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_generatePauseOrResumeRequest:(CDUnknownBlockType)arg1;
- (void)_generateWorkoutMarkerWithCompletion:(CDUnknownBlockType)arg1;
- (void)postCompanionUserNotificationOfType:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)postNotificationWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setBadge:(id)arg1 forDomain:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)badgeForDomain:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)waitForLastChanceSyncWithDevicePairingID:(id)arg1 timeout:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)resetNanoSyncWithCompletion:(CDUnknownBlockType)arg1;
- (void)forceLastChanceNanoSyncWithCompletion:(CDUnknownBlockType)arg1;
- (void)forceNanoSyncWithPullRequest:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)forceNanoSyncWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchNanoSyncPairedDevicesWithCompletion:(CDUnknownBlockType)arg1;
- (void)_mostRecentQuantityOfType:(id)arg1 beforeDate:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_currentValueForQuantityTypeCode:(long long)arg1 characteristicTypeCode:(long long)arg2 beforeDate:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_calculateBMRForDate:(id)arg1 useEndOfDay:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)invalidateActivityAlertSuppressionForIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)suppressActivityAlertsForIdentifier:(id)arg1 suppressionReason:(long long)arg2 timeoutUntilDate:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)_createFitnessMachineConnectionInitiator;
- (id)_createFitnessMachineConnection;
- (void)_setDaemonPreferenceValue:(id)arg1 forKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_fetchDaemonPreferenceForKey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_safeFetchDaemonPreferenceForKey:(id)arg1 expectedReturnClass:(Class)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_fetchBoolDaemonPreferenceForKey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_shouldGenerateDemoDataPreferenceIsSet:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

