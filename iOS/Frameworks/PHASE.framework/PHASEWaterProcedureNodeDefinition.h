//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class PHASENumberMetaParameterDefinition;

@interface PHASEWaterProcedureNodeDefinition
{
    double _fallRate;
    double _averageDropDiameter;
    double _maxDropDiameter;
    double _impulseShape;
    double _impulseGainExponent;
    double _impulseGain;
    double _chirpRiseRate;
    double _baseFrequencyMultiplier;
    double _bubbleGain;
    PHASENumberMetaParameterDefinition *_fallRateMetaParameterDefinition;
    PHASENumberMetaParameterDefinition *_averageDropDiameterMetaParameterDefinition;
    PHASENumberMetaParameterDefinition *_maxDropDiameterMetaParameterDefinition;
    PHASENumberMetaParameterDefinition *_impulseShapeMetaParameterDefinition;
    PHASENumberMetaParameterDefinition *_impulseGainExponentMetaParameterDefinition;
    PHASENumberMetaParameterDefinition *_impulseGainMetaParameterDefinition;
    PHASENumberMetaParameterDefinition *_chirpRiseRateMetaParameterDefinition;
    PHASENumberMetaParameterDefinition *_baseFrequencyMultiplierMetaParameterDefinition;
    PHASENumberMetaParameterDefinition *_bubbleGainMetaParameterDefinition;
}

+ (id)new;
- (void).cxx_destruct;
@property(retain, nonatomic) PHASENumberMetaParameterDefinition *bubbleGainMetaParameterDefinition; // @synthesize bubbleGainMetaParameterDefinition=_bubbleGainMetaParameterDefinition;
@property(retain, nonatomic) PHASENumberMetaParameterDefinition *baseFrequencyMultiplierMetaParameterDefinition; // @synthesize baseFrequencyMultiplierMetaParameterDefinition=_baseFrequencyMultiplierMetaParameterDefinition;
@property(retain, nonatomic) PHASENumberMetaParameterDefinition *chirpRiseRateMetaParameterDefinition; // @synthesize chirpRiseRateMetaParameterDefinition=_chirpRiseRateMetaParameterDefinition;
@property(retain, nonatomic) PHASENumberMetaParameterDefinition *impulseGainMetaParameterDefinition; // @synthesize impulseGainMetaParameterDefinition=_impulseGainMetaParameterDefinition;
@property(retain, nonatomic) PHASENumberMetaParameterDefinition *impulseGainExponentMetaParameterDefinition; // @synthesize impulseGainExponentMetaParameterDefinition=_impulseGainExponentMetaParameterDefinition;
@property(retain, nonatomic) PHASENumberMetaParameterDefinition *impulseShapeMetaParameterDefinition; // @synthesize impulseShapeMetaParameterDefinition=_impulseShapeMetaParameterDefinition;
@property(retain, nonatomic) PHASENumberMetaParameterDefinition *maxDropDiameterMetaParameterDefinition; // @synthesize maxDropDiameterMetaParameterDefinition=_maxDropDiameterMetaParameterDefinition;
@property(retain, nonatomic) PHASENumberMetaParameterDefinition *averageDropDiameterMetaParameterDefinition; // @synthesize averageDropDiameterMetaParameterDefinition=_averageDropDiameterMetaParameterDefinition;
@property(retain, nonatomic) PHASENumberMetaParameterDefinition *fallRateMetaParameterDefinition; // @synthesize fallRateMetaParameterDefinition=_fallRateMetaParameterDefinition;
@property(nonatomic) double bubbleGain; // @synthesize bubbleGain=_bubbleGain;
@property(nonatomic) double baseFrequencyMultiplier; // @synthesize baseFrequencyMultiplier=_baseFrequencyMultiplier;
@property(nonatomic) double chirpRiseRate; // @synthesize chirpRiseRate=_chirpRiseRate;
@property(nonatomic) double impulseGain; // @synthesize impulseGain=_impulseGain;
@property(nonatomic) double impulseGainExponent; // @synthesize impulseGainExponent=_impulseGainExponent;
@property(nonatomic) double impulseShape; // @synthesize impulseShape=_impulseShape;
@property(nonatomic) double maxDropDiameter; // @synthesize maxDropDiameter=_maxDropDiameter;
@property(nonatomic) double averageDropDiameter; // @synthesize averageDropDiameter=_averageDropDiameter;
@property(nonatomic) double fallRate; // @synthesize fallRate=_fallRate;
- (id)initWithMixerDefinition:(id)arg1 maxPolyphony:(int)arg2 voiceStealingType:(long long)arg3;
- (id)initWithMixerDefinition:(id)arg1 maxPolyphony:(int)arg2 voiceStealingType:(long long)arg3 identifier:(id)arg4;
- (id)initWithMixerDefinition:(id)arg1 referenceGainDbSpl:(double)arg2 maxPolyphony:(int)arg3 voiceStealingType:(long long)arg4;
- (id)initWithMixerDefinition:(id)arg1 referenceGainDbSpl:(double)arg2 maxPolyphony:(int)arg3 voiceStealingType:(long long)arg4 uid:(id)arg5;
- (id)init;

@end

