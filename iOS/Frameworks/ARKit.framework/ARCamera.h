//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <ARKit/NSCopying-Protocol.h>

@class MISSING_TYPE;

@interface ARCamera : NSObject <NSCopying>
{
    float _exposureOffset;
    long long _trackingState;
    long long _trackingStateReason;
    double _exposureDuration;
    MISSING_TYPE *_eulerAngles;
    struct CGSize _imageResolution;
    CDStruct_8e0628e6 _intrinsics;
    CDStruct_14d5dc5e _transform;
    CDStruct_14d5dc5e _projectionMatrix;
}

@property(readonly, nonatomic) CDStruct_14d5dc5e projectionMatrix; // @synthesize projectionMatrix=_projectionMatrix;
@property(readonly, nonatomic) float exposureOffset; // @synthesize exposureOffset=_exposureOffset;
@property(readonly, nonatomic) double exposureDuration; // @synthesize exposureDuration=_exposureDuration;
@property(readonly, nonatomic) struct CGSize imageResolution; // @synthesize imageResolution=_imageResolution;
@property(readonly, nonatomic) CDStruct_8e0628e6 intrinsics; // @synthesize intrinsics=_intrinsics;
@property(readonly, nonatomic) long long trackingStateReason; // @synthesize trackingStateReason=_trackingStateReason;
@property(readonly, nonatomic) long long trackingState; // @synthesize trackingState=_trackingState;
@property(readonly, nonatomic) MISSING_TYPE *eulerAngles; // @synthesize eulerAngles=_eulerAngles;
@property(readonly, nonatomic) CDStruct_14d5dc5e transform; // @synthesize transform=_transform;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (CDStruct_14d5dc5e)viewMatrixForOrientation:(long long)arg1;
- (MISSING_TYPE *)unprojectPoint:(struct CGPoint)arg1 ontoPlaneWithTransform:(CDStruct_14d5dc5e)arg2 orientation:(long long)arg3 viewportSize:(struct CGSize)arg4;
- (struct CGPoint)projectPoint:(long long)arg1 orientation:(struct CGSize)arg2 viewportSize: /* Error: Ran out of types for this method. */;
- (CDStruct_14d5dc5e)projectionMatrixForOrientation:(long long)arg1 viewportSize:(struct CGSize)arg2 zNear:(double)arg3 zFar:(double)arg4;

@end

