//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PhotosUI/ISChangeObserver-Protocol.h>
#import <PhotosUI/PXChangeObserver-Protocol.h>
#import <PhotosUI/PXVideoSessionDelegate-Protocol.h>

@class AVPlayerItem, ISWrappedAVPlayer, NSError, NSHashTable, NSMutableSet, NSString, PUBrowsingVideoPlayerChange, PUMediaProvider, PXUpdater, PXVideoSession;
@protocol PUDisplayAsset;

@interface PUBrowsingVideoPlayer <ISChangeObserver, PXChangeObserver, PXVideoSessionDelegate>
{
    PXUpdater *_updater;
    NSMutableSet *_pauseReasons;
    CDStruct_1b6d18a9 _pendingSeekTime;
    CDUnknownBlockType _pendingSeekCompletionHandler;
    _Bool _isPlayingAllowed;
    _Bool _alwaysRespectsMuteSwitch;
    _Bool _isMuted;
    _Bool _isPlayerLoadingAllowed;
    _Bool _isActivated;
    _Bool __isUpdatingAudioSession;
    _Bool _shouldLoadVideoSession;
    float _volume;
    id <PUDisplayAsset> _asset;
    PUMediaProvider *_mediaProvider;
    long long _desiredPlayState;
    long long _audioStatus;
    PXVideoSession *_videoSession;
    AVPlayerItem *_playerItem;
    NSError *_error;
    NSMutableSet *__playerLoadingDisablingReasons;
    NSMutableSet *__playingDisablingReasons;
    unsigned long long _nextPlayerLoadingEnabledUpdateID;
    NSHashTable *__timeObservers;
    CDStruct_1b6d18a9 _desiredSeekTime;
}

@property(readonly, nonatomic) NSHashTable *_timeObservers; // @synthesize _timeObservers=__timeObservers;
@property(nonatomic) _Bool shouldLoadVideoSession; // @synthesize shouldLoadVideoSession=_shouldLoadVideoSession;
@property(nonatomic) unsigned long long nextPlayerLoadingEnabledUpdateID; // @synthesize nextPlayerLoadingEnabledUpdateID=_nextPlayerLoadingEnabledUpdateID;
@property(nonatomic, setter=_setUpdatingAudioSession:) _Bool _isUpdatingAudioSession; // @synthesize _isUpdatingAudioSession=__isUpdatingAudioSession;
@property(retain, nonatomic, setter=_setPlayingDisablingReasons:) NSMutableSet *_playingDisablingReasons; // @synthesize _playingDisablingReasons=__playingDisablingReasons;
@property(retain, nonatomic, setter=_setPlayerLoadingDisablingReasons:) NSMutableSet *_playerLoadingDisablingReasons; // @synthesize _playerLoadingDisablingReasons=__playerLoadingDisablingReasons;
@property(retain, nonatomic, setter=_setError:) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic, setter=_setPlayerItem:) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(nonatomic, setter=setActivated:) _Bool isActivated; // @synthesize isActivated=_isActivated;
@property(nonatomic) CDStruct_1b6d18a9 desiredSeekTime; // @synthesize desiredSeekTime=_desiredSeekTime;
@property(retain, nonatomic) PXVideoSession *videoSession; // @synthesize videoSession=_videoSession;
@property(nonatomic, setter=_setPlayerLoadingAllowed:) _Bool isPlayerLoadingAllowed; // @synthesize isPlayerLoadingAllowed=_isPlayerLoadingAllowed;
@property(nonatomic, setter=setMuted:) _Bool isMuted; // @synthesize isMuted=_isMuted;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(nonatomic) _Bool alwaysRespectsMuteSwitch; // @synthesize alwaysRespectsMuteSwitch=_alwaysRespectsMuteSwitch;
@property(nonatomic, setter=_setAudioStatus:) long long audioStatus; // @synthesize audioStatus=_audioStatus;
@property(nonatomic, setter=_setPlayingAllowed:) _Bool isPlayingAllowed; // @synthesize isPlayingAllowed=_isPlayingAllowed;
@property(nonatomic) long long desiredPlayState; // @synthesize desiredPlayState=_desiredPlayState;
@property(readonly, nonatomic) PUMediaProvider *mediaProvider; // @synthesize mediaProvider=_mediaProvider;
@property(retain, nonatomic) id <PUDisplayAsset> asset; // @synthesize asset=_asset;
- (void).cxx_destruct;
- (void)_performPendingSeekIfNeeded;
- (void)_updatePlayerVolume;
- (void)_updateVideoSessionDesiredPlayState;
- (void)_updateVideoSession;
- (void)_updateAudioSessionCategory;
- (void)_handleDidBecomeActiveNotification:(id)arg1;
- (void)_handleWillResignActiveNotification:(id)arg1;
- (void)videoSessionAudioSessionOutputVolumeDidChange:(id)arg1 fromVolume:(float)arg2 toVolume:(float)arg3;
- (void)videoSessionDidPlayToEnd:(id)arg1;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;
- (void)unregisterTimeObserver:(id)arg1;
- (void)registerTimeObserver:(id)arg1;
@property(readonly, nonatomic) CDStruct_1b6d18a9 duration;
@property(readonly, nonatomic) CDStruct_1b6d18a9 currentTime;
- (void)_handleShouldReloadAssetMediaNotification:(id)arg1;
- (void)unregisterChangeObserver:(id)arg1;
- (void)registerChangeObserver:(id)arg1;
@property(readonly, nonatomic) PUBrowsingVideoPlayerChange *currentChange;
- (id)newViewModelChange;
- (void)rewindExistingPlayer;
- (void)setPlayingDisabled:(_Bool)arg1 forReason:(id)arg2;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool isStalled;
@property(readonly, nonatomic) long long playState;
@property(readonly, nonatomic) _Bool isPlayable;
@property(readonly, nonatomic) _Bool isAtEnd;
@property(readonly, nonatomic) _Bool isAtBeginning;
@property(readonly, nonatomic) _Bool isPlaybackDesired;
- (void)endPauseForReason:(id)arg1;
- (void)beginPauseForReason:(id)arg1;
- (void)_updatePlayerLoadingAllowedWithUpdateID:(unsigned long long)arg1;
- (void)setPlayerLoadingDisabled:(_Bool)arg1 forReason:(id)arg2;
@property(readonly, nonatomic) ISWrappedAVPlayer *avPlayer;
- (void)assetContentDidChange;
- (void)invalidateExistingPlayer;
- (void)didPerformChanges;
- (void)dealloc;
- (id)init;
- (id)initWithAsset:(id)arg1 mediaProvider:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

