//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CFNetwork/NSCopying-Protocol.h>
#import <CFNetwork/NSSecureCoding-Protocol.h>

@class NSArray, NSData, NSDictionary, NSHTTPCookieStorage, NSNumber, NSSet, NSString, NSURL, NSURLCache, NSURLCredentialStorage, NSURLSessionConfiguration, _NSHTTPAlternativeServicesStorage;
@protocol NSURLSessionAppleIDContext;

@interface __NSURLSessionEffectiveConfiguration_Base : NSObject <NSSecureCoding, NSCopying>
{
    NSURLSessionConfiguration *_config;
}

+ (_Bool)supportsSecureCoding;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_sessionConfiguration;
- (id)_initWithConfiguration:(id)arg1;
- (id)description;
- (const void *)_copyAttribute:(struct __CFString *)arg1;

// Remaining properties
@property(readonly, copy) NSDictionary *HTTPAdditionalHeaders; // @dynamic HTTPAdditionalHeaders;
@property(readonly, retain) NSHTTPCookieStorage *HTTPCookieStorage; // @dynamic HTTPCookieStorage;
@property(readonly, retain) NSURLCache *URLCache; // @dynamic URLCache;
@property(readonly, retain) NSURLCredentialStorage *URLCredentialStorage; // @dynamic URLCredentialStorage;
@property(readonly, copy) NSString *_CTDataConnectionServiceType; // @dynamic _CTDataConnectionServiceType;
@property(readonly) unsigned long long _TCPAdaptiveReadTimeout; // @dynamic _TCPAdaptiveReadTimeout;
@property(readonly) unsigned long long _TCPAdaptiveWriteTimeout; // @dynamic _TCPAdaptiveWriteTimeout;
@property(readonly) _Bool _allowsConstrainedNetworkAccess; // @dynamic _allowsConstrainedNetworkAccess;
@property(readonly) _Bool _allowsExpensiveAccess; // @dynamic _allowsExpensiveAccess;
@property(readonly) _Bool _allowsHTTP3; // @dynamic _allowsHTTP3;
@property(readonly) _Bool _allowsIndefiniteConnections; // @dynamic _allowsIndefiniteConnections;
@property(readonly) _Bool _allowsMultipathTCP; // @dynamic _allowsMultipathTCP;
@property(readonly) _Bool _allowsPowerNapScheduling; // @dynamic _allowsPowerNapScheduling;
@property(readonly) _Bool _allowsReachabilityCheck; // @dynamic _allowsReachabilityCheck;
@property(readonly) _Bool _allowsResponseMonitoringDuringBodyTranmission; // @dynamic _allowsResponseMonitoringDuringBodyTranmission;
@property(readonly) _Bool _allowsTCPFastOpen; // @dynamic _allowsTCPFastOpen;
@property(readonly) _Bool _allowsTLSFalseStart; // @dynamic _allowsTLSFalseStart;
@property(readonly) _Bool _allowsTLSSessionResumption; // @dynamic _allowsTLSSessionResumption;
@property(readonly) _Bool _allowsTLSSessionTickets; // @dynamic _allowsTLSSessionTickets;
@property(readonly) _Bool _allowsWCA; // @dynamic _allowsWCA;
@property(readonly, retain) _NSHTTPAlternativeServicesStorage *_alternativeServicesStorage; // @dynamic _alternativeServicesStorage;
@property(readonly) _Bool _alwaysPerformDefaultTrustEvaluation; // @dynamic _alwaysPerformDefaultTrustEvaluation;
@property(readonly, copy) id <NSURLSessionAppleIDContext> _appleIDContext; // @dynamic _appleIDContext;
@property(readonly, copy) NSSet *_authenticatorStatusCodes; // @dynamic _authenticatorStatusCodes;
@property(readonly) _Bool _clientIsNotExplicitlyDiscretionary; // @dynamic _clientIsNotExplicitlyDiscretionary;
@property(readonly, copy) NSString *_companionAppBundleIdentifier; // @dynamic _companionAppBundleIdentifier;
@property(readonly, copy) NSString *_connectionPoolName; // @dynamic _connectionPoolName;
@property(readonly) unsigned long long _customReadBufferSize; // @dynamic _customReadBufferSize;
@property(readonly) double _customReadBufferTimeout; // @dynamic _customReadBufferTimeout;
@property(readonly, copy) NSURL *_directoryForDownloadedFiles; // @dynamic _directoryForDownloadedFiles;
@property(readonly) _Bool _duetPreauthorized; // @dynamic _duetPreauthorized;
@property(readonly) long long _expiredDNSBehavior; // @dynamic _expiredDNSBehavior;
@property(readonly) unsigned long long _forcedNetworkServiceType; // @dynamic _forcedNetworkServiceType;
@property(readonly) _Bool _forcesNewConnections; // @dynamic _forcesNewConnections;
@property(readonly, copy) NSNumber *_maximumWatchCellularTransferSize; // @dynamic _maximumWatchCellularTransferSize;
@property(readonly) unsigned long long _multipathAlternatePort; // @dynamic _multipathAlternatePort;
@property(readonly) _Bool _onBehalfOfPairedDevice; // @dynamic _onBehalfOfPairedDevice;
@property(readonly) _Bool _preventsAppSSO; // @dynamic _preventsAppSSO;
@property(readonly) _Bool _preventsIdleSleepOnceConnected; // @dynamic _preventsIdleSleepOnceConnected;
@property(readonly) _Bool _preventsSystemHTTPProxyAuthentication; // @dynamic _preventsSystemHTTPProxyAuthentication;
@property(readonly) _Bool _reportsDataStalls; // @dynamic _reportsDataStalls;
@property(readonly) _Bool _requiresPowerPluggedIn; // @dynamic _requiresPowerPluggedIn;
@property(readonly) _Bool _requiresSecureHTTPSProxyConnection; // @dynamic _requiresSecureHTTPSProxyConnection;
@property(readonly) _Bool _requiresSustainedDataDelivery; // @dynamic _requiresSustainedDataDelivery;
@property(readonly) _Bool _respectsAllowsCellularAccessForDiscretionaryTasks; // @dynamic _respectsAllowsCellularAccessForDiscretionaryTasks;
@property(readonly) _Bool _shouldSkipPreferredClientCertificateLookup; // @dynamic _shouldSkipPreferredClientCertificateLookup;
@property(readonly, copy) NSData *_sourceApplicationAuditTokenData; // @dynamic _sourceApplicationAuditTokenData;
@property(readonly, copy) NSString *_sourceApplicationBundleIdentifier; // @dynamic _sourceApplicationBundleIdentifier;
@property(readonly, copy) NSString *_sourceApplicationSecondaryIdentifier; // @dynamic _sourceApplicationSecondaryIdentifier;
@property(readonly, copy) NSSet *_suppressedAutoAddedHTTPHeaders; // @dynamic _suppressedAutoAddedHTTPHeaders;
@property(readonly, copy) NSString *_tcpConnectionPoolName; // @dynamic _tcpConnectionPoolName;
@property(readonly) long long _timingDataOptions; // @dynamic _timingDataOptions;
@property(readonly, copy) NSString *_tlsTrustPinningPolicyName; // @dynamic _tlsTrustPinningPolicyName;
@property(readonly) _Bool allowsCellularAccess; // @dynamic allowsCellularAccess;
@property(readonly) _Bool allowsConstrainedNetworkAccess; // @dynamic allowsConstrainedNetworkAccess;
@property(readonly) _Bool allowsExpensiveNetworkAccess; // @dynamic allowsExpensiveNetworkAccess;
@property(readonly, getter=isDiscretionary) _Bool discretionary; // @dynamic discretionary;
@property(readonly) long long multipathServiceType; // @dynamic multipathServiceType;
@property(readonly, copy) NSArray *protocolClasses; // @dynamic protocolClasses;
@property(readonly) _Bool shouldUseExtendedBackgroundIdleMode; // @dynamic shouldUseExtendedBackgroundIdleMode;
@property(readonly) double timeoutIntervalForResource; // @dynamic timeoutIntervalForResource;
@property(readonly) _Bool waitsForConnectivity; // @dynamic waitsForConnectivity;

@end

