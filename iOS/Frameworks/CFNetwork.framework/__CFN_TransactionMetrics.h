//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CFNetwork/NSSecureCoding-Protocol.h>

@class NSDictionary, NSURLRequest, NSURLResponse, NSUUID, __CFN_ConnectionMetrics, __CFN_SessionMetrics, __CFN_TaskMetrics;

@interface __CFN_TransactionMetrics : NSObject <NSSecureCoding>
{
    _Bool _scheduledOriginLoad;
    _Bool _firstOnConnection;
    _Bool _pushed;
    _Bool _APSRelayAttempted;
    _Bool _APSRelaySucceeded;
    NSUUID *_UUID;
    NSURLRequest *_request;
    NSURLRequest *_transferredRequest;
    NSURLResponse *_cachedResponse;
    NSURLResponse *_lastResponse;
    __CFN_ConnectionMetrics *_connectionMetrics;
    long long _requestHeaderSize;
    long long _requestBodySize;
    long long _requestBodyTransferSize;
    long long _responseHeaderSize;
    long long _responseBodySize;
    long long _responseBodyTransferSize;
    double _beginTime;
    double _endTime;
    double _cacheLookupBeginTime;
    double _cacheLookupEndTime;
    double _requestBeginTime;
    double _requestEndTime;
    double _responseBeginTime;
    double _responseEndTime;
    unsigned long long _endReason;
    long long _schedulingTier;
    NSDictionary *_tcpInfoBegin;
    NSDictionary *_tcpInfoEnd;
    NSDictionary *_subflowCountsBegin;
    NSDictionary *_subflowCountsEnd;
    long long _options;
    __CFN_TaskMetrics *_taskMetrics;
    __CFN_SessionMetrics *_sessionMetrics;
    long long _lastResponseHeaderSize;
    long long _lastResponseBodySize;
    long long _lastResponseBodyTransferSize;
}

+ (_Bool)supportsSecureCoding;
+ (id)nstatCountsFromTCPInfo:(id)arg1;
@property(nonatomic) long long lastResponseBodyTransferSize; // @synthesize lastResponseBodyTransferSize=_lastResponseBodyTransferSize;
@property(nonatomic) long long lastResponseBodySize; // @synthesize lastResponseBodySize=_lastResponseBodySize;
@property(nonatomic) long long lastResponseHeaderSize; // @synthesize lastResponseHeaderSize=_lastResponseHeaderSize;
@property(retain, nonatomic) __CFN_SessionMetrics *sessionMetrics; // @synthesize sessionMetrics=_sessionMetrics;
@property(nonatomic) __weak __CFN_TaskMetrics *taskMetrics; // @synthesize taskMetrics=_taskMetrics;
@property(nonatomic) long long options; // @synthesize options=_options;
@property(retain, nonatomic) NSDictionary *subflowCountsEnd; // @synthesize subflowCountsEnd=_subflowCountsEnd;
@property(retain, nonatomic) NSDictionary *subflowCountsBegin; // @synthesize subflowCountsBegin=_subflowCountsBegin;
@property(retain, nonatomic) NSDictionary *tcpInfoEnd; // @synthesize tcpInfoEnd=_tcpInfoEnd;
@property(retain, nonatomic) NSDictionary *tcpInfoBegin; // @synthesize tcpInfoBegin=_tcpInfoBegin;
@property(nonatomic) _Bool APSRelaySucceeded; // @synthesize APSRelaySucceeded=_APSRelaySucceeded;
@property(nonatomic) _Bool APSRelayAttempted; // @synthesize APSRelayAttempted=_APSRelayAttempted;
@property(nonatomic) long long schedulingTier; // @synthesize schedulingTier=_schedulingTier;
@property(nonatomic, getter=isPushed) _Bool pushed; // @synthesize pushed=_pushed;
@property(nonatomic) unsigned long long endReason; // @synthesize endReason=_endReason;
@property(nonatomic) double responseEndTime; // @synthesize responseEndTime=_responseEndTime;
@property(nonatomic) double responseBeginTime; // @synthesize responseBeginTime=_responseBeginTime;
@property(nonatomic) double requestEndTime; // @synthesize requestEndTime=_requestEndTime;
@property(nonatomic) double requestBeginTime; // @synthesize requestBeginTime=_requestBeginTime;
@property(nonatomic) double cacheLookupEndTime; // @synthesize cacheLookupEndTime=_cacheLookupEndTime;
@property(nonatomic) double cacheLookupBeginTime; // @synthesize cacheLookupBeginTime=_cacheLookupBeginTime;
@property(nonatomic) double endTime; // @synthesize endTime=_endTime;
@property(nonatomic) double beginTime; // @synthesize beginTime=_beginTime;
@property(nonatomic) long long responseBodyTransferSize; // @synthesize responseBodyTransferSize=_responseBodyTransferSize;
@property(nonatomic) long long responseBodySize; // @synthesize responseBodySize=_responseBodySize;
@property(nonatomic) long long responseHeaderSize; // @synthesize responseHeaderSize=_responseHeaderSize;
@property(nonatomic) long long requestBodyTransferSize; // @synthesize requestBodyTransferSize=_requestBodyTransferSize;
@property(nonatomic) long long requestBodySize; // @synthesize requestBodySize=_requestBodySize;
@property(nonatomic) long long requestHeaderSize; // @synthesize requestHeaderSize=_requestHeaderSize;
@property(nonatomic) _Bool firstOnConnection; // @synthesize firstOnConnection=_firstOnConnection;
@property(nonatomic) _Bool scheduledOriginLoad; // @synthesize scheduledOriginLoad=_scheduledOriginLoad;
@property(retain, nonatomic) __CFN_ConnectionMetrics *connectionMetrics; // @synthesize connectionMetrics=_connectionMetrics;
@property(retain, nonatomic) NSURLResponse *lastResponse; // @synthesize lastResponse=_lastResponse;
@property(retain, nonatomic) NSURLResponse *cachedResponse; // @synthesize cachedResponse=_cachedResponse;
@property(retain, nonatomic) NSURLRequest *transferredRequest; // @synthesize transferredRequest=_transferredRequest;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)end:(unsigned long long)arg1;
- (void)responseEnd;
- (void)responseBody:(struct __CFData *)arg1;
- (void)responseHeaderEnd:(id)arg1;
- (void)responseBegin;
- (void)requestEnd;
- (void)requestBody:(id)arg1;
- (void)requestHeaderEnd;
- (void)requestBeginOnConnection:(id)arg1;
- (void)connectionCreate:(shared_ptr_8da4e70b)arg1;
- (void)originLoad;
- (void)cacheLookupEnd:(struct _CFCachedURLResponse *)arg1;
- (void)cacheLookupBegin;
- (id)initWithRequest:(id)arg1 taskMetrics:(id)arg2 sessionMetrics:(id)arg3;
- (void)importLegacyStaticMetricsFromAPSRelay:(id)arg1;
@property(readonly) NSDictionary *legacyStaticMetrics;

@end

