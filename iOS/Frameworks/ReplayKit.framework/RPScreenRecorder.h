//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <ReplayKit/RPPreviewViewControllerDelegate-Protocol.h>
#import <ReplayKit/UINavigationControllerDelegate-Protocol.h>
#import <ReplayKit/UIPopoverPresentationControllerDelegate-Protocol.h>

@class NSString, NSURL, RPBroadcastController, RPPGPipViewController, RPPipViewController, UIView, UIWindow;
@protocol RPScreenRecorderDelegate, RPScreenRecorderPrivateDelegate;

@interface RPScreenRecorder : NSObject <RPPreviewViewControllerDelegate, UINavigationControllerDelegate, UIPopoverPresentationControllerDelegate>
{
    _Bool _recording;
    _Bool _microphoneEnabled;
    _Bool _cameraEnabled;
    _Bool _available;
    _Bool _hasUserConsentForCamera;
    _Bool _hasUserConsentForMicrophone;
    _Bool _paused;
    _Bool _systemRecording;
    int _processIDForAudioCapture;
    id <RPScreenRecorderDelegate> _delegate;
    long long _cameraPosition;
    UIView *_cameraPreviewView;
    unsigned long long _previousAudioSessionOptions;
    NSString *_previousAudioCategory;
    UIWindow *_windowToRecord;
    RPPipViewController *_pipViewController;
    RPPGPipViewController *_pgPipViewController;
    CDUnknownBlockType _saveVideoToCameraRollCompletionBlock;
    CDUnknownBlockType _captureHandler;
    RPBroadcastController *_activeBroadcastController;
    NSURL *_broadcastURL;
    id <RPScreenRecorderPrivateDelegate> _privateDelegate;
    id <RPScreenRecorderDelegate> _secondDelegate;
}

+ (id)sharedRecorder;
- (void).cxx_destruct;
@property(retain, nonatomic) id <RPScreenRecorderDelegate> secondDelegate; // @synthesize secondDelegate=_secondDelegate;
@property(retain, nonatomic) id <RPScreenRecorderPrivateDelegate> privateDelegate; // @synthesize privateDelegate=_privateDelegate;
@property(retain, nonatomic) NSURL *broadcastURL; // @synthesize broadcastURL=_broadcastURL;
@property(nonatomic) _Bool systemRecording; // @synthesize systemRecording=_systemRecording;
@property(nonatomic, setter=updateProcessIDForAudioCapture:) int processIDForAudioCapture; // @synthesize processIDForAudioCapture=_processIDForAudioCapture;
@property(nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=_paused;
@property(retain, nonatomic) RPBroadcastController *activeBroadcastController; // @synthesize activeBroadcastController=_activeBroadcastController;
@property(copy, nonatomic) CDUnknownBlockType captureHandler; // @synthesize captureHandler=_captureHandler;
@property(nonatomic) _Bool hasUserConsentForMicrophone; // @synthesize hasUserConsentForMicrophone=_hasUserConsentForMicrophone;
@property(nonatomic) _Bool hasUserConsentForCamera; // @synthesize hasUserConsentForCamera=_hasUserConsentForCamera;
@property(copy, nonatomic) CDUnknownBlockType saveVideoToCameraRollCompletionBlock; // @synthesize saveVideoToCameraRollCompletionBlock=_saveVideoToCameraRollCompletionBlock;
@property(retain, nonatomic) RPPGPipViewController *pgPipViewController; // @synthesize pgPipViewController=_pgPipViewController;
@property(retain, nonatomic) RPPipViewController *pipViewController; // @synthesize pipViewController=_pipViewController;
@property(retain, nonatomic) UIWindow *windowToRecord; // @synthesize windowToRecord=_windowToRecord;
@property(nonatomic, getter=isAvailable) _Bool available; // @synthesize available=_available;
@property(retain, nonatomic) NSString *previousAudioCategory; // @synthesize previousAudioCategory=_previousAudioCategory;
@property(nonatomic) unsigned long long previousAudioSessionOptions; // @synthesize previousAudioSessionOptions=_previousAudioSessionOptions;
@property(retain, nonatomic) UIView *cameraPreviewView; // @synthesize cameraPreviewView=_cameraPreviewView;
@property(nonatomic) long long cameraPosition; // @synthesize cameraPosition=_cameraPosition;
@property(nonatomic, getter=isCameraEnabled) _Bool cameraEnabled; // @synthesize cameraEnabled=_cameraEnabled;
@property(nonatomic, getter=isMicrophoneEnabled) _Bool microphoneEnabled; // @synthesize microphoneEnabled=_microphoneEnabled;
@property(nonatomic, getter=isRecording) _Bool recording; // @synthesize recording=_recording;
@property(nonatomic) __weak id <RPScreenRecorderDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)screenRecordingAllowed;
- (_Bool)screenRecordingSupportedOnDevice;
- (void)updateRecordingAvailability:(id)arg1;
- (void)notifyDelegateOfUpdatedState;
- (void)didStopRecordingWithError:(id)arg1 previewViewController:(id)arg2;
- (_Bool)shouldNotifyDidStop;
- (void)recordingDidStopWithError:(id)arg1 movieURL:(id)arg2;
- (void)updateScreenRecordingStateWithCurrentState:(id)arg1;
- (void)shouldResumeSessionType:(id)arg1;
- (void)recordingDidPause;
- (void)recordingTimerDidUpdate:(id)arg1;
- (void)recordingLockInterrupted:(id)arg1;
- (id)processQueue;
- (id)videoQueue;
- (id)audioQueue;
- (void)setWindowRotationLocked:(_Bool)arg1;
- (unsigned int)currentWindowLayerContextID;
- (struct CGSize)currentWindowSize;
- (id)applicationWindow;
- (id)handleUnavailableState;
- (void)updateStateWithActive:(_Bool)arg1 error:(id)arg2;
- (void)registerAppForStateChangeSetRotationLock:(_Bool)arg1;
- (void)isScreenRecordingAvailable;
- (void)instantiatePipView;
- (void)removePipView;
- (void)saveVideo:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)saveClipToCameraRoll:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)saveVideoToCameraRoll:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)resumeInAppClip;
- (void)exportClipToURL:(id)arg1 duration:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)stopClipBufferingWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startClipBufferingWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)resumeSystemBroadcast;
- (void)stopSystemBroadcastWithHandler:(CDUnknownBlockType)arg1;
- (void)startSystemBroadcastWithHandler:(CDUnknownBlockType)arg1;
- (void)setupSystemBroadcastWithExtension:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)resumeSystemRecording;
- (void)stopSystemRecordingWithURLHandler:(CDUnknownBlockType)arg1;
- (void)stopSystemRecording:(CDUnknownBlockType)arg1;
- (void)startSystemRecordingWithMicrophoneEnabled:(_Bool)arg1 handler:(CDUnknownBlockType)arg2;
- (void)clientDidUpdateBroadcastServiceInfo:(id)arg1;
- (void)resumeInAppBroadcast;
- (void)pauseInAppBroadcast;
- (void)stopInAppBroadcastWithHandler:(CDUnknownBlockType)arg1;
- (void)startInAppBroadcastWithHandler:(CDUnknownBlockType)arg1;
- (void)resumeInAppCapture;
- (void)pauseInAppCapture;
- (void)stopCaptureWithHandler:(CDUnknownBlockType)arg1;
- (void)startCaptureWithHandler:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)resumeInAppRecording;
- (void)pauseInAppRecording;
- (void)discardRecordingWithHandler:(CDUnknownBlockType)arg1;
- (void)stopRecordingWithOutputURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)stopRecordingWithHandler:(CDUnknownBlockType)arg1;
- (void)startRecordingWithHandler:(CDUnknownBlockType)arg1;
- (void)stopRecordingWithAdditionalShareFileAttachment:(id)arg1 overrideShareMessage:(id)arg2 previewViewControllerOverrideTintColor:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)stopRecordingWithVideoURLHandler:(CDUnknownBlockType)arg1;
- (void)startRecordingWithMicrophoneEnabled:(_Bool)arg1 handler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

