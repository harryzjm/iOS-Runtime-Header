//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class LAContext, NSArray, NSDictionary, NSString, TKClientToken;

@interface TKClientTokenSession : NSObject
{
    _Bool _authenticateWhenNeeded;
    _Bool __testing_AuthenticateInternally;
    _Bool __testing_ForceAuthenticationNeeded;
    LAContext *_LAContext;
    NSDictionary *_parameters;
    TKClientToken *_token;
    NSArray *_keys;
    NSArray *_certificates;
    NSArray *_identities;
    NSString *_slotName;
    id __testing_AuthContextUsed;
}

- (void).cxx_destruct;
@property(retain, nonatomic) id _testing_AuthContextUsed; // @synthesize _testing_AuthContextUsed=__testing_AuthContextUsed;
@property(nonatomic) _Bool _testing_ForceAuthenticationNeeded; // @synthesize _testing_ForceAuthenticationNeeded=__testing_ForceAuthenticationNeeded;
@property(nonatomic) _Bool _testing_AuthenticateInternally; // @synthesize _testing_AuthenticateInternally=__testing_AuthenticateInternally;
@property(readonly, nonatomic) NSString *slotName; // @synthesize slotName=_slotName;
@property(readonly, nonatomic) NSArray *identities; // @synthesize identities=_identities;
@property(readonly, nonatomic) NSArray *certificates; // @synthesize certificates=_certificates;
@property(readonly, nonatomic) NSArray *keys; // @synthesize keys=_keys;
@property(nonatomic) _Bool authenticateWhenNeeded; // @synthesize authenticateWhenNeeded=_authenticateWhenNeeded;
@property(readonly, nonatomic) TKClientToken *token; // @synthesize token=_token;
@property(readonly, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(retain, nonatomic) LAContext *LAContext; // @synthesize LAContext=_LAContext;
- (id)processObjectCreationAttributes:(id)arg1 error:(id *)arg2;
- (id)createObjectWithAttributes:(id)arg1 error:(id *)arg2;
- (id)objectForObjectID:(id)arg1 error:(id *)arg2;
- (_Bool)evaluateAccessControl:(id)arg1 forOperation:(id)arg2 error:(id *)arg3;
- (_Bool)deleteObject:(id)arg1 error:(id *)arg2;
- (id)initWithTokenID:(id)arg1 LAContext:(id)arg2 error:(id *)arg3;
- (id)initWithToken:(id)arg1 LAContext:(id)arg2 parameters:(id)arg3 error:(id *)arg4;
- (id)_initWithToken:(id)arg1 LAContext:(id)arg2 parameters:(id)arg3 error:(id *)arg4;
- (_Bool)isValidWithError:(id *)arg1;

@end

