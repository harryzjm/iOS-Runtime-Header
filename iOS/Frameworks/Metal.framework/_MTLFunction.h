//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Metal/MTLFunctionSPI-Protocol.h>

@class MTLDebugInstrumentationData, MTLType, NSArray, NSData, NSDictionary, NSObject, NSString;
@protocol MTLDevice, MTLFunctionHandle, OS_dispatch_data;

@interface _MTLFunction <MTLFunctionSPI>
{
    id <MTLDevice> _device;
    unsigned long long _functionType;
    NSString *_name;
    struct MTLLibraryData *_libraryData;
    id _vendorPrivate;
    NSArray *_vertexAttributes;
    NSArray *_functionConstants;
    NSDictionary *_functionConstantDictionary;
    unsigned long long _options;
    NSObject<OS_dispatch_data> *_precompiledOutput;
    MTLDebugInstrumentationData *_debugInstrumentationData;
    MTLType *_returnType;
    NSArray *_arguments;
    NSString *_unpackedFilePath;
    CDStruct_41a22ec7 _functionConstantSpecializationHash;
    NSArray *_relocations;
    NSArray *_importedSymbols;
    NSArray *_importedLibraries;
}

@property(readonly) NSArray *importedLibraries; // @synthesize importedLibraries=_importedLibraries;
@property(readonly) NSArray *importedSymbols; // @synthesize importedSymbols=_importedSymbols;
@property(retain, nonatomic) MTLDebugInstrumentationData *debugInstrumentationData; // @synthesize debugInstrumentationData=_debugInstrumentationData;
@property(readonly) unsigned long long options; // @synthesize options=_options;
@property(copy) NSString *unpackedFilePath; // @synthesize unpackedFilePath=_unpackedFilePath;
@property(readonly) id vendorPrivate; // @synthesize vendorPrivate=_vendorPrivate;
@property(readonly) struct MTLLibraryData *libraryData; // @synthesize libraryData=_libraryData;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) unsigned long long functionType; // @synthesize functionType=_functionType;
@property(readonly) id <MTLDevice> device; // @synthesize device=_device;
@property(readonly, nonatomic) id <MTLFunctionHandle> functionHandle;
- (const CDStruct_41a22ec7 *)functionConstantSpecializationHash;
- (id)bitcodeData;
- (id)newArgumentEncoderWithBufferIndex:(unsigned long long)arg1 reflection:(id *)arg2 functionReflection:(id)arg3;
- (id)newArgumentEncoderWithBufferIndex:(unsigned long long)arg1 reflection:(id *)arg2 binaryArchives:(id)arg3;
- (id)newArgumentEncoderWithBufferIndex:(unsigned long long)arg1 reflection:(id *)arg2 pipelineLibrary:(id)arg3;
- (id)newArgumentEncoderWithBufferIndex:(unsigned long long)arg1 pipelineLibrary:(id)arg2;
- (id)newArgumentEncoderWithBufferIndex:(unsigned long long)arg1 reflection:(id *)arg2;
- (id)newArgumentEncoderWithBufferIndex:(unsigned long long)arg1;
- (void)reflectionWithOptions:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)reflectionWithOptions:(unsigned long long)arg1 pipelineLibrary:(id)arg2;
- (id)reflectionWithOptions:(unsigned long long)arg1 binaryArchives:(id)arg2;
- (id)reflectionWithOptions:(unsigned long long)arg1;
@property(readonly, copy) NSString *description;
- (id)formattedDescription:(unsigned long long)arg1;
@property(readonly) NSDictionary *functionConstantsDictionary;
- (void)dealloc;
- (id)newFunctionWithPluginData:(id)arg1 bitcodeType:(unsigned char)arg2;
- (unsigned long long)bitCodeFileSize;
- (const CDStruct_41a22ec7 *)bitCodeHash;
- (void)setVendorPrivate:(id)arg1;
- (unsigned int)functionRef;
- (id)initWithName:(id)arg1 type:(unsigned long long)arg2 libraryData:(struct MTLLibraryData *)arg3 device:(id)arg4;

// Remaining properties
@property NSArray *arguments; // @dynamic arguments;
@property(readonly) unsigned long long bitCodeOffset; // @dynamic bitCodeOffset;
@property(nonatomic) unsigned char bitcodeType; // @dynamic bitcodeType;
@property(readonly, copy) NSString *debugDescription;
@property(copy) NSString *filePath; // @dynamic filePath;
@property NSArray *functionConstants; // @dynamic functionConstants;
@property(readonly) NSObject<OS_dispatch_data> *functionInputs; // @dynamic functionInputs;
@property(readonly) unsigned long long hash;
@property(copy) NSString *label; // @dynamic label;
@property long long lineNumber; // @dynamic lineNumber;
@property(readonly) _Bool needsFunctionConstantValues; // @dynamic needsFunctionConstantValues;
@property(readonly) long long patchControlPointCount; // @dynamic patchControlPointCount;
@property(readonly) unsigned long long patchType; // @dynamic patchType;
@property NSData *pluginData; // @dynamic pluginData;
@property NSObject<OS_dispatch_data> *precompiledOutput; // @dynamic precompiledOutput;
@property(copy, nonatomic) NSArray *relocations; // @dynamic relocations;
@property(readonly) unsigned long long renderTargetArrayIndexType; // @dynamic renderTargetArrayIndexType;
@property MTLType *returnType; // @dynamic returnType;
@property(readonly) NSArray *stageInputAttributes; // @dynamic stageInputAttributes;
@property(readonly) Class superclass;
@property NSArray *vertexAttributes; // @dynamic vertexAttributes;

@end

