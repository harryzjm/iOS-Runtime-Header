//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSObject.h>

#import <SceneKit/NSCopying-Protocol.h>
#import <SceneKit/NSSecureCoding-Protocol.h>
#import <SceneKit/SCNActionable-Protocol.h>
#import <SceneKit/SCNAnimatable-Protocol.h>
#import <SceneKit/SCNBoundingVolume-Protocol.h>
#import <SceneKit/UIFocusItem-Protocol.h>

@class MISSING_TYPE, NSArray, NSMutableArray, NSMutableDictionary, NSString, SCNCamera, SCNGeometry, SCNLight, SCNMorpher, SCNNodeComponent, SCNOrderedDictionary, SCNPhysicsBody, SCNPhysicsField, SCNSkinner, UIView;
@protocol SCNNodeRendererDelegate;

@interface SCNNode : NSObject <NSCopying, NSSecureCoding, SCNAnimatable, SCNActionable, SCNBoundingVolume, UIFocusItem>
{
    struct __C3DNode *_node;
    SCNNode *_parent;
    NSMutableArray *_childNodes;
    SCNNode *_presentationInstance;
    unsigned int _isPresentationInstance:1;
    unsigned int _lightLoaded:1;
    unsigned int _geometryLoaded:1;
    unsigned int _cameraLoaded:1;
    unsigned int _skinnerLoaded:1;
    unsigned int _morpherLoaded:1;
    unsigned int _paused:1;
    unsigned int _pausedByInheritance:1;
    unsigned int _affineUpToDate:1;
    unsigned int _transformUpToDate:1;
    unsigned int _hasPivot:1;
    unsigned int _isJoint:1;
    unsigned int _rotationRepresentation:2;
    unsigned int _movability:1;
    unsigned int _hidden:1;
    unsigned int _castsShadow:1;
    unsigned int _ignoreAnimationWhenCopying_tmp:1;
    unsigned int _focusBehavior:2;
    unsigned int _isFocusableOrHasFocusableChild:1;
    unsigned int _authoringEnvironmentNode:1;
    unsigned int _hasComponentBitmask:11;
    CDStruct_14d5dc5e _transform;
    MISSING_TYPE *_position;
    union {
        CDStruct_0e8a9a91 eulerAngles__axisAngle__quaternion;
    } _rotation;
    MISSING_TYPE *_scale;
    float _opacity;
    unsigned long long _categoryBitMask;
    long long _renderingOrder;
    SCNNodeComponent *_components;
    SCNOrderedDictionary *_actions;
    SCNOrderedDictionary *_animations;
    NSMutableDictionary *_bindings;
    struct SCNVector3 *_fixedBoundingBoxExtrema;
    NSString *_name;
    NSMutableDictionary *_valueForKey;
    id _rendererDelegate;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)resolveInstanceMethod:(SEL)arg1;
+ (id)keyPathsForValuesAffectingScale;
+ (id)keyPathsForValuesAffectingOrientation;
+ (id)keyPathsForValuesAffectingEulerAngles;
+ (id)keyPathsForValuesAffectingRotation;
+ (id)keyPathsForValuesAffectingTransform;
+ (id)keyPathsForValuesAffectingPosition;
+ (id)nodeWithNodeRef:(struct __C3DNode *)arg1;
+ (id)_dumpNodeTree:(id)arg1 tab:(id)arg2;
+ (id)nodeWithGeometry:(id)arg1;
+ (id)node;
+ (id)nodeWithMDLObject:(id)arg1 masterObjects:(id)arg2 sceneNodes:(id)arg3 skinnedMeshes:(id)arg4 options:(id)arg5;
+ (id)nodeWithMDLObject:(id)arg1;
+ (id)nodeWithMDLAsset:(id)arg1;
+ (struct SCNVector3)localFront;
+ (struct SCNVector3)localRight;
+ (struct SCNVector3)localUp;
+ (MISSING_TYPE *)simdLocalFront;
+ (MISSING_TYPE *)simdLocalRight;
+ (MISSING_TYPE *)simdLocalUp;
- (void)setAuthoringEnvironmentPresentationNode:(id)arg1;
- (id)authoringEnvironmentPresentationNode;
- (void)setAuthoringEnvironmentCompanionNode:(id)arg1;
- (id)authoringEnvironmentCompanionNode;
- (void)setAuthoringEnvironmentNode:(_Bool)arg1;
- (_Bool)authoringEnvironmentNode;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_encodeNodePropertiesWithCoder:(id)arg1;
- (void)_didDecodeSCNNode:(id)arg1;
- (void)_customDecodingOfSCNNode:(id)arg1;
- (void)_customEncodingOfSCNNode:(id)arg1 usePresentationInstance:(_Bool)arg2;
- (struct SCNMatrix4)convertTransform:(struct SCNMatrix4)arg1 fromNode:(id)arg2;
- (struct SCNMatrix4)convertTransform:(struct SCNMatrix4)arg1 toNode:(id)arg2;
- (struct SCNVector3)convertVector:(struct SCNVector3)arg1 fromNode:(id)arg2;
- (struct SCNVector3)convertVector:(struct SCNVector3)arg1 toNode:(id)arg2;
- (struct SCNVector3)convertPosition:(struct SCNVector3)arg1 fromNode:(id)arg2;
- (struct SCNVector3)convertPosition:(struct SCNVector3)arg1 toNode:(id)arg2;
- (void)replaceObjectInAudioPlayerAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromAudioPlayersAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inAudioPlayersAtIndex:(unsigned long long)arg2;
- (id)objectInAudioPlayersAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfAudioPlayers;
- (void)removeAudioPlayer:(id)arg1;
- (void)removeAllAudioPlayers;
- (void)addAudioPlayer:(id)arg1;
- (id)audioPlayers;
- (id)_audioPlayers;
- (void)replaceObjectInParticleSystemsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromParticleSystemsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inParticleSystemsAtIndex:(unsigned long long)arg2;
- (id)objectInParticleSystemsAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfParticleSystems;
- (void)removeParticleSystem:(id)arg1;
- (void)removeAllParticleSystems;
- (void)addParticleSystem:(id)arg1;
- (id)particleSystems;
- (void)_removeDeadParticleSystem:(struct __C3DParticleSystem *)arg1;
- (id)_particleSystems;
- (void)setEntity:(id)arg1;
- (id)entity;
@property(retain, nonatomic) SCNPhysicsField *physicsField;
@property(retain, nonatomic) SCNPhysicsBody *physicsBody;
@property(copy) NSArray *constraints;
- (void)removeAllActions;
- (void)removeActionForKey:(id)arg1;
- (void)_removeAction:(id)arg1 forKey:(id)arg2;
- (id)actionForKey:(id)arg1;
@property(readonly, nonatomic) _Bool hasActions;
- (id)actions;
@property(readonly, nonatomic) NSArray *actionKeys;
- (void)runAction:(id)arg1 forKey:(id)arg2;
- (void)runAction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)runAction:(id)arg1;
- (void)runAction:(id)arg1 forKey:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)_parentFocusEnvironment;
@property(readonly, copy, nonatomic) NSArray *preferredFocusEnvironments;
- (_Bool)shouldUpdateFocusInContext:(id)arg1;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)updateFocusIfNeeded;
- (void)setNeedsFocusUpdate;
- (_Bool)_isEligibleForFocusInteraction;
- (_Bool)_isEligibleForFocus;
- (_Bool)_isEffectivelyHidden;
- (_Bool)isFocusInteractionEnabled;
@property(readonly, nonatomic) _Bool canBecomeFocused;
@property(nonatomic) long long focusBehavior;
- (void)_updateFocusableCache;
- (void)_setHasFocusableChild;
- (void)_focusableCandidates:(id)arg1;
@property(nonatomic, getter=isPaused) _Bool paused;
- (_Bool)isPausedOrPausedByInheritance;
- (void)_setPausedOrPausedByInheritance:(_Bool)arg1;
- (id)_subdividedCopyWithSubdivisionLevel:(long long)arg1;
- (id)flattenedCopy;
- (id)flattenedClone;
- (id)getBoundingBox;
- (id)getBoundingSphere;
- (_Bool)getFrustum:(struct C3DPlane *)arg1 withViewport: /* Error: Ran out of types for this method. */;
- (_Bool)getBoundingSphereCenter:(struct SCNVector3 *)arg1 radius:(double *)arg2;
- (void)setBoundingBoxMin:(struct SCNVector3 *)arg1 max:(struct SCNVector3 *)arg2;
- (_Bool)getBoundingBoxMin:(struct SCNVector3 *)arg1 max:(struct SCNVector3 *)arg2;
- (void)replaceChildNode:(id)arg1 with:(id)arg2;
- (void)insertChildNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeAllChilds;
- (unsigned long long)indexOfChildNode:(id)arg1;
- (void)removeFromParentNode;
- (void)replaceObjectInChildNodesAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromChildNodesAtIndex:(unsigned long long)arg1;
- (void)__removeObjectFromChildNodesAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inChildNodesAtIndex:(unsigned long long)arg2;
- (void)__insertObject:(id)arg1 inChildNodesAtIndex:(unsigned long long)arg2;
- (void)addChildNode:(id)arg1;
- (_Bool)canAddChildNode:(id)arg1;
- (void)_reSyncModelTree;
- (void)_initChildNodesArray;
- (id)objectInChildNodesAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfChildNodes;
- (void)_setParent:(id)arg1;
- (void)unbindAnimatablePath:(id)arg1;
- (void)bindAnimatablePath:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (id)_scnBindings;
- (_Bool)isAnimationForKeyPaused:(id)arg1;
- (void)setSpeed:(double)arg1 forAnimationKey:(id)arg2;
- (void)removeAnimationForKey:(id)arg1 fadeOutDuration:(double)arg2;
- (void)removeAnimationForKey:(id)arg1 blendOutDuration:(double)arg2;
- (void)resumeAnimationForKey:(id)arg1;
- (void)pauseAnimationForKey:(id)arg1;
- (void)_pauseAnimation:(_Bool)arg1 forKey:(id)arg2 pausedByNode:(_Bool)arg3;
- (id)animationPlayerForKey:(id)arg1;
- (void)_copyAnimationsFrom:(id)arg1;
- (id)_scnAnimationForKey:(id)arg1;
- (id)animationForKey:(id)arg1;
- (void)_syncObjCAnimations;
@property(readonly) NSArray *animationKeys;
- (void)removeAnimationForKey:(id)arg1;
- (void)removeAllAnimations;
- (void)addAnimation:(id)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (void)addAnimationPlayer:(id)arg1 forKey:(id)arg2;
- (_Bool)__removeAnimation:(id)arg1 forKey:(id)arg2;
- (struct __C3DAnimationManager *)animationManager;
- (const void *)__CFObject;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (id)valueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (id)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2;
- (_Bool)parseSpecialKey:(id)arg1 withPath:(id)arg2 intoDestination:(id *)arg3;
- (void)renderInContext:(void *)arg1;
@property(nonatomic) id <SCNNodeRendererDelegate> rendererDelegate;
@property(readonly, copy) NSString *description;
@property(copy, nonatomic) NSArray *filters;
@property(retain, nonatomic) SCNGeometry *geometry;
@property(retain, nonatomic) SCNCamera *camera;
@property(retain, nonatomic) SCNMorpher *morpher;
@property(retain, nonatomic) SCNSkinner *skinner;
- (void)setGizmo:(_Bool)arg1;
- (_Bool)isGizmo;
- (void)setIsJoint:(_Bool)arg1;
- (_Bool)isJoint;
@property(retain, nonatomic) SCNLight *light;
- (void)_setComponent:(id)arg1 withType:(long long)arg2;
- (id)mutableChildNodes;
@property(readonly, nonatomic) NSArray *childNodes;
@property(readonly, nonatomic) SCNNode *parentNode;
- (_Bool)hidden;
@property(nonatomic) long long renderingOrder;
@property(nonatomic) double opacity;
@property(nonatomic, getter=isHidden) _Bool hidden;
@property(nonatomic) unsigned long long categoryBitMask;
@property(nonatomic) _Bool castsShadow;
- (void)setHittable:(_Bool)arg1;
- (_Bool)isHittable;
@property(nonatomic) long long movabilityHint;
@property(nonatomic) struct SCNMatrix4 pivot;
@property(readonly, nonatomic) struct SCNMatrix4 worldTransform;
- (void)setWorldTransform:(struct SCNMatrix4)arg1;
@property(nonatomic) struct SCNVector3 worldPosition;
@property(nonatomic) struct SCNMatrix4 transform;
@property(nonatomic) struct SCNVector4 rotation;
@property(nonatomic) struct SCNVector3 scale;
- (void)_setScale: /* Error: Ran out of types for this method. */;
@property(nonatomic) struct SCNVector3 position;
- (void)_setPosition: /* Error: Ran out of types for this method. */;
@property(nonatomic) struct SCNVector3 eulerAngles;
- (MISSING_TYPE *)_euler;
@property(nonatomic) struct SCNVector4 orientation;
- (void)_setQuaternion:(CDStruct_183601bc)arg1;
- (void)setQuaternion:(struct SCNVector4)arg1;
- (struct SCNVector4)quaternion;
@property(nonatomic) struct SCNVector4 worldOrientation;
- (CDStruct_183601bc)_quaternion;
- (long long)rotationRepresentation;
- (void)_updateAffine;
- (void)_updateTransform;
- (void)_registerAsObserver;
- (id)hitTestWithSegmentFromPoint:(struct SCNVector3)arg1 toPoint:(struct SCNVector3)arg2 options:(id)arg3;
- (struct __C3DNode *)nodeRef;
- (id)__morpher;
- (id)__skinner;
- (id)__geometry;
- (id)__camera;
- (id)__light;
- (void)_assignComponent:(id)arg1 toContainerWithType:(long long)arg2;
- (void)_removeComponentWithType:(long long)arg1;
- (id)_findComponentWithType:(long long)arg1;
- (id)jsChildNodesWithAttribute:(id)arg1;
- (id)childNodeWithName:(id)arg1;
- (id)objectInChildNodesWithAttribute:(id)arg1 firstOnly:(_Bool)arg2;
- (id)childNodesWithAttribute:(Class)arg1 recursively:(_Bool)arg2;
- (void)_childNodesWithAttribute:(Class)arg1 output:(id)arg2 recursively:(_Bool)arg3;
- (void)enumerateNodesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateHierarchyUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateChildNodesUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)_enumerateChildNodesUsingBlock:(CDUnknownBlockType)arg1;
- (id)childNodesPassingTest:(CDUnknownBlockType)arg1;
- (id)childNodesPassingTest:(CDUnknownBlockType)arg1 recursively:(_Bool)arg2;
- (_Bool)_childNodesPassingTest:(CDUnknownBlockType)arg1 recursively:(_Bool)arg2 output:(id)arg3;
- (id)objectInChildNodesWithName:(id)arg1;
- (id)childNodeWithName:(id)arg1 recursively:(_Bool)arg2;
- (void)_expandChildArrayIfNeeded;
- (_Bool)_isAReference;
- (id)clone;
- (id)_copyRecursively;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_setAttributes:(id)arg1;
- (id)_dumpTree;
- (void)dump;
- (void)_dump:(id)arg1;
- (id)scene;
- (struct __C3DScene *)sceneRef;
- (id)presentationInstance;
@property(readonly, nonatomic) SCNNode *presentationNode;
- (_Bool)isPresentationInstance;
- (void)_syncObjCModel;
- (id)attributeForKey:(id)arg1;
- (void)setAttribute:(id)arg1 forKey:(id)arg2;
- (void)_syncEntityObjCModel;
- (id)identifier;
- (void)setIdentifier:(id)arg1;
@property(copy, nonatomic) NSString *name;
- (void)dealloc;
- (id)initWithNodeRef:(struct __C3DNode *)arg1;
- (id)initPresentationNodeWithNodeRef:(struct __C3DNode *)arg1;
- (id)init;
- (void)_bakeNodes:(id)arg1 folderPath:(id)arg2 inVertex:(_Bool)arg3 bakeAO:(_Bool)arg4 quality:(float)arg5 attenuation:(float)arg6 geomSetter:(CDUnknownBlockType)arg7 terminateSetter:(CDUnknownBlockType)arg8;
- (void)_addSkinnerWithMDLMesh:(id)arg1 sceneNodes:(id)arg2;
- (id)_associatedMDLObject;
- (void)rotateBy:(struct SCNVector4)arg1 aroundTarget:(struct SCNVector3)arg2;
- (void)localRotateBy:(struct SCNVector4)arg1;
- (void)localTranslateBy:(struct SCNVector3)arg1;
- (void)lookAt:(struct SCNVector3)arg1 up:(struct SCNVector3)arg2 localFront:(struct SCNVector3)arg3;
- (void)lookAt:(struct SCNVector3)arg1;
@property(readonly, nonatomic) struct SCNVector3 worldFront;
@property(readonly, nonatomic) struct SCNVector3 worldRight;
@property(readonly, nonatomic) struct SCNVector3 worldUp;
- (void)simdRotateBy:(CDStruct_183601bc)arg1 aroundTarget: /* Error: Ran out of types for this method. */;
- (void)simdLocalRotateBy:(CDStruct_183601bc)arg1;
- (void)simdLocalTranslateBy: /* Error: Ran out of types for this method. */;
- (void)simdLookAt:up:localFront: /* Error: Ran out of types for this method. */;
- (void)simdLookAt: /* Error: Ran out of types for this method. */;
@property(readonly, nonatomic) MISSING_TYPE *simdWorldFront;
@property(readonly, nonatomic) MISSING_TYPE *simdWorldRight;
@property(readonly, nonatomic) MISSING_TYPE *simdWorldUp;
- (CDStruct_14d5dc5e)simdConvertTransform:(CDStruct_14d5dc5e)arg1 fromNode:(id)arg2;
- (CDStruct_14d5dc5e)simdConvertTransform:(CDStruct_14d5dc5e)arg1 toNode:(id)arg2;
- (MISSING_TYPE *)simdConvertVector:(id)arg1 fromNode: /* Error: Ran out of types for this method. */;
- (MISSING_TYPE *)simdConvertVector:(id)arg1 toNode: /* Error: Ran out of types for this method. */;
- (MISSING_TYPE *)simdConvertPosition:(id)arg1 fromNode: /* Error: Ran out of types for this method. */;
- (MISSING_TYPE *)simdConvertPosition:(id)arg1 toNode: /* Error: Ran out of types for this method. */;
@property(nonatomic) CDStruct_14d5dc5e simdWorldTransform;
@property(nonatomic) CDStruct_183601bc simdWorldOrientation;
@property(nonatomic) MISSING_TYPE *simdWorldPosition;
@property(nonatomic) MISSING_TYPE *simdScale;
@property(nonatomic) MISSING_TYPE *simdEulerAngles;
@property(nonatomic) CDStruct_183601bc simdOrientation;
@property(nonatomic) MISSING_TYPE *simdRotation;
@property(nonatomic) MISSING_TYPE *simdPosition;
@property(nonatomic) CDStruct_14d5dc5e simdTransform;
@property(nonatomic) CDStruct_14d5dc5e simdPivot;
- (_Bool)simdGetBoundingSphereCenter:(MISSING_TYPE **)arg1 radius:(float *)arg2;
@property(nonatomic) long long authoringCameraType;
- (id)debugQuickLookData;
- (id)debugQuickLookObject;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) __weak UIView *preferredFocusedView;
@property(readonly) Class superclass;

@end

