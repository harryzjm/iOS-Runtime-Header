//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE;

@interface MPSNDArrayDescriptor : NSObject
{
    MISSING_TYPE *_dimensionLengths;
    MISSING_TYPE *_sliceOffsets;
    MISSING_TYPE *_sliceLengths;
    MISSING_TYPE *_dimensionOrder;
    unsigned long long _numberOfDimensions;
    unsigned long long _rowBytes;
    unsigned int _dataType;
    MPSNDArrayDescriptor *_child;
    MPSNDArrayDescriptor *_parent;
    int _transitionOp;
    _Bool _preferPackedRows;
}

+ (id)descriptorWithDataType:(unsigned int)arg1 dimensionSizes:(unsigned long long)arg2;
+ (id)descriptorWithDataType:(unsigned int)arg1 shape:(id)arg2;
+ (id)descriptorWithDataType:(unsigned int)arg1 dimensionCount:(unsigned long long)arg2 dimensionSizes:(unsigned long long *)arg3;
@property(nonatomic) unsigned long long rowBytes; // @synthesize rowBytes=_rowBytes;
@property(nonatomic) _Bool preferPackedRows; // @synthesize preferPackedRows=_preferPackedRows;
@property(nonatomic) unsigned long long numberOfDimensions; // @synthesize numberOfDimensions=_numberOfDimensions;
@property(nonatomic) unsigned int dataType; // @synthesize dataType=_dataType;
- (void)dealloc;
- (void)reshapeWithDimensionCount:(unsigned long long)arg1 dimensionSizes:(unsigned long long *)arg2;
- (void)reshapeWithShape:(id)arg1;
- (unique_ptr_ad0d5218)getShapeVector;
- (id)getShape;
- (id)initWithDataType:(unsigned int)arg1 dimensions:(unsigned long long)arg2 sizes: /* Error: Ran out of types for this method. */;
- (MISSING_TYPE *)dimensionOrder;
- (void)permuteWithDimensionOrder:(unsigned long long *)arg1;
- (void)transposeDimension:(unsigned long long)arg1 withDimension:(unsigned long long)arg2;
- (void)sliceDimension:(unsigned long long)arg1 withSubrange:(struct MPSDimensionSlice)arg2;
- (struct MPSDimensionSlice)sliceRangeForDimension:(unsigned long long)arg1;
- (void)setLengthOfDimension:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)lengthOfDimension:(unsigned long long)arg1;

@end

