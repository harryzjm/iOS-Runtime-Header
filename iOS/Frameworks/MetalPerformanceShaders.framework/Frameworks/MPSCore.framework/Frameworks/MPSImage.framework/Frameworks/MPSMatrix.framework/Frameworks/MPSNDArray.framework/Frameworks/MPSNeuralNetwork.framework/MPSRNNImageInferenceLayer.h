//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface MPSRNNImageInferenceLayer
{
    int *layerTypes;
    void **layers;
    void **forwardLayers;
    int *forwardLayerTypes;
    unsigned long long nForwardLayers;
    void **backwardLayers;
    int *backwardLayerTypes;
    unsigned long long nBackwardLayers;
    _Bool _recurrentOutputIsTemporary;
    _Bool _storeAllIntermediateStates;
    unsigned long long _numberOfLayers;
    unsigned long long _bidirectionalCombineMode;
    unsigned long long _inputFeatureChannels;
    unsigned long long _outputFeatureChannels;
}

+ (const struct MPSLibraryInfo *)libraryInfo:(struct MPSDevice *)arg1;
@property(readonly, nonatomic) unsigned long long outputFeatureChannels; // @synthesize outputFeatureChannels=_outputFeatureChannels;
@property(readonly, nonatomic) unsigned long long inputFeatureChannels; // @synthesize inputFeatureChannels=_inputFeatureChannels;
@property(nonatomic) unsigned long long bidirectionalCombineMode; // @synthesize bidirectionalCombineMode=_bidirectionalCombineMode;
@property(nonatomic) _Bool storeAllIntermediateStates; // @synthesize storeAllIntermediateStates=_storeAllIntermediateStates;
@property(nonatomic) _Bool recurrentOutputIsTemporary; // @synthesize recurrentOutputIsTemporary=_recurrentOutputIsTemporary;
@property(readonly, nonatomic) unsigned long long numberOfLayers; // @synthesize numberOfLayers=_numberOfLayers;
- (void)encodeBidirectionalSequenceToCommandBuffer:(id)arg1 sourceSequence:(id)arg2 destinationForwardImages:(id)arg3 destinationBackwardImages:(id)arg4;
- (void)encodeSequenceToCommandBuffer:(id)arg1 sourceImages:(id)arg2 destinationImages:(id)arg3 recurrentInputState:(id)arg4 recurrentOutputStates:(id)arg5;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1 device:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1 device:(id)arg2;
- (void)dealloc;
- (id)initWithDevice:(id)arg1 rnnDescriptors:(id)arg2;
- (id)initWithDevice:(id)arg1 rnnDescriptor:(id)arg2;

@end

