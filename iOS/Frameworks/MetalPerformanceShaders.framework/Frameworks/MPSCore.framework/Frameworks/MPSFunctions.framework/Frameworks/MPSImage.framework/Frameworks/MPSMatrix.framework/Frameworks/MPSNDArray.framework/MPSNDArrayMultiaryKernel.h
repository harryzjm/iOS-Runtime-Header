//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface MPSNDArrayMultiaryKernel
{
    CDUnknownFunctionPointerType _encode;
}

+ (_Bool)supportsPostfixForDevice:(void *)arg1;
+ (_Bool)supportsPrefixForDevice:(void *)arg1;
- (id)destinationGradientArrayDescriptorsForSourceArrays:(id)arg1 sourceGradient:(id)arg2 sourceState:(id)arg3;
- (_Bool)supportsGradientForSourceIndex:(unsigned long long)arg1;
- (id)destinationGradientsSupported;
- (void)encodeGradientsToCommandBuffer:(id)arg1 sourceArrays:(id)arg2 sourceGradient:(id)arg3 gradientState:(id)arg4 destinationGradients:(id)arg5;
- (void)encodeGradientsToCommandBuffer:(id)arg1 sourceArrays:(id)arg2 sourceGradient:(id)arg3 gradientState:(id)arg4 destinationGradients:(id)arg5 kernelDAGObject:(id)arg6;
- (void)encodeGradientsToCommandEncoder:(id)arg1 commandBuffer:(id)arg2 sourceArrays:(id)arg3 sourceGradient:(id)arg4 gradientState:(id)arg5 destinationGradients:(id)arg6 kernelDAGObject:(id)arg7;
- (id)firstGradientDestinationFromDestinationGradients:(id)arg1 outMaxNumDimensions:(unsigned long long *)arg2;
- (id)encodeGradientsToCommandBuffer:(id)arg1 sourceArrays:(id)arg2 sourceGradient:(id)arg3 gradientState:(id)arg4;
- (void)encodeToCommandBuffer:(id)arg1 sourceArrays:(id)arg2 resultState:(id)arg3 destinationArray:(id)arg4;
- (void)encodeToCommandBuffer:(id)arg1 sourceArrays:(id)arg2 resultState:(id)arg3 destinationArray:(id)arg4 kernelDAGObject:(id)arg5;
- (void)encodeToCommandEncoder:(id)arg1 commandBuffer:(id)arg2 sourceArrays:(id)arg3 resultState:(id)arg4 destinationArray:(id)arg5 kernelDAGObject:(id)arg6;
- (id)encodeToCommandBuffer:(id)arg1 sourceArrays:(id)arg2 resultState:(id *)arg3 outputStateIsTemporary:(_Bool)arg4;
- (void)encodeToCommandEncoder:(id)arg1 commandBuffer:(id)arg2 sourceArrays:(id)arg3 destinationArray:(id)arg4;
- (void)encodeToCommandBuffer:(id)arg1 sourceArrays:(id)arg2 destinationArray:(id)arg3;
- (id)encodeToCommandBuffer:(id)arg1 sourceArrays:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1 device:(id)arg2;
- (id)initWithCoder:(id)arg1 device:(id)arg2;
- (id)initWithDevice:(id)arg1 sourceCount:(unsigned long long)arg2;

@end

