//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSData, NSMutableDictionary, NSMutableSet, NSUUID;
@protocol OS_dispatch_queue, OS_os_log, OS_xpc_object;

__attribute__((visibility("hidden")))
@interface NIServerConnection : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _resumed;
    _Bool _invalidated;
    NSObject<OS_xpc_object> *_conn;
    NSObject<OS_os_log> *_log;
    NSData *_tokenData;
    NSMutableSet *_peerTokens;
    NSMutableDictionary *_simulators;
    _Bool _xpcActive;
    _Bool _shouldInvalidateSessionOnXPCError;
    _Bool _isInterruptionReason_ApplicationNotVisible;
    _Bool _isDistanceUpdateRequestScheduled;
    _Bool _isAllowedToSimulateDirection;
    CDUnknownBlockType _interruptionHandler;
    CDUnknownBlockType _invalidationHandler;
    NSUUID *_sessionID;
    id _exportedObject;
}

- (void).cxx_destruct;
@property(retain) id exportedObject; // @synthesize exportedObject=_exportedObject;
@property(readonly) NSUUID *sessionID; // @synthesize sessionID=_sessionID;
@property(copy) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(copy) CDUnknownBlockType interruptionHandler; // @synthesize interruptionHandler=_interruptionHandler;
- (double)simulateErrorWithMaximum:(double)arg1 sigma:(double)arg2 maximum:(double)arg3;
- (double)randomUnivariateGaussian:(double)arg1 sigma:(double)arg2;
- (double)simulateAngleError;
- (double)simulateRangeError;
- (void)setRangingPriorityPolicy:(long long)arg1 reply:(CDUnknownBlockType)arg2;
- (void)getRangingPriorityPolicy:(CDUnknownBlockType)arg1;
- (void)processBluetoothEventWithType:(long long)arg1 btcClockTicks:(unsigned long long)arg2 eventCounter:(unsigned long long)arg3 reply:(CDUnknownBlockType)arg4;
- (void)processDCKMessage:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)_removeObject:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)_addObject:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)notifySystemShutdownWithReason:(long long)arg1 reply:(CDUnknownBlockType)arg2;
- (void)pause:(CDUnknownBlockType)arg1;
- (void)runWithConfiguration:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)activate:(CDUnknownBlockType)arg1;
- (void)_createAndActivateXPCConnectionToSimulatorIfNeededWithReply:(CDUnknownBlockType)arg1;
- (id)generateDiscoveryTokenData;
- (void)queryDeviceCapabilities:(CDUnknownBlockType)arg1;
- (id)_internalDeviceCapabilities;
- (void)handleMessageFromSimulator:(id)arg1;
- (void)handleErrorMessageFromSimulator:(id)arg1;
- (void)handleEventFromSimulatorOnQueue:(id)arg1;
- (void)handleDeviceShutdown:(id)arg1;
- (void)handleNewToken:(id)arg1;
- (void)handleNewDevice:(id)arg1;
- (void)handleCancelToken:(id)arg1;
- (void)removeFromPeerTokensAndNotifyIfNecessary:(id)arg1;
- (id)nearbyObjectFromBase64EncodedString:(id)arg1;
- (id)discoveryTokenFromBase64EncodedString:(id)arg1;
- (void)requestDistanceUpdate;
- (void)handleDistanceUpdate:(id)arg1;
- (void)_sendDistanceUpdateForRequestedPeer:(id)arg1 forPeer:(id)arg2;
- (id)_findRequestedPeerDevicesInUpdates:(id)arg1;
- (id)_findSelfDeviceInUpdates:(id)arg1;
- (_Bool)areContinuousUpdatesRequired;
- (void)handleXPCConnectionInvalid;
- (void)handleXPCConnectionTermination;
- (void)handleXPCConnectionInterrupted;
- (void)handleXPCConnectionError;
- (CDStruct_6ad76789)auditTokenForConnection;
- (void)invalidate;
- (void)resume;
- (id)findUDIDForToken:(id)arg1;
- (void)_simXPCCancelAndInvalidateSessionOnError:(_Bool)arg1;
- (void)_simXPCActivateIfAllowed;
- (void)_simXPCResumeIfAllowed;
- (void)_simXPCSuspendIfAllowed;
- (id)synchronousRemoteObjectProxy;
- (id)remoteObjectProxy;
- (void)handleAppNotification:(id)arg1;
- (void)dealloc;
- (id)initWithSessionID:(id)arg1 queue:(id)arg2 exportedObject:(id)arg3 options:(unsigned long long)arg4;

@end

