//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreServices/NSSecureCoding-Protocol.h>

@class LSApplicationProxy, LSApplicationRecord, NSDictionary, NSURL, _LSValidationToken;

@interface LSAppLink : NSObject <NSSecureCoding>
{
    NSURL *_URL;
    LSApplicationProxy *_targetApplicationProxy;
    LSApplicationRecord *_targetApplicationRecord;
    _LSValidationToken *__validationToken;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)areEnabledByDefault;
+ (void)getAppLinksWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)getAppLinkWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)appLinksWithURL:(id)arg1 limit:(unsigned long long)arg2 error:(id *)arg3;
+ (_Bool)setSettingsSwitchState:(long long)arg1 forApplicationIdentifier:(id)arg2 error:(id *)arg3;
+ (long long)settingsSwitchStateForApplicationIdentifier:(id)arg1;
+ (void)openWithURL:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)openWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (_Bool)removeAllSettingsReturningError:(id *)arg1;
+ (void)_openAppLink:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)_openWithAppLink:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)_appLinkWithURL:(id)arg1 applicationRecord:(id)arg2 plugInClass:(Class)arg3;
+ (id)_appLinksWithState:(id)arg1 context:(struct LSContext *)arg2 limit:(unsigned long long)arg3 requireEntitlement:(_Bool)arg4 error:(id *)arg5;
+ (id)_appLinksWithState:(id)arg1 limit:(unsigned long long)arg2 requireEntitlement:(_Bool)arg3 error:(id *)arg4;
+ (_Bool)_URLIsValidForAppLinks:(id)arg1 error:(id *)arg2;
+ (id)_dispatchQueue;
+ (id)_appLinksWithState:(id)arg1 context:(struct LSContext *)arg2 limit:(unsigned long long)arg3 URLComponents:(id)arg4 error:(id *)arg5;
+ (_Bool)URLComponentsAreValidForAppLinks:(id)arg1 error:(id *)arg2;
- (void).cxx_destruct;
@property(retain) _LSValidationToken *_validationToken; // @synthesize _validationToken=__validationToken;
@property(retain) LSApplicationRecord *targetApplicationRecord; // @synthesize targetApplicationRecord=_targetApplicationRecord;
@property(readonly) LSApplicationProxy *targetApplicationProxy; // @synthesize targetApplicationProxy=_targetApplicationProxy;
@property(copy) NSURL *URL; // @synthesize URL=_URL;
- (id)_validationTokenPayload;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)debugDescription;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)setEnabled:(_Bool)arg1 error:(id *)arg2;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @dynamic enabled;
- (void)openWithConfiguration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)removeSettingsReturningError:(id *)arg1;
- (_Bool)setBrowserSettings:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) NSDictionary *browserSettings;
- (void)openInWebBrowser:(_Bool)arg1 setOpenStrategy:(long long)arg2 webBrowserState:(id)arg3 configuration:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)openInWebBrowser:(_Bool)arg1 setOpenStrategy:(long long)arg2 webBrowserState:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)openInWebBrowser:(_Bool)arg1 setAppropriateOpenStrategyAndWebBrowserState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property long long openStrategy; // @dynamic openStrategy;
- (_Bool)_validateReturningError:(id *)arg1;
- (id)_userActivityWithState:(id)arg1 error:(id *)arg2;

@end

