//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreServices/LSDetachable-Protocol.h>
#import <CoreServices/NSCopying-Protocol.h>
#import <CoreServices/NSDiscardableContent-Protocol.h>
#import <CoreServices/NSSecureCoding-Protocol.h>

@class NSData, NSURL;

@interface LSRecord : NSObject <LSDetachable, NSSecureCoding, NSCopying, NSDiscardableContent>
{
    struct unordered_map<SEL *, id, std::__1::hash<SEL *>, std::__1::equal_to<SEL *>, std::__1::allocator<std::__1::pair<SEL *const, id>>> *_resolvedProperties;
    struct LSContext _context;
    unsigned int _unitID;
    unsigned int _tableID:16;
    unsigned int _discardableContentCounter:14;
    unsigned int _intentionallyInvalid:1;
    unsigned int _shared:1;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)hasDatabaseAccess;
+ (id)new;
+ (void)initialize;
+ (void)resolveAllPropertiesOfRecords:(id)arg1 andDetachOnQueue:(id)arg2;
+ (void)resolveAllPropertiesOfRecords:(const id *)arg1 count:(unsigned long long)arg2 andDetachOnQueue:(id)arg3;
+ (id)_propertyClasses;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)isContentDiscarded;
- (void)discardContentIfPossible;
- (void)endContentAccess;
- (_Bool)beginContentAccess;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)detach;
- (id)debugDescription;
- (id)description;
@property(nonatomic, getter=_isShared, setter=_setShared:) _Bool _shared;
- (id)_attributedDescription;
- (void)_ifAttached:(CDUnknownBlockType)arg1 else:(CDUnknownBlockType)arg2;
- (void)_performBlockWithContext:(CDUnknownBlockType)arg1;
- (void)_resolveAllProperties;
- (id)_resolvedPropertyValueForGetter:(SEL)arg1;
- (id)_resolvedPropertyValueForGetter:(SEL)arg1 nullPlaceholder:(id)arg2;
- (void)_removeResolvedPropertyValueForGetter:(SEL)arg1;
- (void)_setResolvedPropertyValue:(id)arg1 forGetter:(SEL)arg2;
- (id)_initInvalid;
- (id)_initWithContext:(struct LSContext *)arg1 tableID:(unsigned int)arg2 unitID:(unsigned int)arg3;
- (id)initWithPersistentIdentifier:(id)arg1;
@property(readonly) NSData *persistentIdentifier;
@property(readonly, nonatomic) id compatibilityObject;
- (void)dealloc;
- (id)init;
@property(readonly, nonatomic) NSURL *visualizerURL;
- (void)resolveAllPropertiesAndDetachOnQueue:(id)arg1;
- (id)_replacementObjectForResolvedPropertyValue:(id)arg1 forGetter:(SEL)arg2 encoder:(id)arg3;
- (void)_detachFromContext:(struct LSContext *)arg1 tableID:(unsigned int)arg2 unitID:(unsigned int)arg3 unitBytes:(const void *)arg4;
- (id)_initWithContext:(struct LSContext *)arg1 persistentIdentifierData:(const struct LSPersistentIdentifierData *)arg2 length:(unsigned long long)arg3;
- (id)_persistentIdentifierWithContext:(struct LSContext *)arg1 tableID:(unsigned int)arg2 unitID:(unsigned int)arg3 unitBytes:(const void *)arg4;
- (id)_compatibilityObjectWithContext:(struct LSContext *)arg1 tableID:(unsigned int)arg2 unitID:(unsigned int)arg3 unitBytes:(const void *)arg4;
- (id)_propertyClassesForCoding;
- (const vector_a8c3fa3f *)_resolvingMethods;

@end

