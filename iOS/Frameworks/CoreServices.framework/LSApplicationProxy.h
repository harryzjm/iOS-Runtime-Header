//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreServices/LSDetachable-Protocol.h>
#import <CoreServices/NSSecureCoding-Protocol.h>

@class LSApplicationRecord, NSArray, NSDate, NSDictionary, NSNumber, NSProgress, NSSet, NSString, NSUUID, _LSApplicationState, _LSDiskUsage;

@interface LSApplicationProxy <LSDetachable, NSSecureCoding>
{
    NSString *_deviceIdentifierVendorName;
    LSApplicationRecord *_record;
    NSArray *_plugInKitPlugins;
    _Bool _userInitiatedUninstall;
}

+ (_Bool)supportsSecureCoding;
+ (id)applicationProxyForItemID:(id)arg1;
+ (id)applicationProxyForBundleURL:(id)arg1;
+ (id)applicationProxyForSystemPlaceholder:(id)arg1;
+ (id)applicationProxyForCompanionIdentifier:(id)arg1;
+ (id)applicationProxyForIdentifier:(id)arg1 placeholder:(_Bool)arg2;
+ (id)applicationProxyForIdentifier:(id)arg1;
+ (id)applicationProxyForBundleType:(unsigned long long)arg1 identifier:(id)arg2 isCompanion:(_Bool)arg3 URL:(id)arg4 itemID:(id)arg5 bundleUnit:(unsigned int *)arg6;
+ (id)applicationProxyForIdentifier:(id)arg1 withContext:(struct LSContext *)arg2;
+ (id)applicationProxyWithBundleUnitID:(unsigned int)arg1 withContext:(struct LSContext *)arg2;
- (void).cxx_destruct;
@property(nonatomic) _Bool userInitiatedUninstall; // @synthesize userInitiatedUninstall=_userInitiatedUninstall;
- (id)valueForUndefinedKey:(id)arg1;
- (void)detach;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)description;
- (id)signerIdentity;
- (id)signerOrganization;
- (_Bool)freeProfileValidated;
- (_Bool)UPPValidated;
- (_Bool)profileValidated;
- (id)bundleType;
@property(readonly, nonatomic) int bundleModTime;
- (id)installProgressSync;
- (id)getBundleMetadata;
- (_Bool)getGenericTranslocationTargetURL:(id *)arg1 error:(id *)arg2;
@property(readonly, nonatomic, getter=isStandaloneWatchApp) _Bool standaloneWatchApp;
@property(readonly, nonatomic) NSNumber *platform;
- (id)handlerRankOfClaimForContentType:(id)arg1;
@property(readonly, nonatomic) NSSet *claimedURLSchemes;
@property(readonly, nonatomic) NSSet *claimedDocumentContentTypes;
@property(readonly, nonatomic) NSDictionary *siriActionDefinitionURLs;
- (void)getDeviceManagementPolicyWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long deviceManagementPolicy;
- (id)iconDataForVariant:(int)arg1 withOptions:(int)arg2;
- (id)iconDataForVariant:(int)arg1;
- (id)primaryIconDataForVariant:(int)arg1;
- (id)alternateIconName;
- (void)setAlternateIconName:(id)arg1 withResult:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) NSNumber *installFailureReason;
@property(readonly, nonatomic) _Bool gameCenterEverEnabled;
@property(readonly, nonatomic, getter=isGameCenterEnabled) _Bool gameCenterEnabled;
@property(readonly, nonatomic) NSString *complicationPrincipalClass;
@property(readonly, nonatomic, getter=isWatchKitApp) _Bool watchKitApp;
@property(readonly, nonatomic, getter=isRemoveableSystemApp) _Bool removeableSystemApp;
- (id)environmentVariables;
- (id)groupContainerURLs;
- (id)dataContainerURL;
- (_Bool)_usesSystemPersona;
@property(readonly, nonatomic) NSArray *managedPersonas;
- (id)_managedPersonas;
- (_Bool)isDeletableIgnoringRestrictions;
@property(readonly, nonatomic) _Bool missingRequiredSINF;
@property(readonly, nonatomic) _Bool hasMIDBasedSINF;
@property(readonly, nonatomic, getter=isPurchasedReDownload) _Bool purchasedReDownload;
@property(readonly, nonatomic) _Bool iconUsesAssetCatalog;
@property(readonly, nonatomic) _Bool iconIsPrerendered;
@property(readonly, nonatomic) _Bool fileSharingEnabled;
@property(readonly, nonatomic) _Bool supportsODR;
@property(readonly, nonatomic, getter=isBetaApp) _Bool betaApp;
@property(readonly, nonatomic, getter=isDeviceBasedVPP) _Bool deviceBasedVPP;
@property(readonly, nonatomic, getter=isWhitelisted) _Bool whitelisted;
@property(readonly, nonatomic, getter=isNewsstandApp) _Bool newsstandApp;
@property(readonly, nonatomic, getter=isAppUpdate) _Bool appUpdate;
@property(readonly, nonatomic) NSString *applicationVariant;
@property(readonly, nonatomic) NSString *sourceAppIdentifier;
@property(readonly, nonatomic) NSString *ratingLabel;
@property(readonly, nonatomic) NSNumber *ratingRank;
@property(readonly, nonatomic) NSNumber *betaExternalVersionIdentifier;
@property(readonly, nonatomic) NSNumber *externalVersionIdentifier;
@property(readonly, nonatomic) NSNumber *storeFront;
@property(readonly, nonatomic) NSString *appIDPrefix;
@property(readonly, nonatomic) NSString *teamID;
@property(readonly, nonatomic) NSArray *activityTypes;
@property(readonly, nonatomic) NSArray *deviceFamily;
@property(readonly, nonatomic) NSArray *requiredDeviceCapabilities;
@property(readonly, nonatomic) unsigned long long originalInstallType;
@property(readonly, nonatomic) unsigned long long installType;
@property(readonly, nonatomic) NSNumber *familyID;
@property(readonly, nonatomic) NSNumber *downloaderDSID;
@property(readonly, nonatomic) NSNumber *purchaserDSID;
@property(readonly, nonatomic) NSString *applicationDSID;
@property(readonly, nonatomic) NSArray *plugInKitPlugins;
@property(readonly, nonatomic, getter=isRemovedSystemApp) _Bool removedSystemApp;
@property(readonly, nonatomic, getter=isRestricted) _Bool restricted;
@property(readonly, nonatomic, getter=isPlaceholder) _Bool placeholder;
@property(readonly, nonatomic, getter=isInstalled) _Bool installed;
@property(readonly, nonatomic) _LSApplicationState *appState;
@property(readonly, nonatomic) NSNumber *ODRDiskUsage;
@property(readonly, nonatomic) NSNumber *dynamicDiskUsage;
@property(readonly, nonatomic) NSNumber *staticDiskUsage;
@property(readonly, nonatomic) NSProgress *installProgress;
- (void)clearAdvertisingIdentifier;
@property(readonly, nonatomic) NSString *applicationType;
@property(readonly, nonatomic) NSString *preferredArchitecture;
@property(readonly, nonatomic) NSArray *subgenres;
@property(readonly, nonatomic) NSNumber *genreID;
@property(readonly, nonatomic) NSString *genre;
@property(readonly, nonatomic) NSString *storeCohortMetadata;
@property(readonly, nonatomic) NSString *itemName;
@property(readonly, nonatomic) NSString *vendorName;
@property(readonly, nonatomic) NSNumber *itemID;
@property(readonly, nonatomic) NSDate *registeredDate;
@property(readonly, nonatomic) NSString *companionApplicationIdentifier;
@property(readonly, nonatomic) NSString *applicationIdentifier;
@property(readonly, nonatomic) LSApplicationRecord *correspondingApplicationRecord;
- (id)_initWithBundleUnit:(unsigned int)arg1 context:(struct LSContext *)arg2 bundleIdentifier:(id)arg3;
- (id)_initWithContext:(struct LSContext *)arg1 bundleUnit:(unsigned int)arg2 applicationRecord:(id)arg3 bundleID:(id)arg4 resolveAndDetach:(_Bool)arg5;
- (id)_localizedNameWithPreferredLocalizations:(id)arg1 useShortNameOnly:(_Bool)arg2;
- (id)localizedNameForContext:(id)arg1 preferredLocalizations:(id)arg2;
- (id)localizedNameForContext:(id)arg1;
- (id)localizedNameForContext:(id)arg1 preferredLocalizations:(id)arg2 useShortNameOnly:(_Bool)arg3;

// Remaining properties
@property(readonly, nonatomic) NSArray *UIBackgroundModes; // @dynamic UIBackgroundModes;
@property(readonly, nonatomic) NSArray *VPNPlugins; // @dynamic VPNPlugins;
@property(readonly, nonatomic, getter=isAdHocCodeSigned) _Bool adHocCodeSigned; // @dynamic adHocCodeSigned;
@property(readonly, nonatomic) NSString *appStoreToolsBuildVersion; // @dynamic appStoreToolsBuildVersion;
@property(readonly, nonatomic, getter=isAppStoreVendable) _Bool appStoreVendable; // @dynamic appStoreVendable;
@property(readonly, nonatomic) NSArray *appTags; // @dynamic appTags;
@property(readonly, nonatomic, getter=isArcadeApp) _Bool arcadeApp; // @dynamic arcadeApp;
@property(readonly, nonatomic) NSArray *audioComponents; // @dynamic audioComponents;
@property(readonly, nonatomic) NSArray *backgroundTaskSchedulerPermittedIdentifiers; // @dynamic backgroundTaskSchedulerPermittedIdentifiers;
@property(readonly, nonatomic) _Bool canHandleWebAuthentication; // @dynamic canHandleWebAuthentication;
@property(readonly, nonatomic) NSArray *carPlayInstrumentClusterURLSchemes; // @dynamic carPlayInstrumentClusterURLSchemes;
@property(readonly, nonatomic) NSArray *counterpartIdentifiers; // @dynamic counterpartIdentifiers;
@property(readonly, nonatomic, getter=isDeletable) _Bool deletable; // @dynamic deletable;
@property(readonly, nonatomic) NSUUID *deviceIdentifierForAdvertising; // @dynamic deviceIdentifierForAdvertising;
@property(readonly, nonatomic) NSUUID *deviceIdentifierForVendor; // @dynamic deviceIdentifierForVendor;
@property(readonly, nonatomic) NSArray *directionsModes; // @dynamic directionsModes;
@property(readonly, nonatomic) _LSDiskUsage *diskUsage; // @dynamic diskUsage;
@property(readonly, nonatomic) NSArray *externalAccessoryProtocols; // @dynamic externalAccessoryProtocols;
@property(readonly, nonatomic) _Bool hasComplication; // @dynamic hasComplication;
@property(readonly, nonatomic) _Bool hasCustomNotification; // @dynamic hasCustomNotification;
@property(readonly, nonatomic) _Bool hasGlance; // @dynamic hasGlance;
@property(readonly, nonatomic) _Bool hasParallelPlaceholder; // @dynamic hasParallelPlaceholder;
@property(readonly, nonatomic) _Bool hasSettingsBundle; // @dynamic hasSettingsBundle;
@property(readonly, nonatomic, getter=isLaunchProhibited) _Bool launchProhibited; // @dynamic launchProhibited;
@property(readonly, nonatomic) NSString *maximumSystemVersion; // @dynamic maximumSystemVersion;
@property(readonly, nonatomic) NSString *minimumSystemVersion; // @dynamic minimumSystemVersion;
@property(readonly, nonatomic) _Bool runsIndependentlyOfCompanionApp; // @dynamic runsIndependentlyOfCompanionApp;
@property(readonly, nonatomic) NSString *shortVersionString; // @dynamic shortVersionString;
@property(readonly, nonatomic) _Bool shouldSkipWatchAppInstall; // @dynamic shouldSkipWatchAppInstall;
@property(readonly, nonatomic) NSArray *staticShortcutItems; // @dynamic staticShortcutItems;
@property(readonly, nonatomic) NSArray *supportedComplicationFamilies; // @dynamic supportedComplicationFamilies;
@property(readonly, nonatomic) _Bool supportsAlternateIconNames; // @dynamic supportsAlternateIconNames;
@property(readonly, nonatomic) _Bool supportsAudiobooks; // @dynamic supportsAudiobooks;
@property(readonly, nonatomic) _Bool supportsExternallyPlayableContent; // @dynamic supportsExternallyPlayableContent;
@property(readonly, nonatomic) _Bool supportsMultiwindow; // @dynamic supportsMultiwindow;
@property(readonly, nonatomic) _Bool supportsOpenInPlace; // @dynamic supportsOpenInPlace;
@property(readonly, nonatomic) _Bool supportsPurgeableLocalStorage; // @dynamic supportsPurgeableLocalStorage;
@property(readonly, nonatomic) NSString *watchKitVersion; // @dynamic watchKitVersion;

@end

