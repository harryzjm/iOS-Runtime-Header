//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MapKit/VKPuckAnimatorTarget-Protocol.h>

@class CAGradientLayer, CALayer, CLLocation, NSArray, NSString, UIColor, UIImage, VKNavigationPuck, _MKPuckAccuracyLayer;
@protocol MKUserLocationHeadingIndicator;

@interface _MKPuckAnnotationView <VKPuckAnimatorTarget>
{
    CALayer *_puckLayer;
    _Bool _shouldHidePuckWhenAccuracyVisible;
    _Bool _shouldInnerPulse;
    _Bool _shouldShowOuterRing;
    _Bool _shouldShowDynamicLocationAnimations;
    UIImage *_glyphImage;
    UIColor *_glyphTintColor;
    CALayer *_glyphLayer;
    UIImage *_innerImageMask;
    _Bool _rotateInnerImageToMatchCourse;
    CALayer *_puckContainerLayer;
    CALayer *_shadowLayer;
    CALayer *_baseLayer;
    double _accuracyRingAlpha;
    CALayer *_puckTransitionContainer;
    CALayer *_puckTransitionLayer;
    double _puckScale;
    _Bool _faux3DEnabled;
    CAGradientLayer *_faux3DFaceLayer;
    CAGradientLayer *_faux3DBaseBottomLayer;
    CALayer *_faux3DHighlightMask;
    NSArray *_faux3DHighlightMaskRings;
    CALayer *_innerCircleLayer;
    _Bool _isShowingStaleColor;
    _Bool _displaysPuckAsAccuracy;
    CALayer *_accuracyContainerLayer;
    CALayer *_headingContainerLayer;
    VKNavigationPuck *_navigationPuckMarker;
    long long _zoomDirection;
    CALayer *_pulseLayer;
    _MKPuckAccuracyLayer *_accuracyLayer;
    _Bool _allowsPulse;
    _Bool _shouldPulse;
    _Bool _canShowHeadingIndicator;
    _Bool _shouldDisplayHeading;
    _Bool _shouldDisplayInaccurateHeading;
    _Bool _forceHeadingUp;
    _Bool _hasValidHeading;
    _Bool _useDarkAppearance;
    double _mapRotation;
    double _heading;
    double _headingAccuracy;
    double _mapCameraDistance;
    CALayer<MKUserLocationHeadingIndicator> *_headingLayer;
    _Bool _headingLayerTracksAccuracy;
    _Bool _allowsAccuracyRing;
    _Bool _stale;
    _Bool _effectsEnabled;
    double _maxRadiusToShowAccuracyRing;
    double _accuracyRingStrokeOpacityThreshold;
    double _presentationCourse;
    double _locationAccuracy;
    CLLocation *_lastLocation;
    _Bool _hasExplicitCollisionMode;
    _Bool _animatingPresentationAccuracy;
    double _presentationAccuracy;
    id _minAccuracyConfigListener;
    id _newPuckConfigListener;
    id _faux3DPuckConfigListener;
    id _shelbyvilleConfigListener;
    double _minimumAccuracyRadius;
    id _minUncertaintyConfigListener;
    double _minimumAccuracyUncertainty;
    _Bool _overrideIsStale;
    _Bool _forcesConeIndicator;
    long long _headingIndicatorStyle;
}

+ (double)outerRingWidth;
+ (double)innerDiameter;
+ (double)baseDiameter;
+ (struct CGPoint)_calloutOffset;
- (void).cxx_destruct;
@property(nonatomic, getter=_displaysPuckAsAccuracy, setter=_setDisplaysPuckAsAccuracy:) _Bool displaysPuckAsAccuracy; // @synthesize displaysPuckAsAccuracy=_displaysPuckAsAccuracy;
@property(nonatomic, getter=isAnimatingPresentationAccuracy) _Bool animatingPresentationAccuracy; // @synthesize animatingPresentationAccuracy=_animatingPresentationAccuracy;
@property(nonatomic, getter=_shouldHidePuckWhenAccuracyVisible, setter=_setShouldHidePuckWhenAccuracyVisible:) _Bool shouldHidePuckWhenAccuracyVisible; // @synthesize shouldHidePuckWhenAccuracyVisible=_shouldHidePuckWhenAccuracyVisible;
@property(nonatomic, getter=_forceHeadingUp, setter=_setForceHeadingUp:) _Bool forceHeadingUp; // @synthesize forceHeadingUp=_forceHeadingUp;
@property(nonatomic) _Bool rotateInnerImageToMatchCourse; // @synthesize rotateInnerImageToMatchCourse=_rotateInnerImageToMatchCourse;
@property(retain, nonatomic) UIImage *innerImageMask; // @synthesize innerImageMask=_innerImageMask;
@property(copy, nonatomic) UIColor *glyphTintColor; // @synthesize glyphTintColor=_glyphTintColor;
@property(retain, nonatomic) UIImage *glyphImage; // @synthesize glyphImage=_glyphImage;
@property(nonatomic) _Bool shouldShowOuterRing; // @synthesize shouldShowOuterRing=_shouldShowOuterRing;
@property(nonatomic) _Bool shouldInnerPulse; // @synthesize shouldInnerPulse=_shouldInnerPulse;
@property(nonatomic) _Bool forcesConeIndicator; // @synthesize forcesConeIndicator=_forcesConeIndicator;
@property(nonatomic) long long headingIndicatorStyle; // @synthesize headingIndicatorStyle=_headingIndicatorStyle;
@property(nonatomic, getter=_shouldShowDynamicLocationAnimations, setter=_setShouldShowDynamicLocationAnimations:) _Bool shouldShowDynamicLocationAnimations; // @synthesize shouldShowDynamicLocationAnimations=_shouldShowDynamicLocationAnimations;
@property(nonatomic, getter=_minimumAccuracyRadius, setter=_setMinimumAccuracyRadius:) double minimumAccuracyRadius; // @synthesize minimumAccuracyRadius=_minimumAccuracyRadius;
@property(nonatomic) double accuracyRingAlpha; // @synthesize accuracyRingAlpha=_accuracyRingAlpha;
@property(readonly, nonatomic) CLLocation *lastLocation; // @synthesize lastLocation=_lastLocation;
@property(readonly, nonatomic) double locationAccuracy; // @synthesize locationAccuracy=_locationAccuracy;
@property(nonatomic) double presentationCourse; // @synthesize presentationCourse=_presentationCourse;
@property(nonatomic, getter=isEffectsEnabled) _Bool effectsEnabled; // @synthesize effectsEnabled=_effectsEnabled;
@property(nonatomic, getter=isOverrideStale) _Bool overrideIsStale; // @synthesize overrideIsStale=_overrideIsStale;
@property(nonatomic, getter=isStale, setter=setStale:) _Bool stale; // @synthesize stale=_stale;
@property(nonatomic, getter=_accuracyRingStrokeOpacityThreshold, setter=_setAccuracyRingStrokeOpacityThreshold:) double accuracyRingStrokeOpacityThreshold; // @synthesize accuracyRingStrokeOpacityThreshold=_accuracyRingStrokeOpacityThreshold;
@property(nonatomic) double maxRadiusToShowAccuracyRing; // @synthesize maxRadiusToShowAccuracyRing=_maxRadiusToShowAccuracyRing;
@property(nonatomic) _Bool allowsAccuracyRing; // @synthesize allowsAccuracyRing=_allowsAccuracyRing;
@property(nonatomic) double headingAccuracy; // @synthesize headingAccuracy=_headingAccuracy;
@property(nonatomic) double heading; // @synthesize heading=_heading;
@property(nonatomic) _Bool shouldDisplayInaccurateHeading; // @synthesize shouldDisplayInaccurateHeading=_shouldDisplayInaccurateHeading;
@property(nonatomic) _Bool shouldDisplayHeading; // @synthesize shouldDisplayHeading=_shouldDisplayHeading;
@property(nonatomic) _Bool canShowHeadingIndicator; // @synthesize canShowHeadingIndicator=_canShowHeadingIndicator;
@property(nonatomic) _Bool allowsPulse; // @synthesize allowsPulse=_allowsPulse;
@property(nonatomic) long long zoomDirection; // @synthesize zoomDirection=_zoomDirection;
- (void)_updateLegacyConfiguration;
@property(readonly, nonatomic) struct CGSize collisionSize;
- (void)_setPresentationCourse:(double)arg1;
- (void)_setAnimatingToCoordinate:(_Bool)arg1;
- (void)setAnimatingToCoordinate:(_Bool)arg1;
- (void)_setPresentationCoordinate:(struct CLLocationCoordinate2D)arg1;
- (void)setPresentationCoordinate:(CDStruct_c3b9c2ee)arg1;
- (_Bool)_tracking;
- (void)_setTracking:(_Bool)arg1;
- (id)_vkNavigationPuckMarker;
- (void)_setVKNavigationPuckMarker:(id)arg1;
- (void)_setHeadingLayerHidden:(_Bool)arg1;
- (void)_updateHeadingIndicators;
- (void)_updateShowHeadingLayer:(_Bool)arg1 animatedIfPossible:(_Bool)arg2;
- (void)_updateShowHeadingLayerAnimatedIfPossible:(_Bool)arg1;
- (void)_updateShowHeadingLayer;
- (void)_updateHeadingLayerForStyleChange:(_Bool)arg1;
- (long long)_enforcedHeadingIndicatorStyle;
- (_Bool)_shouldPulseForLocation:(id)arg1;
- (void)_updatePulse;
- (void)_removePulse;
- (void)_pausePulse;
- (void)_resumePulse;
- (id)_pulseAnimation;
- (id)_animationToSynchronizePulse:(id *)arg1;
- (id)_pulseLayer;
- (void)_updatePulseColor;
- (unsigned long long)_innerPulseFrameWhenDisabled:(unsigned long long)arg1;
- (void)_resetInnerPulseFrame;
- (void)_updateAccuracyAnimation;
- (void)_updatePulseAnimation;
- (id)_innerPulseAnimation;
- (void)_updateToReflectLocationAccuracyWithDuration:(double)arg1 allowShowHideAnimation:(_Bool)arg2;
- (struct CGPoint)calloutOffset;
- (_Bool)_balloonCalloutShouldShowArrow;
- (void)setLocationAccuracy:(double)arg1 duration:(double)arg2;
@property(nonatomic) double presentationAccuracy; // @synthesize presentationAccuracy=_presentationAccuracy;
@property(readonly, nonatomic, getter=_locationAccuracyInScreenPoints) double locationAccuracyInScreenPoints;
- (void)_resetLayerToMatchAccuracyRing;
- (id)_layerToMatchAccuracyRing;
- (_Bool)_shouldShowAccuracyRing;
- (_Bool)_hideLargeAccuracyRing;
- (void)_updateAccuracyOpacityForRadius:(double)arg1 duration:(double)arg2;
- (void)_updateFaux3DLayers;
- (void)_createOrRemoveFaux3DRingsIfNecessary;
- (void)_updateFaux3DColors;
- (void)_updateAccuracyColors;
@property(nonatomic, getter=_minimumAccuracyUncertainty, setter=_setMinimumAccuracyUncertainty:) double minimumAccuracyUncertainty;
- (void)locationManagerFailedToUpdateLocation;
- (void)updateStateFromLocation:(id)arg1 duration:(double)arg2;
- (_Bool)_isLocationStale:(id)arg1;
- (void)setZoomDirection:(long long)arg1 deltaScale:(double)arg2;
- (void)_updateLayers;
- (void)_updateGlyphImage;
- (void)_updateInnerImage;
- (id)_currentInnerColor;
- (void)_updateBaseImage;
- (void)_updateShadowImage;
- (void)_updateInnerMaskLayer;
- (id)_baseLayer;
- (void)_setupLayers;
- (struct UIEdgeInsets)_defaultCollisionAlignmentRectInsets;
- (void)setPuckScale:(double)arg1;
@property(nonatomic) double puckAlpha;
@property(nonatomic) float opacity;
- (struct CGRect)_mapkit_visibleRect;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (void)tintColorDidChange;
- (void)traitCollectionDidChange:(id)arg1;
- (id)_effectiveTintColor;
- (void)_updateInnerCourseRotation;
- (void)_setMapRotationRadians:(double)arg1;
- (void)_setMapPitchRadians:(double)arg1;
- (void)_updateFromMap;
- (void)_updatePuckVisibilityForRadius:(double)arg1 previousRadius:(double)arg2 duration:(double)arg3;
- (id)_createFakePuckLayer;
- (void)_setMapDisplayStyle:(CDStruct_80aa614a)arg1;
- (void)_setMapType:(unsigned long long)arg1;
- (void)setDisplayPriority:(float)arg1;
- (long long)collisionMode;
- (void)setCollisionMode:(long long)arg1;
- (struct UIEdgeInsets)_annotationTrackingInsets;
- (struct CGRect)_significantBounds;
- (float)_selectionPriority;
- (_Bool)_isSelectable;
- (void)dealloc;
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

