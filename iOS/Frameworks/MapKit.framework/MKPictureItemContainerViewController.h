//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIViewController.h>

#import <MapKit/MKPhotoGalleryTransitionAnimator-Protocol.h>
#import <MapKit/MKPlacePhotoGalleryViewControllerDelegate-Protocol.h>
#import <MapKit/UIScrollViewDelegate-Protocol.h>
#import <MapKit/UIViewControllerTransitioningDelegate-Protocol.h>

@class GEOMapItemAttribution, NSString, UIButton, UIImageView, UIScrollView, UIStackView;
@protocol GEOPictureItemContainer, MKPictureItemContainerAnalyticsDelegate, MKPictureItemContainerDelegate, MKPlaceViewControllerPresentingProtocol;

__attribute__((visibility("hidden")))
@interface MKPictureItemContainerViewController : UIViewController <UIScrollViewDelegate, MKPlacePhotoGalleryViewControllerDelegate, UIViewControllerTransitioningDelegate, MKPhotoGalleryTransitionAnimator>
{
    _Bool _hoverActive;
    id <MKPictureItemContainerAnalyticsDelegate> _analyticsDelegate;
    id <MKPlaceViewControllerPresentingProtocol> _presentingProtocol;
    id <MKPictureItemContainerDelegate> _delegate;
    id <GEOPictureItemContainer> _pictureItemContainer;
    GEOMapItemAttribution *_attribution;
    UIScrollView *_scrollView;
    UIStackView *_stackView;
    UIImageView *_imageViewForTransition;
    UIButton *_previousPageButton;
    UIButton *_nextPageButton;
    struct CGPoint _beginAnalyticsScrollingPoint;
}

- (void).cxx_destruct;
@property(nonatomic, getter=isActive) _Bool hoverActive; // @synthesize hoverActive=_hoverActive;
@property(retain, nonatomic) UIButton *nextPageButton; // @synthesize nextPageButton=_nextPageButton;
@property(retain, nonatomic) UIButton *previousPageButton; // @synthesize previousPageButton=_previousPageButton;
@property(retain, nonatomic) UIImageView *imageViewForTransition; // @synthesize imageViewForTransition=_imageViewForTransition;
@property(nonatomic) struct CGPoint beginAnalyticsScrollingPoint; // @synthesize beginAnalyticsScrollingPoint=_beginAnalyticsScrollingPoint;
@property(retain, nonatomic) UIStackView *stackView; // @synthesize stackView=_stackView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(readonly, nonatomic) GEOMapItemAttribution *attribution; // @synthesize attribution=_attribution;
@property(readonly, nonatomic) id <GEOPictureItemContainer> pictureItemContainer; // @synthesize pictureItemContainer=_pictureItemContainer;
@property(nonatomic) __weak id <MKPictureItemContainerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <MKPlaceViewControllerPresentingProtocol> presentingProtocol; // @synthesize presentingProtocol=_presentingProtocol;
@property(nonatomic) __weak id <MKPictureItemContainerAnalyticsDelegate> analyticsDelegate; // @synthesize analyticsDelegate=_analyticsDelegate;
- (void)photoGalleryTransitionAnimatorDidFinishAnimation;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)placePhotoGalleryDidFinishDismissing:(id)arg1;
- (void)placePhotoGallery:(id)arg1 willCloseAtIndex:(unsigned long long)arg2;
- (id)placePhotoGalleryImageViewForPhotoAtIndex:(unsigned long long)arg1;
- (void)updateUIForTheme:(id)arg1;
- (void)infoCardThemeChanged;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)updateChevronVisibility;
- (void)adjustScrollIndexByOffset:(long long)arg1;
- (void)scrollToNext;
- (void)scrollToPrevious;
- (void)addControlButtons;
- (void)applyCornerRadius;
- (void)didTapOnPictureItemView:(id)arg1;
- (id)visiblePictureItemViews;
- (void)downloadImageForVisiblePictureItemViews;
- (void)scrollViewDidScroll:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (id)initWithPictureItemContainer:(id)arg1 attribution:(id)arg2;
- (_Bool)_canShowWhileLocked;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

