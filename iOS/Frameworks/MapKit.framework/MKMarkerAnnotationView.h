//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class GEOFeatureStyleAttributes, MKWalletMerchantStylingInfo, NSString, UIColor, UIImage, UIImageView, UIView, _MKBezierPathView, _MKUILabel;

@interface MKMarkerAnnotationView
{
    UIImageView *_shadow;
    _MKBezierPathView *_markerView;
    UIImageView *_glyphImageView;
    _MKUILabel *_glyphLabel;
    _MKBezierPathView *_selectedMarkerView;
    UIImageView *_selectedGlyphImageView;
    _MKUILabel *_selectedGlyphLabel;
    _MKBezierPathView *_selectedDotView;
    UIView *_contentMaskView;
    GEOFeatureStyleAttributes *_customStyleAttributes;
    MKWalletMerchantStylingInfo *_walletMerchantStylingInfo;
    _Bool _isObserving;
    _Bool _animatesWhenAdded;
    UIColor *_markerTintColor;
    UIColor *_glyphTintColor;
    NSString *_glyphText;
    UIImage *_glyphImage;
    UIImage *_selectedGlyphImage;
    UIColor *_markerStrokeTintColor;
    double _markerStrokeWidth;
}

+ (float)_defaultDisplayPriority;
+ (Class)_mapkitLeafClass;
- (void).cxx_destruct;
@property(nonatomic) double markerStrokeWidth; // @synthesize markerStrokeWidth=_markerStrokeWidth;
@property(copy, nonatomic) UIColor *markerStrokeTintColor; // @synthesize markerStrokeTintColor=_markerStrokeTintColor;
@property(nonatomic) _Bool animatesWhenAdded; // @synthesize animatesWhenAdded=_animatesWhenAdded;
@property(copy, nonatomic) UIImage *selectedGlyphImage; // @synthesize selectedGlyphImage=_selectedGlyphImage;
@property(copy, nonatomic) UIImage *glyphImage; // @synthesize glyphImage=_glyphImage;
@property(copy, nonatomic) NSString *glyphText; // @synthesize glyphText=_glyphText;
@property(copy, nonatomic) UIColor *glyphTintColor; // @synthesize glyphTintColor=_glyphTintColor;
@property(copy, nonatomic) UIColor *markerTintColor; // @synthesize markerTintColor=_markerTintColor;
@property(retain, nonatomic, getter=_styleAttributes, setter=_setStyleAttributes:) GEOFeatureStyleAttributes *styleAttributes; // @synthesize styleAttributes=_customStyleAttributes;
- (struct UIEdgeInsets)_defaultCollisionAlignmentRectInsets;
- (struct UIEdgeInsets)alignmentRectInsets;
- (id)_effectiveSubtitlesIsCollidable:(_Bool *)arg1;
- (_Bool)isProvidingCustomFeature;
- (_Bool)_shouldDeselectWhenDragged;
- (void)_swayAnimation;
- (void)dealloc;
- (_Bool)updateCalloutViewIfNeededAnimated:(_Bool)arg1;
- (void)_setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setDragState:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)_configureAnimated:(_Bool)arg1 fromState:(long long)arg2 toState:(long long)arg3;
- (void)_setupSelectedViewsIfNeededUsesCallout:(_Bool)arg1;
- (void)_setupNormalViewsIfNeeded;
- (void)_didDragWithVelocity:(struct CGPoint)arg1;
- (long long)_stateForIsSelected:(_Bool)arg1;
- (void)_setShadowAlpha:(double)arg1 transform:(struct CGAffineTransform)arg2 duration:(double)arg3;
- (void)_configureViewsForState:(long long)arg1 usesCallout:(_Bool)arg2 animated:(_Bool)arg3;
- (CDStruct_45683352)_metricsForState:(long long)arg1;
- (void)_updateStyle;
- (void)traitCollectionDidChange:(id)arg1;
- (void)prepareForSnapshotting;
- (void)_unhideForDisplay;
- (void)prepareForDisplay;
- (void)prepareForReuse;
- (long long)_currentMarkerState;
- (void)_updateContentForState:(long long)arg1 forceUpdate:(_Bool)arg2;
- (void)_updateContentForState:(long long)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(nonatomic) long long subtitleVisibility; // @dynamic subtitleVisibility;
@property(nonatomic) long long titleVisibility; // @dynamic titleVisibility;
- (void)setAnnotation:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;
- (void)layoutSublayersOfLayer:(id)arg1;
- (id)_effectiveGlyphText;
- (id)_effectiveGlyphImageForState:(long long)arg1 isSystemProvided:(_Bool *)arg2;
- (id)_effectiveGlyphTintColorForState:(long long)arg1;
- (id)_effectiveMarkerStrokeTintColorForState:(long long)arg1;
- (double)_effectiveMarkerStrokeWidthForState:(long long)arg1;
@property(retain, nonatomic) UIView *selectedContentView;
- (double)_effectiveShadowAlphaForState:(long long)arg1;
- (id)_effectiveMarkerTintColorForState:(long long)arg1;
- (_Bool)canShowCallout;
- (_Bool)_hasDataRequiringCallout;
@property(retain, nonatomic, getter=_walletMerchantStylingInfo, setter=_setWalletMerchantStylingInfo:) MKWalletMerchantStylingInfo *walletMerchantStylingInfo;

@end

