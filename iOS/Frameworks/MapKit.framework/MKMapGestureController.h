//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MapKit/MKVariableDelayTapRecognizerDelegate-Protocol.h>
#import <MapKit/UIGestureRecognizerDelegate-Protocol.h>
#import <MapKit/_MKUserInteractionGestureRecognizerTouchObserver-Protocol.h>

@class MKBasicMapView, MKCompassView, MKRotationFilter, MKScaleView, MKTiltGestureRecognizer, MKVariableDelayTapRecognizer, NSString, UIGestureRecognizer, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UITapGestureRecognizer, UITraitCollection, VKCompoundAnimation, VKDynamicAnimation, VKTimedAnimation, _MKConditionalPanRotationGestureRecognizer, _MKConditionalPanTiltGestureRecognizer, _MKConditionalPanZoomGestureRecognizer, _MKDirectionalArrowRecognizer, _MKOneHandedZoomGestureRecognizer, _MKUserInteractionGestureRecognizer, _MKZoomingGestureControlConfiguration, _UIInterruptScrollDecelerationGestureRecognizer;
@protocol MKMapGestureControllerDelegate;

__attribute__((visibility("hidden")))
@interface MKMapGestureController : NSObject <MKVariableDelayTapRecognizerDelegate, _MKUserInteractionGestureRecognizerTouchObserver, UIGestureRecognizerDelegate>
{
    MKBasicMapView *_mapView;
    id <MKMapGestureControllerDelegate> _delegate;
    MKScaleView *_scaleView;
    MKCompassView *_compassView;
    MKRotationFilter *_rotationFilter;
    _Bool _rotationSnappingEnabled;
    MKVariableDelayTapRecognizer *_doubleTapGestureRecognizer;
    UITapGestureRecognizer *_twoFingerTapGestureRecognizer;
    UILongPressGestureRecognizer *_twoFingerLongPressGestureRecognizer;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    UIPanGestureRecognizer *_panGestureRecognizer;
    _MKOneHandedZoomGestureRecognizer *_oneHandedZoomGestureRecognizer;
    _MKZoomingGestureControlConfiguration *_zoomConfiguration;
    struct CGPoint _panRotateStartPoint;
    struct CGPoint _panZoomStartPoint;
    UIPanGestureRecognizer *_scaleDragGestureRecognizer;
    _MKConditionalPanRotationGestureRecognizer *_conditionalPanRotationGestureRecognizer;
    _MKConditionalPanZoomGestureRecognizer *_conditionalPanZoomGestureRecognizer;
    _MKConditionalPanTiltGestureRecognizer *_conditionalPanTiltGestureRecognizer;
    _UIInterruptScrollDecelerationGestureRecognizer *_gestureInterruptionRecognizer;
    _MKDirectionalArrowRecognizer *_activeArrowGestureRecognizer;
    _MKDirectionalArrowRecognizer *_arrowZoomGestureRecognizer;
    _MKDirectionalArrowRecognizer *_arrowRotateGestureRecognizer;
    _MKDirectionalArrowRecognizer *_arrowPanGestureRecognizer;
    VKTimedAnimation *_currentArrowAnimation;
    double _arrowZoomSpeed;
    double _arrowZoomStartTimestamp;
    double _pinchFactorAverageInGesture;
    double _lastPinchUpdateTimestamp;
    double _lastScale;
    VKDynamicAnimation *_pinchDecelerationAnimation;
    VKCompoundAnimation *_panDecelerationAnimationGroup;
    long long _gestureCount;
    _Bool _panWithMomentum;
    _MKUserInteractionGestureRecognizer *_touchGestureRecognizer;
    UIRotationGestureRecognizer *_rotationGestureRecognizer;
    VKDynamicAnimation *_rotationDecelerationAnimation;
    MKTiltGestureRecognizer *_tiltGestureRecognizer;
    VKDynamicAnimation *_tiltDecelerationAnimation;
    _Bool _didStartLongPress;
    _Bool _isPanning;
    _Bool _isPinching;
    UITraitCollection *_traitCollection;
    double _lastZoomPanTranslation;
    struct CGPoint _scrollTranslation;
    struct CGPoint _lastArrowScrollTranslationDelta;
    _Bool _isFullRotatingFromArrows;
    double _lastRotationInGestureDelta;
    double _lastRotation;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool panWithMomentum; // @synthesize panWithMomentum=_panWithMomentum;
@property(retain, nonatomic) MKRotationFilter *rotationFilter; // @synthesize rotationFilter=_rotationFilter;
@property(retain, nonatomic) MKCompassView *compassView; // @synthesize compassView=_compassView;
@property(retain, nonatomic) MKScaleView *scaleView; // @synthesize scaleView=_scaleView;
@property(readonly, nonatomic) MKBasicMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) __weak id <MKMapGestureControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) UIRotationGestureRecognizer *rotationGestureRecognizer; // @synthesize rotationGestureRecognizer=_rotationGestureRecognizer;
@property(readonly, nonatomic) UIPanGestureRecognizer *panGestureRecognizer; // @synthesize panGestureRecognizer=_panGestureRecognizer;
@property(readonly, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinchGestureRecognizer;
@property(readonly, nonatomic) UILongPressGestureRecognizer *twoFingerLongPressGestureRecognizer; // @synthesize twoFingerLongPressGestureRecognizer=_twoFingerLongPressGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *twoFingerTapGestureRecognizer; // @synthesize twoFingerTapGestureRecognizer=_twoFingerTapGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer; // @synthesize doubleTapGestureRecognizer=_doubleTapGestureRecognizer;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)tiltGestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)handleArrowZoom:(id)arg1;
- (void)handleArrowRotate:(id)arg1;
- (void)handleArrowPan:(id)arg1;
- (void)cancelZoomInOrOut;
- (void)zoomOut;
- (void)zoomIn;
- (void)_handleInterrupt:(id)arg1;
- (void)_handleZoomPan:(id)arg1;
- (void)_handleRotationPan:(id)arg1;
- (void)handleZoomArrowMask:(long long)arg1 speed:(double)arg2;
- (double)variableDelayTapRecognizer:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;
- (void)gestureRecognizerTouchesCanceled:(id)arg1;
- (void)gestureRecognizerTouchesEnded:(id)arg1;
- (void)gestureRecognizerTouchesBegan:(id)arg1;
- (void)handleTouch:(id)arg1;
- (void)handlePan:(id)arg1;
- (struct CGPoint)_snapPointToDevicePixels:(struct CGPoint)arg1;
- (void)_updateZoomGestureForState:(long long)arg1 focusPoint:(struct CGPoint)arg2 scale:(double)arg3 velocity:(double)arg4 gestureType:(long long)arg5 configuration:(id)arg6;
- (void)handlePanZoom:(id)arg1;
- (void)handlePinch:(id)arg1;
- (void)handleTwoFingerLongPress:(id)arg1;
- (void)handleTwoFingerTap:(id)arg1;
- (void)handleDoubleTap:(id)arg1;
- (void)_updateRotationGestureForState:(long long)arg1 focusPoint:(struct CGPoint)arg2 rotation:(double)arg3 velocity:(double)arg4;
- (void)handleRotation:(id)arg1;
- (void)handleTilt:(id)arg1;
- (void)_handleStandardTilt:(id)arg1;
- (void)_setTraitCollection:(id)arg1;
- (void)clearGestureRecognizersInFlight;
- (void)_clearGesture:(id)arg1;
- (void)stopUserInteractionFromExternalGesture;
- (void)startUserInteractionFromExternalGesture;
- (void)endGesturing;
- (void)beginGesturing;
- (void)stopDynamicAnimations;
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled;
@property(nonatomic, getter=isZoomEnabled) _Bool zoomEnabled;
- (void)dealloc;
@property(nonatomic, getter=isTiltEnabled) _Bool tiltEnabled;
@property(nonatomic, getter=isRotationEnabled) _Bool rotationEnabled;
- (void)_setOneHandedZoomGestureConfiguration:(id)arg1;
@property(readonly, nonatomic) UIGestureRecognizer *oneHandedZoomGestureRecognizer;
- (id)initWithMapView:(id)arg1 gestureTargetView:(id)arg2;
- (id)initWithMapView:(id)arg1 gestureTargetView:(id)arg2 doubleTapTargetView:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

