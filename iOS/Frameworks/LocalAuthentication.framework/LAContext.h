//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <LocalAuthentication/NSSecureCoding-Protocol.h>

@class LAClient, NSData, NSNumber, NSString;
@protocol LAPrearmContextXPC, LAUIDelegate;

@interface LAContext : NSObject <NSSecureCoding>
{
    LAClient *_client;
    id <LAPrearmContextXPC> _prearmContext;
    unsigned int _instanceId;
    NSNumber *_maxBiometryFailures;
    NSData *_evaluatedPolicyDomainState;
    NSData *_externalizedContext;
    long long _biometryType;
}

+ (unsigned int)newCommandId;
+ (unsigned int)newInstanceId;
+ (_Bool)supportsSecureCoding;
+ (id)_optionsForEvent:(long long)arg1;
+ (void)notifyEvent:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)notifyEvent:(long long)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned int instanceId; // @synthesize instanceId=_instanceId;
@property(nonatomic) long long biometryType; // @synthesize biometryType=_biometryType;
@property(retain, nonatomic) NSData *externalizedContext; // @synthesize externalizedContext=_externalizedContext;
@property(retain, nonatomic) NSData *evaluatedPolicyDomainState; // @synthesize evaluatedPolicyDomainState=_evaluatedPolicyDomainState;
@property(retain, nonatomic) NSNumber *maxBiometryFailures; // @synthesize maxBiometryFailures=_maxBiometryFailures;
- (void)setOptionEventProcessing:(id)arg1;
- (id)optionEventProcessing;
@property(nonatomic) _Bool interactionNotAllowed;
- (void)setOptionSecurePassphrase:(id)arg1;
- (id)optionSecurePassphrase;
- (void)setOptionAuthenticationTitle:(id)arg1;
- (id)optionAuthenticationTitle;
@property(copy, nonatomic) NSString *localizedReason;
- (void)setOptionCheckApplePayEnabled:(id)arg1;
- (id)optionCheckApplePayEnabled;
- (void)setOptionPINLabel:(id)arg1;
- (id)optionPINLabel;
- (void)setOptionTKAuthOperationError:(id)arg1;
- (id)optionTKAuthOperationError;
- (void)setOptionBodyText:(id)arg1;
- (id)optionBodyText;
- (void)setOptionPINCharset:(id)arg1;
- (id)optionPINCharset;
- (void)setOptionPINMaxLength:(id)arg1;
- (id)optionPINMaxLength;
- (void)setOptionPINMinLength:(id)arg1;
- (id)optionPINMinLength;
- (void)setOptionMatchForUnlock:(id)arg1;
- (id)optionMatchForUnlock;
- (void)setOptionCallerIconBundlePath:(id)arg1;
- (id)optionCallerIconBundlePath;
- (void)setOptionPhysicalButtonTitle:(id)arg1;
- (id)optionPhysicalButtonTitle;
- (void)setOptionFingerMustBeOff:(id)arg1;
- (id)optionFingerMustBeOff;
- (void)setOptionNoFailureUI:(id)arg1;
- (id)optionNoFailureUI;
- (void)setOptionCallerAuditToken:(id)arg1;
- (id)optionCallerAuditToken;
- (void)setOptionFaceDetectLength:(id)arg1;
- (id)optionFaceDetectLength;
- (void)setOptionPasscodeScreenBlur:(id)arg1;
- (id)optionPasscodeScreenBlur;
- (void)setOptionPasscodeScreenStyle:(id)arg1;
- (id)optionPasscodeScreenStyle;
- (void)setOptionPasswordAuthenticationReason:(id)arg1;
- (id)optionPasswordAuthenticationReason;
- (void)setOptionSoftwareUpdateStashMode:(id)arg1;
- (id)optionSoftwareUpdateStashMode;
- (void)setOptionSoftwareUpdateManifest:(id)arg1;
- (id)optionSoftwareUpdateManifest;
- (void)setOptionBiometryLockoutRecovery:(id)arg1;
- (id)optionBiometryLockoutRecovery;
- (void)setOptionTintColor:(id)arg1;
- (id)optionTintColor;
- (void)setOptionUserCancel:(id)arg1;
- (id)optionUserCancel;
- (void)setOptionSharedValidity:(id)arg1;
- (id)optionSharedValidity;
- (void)setOptionPINFirst:(id)arg1;
- (id)optionPINFirst;
- (void)setOptionPINLength:(id)arg1;
- (id)optionPINLength;
- (void)setOptionPINTitle:(id)arg1;
- (id)optionPINTitle;
- (void)setOptionPasscodeTitle:(id)arg1;
- (id)optionPasscodeTitle;
- (void)setOptionFallbackVisible:(id)arg1;
- (id)optionFallbackVisible;
- (void)setOptionCancelVisible:(id)arg1;
- (id)optionCancelVisible;
- (void)setOptionReturnBiometryDatabaseHash:(id)arg1;
- (id)optionReturnBiometryDatabaseHash;
- (void)setOptionTransitionStyle:(id)arg1;
- (id)optionTransitionStyle;
- (void)setOptionPresentationStyle:(id)arg1;
- (id)optionPresentationStyle;
- (void)setOptionMaxBiometryFailures:(id)arg1;
- (id)optionMaxBiometryFailures;
- (void)setOptionAuthenticationReason:(id)arg1;
- (id)optionAuthenticationReason;
- (void)setOptionUserFallback:(id)arg1;
- (id)optionUserFallback;
- (void)setOptionCallerPID:(id)arg1;
- (id)optionCallerPID;
- (void)setOptionCallerName:(id)arg1;
- (id)optionCallerName;
- (void)setOptionTimeout:(id)arg1;
- (id)optionTimeout;
- (void)setOptionNotInteractive:(id)arg1;
- (id)optionNotInteractive;
- (void)bootstrapServiceType:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(nonatomic) __weak id <LAUIDelegate> uiDelegate;
- (id)uuid;
@property(nonatomic) double touchIDAuthenticationAllowableReuseDuration;
@property(retain, nonatomic) NSNumber *touchIDAuthenticationRetryLimit;
@property(copy, nonatomic) NSString *localizedCancelTitle;
@property(copy, nonatomic) NSString *localizedFallbackTitle;
- (void)_setServerPropertyForOption:(long long)arg1 value:(id)arg2 log:(long long)arg3;
- (void)_setServerPropertyForOption:(long long)arg1 value:(id)arg2;
- (id)_serverPropertyValueForOption:(long long)arg1 log:(long long)arg2;
- (id)_serverPropertyValueForOption:(long long)arg1;
- (_Bool)checkContextValidWithError:(id *)arg1;
- (void)setShowingCoachingHint:(_Bool)arg1 event:(long long)arg2 reply:(CDUnknownBlockType)arg3;
- (void)authMethodWithReply:(CDUnknownBlockType)arg1;
- (void)resetWithReply:(CDUnknownBlockType)arg1;
- (void)prearmTouchIDWithReply:(CDUnknownBlockType)arg1;
- (void)optionsForInternalOperation:(long long)arg1 reply:(CDUnknownBlockType)arg2;
- (void)setOptions:(id)arg1 forInternalOperation:(long long)arg2 reply:(CDUnknownBlockType)arg3;
- (_Bool)isCredentialSet:(long long)arg1;
- (id)credentialOfType:(long long)arg1 error:(id *)arg2;
- (void)credentialOfType:(long long)arg1 reply:(CDUnknownBlockType)arg2;
- (void)_setCredential:(id)arg1 type:(long long)arg2 log:(long long)arg3 cid:(unsigned int)arg4 reply:(CDUnknownBlockType)arg5;
- (void)setCredential:(id)arg1 type:(long long)arg2 reply:(CDUnknownBlockType)arg3;
- (_Bool)_setCredential:(id)arg1 type:(long long)arg2 log:(long long)arg3 cid:(unsigned int)arg4 error:(id *)arg5;
- (_Bool)setCredential:(id)arg1 type:(long long)arg2 error:(id *)arg3;
- (_Bool)setCredential:(id)arg1 type:(long long)arg2;
- (id)evaluateAccessControl:(struct __SecAccessControl *)arg1 aksOperation:(void *)arg2 options:(id)arg3 error:(id *)arg4;
- (id)evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(long long)arg2 options:(id)arg3 error:(id *)arg4;
- (void)evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(long long)arg2 localizedReason:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)_evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(id)arg2 options:(id)arg3 log:(long long)arg4 cid:(unsigned int)arg5 reply:(CDUnknownBlockType)arg6;
- (void)evaluateAccessControl:(struct __SecAccessControl *)arg1 aksOperation:(void *)arg2 options:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(long long)arg2 options:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)setCredential:(id)arg1 forProcessedEvent:(long long)arg2 credentialType:(long long)arg3 reply:(CDUnknownBlockType)arg4;
- (void)pauseProcessedEvent:(long long)arg1 pause:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;
- (void)resetProcessedEvent:(long long)arg1 reply:(CDUnknownBlockType)arg2;
- (void)retryProcessedEvent:(long long)arg1 reply:(CDUnknownBlockType)arg2;
- (void)failProcessedEvent:(long long)arg1 failureError:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (_Bool)canEvaluatePolicy:(long long)arg1 error:(id *)arg2;
- (id)evaluationMechanismsForAccessControl:(struct __SecAccessControl *)arg1 operation:(long long)arg2 error:(id *)arg3;
- (id)evaluationMechanismsForPolicy:(long long)arg1 error:(id *)arg2;
- (id)_evaluationMechanismsFromReturnedError:(id)arg1 error:(id *)arg2;
- (void)evaluatePolicy:(long long)arg1 localizedReason:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (id)_publicErrorFromInternalError:(id)arg1 options:(id)arg2;
- (id)_evaluatePolicy:(long long)arg1 options:(id)arg2 log:(long long)arg3 cid:(unsigned int)arg4 error:(id *)arg5;
- (id)evaluatePolicy:(long long)arg1 options:(id)arg2 error:(id *)arg3;
- (id)_hashWithBundleIdentifier:(id)arg1;
- (void)_evaluatePolicy:(long long)arg1 options:(id)arg2 log:(long long)arg3 cid:(unsigned int)arg4 reply:(CDUnknownBlockType)arg5;
- (void)evaluatePolicy:(long long)arg1 options:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)invalidate;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithExternalizedContext:(id)arg1 uiDelegate:(id)arg2;
- (id)initWithUIDelegate:(id)arg1;
- (id)initWithExternalizedContext:(id)arg1 userSession:(unsigned int *)arg2;
- (id)initWithExternalizedContext:(id)arg1;
- (id)init;

@end

