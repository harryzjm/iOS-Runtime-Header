//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <EventKit/NSCopying-Protocol.h>

@class EKCalendarEventInvitationNotificationAttendee, EKRecurrenceRule, NSArray, NSDate, NSString, NSTimeZone;

@interface EKCalendarEventInvitationNotification <NSCopying>
{
    _Bool _allDay;
    _Bool _timeChanged;
    _Bool _dateChanged;
    _Bool _titleChanged;
    _Bool _locationChanged;
    _Bool _videoConferenceChanged;
    _Bool _attendeeReplyChanged;
    _Bool _isLocationDecline;
    _Bool _expanded;
    _Bool _isForReReply;
    NSString *_location;
    NSDate *_startDate;
    NSDate *_startDateForNextOccurrence;
    NSDate *_endDate;
    NSDate *_participationStatusModifiedDate;
    NSTimeZone *_timeZone;
    long long _participationStatus;
    long long _status;
    EKRecurrenceRule *_recurrenceRule;
    NSArray *_attendees;
    EKCalendarEventInvitationNotificationAttendee *_owner;
    NSString *_invitedBy;
    EKCalendarEventInvitationNotificationAttendee *_expandedProposedTimeAttendee;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool isForReReply; // @synthesize isForReReply=_isForReReply;
@property(nonatomic) _Bool expanded; // @synthesize expanded=_expanded;
@property(retain, nonatomic) EKCalendarEventInvitationNotificationAttendee *expandedProposedTimeAttendee; // @synthesize expandedProposedTimeAttendee=_expandedProposedTimeAttendee;
@property(nonatomic) _Bool isLocationDecline; // @synthesize isLocationDecline=_isLocationDecline;
@property(readonly, nonatomic) NSString *invitedBy; // @synthesize invitedBy=_invitedBy;
@property(retain, nonatomic) EKCalendarEventInvitationNotificationAttendee *owner; // @synthesize owner=_owner;
@property(retain, nonatomic) NSArray *attendees; // @synthesize attendees=_attendees;
@property(nonatomic) _Bool attendeeReplyChanged; // @synthesize attendeeReplyChanged=_attendeeReplyChanged;
@property(nonatomic) _Bool videoConferenceChanged; // @synthesize videoConferenceChanged=_videoConferenceChanged;
@property(nonatomic) _Bool locationChanged; // @synthesize locationChanged=_locationChanged;
@property(nonatomic) _Bool titleChanged; // @synthesize titleChanged=_titleChanged;
@property(nonatomic) _Bool dateChanged; // @synthesize dateChanged=_dateChanged;
@property(nonatomic) _Bool timeChanged; // @synthesize timeChanged=_timeChanged;
@property(retain, nonatomic) EKRecurrenceRule *recurrenceRule; // @synthesize recurrenceRule=_recurrenceRule;
@property(nonatomic, getter=isAllDay) _Bool allDay; // @synthesize allDay=_allDay;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(nonatomic) long long participationStatus; // @synthesize participationStatus=_participationStatus;
@property(retain, nonatomic) NSTimeZone *timeZone; // @synthesize timeZone=_timeZone;
@property(retain, nonatomic) NSDate *participationStatusModifiedDate; // @synthesize participationStatusModifiedDate=_participationStatusModifiedDate;
@property(retain, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property(retain, nonatomic) NSDate *startDateForNextOccurrence; // @synthesize startDateForNextOccurrence=_startDateForNextOccurrence;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(retain, nonatomic) NSString *location; // @synthesize location=_location;
- (_Bool)acknowledgeWithEventStore:(id)arg1 error:(id *)arg2;
- (_Bool)proposedStartDateIsInFutureForAttendee:(id)arg1;
- (id)nearestProposedTime;
- (_Bool)isProposedNewTime;
- (_Bool)needsReply;
- (_Bool)isInvitation;
- (_Bool)hasRecurrenceRules;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)eventFromEventStore:(id)arg1;
- (id)initWithEvent:(id)arg1;

// Remaining properties
@property(nonatomic) _Bool couldBeJunk; // @dynamic couldBeJunk;

@end

