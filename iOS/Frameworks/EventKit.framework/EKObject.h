//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <EventKit/EKFrozenMeltedPair-Protocol.h>
#import <EventKit/EKProtocolMutableObject-Protocol.h>

@class CADGenerationStampedObjectID, EKChangeSet, EKEventStore, EKObjectValidationContext, EKPersistentObject, NSDictionary, NSMutableDictionary, NSString;

@interface EKObject : NSObject <EKFrozenMeltedPair, EKProtocolMutableObject>
{
    EKPersistentObject *_persistentObject;
    EKChangeSet *_changeSet;
    NSMutableDictionary *__cachedMeltedObjects;
    NSDictionary *_additionalFrozenProperties;
    NSMutableDictionary *__cachedValues;
    EKObjectValidationContext *__validationContext;
}

+ (id)_arrayIntersectingArray:(id)arg1 withSet:(id)arg2;
+ (id)propertiesUnavailableForPartialObjects;
+ (Class)frozenClass;
+ (Class)meltedClass;
+ (_Bool)_objects:(id)arg1 haveSameMeltedClass:(Class)arg2 frozenClass:(Class)arg3;
+ (_Bool)_compareRelationshipObject1:(id)arg1 againstRelationshipObject2:(id)arg2 propertiesToIgnore:(id)arg3;
+ (_Bool)_compareMutliValueRelationshipKey:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;
+ (_Bool)_compareMultiValueRelationshipKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;
+ (_Bool)_compareSingleValueRelationshipKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;
+ (_Bool)_compareIdentityKeysForObject:(id)arg1 againstObject:(id)arg2 propertiesToIgnore:(id)arg3;
+ (_Bool)_compareNonIdentityKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareImmutableKeys:(_Bool)arg4 propertiesToIgnore:(id)arg5;
+ (_Bool)_compareKnownKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareIdentityKeys:(_Bool)arg4 compareImmutableKeys:(_Bool)arg5 propertiesToIgnore:(id)arg6;
+ (_Bool)_compareKnownKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareImmutableKeys:(_Bool)arg4 propertiesToIgnore:(id)arg5;
+ (_Bool)_object:(id)arg1 equalsObject:(id)arg2 forKeys:(id)arg3 compareImmutableKeys:(_Bool)arg4 ignoringProperties:(id)arg5;
+ (id)EKObjectChangeSummarizer_multiValueDiffKeys;
+ (id)EKObjectChangeSummarizer_singleValueDiffKeys;
+ (_Bool)canonicalizedEqualityTestValue1:(id)arg1 value2:(id)arg2 key:(id)arg3 object1:(id)arg4 object2:(id)arg5;
+ (_Bool)_compareRelationshipObject1:(id)arg1 againstRelationshipObject2:(id)arg2 propertiesToIgnore:(id)arg3 relationshipObjectKey:(id)arg4;
+ (_Bool)_compareIdentityKeysForObject:(id)arg1 againstObject:(id)arg2 propertiesToIgnore:(id)arg3;
+ (_Bool)_compareSingleValueRelationshipKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;
+ (_Bool)_compareSingleValueRelationshipKey:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;
+ (_Bool)_compareNonRelationshipKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;
+ (_Bool)_compareNonIdentityKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareImmutableKeys:(_Bool)arg4 propertiesToIgnore:(id)arg5;
+ (_Bool)_compareNonIdentityKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;
+ (_Bool)_compareMultiValueRelationshipKey:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;
+ (_Bool)_compareMultiValueRelationshipKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;
+ (_Bool)_compareKnownKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareImmutableKeys:(_Bool)arg4 propertiesToIgnore:(id)arg5;
+ (_Bool)_compareKnownKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareIdentityKeys:(_Bool)arg4 compareImmutableKeys:(_Bool)arg5 propertiesToIgnore:(id)arg6;
+ (_Bool)_compareKnownKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3;
+ (_Bool)_compareAllKnownKeysExceptKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareIdentityKeys:(_Bool)arg4;
+ (_Bool)_compareAllKnownKeysExceptKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3;
+ (id)_changeSetForDiff:(id)arg1;
+ (void)_addChangesFromObject:(id)arg1 toObjects:(id)arg2 except:(id)arg3 keep:(id)arg4 copyingBackingObjects:(_Bool)arg5;
+ (void)addChangesFromObject:(id)arg1 toObjects:(id)arg2 keep:(id)arg3;
+ (void)addChangesFromObject:(id)arg1 toObjects:(id)arg2 except:(id)arg3;
+ (_Bool)isWeakRelationObject:(id)arg1 forKey:(id)arg2;
+ (_Bool)isMeltedAndNotWeakRelationshipObject:(id)arg1 forKey:(id)arg2;
+ (id)knownSingleValueKeysForComparison;
+ (id)knownSummaryKeys;
+ (id)knownIdentityKeysForComparison;
+ (id)knownImmutableKeys;
+ (id)knownDerivedRelationshipKeys;
+ (id)knownRelationshipWeakKeys;
+ (id)knownRelationshipMultiValueKeysForValidation;
+ (id)knownRelationshipMultiValueKeys;
+ (id)knownDerivedAndSingleValueRelationshipKeys;
+ (id)knownRelationshipSingleValueKeysForValidation;
+ (id)knownRelationshipSingleValueKeys;
+ (_Bool)isDerivedRelationship;
+ (_Bool)isWeakRelationship;
+ (unsigned long long)_numberOfSharedLocksForUnitTesting;
- (void).cxx_destruct;
@property(retain, nonatomic) EKObjectValidationContext *_validationContext; // @synthesize _validationContext=__validationContext;
@property(retain, nonatomic) NSMutableDictionary *_cachedValues; // @synthesize _cachedValues=__cachedValues;
@property(retain, nonatomic) NSDictionary *additionalFrozenProperties; // @synthesize additionalFrozenProperties=_additionalFrozenProperties;
@property(retain, nonatomic) NSMutableDictionary *_cachedMeltedObjects; // @synthesize _cachedMeltedObjects=__cachedMeltedObjects;
@property(retain, nonatomic) EKChangeSet *changeSet; // @synthesize changeSet=_changeSet;
@property(retain, nonatomic) EKPersistentObject *persistentObject; // @synthesize persistentObject=_persistentObject;
- (void)addCoCommitObject:(id)arg1;
- (void)deletePersistentObject;
- (void)updatePersistentObjectSkippingProperties:(id)arg1;
- (void)updatePersistentObject;
- (void)insertPersistentObjectIfNeeded;
- (id)_propertyValueForKey:(id)arg1;
- (void)_updatePersistentValueForKey:(id)arg1;
- (void)updatePersistentValueForKeyIfNeeded:(id)arg1;
- (void)_performBlockOnOwnedCachedRelatedObjects:(CDUnknownBlockType)arg1;
- (void)markAsCommitted;
- (void)markAsSaved;
- (void)markAsUndeleted;
- (void)markAsDeleted;
- (void)markAsNotNew;
- (void)markAsNew;
- (id)committedValueForKey:(id)arg1;
- (_Bool)refreshAndNotify:(_Bool)arg1;
- (_Bool)refresh;
- (_Bool)_reset;
- (void)reset;
- (void)rollback;
- (id)_recursiveSnapshotCopyWithPropertyAccessor:(CDUnknownBlockType)arg1 propertyKeysToCopy:(id)arg2 recurseOnWeakRelations:(_Bool)arg3;
- (id)previouslySavedCopy;
- (id)snapshotCopyWithPropertyKeysToCopy:(id)arg1;
- (id)snapshotCopy;
- (id)committedCopy;
- (id)duplicateToEventStore:(id)arg1;
- (id)duplicate;
- (id)_copyWithoutChangesInZone:(struct _NSZone *)arg1;
- (id)shallowCopyWithoutChanges;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)existsInStore;
- (int)rowID;
@property(readonly, nonatomic) CADGenerationStampedObjectID *CADObjectID;
- (id)objectID;
@property(retain, nonatomic) EKEventStore *eventStore;
- (void)rebaseSkippingRelationProperties:(id)arg1 toEventStore:(id)arg2;
- (void)rebaseSkippingRelationProperties:(id)arg1;
- (void)rebaseToEventStore:(id)arg1;
- (void)rebase;
@property(readonly, nonatomic) _Bool isPartialObject;
- (Class)frozenClass;
- (_Bool)isPropertyUnavailable:(id)arg1;
@property(readonly, nonatomic) NSDictionary *preFrozenRelationshipObjects;
@property(readonly, nonatomic) _Bool canBeConvertedToFullObject;
@property(readonly, nonatomic) _Bool isFrozen;
- (id)existingMeltedObject;
- (id)meltedObjectInStore:(id)arg1;
- (_Bool)isEqual:(id)arg1 comparingKeys:(id)arg2 compareImmutableKeys:(_Bool)arg3 ignoringProperties:(id)arg4;
- (_Bool)isEqual:(id)arg1 ignoringProperties:(id)arg2;
- (_Bool)isCompletelyEqual:(id)arg1;
- (id)frozenObject;
- (id)initWithObject:(id)arg1;
- (_Bool)isDifferentFromCommitted;
@property(readonly, nonatomic) _Bool hasChanges;
@property(readonly, nonatomic, getter=isNew) _Bool new;
@property(readonly, nonatomic) NSString *semanticIdentifier;
@property(readonly, nonatomic) NSString *uniqueIdentifier;
- (_Bool)_isPropertyUnavailable:(id)arg1 convertToFullObjectIfUnavailable:(_Bool)arg2;
@property(retain, nonatomic) EKPersistentObject *backingObject;
- (id)initWithObjectForCopy:(id)arg1;
- (id)initWithPersistentObject:(id)arg1;
- (id)init;
- (void)_addSummaryWithDepth:(long long)arg1 toMutableString:(id)arg2 indentFirstLine:(_Bool)arg3;
- (id)_summaryWithDepth:(long long)arg1;
- (id)_basicSummaryWithDepth:(long long)arg1;
- (void)_cachedMeltedChildIdentifierToParentMap:(id)arg1;
- (id)cachedMeltedChildIdentifierToParentMap;
- (id)prepareReminderKitObjectForSaveWithUpdatedBackingObjectProvider:(id)arg1;
- (id)backingObjectOfChildObject:(id)arg1 withRelationshipKey:(id)arg2;
- (id)_convertBackingObjectsWithPath:(id)arg1 updateBackingObjects:(_Bool)arg2 allChangedBackingObjects:(id)arg3 eventStore:(id)arg4 updatedBackingObjectProvider:(id)arg5;
- (id)privacyDescription;
@property(readonly, nonatomic) NSString *specificIdentifier;
- (void)applyChangeSetFromOtherObject:(id)arg1;
- (id)inverseObjectWithObject:(id)arg1 diff:(id *)arg2;
- (id)diffWithObject:(id)arg1;
- (void)emptyMeltedCacheForKeys:(id)arg1;
- (void)emptyMeltedCacheForKey:(id)arg1;
- (void)emptyMeltedCache;
- (void)_resetMeltedCache;
- (void)_resetInternalState;
- (void)_resetAfterUpdatingChangeSetOrBackingObject;
- (void)updateMultiValueCacheForChangeSet:(id)arg1 preservingExistingAdds:(_Bool)arg2;
- (void)updateMeltedCacheForChangeSet:(id)arg1;
- (void)updateAfterApplyingChanges:(id)arg1;
- (unsigned long long)meltedAndCachedMultiRelationCountForKey:(id)arg1;
- (void)updateMeltedAndCachedMultiRelationObjects:(id)arg1 forKey:(id)arg2;
- (id)meltedAndCachedMultiRelationObjectsForKey:(id)arg1;
- (void)updateMeltedAndCachedSingleRelationObject:(id)arg1 forKey:(id)arg2 frozenClass:(Class)arg3;
- (id)meltedAndCachedSingleRelationObjectForKey:(id)arg1;
- (id)frozenOrMeltedCachedMultiRelationObjectsForKey:(id)arg1;
- (id)frozenOrMeltedCachedSingleRelationObjectForKey:(id)arg1;
- (id)cachedMeltedObjectForSingleValueKey:(id)arg1;
- (void)setCachedMeltedObject:(id)arg1 forSingleValueKey:(id)arg2;
- (id)cachedMeltedObjectsForMultiValueKey:(id)arg1;
- (void)setCachedMeltedObjects:(id)arg1 forMultiValueKey:(id)arg2;
- (void)_removeCachedMeltedObject:(id)arg1 forMultiValueKey:(id)arg2;
- (void)removeCachedMeltedObject:(id)arg1 forMultiValueKey:(id)arg2;
- (void)_addCachedMeltedObject:(id)arg1 forMultiValueKey:(id)arg2;
- (void)addCachedMeltedObject:(id)arg1 forMultiValueKey:(id)arg2;
- (void)_updateCachedMeltedObjectSetForMultiValueKey:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)_cachedMeltedObjectsCount;
- (void)_applyKnownImmutableValuesFrom:(id)arg1;
- (void)_applyDefinedAfterFirstSaveFrom:(id)arg1;
- (void)_resetWithFrozenObject:(id)arg1;
- (_Bool)revert;
- (void)refetch;
- (_Bool)_refreshCommon;
- (_Bool)_refreshable;
- (_Bool)_resetCommon;
- (_Bool)_resetIfBackingObjectIsOfClass:(Class)arg1 fetchResetFrozenObjectBlock:(CDUnknownBlockType)arg2;
- (void)_rollbackCommon;
- (id)changedKeys;
- (void)replaceMultiChangedObjectValuesWithObjectValues:(id)arg1 forKey:(id)arg2;
- (void)removeMultiChangedObjectValues:(id)arg1 forKey:(id)arg2;
- (void)removeMultiChangedObjectValue:(id)arg1 forKey:(id)arg2;
- (void)addMultiChangedObjectValues:(id)arg1 forKey:(id)arg2;
- (void)addMultiChangedObjectValue:(id)arg1 forKey:(id)arg2;
- (id)multiChangedObjectValuesForKey:(id)arg1;
- (void)setSingleChangedValue:(id)arg1 forKey:(id)arg2;
- (id)singleChangedValueForKey:(id)arg1;
- (void)applyChanges:(id)arg1;
- (void)_addChanges:(id)arg1 copyingBackingObjects:(_Bool)arg2;
- (void)addChanges:(id)arg1;
- (void)_addChangesFromObject:(id)arg1 except:(id)arg2 keep:(id)arg3 ignoreRelations:(id)arg4 copyingBackingObjects:(_Bool)arg5;
- (void)addChangesFromObject:(id)arg1 copyingBackingObjects:(_Bool)arg2;
- (void)addChangesFromObject:(id)arg1;
- (id)_previousValueForKey:(id)arg1;
- (_Bool)_areOnlyChangedKeys:(id)arg1;
- (_Bool)_isOnlyChangedKey:(id)arg1;
- (_Bool)_hasChangesForKey:(id)arg1 checkUnsaved:(_Bool)arg2;
- (_Bool)_hasChangesForKey:(id)arg1;
- (id)_multiRelationshipKeysToCheckForChanges;
- (id)_singleRelationshipKeysToCheckForChanges;
- (_Bool)_hasChangeHelperInKeys:(id)arg1 ignoreKeys:(id)arg2 checkUnsaved:(_Bool)arg3;
- (_Bool)_hasUnsavedChangesInKeys:(id)arg1 ignoreKeys:(id)arg2;
- (_Bool)hasUnsavedChangesIgnoreKeys:(id)arg1;
- (_Bool)hasUnsavedChangesInKeys:(id)arg1;
- (_Bool)hasUnsavedChanges;
- (_Bool)_hasChanges;
- (_Bool)isSaved;
- (_Bool)isUndeleted;
- (_Bool)isDeleted;
- (_Bool)_isNew;
- (void)_markAsCommittedCommon;
- (void)_markAsSavedCommon;
- (void)_markAsUndeletedCommon;
- (void)_markAsDeletedCommon;
- (void)_markAsNotNewCommon;
- (void)_markAsNewCommon;
- (void)_initChangeSetIfNone;
- (_Bool)validateWithOwner:(id)arg1 error:(id *)arg2;
- (_Bool)validate:(id *)arg1;
- (id)cachedValueForKey:(id)arg1 expectingCachedValue:(id)arg2 forMasterKey:(id)arg3 relatedKeys:(id)arg4 populateBlock:(CDUnknownBlockType)arg5;
- (void)clearCachedValuesForKeys:(id)arg1;
- (void)clearCachedValueForKey:(id)arg1;
- (void)setCachedValue:(id)arg1 forKey:(id)arg2;
- (id)cachedValueForKey:(id)arg1 populateBlock:(CDUnknownBlockType)arg2;
- (id)cachedValueForKey:(id)arg1;
- (void)_performWithWriteLock:(CDUnknownBlockType)arg1;
- (void)_performWithReadLock:(CDUnknownBlockType)arg1;
- (id)_readWriteLock;
- (void)_sharedInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

