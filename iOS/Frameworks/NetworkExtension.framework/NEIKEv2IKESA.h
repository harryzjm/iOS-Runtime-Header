//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NEIKEv2AuthenticationProtocol, NEIKEv2ConfigurationMessage, NEIKEv2DHProtocol, NEIKEv2EAP, NEIKEv2IKESAConfiguration, NEIKEv2IKESAProposal, NEIKEv2IKESPI, NEIKEv2Identifier, NEIKEv2SessionConfiguration, NEIKEv2Transport, NSArray, NSData, NSError, NSMutableData, NSString, NWAddressEndpoint;
@protocol NEIKEv2ConfigurationDelegate, NEIKEv2PacketDelegate, NEIKEv2TransportDelegate, OS_dispatch_queue;

@interface NEIKEv2IKESA : NSObject
{
    CDUnion_07c5b791 _dhECKey;
    _Bool _shouldSendStateUpdate;
    _Bool _isInitiator;
    _Bool _fragmentationSupported;
    _Bool _mobikeSupported;
    _Bool _useNATTraversal;
    _Bool _useTCPEncapsulation;
    _Bool _detectedOutgoingNAT;
    _Bool _detectedIncomingNAT;
    _Bool _isRekeying;
    _Bool _eapInProgress;
    _Bool _peerAuthenticated;
    _Bool _reportShortDPD;
    _Bool _usesPacketDelegate;
    unsigned short _shortDPDCounter;
    NEIKEv2IKESPI *_localSPI;
    NEIKEv2IKESPI *_remoteSPI;
    unsigned long long _state;
    NSError *_error;
    NWAddressEndpoint *_localAddress;
    NWAddressEndpoint *_remoteAddress;
    NEIKEv2IKESAConfiguration *_configuration;
    NEIKEv2SessionConfiguration *_sessionConfiguration;
    NEIKEv2IKESAProposal *_chosenProposal;
    double _lastReceivedDPD;
    NSData *_localNonce;
    NSData *_remoteNonce;
    struct NSMutableData *_dhPublicKey;
    NSData *_dhRemotePublicKey;
    struct OpaqueSecDHContext *_dhContext;
    unsigned long long _dhPublicKeySize;
    NEIKEv2DHProtocol *_remotePreferredDHProtocol;
    struct NSMutableData *_sKeySeed;
    struct NSMutableData *_skD;
    struct NSMutableData *_skAi;
    struct NSMutableData *_skAr;
    struct NSMutableData *_skEi;
    struct NSMutableData *_skEr;
    struct NSMutableData *_skPi;
    struct NSMutableData *_skPr;
    struct NSMutableData *_encryptCryptoCtx;
    struct NSMutableData *_localCertificateIdentity;
    struct NSMutableData *_digitalSignatureLocalPrivateKey;
    struct NSMutableData *_digitalSignatureLocalPublicKey;
    struct NSMutableData *_digitalSignatureRemotePublicKey;
    NSData *_cookie;
    NSData *_responderCookie2;
    NSData *_initiatorCookie2;
    NSData *_signHashData;
    NSString *_outgoingInterfaceName;
    NSData *_localFirstMessage;
    NSData *_remoteFirstMessage;
    NEIKEv2Identifier *_localIdentifierFromPacket;
    NEIKEv2Identifier *_remoteIdentifierFromPacket;
    unsigned long long _childSAModeFromPacket;
    NSArray *_childSAProposalsFromPacket;
    NEIKEv2AuthenticationProtocol *_authProtocolFromPacket;
    NSData *_authenticationDataFromPacket;
    NEIKEv2ConfigurationMessage *_configMessageFromPacket;
    NSArray *_initiatorTrafficSelectorsFromPacket;
    NSArray *_responderTrafficSelectorsFromPacket;
    NEIKEv2EAP *_eapClient;
    NEIKEv2Transport *_transport;
    NEIKEv2Transport *_natTransport;
    NEIKEv2Transport *_tcpTransport;
    NEIKEv2ConfigurationMessage *_activeConfiguration;
    NSData *_receivedDestinationHash;
    NEIKEv2Identifier *_internalRemoteIdentifier;
    struct NSMutableData *_fetchedPassword;
    struct NSMutableData *_fetchedSharedSecret;
    NSObject<OS_dispatch_queue> *_queue;
    id <NEIKEv2TransportDelegate> _transportDelegate;
    CDUnknownBlockType _socketGetBlock;
    id <NEIKEv2PacketDelegate> _packetDelegate;
    id <NEIKEv2ConfigurationDelegate> _configurationDelegate;
    unsigned long long _ikeSessionUniqueIndex;
    unsigned long long _ikeSAUniqueIndex;
}

+ (struct NSMutableData *)copySharedSecretFromConfig:(id)arg1;
+ (_Bool)checkValidityOfDigitalSignature:(id)arg1 authenticationProtocol:(id)arg2 sessionConfiguration:(id)arg3 remoteSignedOctets:(struct NSMutableData *)arg4;
+ (_Bool)checkValidityOfDigitalSignature:(id)arg1 sessionConfiguration:(id)arg2 remoteSignedOctets:(struct NSMutableData *)arg3;
+ (struct NSMutableData *)createAuthenticationDataForSharedSecret:(id)arg1 octets:(id)arg2 prfProtocol:(id)arg3;
@property(nonatomic) unsigned long long ikeSAUniqueIndex; // @synthesize ikeSAUniqueIndex=_ikeSAUniqueIndex;
@property(nonatomic) unsigned long long ikeSessionUniqueIndex; // @synthesize ikeSessionUniqueIndex=_ikeSessionUniqueIndex;
@property __weak id <NEIKEv2ConfigurationDelegate> configurationDelegate; // @synthesize configurationDelegate=_configurationDelegate;
@property __weak id <NEIKEv2PacketDelegate> packetDelegate; // @synthesize packetDelegate=_packetDelegate;
@property _Bool usesPacketDelegate; // @synthesize usesPacketDelegate=_usesPacketDelegate;
@property(copy) CDUnknownBlockType socketGetBlock; // @synthesize socketGetBlock=_socketGetBlock;
@property __weak id <NEIKEv2TransportDelegate> transportDelegate; // @synthesize transportDelegate=_transportDelegate;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) NSMutableData *fetchedSharedSecret; // @synthesize fetchedSharedSecret=_fetchedSharedSecret;
@property(retain) NSMutableData *fetchedPassword; // @synthesize fetchedPassword=_fetchedPassword;
@property(retain) NEIKEv2Identifier *internalRemoteIdentifier; // @synthesize internalRemoteIdentifier=_internalRemoteIdentifier;
@property(retain) NSData *receivedDestinationHash; // @synthesize receivedDestinationHash=_receivedDestinationHash;
@property(retain) NEIKEv2ConfigurationMessage *activeConfiguration; // @synthesize activeConfiguration=_activeConfiguration;
@property(retain) NEIKEv2Transport *tcpTransport; // @synthesize tcpTransport=_tcpTransport;
@property(retain) NEIKEv2Transport *natTransport; // @synthesize natTransport=_natTransport;
@property(retain) NEIKEv2Transport *transport; // @synthesize transport=_transport;
@property(retain) NEIKEv2EAP *eapClient; // @synthesize eapClient=_eapClient;
@property(retain, nonatomic) NSArray *responderTrafficSelectorsFromPacket; // @synthesize responderTrafficSelectorsFromPacket=_responderTrafficSelectorsFromPacket;
@property(retain, nonatomic) NSArray *initiatorTrafficSelectorsFromPacket; // @synthesize initiatorTrafficSelectorsFromPacket=_initiatorTrafficSelectorsFromPacket;
@property(retain, nonatomic) NEIKEv2ConfigurationMessage *configMessageFromPacket; // @synthesize configMessageFromPacket=_configMessageFromPacket;
@property(retain, nonatomic) NSData *authenticationDataFromPacket; // @synthesize authenticationDataFromPacket=_authenticationDataFromPacket;
@property(retain, nonatomic) NEIKEv2AuthenticationProtocol *authProtocolFromPacket; // @synthesize authProtocolFromPacket=_authProtocolFromPacket;
@property(retain, nonatomic) NSArray *childSAProposalsFromPacket; // @synthesize childSAProposalsFromPacket=_childSAProposalsFromPacket;
@property(nonatomic) unsigned long long childSAModeFromPacket; // @synthesize childSAModeFromPacket=_childSAModeFromPacket;
@property(retain, nonatomic) NEIKEv2Identifier *remoteIdentifierFromPacket; // @synthesize remoteIdentifierFromPacket=_remoteIdentifierFromPacket;
@property(retain, nonatomic) NEIKEv2Identifier *localIdentifierFromPacket; // @synthesize localIdentifierFromPacket=_localIdentifierFromPacket;
@property(retain) NSData *remoteFirstMessage; // @synthesize remoteFirstMessage=_remoteFirstMessage;
@property(retain) NSData *localFirstMessage; // @synthesize localFirstMessage=_localFirstMessage;
@property(retain) NSString *outgoingInterfaceName; // @synthesize outgoingInterfaceName=_outgoingInterfaceName;
@property(retain) NSData *signHashData; // @synthesize signHashData=_signHashData;
@property(retain) NSData *initiatorCookie2; // @synthesize initiatorCookie2=_initiatorCookie2;
@property(retain) NSData *responderCookie2; // @synthesize responderCookie2=_responderCookie2;
@property(retain) NSData *cookie; // @synthesize cookie=_cookie;
@property(retain) NSMutableData *digitalSignatureRemotePublicKey; // @synthesize digitalSignatureRemotePublicKey=_digitalSignatureRemotePublicKey;
@property(retain) NSMutableData *digitalSignatureLocalPublicKey; // @synthesize digitalSignatureLocalPublicKey=_digitalSignatureLocalPublicKey;
@property(retain) NSMutableData *digitalSignatureLocalPrivateKey; // @synthesize digitalSignatureLocalPrivateKey=_digitalSignatureLocalPrivateKey;
@property(retain) NSMutableData *localCertificateIdentity; // @synthesize localCertificateIdentity=_localCertificateIdentity;
@property(retain) NSMutableData *encryptCryptoCtx; // @synthesize encryptCryptoCtx=_encryptCryptoCtx;
@property(retain) NSMutableData *skPr; // @synthesize skPr=_skPr;
@property(retain) NSMutableData *skPi; // @synthesize skPi=_skPi;
@property(retain) NSMutableData *skEr; // @synthesize skEr=_skEr;
@property(retain) NSMutableData *skEi; // @synthesize skEi=_skEi;
@property(retain) NSMutableData *skAr; // @synthesize skAr=_skAr;
@property(retain) NSMutableData *skAi; // @synthesize skAi=_skAi;
@property(retain) NSMutableData *skD; // @synthesize skD=_skD;
@property(retain) NSMutableData *sKeySeed; // @synthesize sKeySeed=_sKeySeed;
@property(retain) NEIKEv2DHProtocol *remotePreferredDHProtocol; // @synthesize remotePreferredDHProtocol=_remotePreferredDHProtocol;
@property unsigned long long dhPublicKeySize; // @synthesize dhPublicKeySize=_dhPublicKeySize;
@property struct OpaqueSecDHContext *dhContext; // @synthesize dhContext=_dhContext;
@property(retain) NSData *dhRemotePublicKey; // @synthesize dhRemotePublicKey=_dhRemotePublicKey;
@property(retain) NSMutableData *dhPublicKey; // @synthesize dhPublicKey=_dhPublicKey;
@property(retain) NSData *remoteNonce; // @synthesize remoteNonce=_remoteNonce;
@property(retain) NSData *localNonce; // @synthesize localNonce=_localNonce;
@property _Bool reportShortDPD; // @synthesize reportShortDPD=_reportShortDPD;
@property unsigned short shortDPDCounter; // @synthesize shortDPDCounter=_shortDPDCounter;
@property double lastReceivedDPD; // @synthesize lastReceivedDPD=_lastReceivedDPD;
@property(retain) NEIKEv2IKESAProposal *chosenProposal; // @synthesize chosenProposal=_chosenProposal;
@property(retain) NEIKEv2SessionConfiguration *sessionConfiguration; // @synthesize sessionConfiguration=_sessionConfiguration;
@property(retain) NEIKEv2IKESAConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain) NWAddressEndpoint *remoteAddress; // @synthesize remoteAddress=_remoteAddress;
@property(retain) NWAddressEndpoint *localAddress; // @synthesize localAddress=_localAddress;
@property _Bool peerAuthenticated; // @synthesize peerAuthenticated=_peerAuthenticated;
@property _Bool eapInProgress; // @synthesize eapInProgress=_eapInProgress;
@property _Bool isRekeying; // @synthesize isRekeying=_isRekeying;
@property _Bool detectedIncomingNAT; // @synthesize detectedIncomingNAT=_detectedIncomingNAT;
@property _Bool detectedOutgoingNAT; // @synthesize detectedOutgoingNAT=_detectedOutgoingNAT;
@property _Bool useTCPEncapsulation; // @synthesize useTCPEncapsulation=_useTCPEncapsulation;
@property _Bool useNATTraversal; // @synthesize useNATTraversal=_useNATTraversal;
@property _Bool mobikeSupported; // @synthesize mobikeSupported=_mobikeSupported;
@property _Bool fragmentationSupported; // @synthesize fragmentationSupported=_fragmentationSupported;
@property _Bool isInitiator; // @synthesize isInitiator=_isInitiator;
@property _Bool shouldSendStateUpdate; // @synthesize shouldSendStateUpdate=_shouldSendStateUpdate;
@property(retain) NSError *error; // @synthesize error=_error;
@property unsigned long long state; // @synthesize state=_state;
@property(retain) NEIKEv2IKESPI *remoteSPI; // @synthesize remoteSPI=_remoteSPI;
@property(retain) NEIKEv2IKESPI *localSPI; // @synthesize localSPI=_localSPI;
- (void).cxx_destruct;
@property(readonly, nonatomic) NEIKEv2AuthenticationProtocol *authenticationProtocol;
- (void)resetShortDPDParameters;
- (_Bool)shouldReportShortDPD;
- (unsigned long long)dpdRetryIntervalMilliseconds;
@property(readonly) NSData *decryptionKey;
@property(readonly) NSData *encryptionKey;
@property(readonly) NSData *remoteIntegrityKey;
@property(readonly) NSData *localIntegrityKey;
@property(retain) NSData *responderNonce;
@property(retain) NSData *initiatorNonce;
- (unsigned char (*)[32])dhCurveKeyForDesc:(int)arg1;
- (struct ccec_full_ctx *)dhECPKeyForDesc:(int)arg1;
- (id)copyResponderIdentifier;
- (id)copyInitiatorIdentifier;
@property(retain, nonatomic) NEIKEv2Identifier *remoteIdentifier;
@property(readonly, nonatomic) NEIKEv2Identifier *localIdentifier;
@property(readonly) NSMutableData *sharedSecret;
@property(readonly) NSMutableData *password;
@property(retain) NSData *responderFirstMessage;
@property(retain) NSData *initiatorFirstMessage;
- (_Bool)resetRemoteAddress:(id)arg1;
- (void)resetSessionConfiguration:(id)arg1;
- (void)detachTransportWithShouldInvalidate:(_Bool)arg1;
- (id)copyTransport;
- (void)resyncAddress;
@property(readonly) _Bool hasTransport;
- (_Bool)supportsSignHash:(unsigned long long)arg1;
- (_Bool)switchToTCPEncapsulation;
- (_Bool)switchToNATTraversalPorts;
@property(retain) NEIKEv2IKESPI *responderSPI;
@property(retain) NEIKEv2IKESPI *initiatorSPI;
- (void)assignRemoteSPI:(id)arg1;
- (void)assignRemoteSPI:(id)arg1 disableWildCard:(_Bool)arg2;
- (void)disableWildcard;
@property(readonly) NWAddressEndpoint *responderAddress;
@property(readonly) NWAddressEndpoint *initiatorAddress;
- (void)sentStateUpdate;
- (void)setState:(unsigned long long)arg1 error:(id)arg2;
- (void)reset;
- (void)dealloc;
- (id)copyForRekey;
- (id)copyChildConfig;
- (id)copySessionConfig;
- (void)updateConfiguration:(id)arg1;
@property(readonly) NEIKEv2DHProtocol *preferredDHProtocol;
- (id)initIKESAWithConfiguration:(id)arg1 sessionConfiguration:(id)arg2 queue:(id)arg3 initialTransport:(id)arg4 transportDelegate:(id)arg5 socketGetBlock:(CDUnknownBlockType)arg6 packetDelegate:(id)arg7 configurationDelegate:(id)arg8 ikeSessionUniqueIndex:(unsigned long long)arg9;
- (id)description;
- (_Bool)shouldReceiveWildcard;
- (id)createLocalSPIForLocalAddress:(id)arg1 remoteAddress:(id)arg2;
- (id)createResponderEAPAuthenticationData;
- (id)createInitiatorEAPAuthenticationData;
- (CDUnknownBlockType)copyValidateAuthBlock;
- (_Bool)checkNonCertAuthData:(id)arg1;
- (id)createResponderAuthenticationData;
- (id)createInitiatorAuthenticationData;
- (_Bool)checkValidityOfDigitalSignature:(id)arg1;
- (_Bool)checkValidityOfCertificates:(id)arg1 signature:(id)arg2;
- (struct NSMutableData *)createRemoteSignedOctets;
- (struct NSMutableData *)createResponderSignedOctets;
- (struct NSMutableData *)createInitiatorSignedOctets;
- (struct NSMutableData *)createAuthenticationDataForSharedSecret:(id)arg1 octets:(id)arg2;
- (id)copyDigitalSignatureSignedData:(id)arg1;
- (id)copyCertSignedData:(id)arg1;
- (id)copyLocalCertificateData;
- (struct __SecIdentity *)copyLocalSecIdentity;
- (id)copyRemoteCertificateAuthorityHashData;
- (id)copyRemoteCertificateAuthorityDataArray;
- (id)copyRemoteCertificateAuthorityArray;
- (_Bool)generateAllValuesForRekey:(id)arg1;
- (_Bool)generateLocalValues;
- (_Bool)calculateSKEYSEEDDerivatives;
- (_Bool)calculateSKEYSEEDForRekey:(id)arg1;
- (_Bool)fetchLocalCertificateIdentity;
- (_Bool)generateLocalNonce;
- (_Bool)generateLocalDHValues;

@end

