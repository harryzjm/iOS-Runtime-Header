//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NetworkExtension/NEAgentSessionDelegate-Protocol.h>
#import <NetworkExtension/NEFilterExtensionProviderHostDelegate-Protocol.h>
#import <NetworkExtension/NEFilterPluginDriver-Protocol.h>

@class NEFilterControlExtensionProviderHostContext, NEFilterExtensionProviderHostContext, NEFilterProviderConfiguration, NSArray, NSExtension, NSString, NSUUID, NSXPCInterface, NSXPCListenerEndpoint;
@protocol NEPluginManagerObjectFactory, OS_dispatch_queue, OS_dispatch_source;

@interface NEAgentFilterExtension : NSObject <NEFilterExtensionProviderHostDelegate, NEAgentSessionDelegate, NEFilterPluginDriver>
{
    _Bool _dataExtensionInitialized;
    _Bool _controlExtensionInitialized;
    _Bool _appsUpdateStarted;
    _Bool _appsUpdateEnding;
    int _crypto_kernel_salt;
    id <NEPluginManagerObjectFactory> _managerObjectFactory;
    NSString *_pluginType;
    NSExtension *_dataExtension;
    NSExtension *_controlExtension;
    NEFilterExtensionProviderHostContext *_dataSessionContext;
    NEFilterControlExtensionProviderHostContext *_controlSessionContext;
    NSUUID *_dataSessionRequestIdentifier;
    NSUUID *_controlSessionRequestIdentifier;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_dataExtensionIdentifier;
    NSString *_controlExtensionIdentifier;
    NSXPCListenerEndpoint *_clientListenerEndpoint;
    NEFilterProviderConfiguration *_configuration;
    NSArray *_extensionUUIDs;
    NSObject<OS_dispatch_source> *_sendFailedTimer;
    struct cfil_crypto_state *_crypto_state;
    CDUnknownBlockType _pendingDisposeCompletion;
}

+ (_Bool)authenticateFlowWithState:(struct cfil_crypto_state *)arg1 crypto_key:(id)arg2 flow:(id)arg3 salt:(unsigned int)arg4 isKernelSocket:(_Bool)arg5;
- (void).cxx_destruct;
@property(copy) CDUnknownBlockType pendingDisposeCompletion; // @synthesize pendingDisposeCompletion=_pendingDisposeCompletion;
@property int crypto_kernel_salt; // @synthesize crypto_kernel_salt=_crypto_kernel_salt;
@property struct cfil_crypto_state *crypto_state; // @synthesize crypto_state=_crypto_state;
@property(retain) NSObject<OS_dispatch_source> *sendFailedTimer; // @synthesize sendFailedTimer=_sendFailedTimer;
@property _Bool appsUpdateEnding; // @synthesize appsUpdateEnding=_appsUpdateEnding;
@property _Bool appsUpdateStarted; // @synthesize appsUpdateStarted=_appsUpdateStarted;
@property(readonly, nonatomic) NSArray *extensionUUIDs; // @synthesize extensionUUIDs=_extensionUUIDs;
@property(retain) NEFilterProviderConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain) NSXPCListenerEndpoint *clientListenerEndpoint; // @synthesize clientListenerEndpoint=_clientListenerEndpoint;
@property _Bool controlExtensionInitialized; // @synthesize controlExtensionInitialized=_controlExtensionInitialized;
@property _Bool dataExtensionInitialized; // @synthesize dataExtensionInitialized=_dataExtensionInitialized;
@property(retain) NSString *controlExtensionIdentifier; // @synthesize controlExtensionIdentifier=_controlExtensionIdentifier;
@property(retain) NSString *dataExtensionIdentifier; // @synthesize dataExtensionIdentifier=_dataExtensionIdentifier;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) NSUUID *controlSessionRequestIdentifier; // @synthesize controlSessionRequestIdentifier=_controlSessionRequestIdentifier;
@property(retain) NSUUID *dataSessionRequestIdentifier; // @synthesize dataSessionRequestIdentifier=_dataSessionRequestIdentifier;
@property(retain) NEFilterControlExtensionProviderHostContext *controlSessionContext; // @synthesize controlSessionContext=_controlSessionContext;
@property(retain) NEFilterExtensionProviderHostContext *dataSessionContext; // @synthesize dataSessionContext=_dataSessionContext;
@property(retain) NSExtension *controlExtension; // @synthesize controlExtension=_controlExtension;
@property(retain) NSExtension *dataExtension; // @synthesize dataExtension=_dataExtension;
@property(readonly, nonatomic) NSString *pluginType; // @synthesize pluginType=_pluginType;
@property(readonly) __weak id <NEPluginManagerObjectFactory> managerObjectFactory; // @synthesize managerObjectFactory=_managerObjectFactory;
- (void)resetFilterSettings;
- (void)handleStopCompleteWithError:(id)arg1;
- (void)stopFilterExtensionWithReason:(int)arg1;
- (void)startFilterExtension;
- (long long)sanitizeFilterReportEvent:(long long)arg1;
- (id)sanitizeFilterFlow:(id)arg1;
- (_Bool)authenticateFlow:(id)arg1;
- (long long)sanitizeFilterAction:(long long)arg1;
- (id)sanitizeReport:(id)arg1;
- (void)sendFilterStatus:(long long)arg1 withError:(long long)arg2;
- (void)sendExtensionFailed;
- (void)cleanupOnStartFailure;
- (void)applySettings:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)createPacketChannelForExtension:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)provideURLAppendStringMap:(id)arg1;
- (void)provideRemediationMap:(id)arg1;
- (void)notifyRulesChanged;
- (void)getFilterClientConnectionWithCompletionHandler:(int)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)generateClientKey:(int)arg1 salt:(unsigned int)arg2;
- (void)savedConfigurationChanged:(id)arg1;
- (void)report:(id)arg1;
- (void)fetchCurrentRulesForFlow:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)sendSocketContentFilterRequest;
- (_Bool)sendCryptoKeyWithControlSocket:(int)arg1 crypto_key:(id)arg2;
- (void)sendBrowserContentFilterServerRequest;
- (void)extensionDidStop:(id)arg1;
- (void)extension:(id)arg1 didFailWithError:(id)arg2;
- (void)extension:(id)arg1 didStartWithError:(id)arg2;
- (void)updateConfiguration:(id)arg1;
- (void)wakeup;
- (void)sleepWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startFilter;
- (void)startWithConfiguration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)copyProcessIdentities;
- (void)startControlExtensionWithConfiguration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startDataExtensionWithConfiguration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)handleControlExtensionInitWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)handleDataExtensionInitWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)handleExtensionExit:(id)arg1;
- (void)cleanupControlExtensionWithRequestIdentifier:(id)arg1;
- (void)cleanupDataExtensionWithRequestIdentifier:(id)arg1;
@property(readonly, nonatomic) NSXPCInterface *driverInterface;
@property(readonly, nonatomic) NSXPCInterface *managerInterface;
@property(readonly, nonatomic) NSArray *uuids;
- (void)handleAppsUpdateEnds:(id)arg1;
- (void)handleAppsUpdateEnding:(id)arg1;
- (void)handleAppsUpdateBegins:(id)arg1;
- (void)handleAppsUninstalled:(id)arg1;
- (void)handleCancel;
- (void)handleDisposeWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)handleInitWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithPluginType:(id)arg1 pluginClass:(long long)arg2 pluginEndpoint:(id)arg3 pluginProcessIdentity:(id)arg4 queue:(id)arg5 factory:(id)arg6;
- (id)initWithPluginType:(id)arg1 pluginClass:(long long)arg2 pluginInfo:(id)arg3 queue:(id)arg4 factory:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

