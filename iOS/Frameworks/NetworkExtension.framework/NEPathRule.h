//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <NetworkExtension/NEConfigurationValidating-Protocol.h>
#import <NetworkExtension/NEPrettyDescription-Protocol.h>

@class NSNumber;

@interface NEPathRule <NEConfigurationValidating, NEPrettyDescription>
{
    _Bool _denyCellularFallback;
    NSNumber *_aggregatePersonalCellular;
    NSNumber *_aggregateEnterpriseCellular;
    long long _internalCellularBehavior;
    NSNumber *_aggregatePersonalWiFi;
    NSNumber *_aggregateEnterpriseWiFi;
    long long _internalWiFiBehavior;
}

+ (long long)aggregateNetworkBehavior:(long long)arg1 other:(long long)arg2;
+ (_Bool)supportsSecureCoding;
@property long long internalWiFiBehavior; // @synthesize internalWiFiBehavior=_internalWiFiBehavior;
@property(retain) NSNumber *aggregateEnterpriseWiFi; // @synthesize aggregateEnterpriseWiFi=_aggregateEnterpriseWiFi;
@property(retain) NSNumber *aggregatePersonalWiFi; // @synthesize aggregatePersonalWiFi=_aggregatePersonalWiFi;
@property long long internalCellularBehavior; // @synthesize internalCellularBehavior=_internalCellularBehavior;
@property(retain) NSNumber *aggregateEnterpriseCellular; // @synthesize aggregateEnterpriseCellular=_aggregateEnterpriseCellular;
@property(retain) NSNumber *aggregatePersonalCellular; // @synthesize aggregatePersonalCellular=_aggregatePersonalCellular;
@property _Bool denyCellularFallback; // @synthesize denyCellularFallback=_denyCellularFallback;
- (void).cxx_destruct;
- (_Bool)supportsWiFiBehavior:(long long)arg1;
- (void)addWiFiBehavior:(long long)arg1 grade:(long long)arg2;
- (_Bool)supportsCellularBehavior:(long long)arg1;
- (void)addCellularBehavior:(long long)arg1 grade:(long long)arg2;
@property long long wifiBehavior;
@property long long cellularBehavior;
- (_Bool)isAggregateRule;
- (_Bool)signingIdentifierAllowed:(id)arg1 domainsRequired:(out _Bool *)arg2;
- (id)description;
- (id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, getter=isDefaultPathRule) _Bool defaultPathRule;
- (id)initDefaultPathRule;
- (_Bool)isEqual:(id)arg1;

@end

