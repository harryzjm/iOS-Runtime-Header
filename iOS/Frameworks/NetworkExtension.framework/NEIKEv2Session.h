//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NetworkExtension/NEIKEv2TransportDelegate-Protocol.h>
#import <NetworkExtension/NEIPSecSASessionDelegate-Protocol.h>

@class NEIKEv2ChildSA, NEIKEv2ChildSAConfiguration, NEIKEv2ConfigurationMessage, NEIKEv2IKESA, NEIKEv2IKESAConfiguration, NEIKEv2Packet, NEIKEv2RTT, NEIPSecSASession, NSMutableArray, NSMutableDictionary, NSString;
@protocol NEIKEv2ConfigurationDelegate, NEIKEv2PacketDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface NEIKEv2Session : NSObject <NEIKEv2TransportDelegate, NEIPSecSASessionDelegate>
{
    _Bool _isListening;
    _Bool _ownsDatabaseSession;
    _Bool _ownsIPSecInterface;
    _Bool _isAborted;
    _Bool _isInvalidated;
    _Bool _isExpectingConfigBlock;
    _Bool _hasContactedConfigurationDelegate;
    _Bool _hasOutboundRequestInFlight;
    unsigned short _initiatorFragmentCount;
    unsigned short _responderFragmentCount;
    int _lastRequestMessageID;
    int _lastReceivedMessageID;
    int _previousMOBIKEMessageID;
    NSObject<OS_dispatch_queue> *_clientQueue;
    unsigned long long _state;
    NEIKEv2ConfigurationMessage *_assignedConfiguration;
    CDUnknownFunctionPointerType _clientCallback;
    void *_clientCallbackInfo;
    CDUnknownBlockType _stateUpdateBlock;
    CDUnknownBlockType _childStateUpdateBlock;
    CDUnknownBlockType _configurationUpdateBlock;
    CDUnknownBlockType _trafficSelectorUpdateBlock;
    CDUnknownBlockType _additionalAddressesUpdateBlock;
    CDUnknownBlockType _shortDPDEventBlock;
    CDUnknownBlockType _redirectEventBlock;
    CDUnknownBlockType _privateNotifyStatusEvent;
    CDUnknownBlockType _ikeSocketHandler;
    NEIKEv2ChildSAConfiguration *_listenChildSAUserConfig;
    NEIPSecSASession *_databaseSession;
    NSMutableDictionary *_databaseLarvalSAs;
    NSMutableDictionary *_databaseSAs;
    CDUnknownBlockType _lastRequestReplyHandler;
    CDUnknownBlockType _waitingRequestHandler;
    NSMutableDictionary *_sentRequests;
    NSMutableDictionary *_sentReplies;
    NSMutableDictionary *_receivedRequests;
    NSMutableDictionary *_receivedReplies;
    NSMutableDictionary *_receivedInitiatorFragments;
    NSMutableDictionary *_receivedResponderFragments;
    NSObject<OS_dispatch_source> *_ikeLifetimeTimer;
    NSObject<OS_dispatch_source> *_dpdDispatchTimer;
    NSMutableArray *_childSAs;
    NSObject<OS_dispatch_source> *_sendTimer;
    NSObject<OS_dispatch_source> *_receiveTimer;
    unsigned long long _uniqueIndex;
    NSMutableArray *_pendingRequestContexts;
    struct NEVirtualInterface_s *_ipsecInterface;
    NEIKEv2IKESA *_ikeSA;
    id <NEIKEv2ConfigurationDelegate> _configurationDelegate;
    id <NEIKEv2PacketDelegate> _packetDelegate;
    NEIKEv2RTT *_rttState;
    NSObject<OS_dispatch_queue> *_queue;
    NEIKEv2Packet *_previousMOBIKERequest;
    NEIKEv2IKESAConfiguration *_ikeConfig;
}

+ (unsigned int)getNewChildSAID;
- (void).cxx_destruct;
@property(nonatomic) _Bool hasOutboundRequestInFlight; // @synthesize hasOutboundRequestInFlight=_hasOutboundRequestInFlight;
@property(retain, nonatomic) NEIKEv2IKESAConfiguration *ikeConfig; // @synthesize ikeConfig=_ikeConfig;
@property(retain) NEIKEv2Packet *previousMOBIKERequest; // @synthesize previousMOBIKERequest=_previousMOBIKERequest;
@property int previousMOBIKEMessageID; // @synthesize previousMOBIKEMessageID=_previousMOBIKEMessageID;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool hasContactedConfigurationDelegate; // @synthesize hasContactedConfigurationDelegate=_hasContactedConfigurationDelegate;
@property(nonatomic) _Bool isExpectingConfigBlock; // @synthesize isExpectingConfigBlock=_isExpectingConfigBlock;
@property _Bool isInvalidated; // @synthesize isInvalidated=_isInvalidated;
@property _Bool isAborted; // @synthesize isAborted=_isAborted;
@property(retain) NEIKEv2RTT *rttState; // @synthesize rttState=_rttState;
@property __weak id <NEIKEv2PacketDelegate> packetDelegate; // @synthesize packetDelegate=_packetDelegate;
@property __weak id <NEIKEv2ConfigurationDelegate> configurationDelegate; // @synthesize configurationDelegate=_configurationDelegate;
@property(retain) NEIKEv2IKESA *ikeSA; // @synthesize ikeSA=_ikeSA;
@property struct NEVirtualInterface_s *ipsecInterface; // @synthesize ipsecInterface=_ipsecInterface;
@property(retain, nonatomic) NSMutableArray *pendingRequestContexts; // @synthesize pendingRequestContexts=_pendingRequestContexts;
@property(nonatomic) unsigned long long uniqueIndex; // @synthesize uniqueIndex=_uniqueIndex;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *receiveTimer; // @synthesize receiveTimer=_receiveTimer;
@property(retain) NSObject<OS_dispatch_source> *sendTimer; // @synthesize sendTimer=_sendTimer;
@property(retain) NSMutableArray *childSAs; // @synthesize childSAs=_childSAs;
@property(retain) NSObject<OS_dispatch_source> *dpdDispatchTimer; // @synthesize dpdDispatchTimer=_dpdDispatchTimer;
@property(retain) NSObject<OS_dispatch_source> *ikeLifetimeTimer; // @synthesize ikeLifetimeTimer=_ikeLifetimeTimer;
@property int lastReceivedMessageID; // @synthesize lastReceivedMessageID=_lastReceivedMessageID;
@property unsigned short responderFragmentCount; // @synthesize responderFragmentCount=_responderFragmentCount;
@property unsigned short initiatorFragmentCount; // @synthesize initiatorFragmentCount=_initiatorFragmentCount;
@property(retain) NSMutableDictionary *receivedResponderFragments; // @synthesize receivedResponderFragments=_receivedResponderFragments;
@property(retain) NSMutableDictionary *receivedInitiatorFragments; // @synthesize receivedInitiatorFragments=_receivedInitiatorFragments;
@property(retain) NSMutableDictionary *receivedReplies; // @synthesize receivedReplies=_receivedReplies;
@property(retain) NSMutableDictionary *receivedRequests; // @synthesize receivedRequests=_receivedRequests;
@property(retain) NSMutableDictionary *sentReplies; // @synthesize sentReplies=_sentReplies;
@property(retain) NSMutableDictionary *sentRequests; // @synthesize sentRequests=_sentRequests;
@property(copy) CDUnknownBlockType waitingRequestHandler; // @synthesize waitingRequestHandler=_waitingRequestHandler;
@property(copy) CDUnknownBlockType lastRequestReplyHandler; // @synthesize lastRequestReplyHandler=_lastRequestReplyHandler;
@property int lastRequestMessageID; // @synthesize lastRequestMessageID=_lastRequestMessageID;
@property _Bool ownsIPSecInterface; // @synthesize ownsIPSecInterface=_ownsIPSecInterface;
@property(retain) NSMutableDictionary *databaseSAs; // @synthesize databaseSAs=_databaseSAs;
@property(retain) NSMutableDictionary *databaseLarvalSAs; // @synthesize databaseLarvalSAs=_databaseLarvalSAs;
@property(nonatomic) _Bool ownsDatabaseSession; // @synthesize ownsDatabaseSession=_ownsDatabaseSession;
@property(retain) NEIPSecSASession *databaseSession; // @synthesize databaseSession=_databaseSession;
@property(retain) NEIKEv2ChildSAConfiguration *listenChildSAUserConfig; // @synthesize listenChildSAUserConfig=_listenChildSAUserConfig;
@property _Bool isListening; // @synthesize isListening=_isListening;
@property(copy) CDUnknownBlockType ikeSocketHandler; // @synthesize ikeSocketHandler=_ikeSocketHandler;
@property(copy) CDUnknownBlockType privateNotifyStatusEvent; // @synthesize privateNotifyStatusEvent=_privateNotifyStatusEvent;
@property(copy) CDUnknownBlockType redirectEventBlock; // @synthesize redirectEventBlock=_redirectEventBlock;
@property(copy) CDUnknownBlockType shortDPDEventBlock; // @synthesize shortDPDEventBlock=_shortDPDEventBlock;
@property(copy) CDUnknownBlockType additionalAddressesUpdateBlock; // @synthesize additionalAddressesUpdateBlock=_additionalAddressesUpdateBlock;
@property(copy) CDUnknownBlockType trafficSelectorUpdateBlock; // @synthesize trafficSelectorUpdateBlock=_trafficSelectorUpdateBlock;
@property(copy) CDUnknownBlockType configurationUpdateBlock; // @synthesize configurationUpdateBlock=_configurationUpdateBlock;
@property(copy) CDUnknownBlockType childStateUpdateBlock; // @synthesize childStateUpdateBlock=_childStateUpdateBlock;
@property(copy) CDUnknownBlockType stateUpdateBlock; // @synthesize stateUpdateBlock=_stateUpdateBlock;
@property void *clientCallbackInfo; // @synthesize clientCallbackInfo=_clientCallbackInfo;
@property CDUnknownFunctionPointerType clientCallback; // @synthesize clientCallback=_clientCallback;
@property(retain) NEIKEv2ConfigurationMessage *assignedConfiguration; // @synthesize assignedConfiguration=_assignedConfiguration;
@property unsigned long long state; // @synthesize state=_state;
@property(retain) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
- (void)sendPendingRequestContext;
- (void)flushPendingRequestContexts;
- (void)enqueuePendingRequestContext:(id)arg1;
- (void)resetChild:(id)arg1;
- (void)resetAll;
- (void)invalidate;
- (void)invalidateWithCompletionHandler:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)reportTrafficSelectorsForChildSA:(id)arg1;
- (void)uninstallAllChildSAs;
- (void)uninstallChildSA:(id)arg1;
- (void)uninstallOldRekeyedChildSAs:(id)arg1;
- (id)copySAsToDeleteAndInstallRekeyedChildSA:(id)arg1;
- (void)reportPrivateNotifies:(id)arg1;
- (void)reportShortDPD;
- (void)reportServerRedirect:(id)arg1;
- (void)reportServerAdditionalAddresses:(id)arg1;
- (void)reportCustomPayload:(id)arg1;
- (void)reportConfiguration;
- (void)unestablishConfiguration;
- (void)finishConfigurationEstablishment;
- (void)reportState;
- (void)abort;
- (void)receivePacket:(id)arg1;
- (void)saveFragment:(id)arg1;
- (_Bool)sendReply:(id)arg1 replyHandler:(CDUnknownBlockType)arg2;
- (int)sendRequest:(id)arg1 retry:(_Bool)arg2 sendCompletionHandler:(CDUnknownBlockType)arg3 replyHandler:(CDUnknownBlockType)arg4;
- (int)sendRequest:(id)arg1 retry:(_Bool)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (int)sendRequest:(id)arg1 retryIntervalInMilliseconds:(unsigned long long)arg2 maxRetries:(unsigned int)arg3 timeoutError:(id)arg4 resend:(_Bool)arg5 sendMessageID:(int)arg6 sendCompletionHandler:(CDUnknownBlockType)arg7 replyHandler:(CDUnknownBlockType)arg8;
- (void)cancelDPDTimer;
- (void)cancelSendTimer;
- (_Bool)sendReplyForMessageID:(int)arg1;
- (_Bool)sendCurrentRequest:(CDUnknownBlockType)arg1;
- (void)setReceivedReply:(id)arg1 messageID:(int)arg2;
- (void)setSentMOBIKERequest:(id)arg1 messageID:(int)arg2;
- (id)copyReceivedReplyForMessageID:(int)arg1;
- (void)setReceivedRequest:(id)arg1 messageID:(int)arg2;
- (id)copyReceivedRequestForMessageID:(int)arg1;
- (void)setSentReply:(id)arg1 messageID:(int)arg2;
- (void)setSentRequest:(id)arg1;
- (_Bool)migrateAllChildSAs;
- (_Bool)migrateChildSA:(id)arg1;
- (_Bool)installChildSA:(id)arg1;
- (id)copySAFromDictionary:(id)arg1 forChild:(id)arg2;
- (id)copySAFromDictionary:(id)arg1 forSPI:(id)arg2;
- (_Bool)generateSPIForChild:(id)arg1 proposals:(id)arg2;
- (id)copyIPsecInterfaceWithMissingAllowed:(_Bool)arg1;
- (id)copyIPsecInterface;
@property(readonly) _Bool peerAuthenticated;
@property(readonly) unsigned int interfaceIndex;
@property(readonly) NSString *interfaceName;
@property(readonly) _Bool hasInterface;
- (void)addEmptyInterface;
- (id)copyChildWithRekeyedSPI:(id)arg1;
- (id)copyChildWithSPI:(id)arg1;
- (id)copyChildWithID:(unsigned int)arg1;
@property(readonly) NEIKEv2ChildSA *firstChildSA;
- (void)resetMessages;
- (_Bool)fireWaitingRequestHandlerWithPacket:(id)arg1;
- (void)setIKESA:(id)arg1;
- (void)startIKELifetimeTimer;
- (void)startDPDTimer;
- (void)dpdTimerFired;
- (unsigned int)addChild:(id)arg1;
- (void)addFirstChild:(id)arg1;
- (void)sendMOBIKEWithRetries:(unsigned int)arg1 retryInterval:(unsigned long long)arg2 interfaceName:(id)arg3 invalidateTransport:(_Bool)arg4 resetEndpoint:(id)arg5 callbackQueue:(id)arg6 callback:(CDUnknownBlockType)arg7;
- (void)sendPrivateNotifies:(id)arg1 maxRetries:(unsigned int)arg2 retryIntervalInMilliseconds:(unsigned long long)arg3 callbackQueue:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (void)sendKeepaliveWithRetries:(unsigned int)arg1 retryIntervalInMilliseconds:(unsigned long long)arg2 callbackQueue:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (_Bool)updateConfiguration:(id)arg1;
- (void)removeChild:(unsigned int)arg1;
- (void)forceRekeyChild:(unsigned int)arg1;
- (void)forceRekeyIKE;
- (void)disconnect;
- (void)connect;
- (id)initWithIKEConfig:(id)arg1 firstChildConfig:(id)arg2 sessionConfig:(id)arg3 queue:(id)arg4 ipsecInterface:(struct NEVirtualInterface_s *)arg5 ikeSocketHandler:(CDUnknownBlockType)arg6 kernelSASessionName:(id)arg7 packetDelegate:(id)arg8;
- (id)initWithIKEConfig:(id)arg1 firstChildConfig:(id)arg2 sessionConfig:(id)arg3 queue:(id)arg4 ipsecInterface:(struct NEVirtualInterface_s *)arg5 ikeSocketHandler:(CDUnknownBlockType)arg6 saSession:(id)arg7 packetDelegate:(id)arg8;
- (id)initWithIKEConfig:(id)arg1 configurationDelegate:(id)arg2 queue:(id)arg3 kernelSASessionName:(id)arg4 transport:(id)arg5 packetDelegate:(id)arg6;
- (id)initWithIKEConfig:(id)arg1 configurationDelegate:(id)arg2 queue:(id)arg3 saSession:(id)arg4 shouldCopySASession:(_Bool)arg5 transport:(id)arg6 packetDelegate:(id)arg7;
- (id)initWithIKEConfig:(id)arg1 firstChildConfig:(id)arg2 sessionConfig:(id)arg3 queue:(id)arg4 ipsecInterface:(struct NEVirtualInterface_s *)arg5 ikeSocketHandler:(CDUnknownBlockType)arg6 saSession:(id)arg7 shouldOwnSASession:(_Bool)arg8 packetDelegate:(id)arg9 transport:(id)arg10 configurationDelegate:(id)arg11;
@property(readonly, copy) NSString *description;
- (void)reportError:(int)arg1;
- (void)blackholeDetectedSA:(id)arg1;
- (void)idleTimeoutSA:(id)arg1;
- (void)deleteSA:(id)arg1;
- (void)expireSA:(id)arg1;
- (void)dealloc;
- (void)initiateDeleteChildSA:(id)arg1;
- (void)receiveDeleteChildSA:(id)arg1;
- (void)receiveDeleteIKESA:(id)arg1;
- (void)receiveRedirect:(id)arg1;
- (void)receiveMOBIKE:(id)arg1;
- (void)initiateMOBIKE:(id)arg1;
- (void)initiateMOBIKEInner:(id)arg1;
- (void)resendPreviousMOBIKEInnerWithRetries:(unsigned int)arg1 retryInterval:(unsigned long long)arg2 handler:(CDUnknownBlockType)arg3;
- (void)receiveRekeyIKESA:(id)arg1;
- (void)initiateRekeyIKESA:(id)arg1;
- (void)receiveRekeyChildSA:(id)arg1 packet:(id)arg2;
- (void)initiateRekeyChildSA:(id)arg1;
- (void)receiveNewChildSA:(id)arg1 packet:(id)arg2;
- (void)initiateNewChildSA:(id)arg1;
- (void)receiveConnection:(id)arg1;
- (void)setupReceivedChildWithHandler:(CDUnknownBlockType)arg1;
- (id)setupReceivedChildCopyError;
- (void)initiateConnect;
- (void)handleEAPIKESA:(id)arg1 childSA:(id)arg2 authPacket:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)retryDHForIKESA:(id)arg1 validated:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;
- (void)retryCookieForIKESA:(id)arg1 validated:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;
- (void)receiveInformational:(id)arg1;
- (void)initiateInformational:(id)arg1;
- (_Bool)receiveDeleteChildSPI:(id)arg1 remoteSPI:(id)arg2 packet:(id)arg3;
- (void)initiateDeleteChildSPI:(id)arg1 remoteSPI:(id)arg2 deleteCompletionCallback:(CDUnknownBlockType)arg3;
- (_Bool)innerReceiveDeleteIKESA:(id)arg1;
- (void)initiateDelete:(id)arg1;
- (void)reportAdditionalAddressesInPacket:(id)arg1;
- (void)reportPrivateNotifiesInPacket:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

