//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <NetworkExtension/NEFilterDataExtensionProviderHostProtocol-Protocol.h>
#import <NetworkExtension/NEFilterDataExtensionProviderProtocol-Protocol.h>

@class NSDictionary, NSMutableArray, NSMutableDictionary, NSObject, NSString, NSXPCListenerEndpoint;
@protocol OS_dispatch_source, OS_xpc_object;

@interface NEFilterDataExtensionProviderContext <NEFilterDataExtensionProviderProtocol, NEFilterDataExtensionProviderHostProtocol>
{
    _Bool _controlProviderExists;
    NSDictionary *_remediationMap;
    NSDictionary *_URLAppendStringMap;
    NSObject<OS_xpc_object> *_clientListener;
    NSXPCListenerEndpoint *_listenerEndpoint;
    NSMutableDictionary *_browserFlows;
    NSMutableDictionary *_socketFlows;
    NSMutableDictionary *_channelFlows;
    NSMutableArray *_socketExceptions;
    NSObject<OS_dispatch_source> *_source;
    NSMutableArray *_pendingConnections;
}

+ (id)_extensionAuxiliaryHostProtocol;
+ (id)_extensionAuxiliaryVendorProtocol;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableArray *pendingConnections; // @synthesize pendingConnections=_pendingConnections;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *source; // @synthesize source=_source;
@property(retain, nonatomic) NSMutableArray *socketExceptions; // @synthesize socketExceptions=_socketExceptions;
@property(retain, nonatomic) NSMutableDictionary *channelFlows; // @synthesize channelFlows=_channelFlows;
@property(retain, nonatomic) NSMutableDictionary *socketFlows; // @synthesize socketFlows=_socketFlows;
@property(retain, nonatomic) NSMutableDictionary *browserFlows; // @synthesize browserFlows=_browserFlows;
@property(retain, nonatomic) NSXPCListenerEndpoint *listenerEndpoint; // @synthesize listenerEndpoint=_listenerEndpoint;
@property(retain, nonatomic) NSObject<OS_xpc_object> *clientListener; // @synthesize clientListener=_clientListener;
@property(nonatomic) _Bool controlProviderExists; // @synthesize controlProviderExists=_controlProviderExists;
@property(retain, nonatomic) NSDictionary *URLAppendStringMap; // @synthesize URLAppendStringMap=_URLAppendStringMap;
@property(retain, nonatomic) NSDictionary *remediationMap; // @synthesize remediationMap=_remediationMap;
- (void)handleChannelMessageStatsReport:(id)arg1 filloutReply:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)handleChannelMessageFlowFinish:(id)arg1 filloutReply:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)handleChannelMessageMoreData:(id)arg1 filloutReply:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)handleNewChannelFlowMessage:(id)arg1 filloutReply:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)closeChannelFlow:(id)arg1;
- (void)handleSocketSourceEventWithSocket:(int)arg1;
- (_Bool)blessClient:(id)arg1;
- (void)closeSocketFlow:(id)arg1 socketID:(unsigned long long)arg2;
- (void)handleRemediationMessage:(id)arg1 filloutReply:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)handleDataCompleteMessage:(id)arg1 filloutReply:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)handleAddDataMessage:(id)arg1 filloutReply:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)handleNewFlowMessage:(id)arg1 filloutReply:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)closeBrowserFilterFlow:(id)arg1;
- (void)closeFlow:(id)arg1;
- (void)getSourceAppInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)reportFlow:(id)arg1 forVerdict:(id)arg2 event:(long long)arg3;
- (void)reportFlowStats:(id)arg1;
- (void)reportFlowClosed:(id)arg1;
- (void)reportFlow:(id)arg1 forVerdict:(id)arg2 absoluteVerdict:(id)arg3;
- (void)report:(id)arg1;
- (void)fetchCurrentRulesForFlow:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)handleDataCompleteForFlow:(id)arg1 direction:(long long)arg2 reply:(id)arg3 controlSocket:(int)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)handleData:(id)arg1 offset:(unsigned long long)arg2 forFlow:(id)arg3 direction:(long long)arg4 reply:(id)arg5 controlSocket:(int)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)handleNewFlow:(id)arg1 reply:(id)arg2 controlSocket:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)adjustDataToFilter:(id)arg1 startOffset:(unsigned long long *)arg2 flow:(id)arg3 direction:(long long)arg4;
- (void)purgeData:(int)arg1 size:(int)arg2 buf:(char *)arg3 bufSize:(int)arg4;
- (void)setupSocketContentFilterWithControlSocket:(int)arg1;
- (void)teardownSocketSource;
- (void)setupSocketSourceWithControlSocket:(int)arg1;
- (void)acceptNewClientConnection:(id)arg1;
- (void)closePendingConnections;
- (void)tearDownConnection:(id)arg1;
- (void)handleClientMessage:(id)arg1 filloutReply:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateFlow:(id)arg1 withVerdict:(id)arg2 forDirection:(long long)arg3;
- (void)resumeFlow:(id)arg1 withVerdict:(id)arg2;
- (void)applySettings:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)sendSocketContentFilterRequest;
- (void)sendBrowserContentFilterServerRequest;
- (void)provideURLAppendStringMap:(id)arg1;
- (void)provideRemediationMap:(id)arg1;
- (void)handleRulesChanged;
- (void)fetchProviderConnectionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)providerControlSocketFileHandle:(id)arg1;
- (void)stopWithReason:(int)arg1;
- (void)startFilterWithOptions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (Class)requiredProviderSuperClass;
- (id)extensionPoint;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

