//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "QLItemAggregatedViewController.h"

@class DMFApplicationPolicyMonitor, DMFCategoryPolicyMonitor, NSObject, NSString, QLDownloadingItemViewController, QLErrorItemViewController, QLItem, QLItemViewController, QLLoadingItemViewController, QLPreviewContext, QLScreenTimeItemViewController;
@protocol OS_dispatch_queue, QLItemPresenterViewControllerDelegate;

__attribute__((visibility("hidden")))
@interface QLItemPresenterViewController : QLItemAggregatedViewController
{
    _Bool _shouldDeferAppearanceUpdates;
    _Bool _isPeekingSession;
    _Bool _failureOccurred;
    _Bool _isReadyForDisplay;
    _Bool _shouldHandleLoadingView;
    CDUnknownBlockType _readyBlock;
    NSObject<OS_dispatch_queue> *previewLoadingQueue;
    _Bool _printing;
    QLItemViewController *_previewProvider;
    QLErrorItemViewController *_errorViewController;
    QLLoadingItemViewController *_loadingViewController;
    QLDownloadingItemViewController *_downloadingController;
    QLScreenTimeItemViewController *_screenTimeController;
    CDUnknownBlockType _loadingCompletionHandler;
    QLItem *_previewItem;
    id _contents;
    QLPreviewContext *_context;
    NSString *_hostApplicationBundleIdentifier;
    NSString *_parentApplicationDisplayIdentifier;
    DMFApplicationPolicyMonitor *_screenTimeApplicationMonitor;
    DMFCategoryPolicyMonitor *_screenTimeCategoryMonitor;
}

- (void).cxx_destruct;
@property(retain, nonatomic) DMFCategoryPolicyMonitor *screenTimeCategoryMonitor; // @synthesize screenTimeCategoryMonitor=_screenTimeCategoryMonitor;
@property(retain, nonatomic) DMFApplicationPolicyMonitor *screenTimeApplicationMonitor; // @synthesize screenTimeApplicationMonitor=_screenTimeApplicationMonitor;
@property(copy, nonatomic) NSString *parentApplicationDisplayIdentifier; // @synthesize parentApplicationDisplayIdentifier=_parentApplicationDisplayIdentifier;
@property(copy, nonatomic) NSString *hostApplicationBundleIdentifier; // @synthesize hostApplicationBundleIdentifier=_hostApplicationBundleIdentifier;
@property(nonatomic) _Bool printing; // @synthesize printing=_printing;
@property(retain) QLPreviewContext *context; // @synthesize context=_context;
@property(retain) id contents; // @synthesize contents=_contents;
@property(retain, nonatomic) QLItem *previewItem; // @synthesize previewItem=_previewItem;
@property(copy, nonatomic) CDUnknownBlockType loadingCompletionHandler; // @synthesize loadingCompletionHandler=_loadingCompletionHandler;
@property(retain, nonatomic) QLScreenTimeItemViewController *screenTimeController; // @synthesize screenTimeController=_screenTimeController;
@property(retain, nonatomic) QLDownloadingItemViewController *downloadingController; // @synthesize downloadingController=_downloadingController;
@property(retain, nonatomic) QLLoadingItemViewController *loadingViewController; // @synthesize loadingViewController=_loadingViewController;
@property(retain, nonatomic) QLErrorItemViewController *errorViewController; // @synthesize errorViewController=_errorViewController;
@property(retain, nonatomic) QLItemViewController *previewProvider; // @synthesize previewProvider=_previewProvider;
- (_Bool)_processIsEntitledToConfigureScreenTime;
- (_Bool)_processIsEntitledToCheckScreenTimePolicy;
- (_Bool)_shouldApplyScreenTimeMoviePolicyForItem:(id)arg1;
- (id)screenTimePolicyBundleIdentifier;
- (void)_hideScreenTimeViewControllerIfNeeded;
- (void)_showScreenTimeViewControllerWithPolicy:(long long)arg1;
- (void)_didReceiveNewScreenTimePolicy:(long long)arg1;
- (void)_didReceiveNewScreenTimeApplicationPolicies:(id)arg1 error:(id)arg2;
- (void)_didReceiveNewScreenTimeCategoryPolicy:(id)arg1 error:(id)arg2;
- (void)_queryScreenTimeCategoryPolicy;
- (void)_queryScreenTimePolicyForBundleIdentifier:(id)arg1;
- (void)_setupScreenTimeApplicationHandling;
- (void)_setupScreenTimeCategoryHandling;
- (void)_setupScreenTimeHandling;
- (void)updatePreviewItemDisplayState:(id)arg1;
- (id)additionalItemViewControllerDescription;
@property(readonly) QLItemPresenterViewController *itemPresenterViewController;
- (void)previewItemViewController:(id)arg1 didFailWithError:(id)arg2;
- (void)transitionWillFinish:(_Bool)arg1 didComplete:(_Bool)arg2;
- (void)transitionDidFinish:(_Bool)arg1 didComplete:(_Bool)arg2;
- (void)transitionDidStart:(_Bool)arg1;
- (void)_cancelAllDeferredApperanceUpdates;
- (void)previewDidDisappear:(_Bool)arg1;
- (void)previewWillDisappear:(_Bool)arg1;
- (void)previewDidAppear:(_Bool)arg1;
- (void)previewWillAppear:(_Bool)arg1;
- (_Bool)_currentPreviewControllerIsErrorViewController;
- (_Bool)loadingFailed;
- (_Bool)isLoading;
- (_Bool)isLoaded;
- (void)setAppearance:(id)arg1 animated:(_Bool)arg2;
- (_Bool)downloadingItemViewControllerShouldForceAutodownloadFile:(id)arg1;
- (void)downloadingItemViewControllerDidFinishLoadingPreviewItem:(id)arg1 withContents:(id)arg2;
- (void)_startLoadingPreviewWithContents:(id)arg1;
- (_Bool)canAnimateFromDetailViewToFullScreenPreview;
- (void)isReadyForDisplayWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)showPreviewViewController:(id)arg1 animatingWithCrossfade:(_Bool)arg2 updatingIsReadyForDisplay:(_Bool)arg3;
- (void)showPreviewViewController:(id)arg1 animatingWithCrossfade:(_Bool)arg2;
- (void)showPreviewViewController:(id)arg1;
- (void)showPreviewProviderViewController;
- (void)showErrorViewController;
- (void)_performLoadingCompletionHandlerWithError:(id)arg1;
- (void)_performReadyBlockIfNedded;
- (struct CGSize)preferredContentSize;
- (void)loadPreviewControllerWithContents:(id)arg1 context:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_showReadyToDisplayPreviewViewControllerDeferredIfNeeded:(id)arg1;
- (void)_showLoadingViewControllerDeferredIfNeeded;
- (id)initForPrinting:(_Bool)arg1;
- (id)initWithHostApplicationBundleIdentifier:(id)arg1 parentApplicationDisplayIdentifier:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <QLItemPresenterViewControllerDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

